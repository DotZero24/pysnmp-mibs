#
# PySNMP MIB module TIMETRA-BSX-NG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/rob/Code/pysnmp-mibs/mibs/nokia/TIMETRA-BSX-NG-MIB
# Produced by pysmi-1.1.12 at Mon Aug  4 17:13:49 2025
# On host macmini.vegmond.io platform Darwin version 24.5.0 by user rob
# Using Python version 3.12.8 (main, Dec  3 2024, 18:42:41) [Clang 16.0.0 (clang-1600.0.26.4)]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
VlanIdOrNone, VlanId = mibBuilder.importSymbols("IEEE8021-CFM-MIB", "VlanIdOrNone", "VlanId")
InetAddressType, InetAddress, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetAddressPrefixLength")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, Integer32, ModuleIdentity, TimeTicks, NotificationType, Counter32, Bits, IpAddress, iso, ObjectIdentity, Counter64, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "Integer32", "ModuleIdentity", "TimeTicks", "NotificationType", "Counter32", "Bits", "IpAddress", "iso", "ObjectIdentity", "Counter64", "Gauge32")
TimeStamp, DateAndTime, MacAddress, StorageType, TextualConvention, DisplayString, RowStatus, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "DateAndTime", "MacAddress", "StorageType", "TextualConvention", "DisplayString", "RowStatus", "TruthValue")
tmnxChassisIndex, TmnxHwIndexOrZero, TmnxSlotNumOrZero = mibBuilder.importSymbols("TIMETRA-CHASSIS-MIB", "tmnxChassisIndex", "TmnxHwIndexOrZero", "TmnxSlotNumOrZero")
tmnxSRConfs, timetraSRMIBModules, tmnxSRNotifyPrefix, tmnxSRObjs = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "tmnxSRConfs", "timetraSRMIBModules", "tmnxSRNotifyPrefix", "tmnxSRObjs")
tmnxLogNotifyApInterval, tmnxLogFileIdLogId = mibBuilder.importSymbols("TIMETRA-LOG-MIB", "tmnxLogNotifyApInterval", "tmnxLogFileIdLogId")
TmnxPortEncapType, = mibBuilder.importSymbols("TIMETRA-PORT-MIB", "TmnxPortEncapType")
tFCName, = mibBuilder.importSymbols("TIMETRA-QOS-MIB", "tFCName")
ServType, = mibBuilder.importSymbols("TIMETRA-SERV-MIB", "ServType")
TmnxDayOfWeek, TmnxSyslogFacility, TmnxBsxAarpId, TmnxServId, TmnxUdpPort, ServiceAdminStatus, TmnxDisplayStringURL, TmnxBsxTransPrefPolicyId, SdpBindId, TIpProtocol, TPriorityOrDefault, TmnxAdminState, TNamedItemOrEmpty, TNamedItem, TmnxEncapVal, TDSCPNameOrEmpty, TTcpUdpPort, TmnxActionType, TPIRRateOrZero, TmnxDayOfWeekList, TmnxBsxAarpIdOrZero, TmnxEnabledDisabled, TCIRRate, TmnxSyslogSeverity, TmnxVRtrIDOrZero, TmnxPortID, TmnxOperState, TmnxSubRadServAlgorithm, TFCNameOrEmpty, ServiceOperStatus, TXLNamedItem, TmnxBsxTransitIpPolicyIdOrZero, TEntryId, TAdaptationRule, TQueueId, TXLNamedItemOrEmpty, TmnxBsxTransitIpPolicyId, TItemDescription, TmnxBsxTransPrefPolicyIdOrZero, TmnxWlanGwIsaGrpIdOrZero = mibBuilder.importSymbols("TIMETRA-TC-MIB", "TmnxDayOfWeek", "TmnxSyslogFacility", "TmnxBsxAarpId", "TmnxServId", "TmnxUdpPort", "ServiceAdminStatus", "TmnxDisplayStringURL", "TmnxBsxTransPrefPolicyId", "SdpBindId", "TIpProtocol", "TPriorityOrDefault", "TmnxAdminState", "TNamedItemOrEmpty", "TNamedItem", "TmnxEncapVal", "TDSCPNameOrEmpty", "TTcpUdpPort", "TmnxActionType", "TPIRRateOrZero", "TmnxDayOfWeekList", "TmnxBsxAarpIdOrZero", "TmnxEnabledDisabled", "TCIRRate", "TmnxSyslogSeverity", "TmnxVRtrIDOrZero", "TmnxPortID", "TmnxOperState", "TmnxSubRadServAlgorithm", "TFCNameOrEmpty", "ServiceOperStatus", "TXLNamedItem", "TmnxBsxTransitIpPolicyIdOrZero", "TEntryId", "TAdaptationRule", "TQueueId", "TXLNamedItemOrEmpty", "TmnxBsxTransitIpPolicyId", "TItemDescription", "TmnxBsxTransPrefPolicyIdOrZero", "TmnxWlanGwIsaGrpIdOrZero")
tmnxBsxNgMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 1, 1, 3, 63))
tmnxBsxNgMIBModule.setRevisions(('2017-01-01 00:00', '2016-01-01 00:00', '2015-01-01 00:00', '2014-01-01 00:00', '2011-02-01 00:00', '2008-12-03 00:00',))
if mibBuilder.loadTexts: tmnxBsxNgMIBModule.setLastUpdated('201701010000Z')
if mibBuilder.loadTexts: tmnxBsxNgMIBModule.setOrganization('Nokia')
class TmnxBsxIsaAaGroupIndex(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 255)

class TmnxBsxAaGrpPartIndex(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 16777215)

class TmnxBsxAnlSourceLevel(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("cell", 1), ("transport-network-link", 2), ("mac-vlan", 3))

class TmnxBsxAnlSource(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("mobile-3g", 0), ("access-point", 1))

class TmnxBsxCflowdExpOvdMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("none", 0), ("mobile", 1))

class TmnxBsxFailToMode(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("failToWire", 0), ("failToOpen", 1))

class TmnxBsxPolicyVersion(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("admin", 0), ("oper", 1))

class TmnxBsxDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("sub2net", 0), ("net2sub", 1), ("both", 2))

class TmnxBsxPolicerType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("none", 0), ("singleBucketBandwidth", 1), ("dualBucketBandwidth", 2), ("flowRateLimit", 3), ("flowCountLimit", 4))

class TmnxBsxGranularity(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("system", 1), ("subscriber", 2), ("accessNetworkLocation", 3))

class TmnxBsxPolicerAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("permitDeny", 0), ("priorityMark", 1))

class TmnxBsxBurstSize(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(0, 131071)

class TmnxBsxOperator(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("none", 0), ("eq", 1), ("neq", 2), ("lt", 3), ("gt", 4), ("range", 5), ("gte", 6))

class TmnxBsxMdaRole(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("primary", 0), ("backup", 1))

class TmnxBsxMdaActivityState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unavailable", 0), ("active", 1), ("standby", 2))

class TmnxBsxAaSubscriberType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7))
    namedValues = NamedValues(("unknown", 0), ("esm", 1), ("sap", 2), ("spokeSdp", 3), ("transit", 4), ("mobile", 5), ("dsm", 6), ("esmMac", 7))

class TmnxBsxAaSubscriber(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class TmnxBsxStatAaAcctCfgType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("unknown", 0), ("protocol", 1), ("application", 2), ("app-group", 3), ("aa-sub", 4), ("aa-sub-study-protocol", 5), ("aa-sub-study-application", 6))

class TmnxBsxAaStatType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("unknown", 0), ("protocol", 1), ("application", 2), ("app-group", 3), ("chargingGroup", 4))

class TmnxBsxAaStatExportMethod(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("accountingPolicy", 0), ("radiusAccountingPolicy", 1))

class TmnxBsxExprSubStringIndex(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ValueRangeConstraint(1, 255)

class TmnxBsxExprSubStringType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21))
    namedValues = NamedValues(("none", 0), ("httpHost", 1), ("httpUri", 2), ("httpReferrer", 3), ("sipUa", 4), ("sipUri", 5), ("sipMt", 6), ("citrixApp", 7), ("httpUserAgent", 8), ("h323ProductId", 9), ("tlsCsOrgName", 10), ("tlsCsCommonName", 11), ("rtspHost", 12), ("rtspUri", 13), ("rtspUa", 14), ("rtmpPageHost", 15), ("rtmpPageUri", 16), ("rtmpSwfHost", 17), ("rtmpSwfUri", 18), ("rtmpTcHost", 19), ("rtmpTcUri", 20), ("dnsDomainName", 21))

class TmnxBsxExprSubString(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 255)

class TmnxBsxFirstPacketPolicy(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("first-packet-trusted", 1), ("first-packet-validate", 2))

class TmnxBsxActionStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("start", 1), ("stop", 2))

class TmnxBsxAdminCtrl(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("none", 1), ("initialize", 2), ("commit", 3))

class TmnxBsxCustProtExprSubString(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 255)

class TmnxBsxProtocolDirection(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("client2server", 1), ("server2client", 2), ("any", 3))

class TmnxBsxLoadBalanceStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("balancing", 0), ("complete", 1))

class TmnxBsxCflowdExpType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("none", 0), ("volume", 1), ("tcpPerformance", 2), ("rtpPerformance", 3), ("comprehensive", 4))

class TmnxBsxCflowdPerfMeasType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("tcp", 1), ("rtp", 2), ("comprehensive", 3))

class TmnxBsxCflowdRecTemplate(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("volume", 1), ("tcp", 2), ("rtpVoice", 3), ("rtpVideo", 4), ("rtpAudio", 5), ("comprehensive", 6))

class TmnxBsxCflowdFieldSelType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("legacy", 0), ("dynamic", 1))

class TmnxBsxWebServiceCategoryId(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class TmnxBsxWebServiceCategoryIdKey(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 65535)

class TmnxBsxWebServClassifierId(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("none", 0), ("web-service-1", 1))

class TmnxBsxWebServClassifierIdKey(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("web-service-1", 1))

class TmnxBsxWebServCategorySetIdKey(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(1, 65535)

class TmnxBsxWebServCategorySetId(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 65535)

class TmnxBsxFullyQualDomainName(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 255)

class TmnxBsxAaSubStatsInterval(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unknown", 0), ("realtime", 1), ("snapshot", 2))

class TmnxBsxUrlFilterDefaultAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("allow", 0), ("blockHttpRedirect", 1), ("blockAll", 2))

class TmnxBsxAaSubAcctLossReason(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("noLoss", 0), ("acctInvlExpiry", 1))

class TmnxBsxAaSubAsoValDerivedFrom(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4))
    namedValues = NamedValues(("none", 0), ("asoDefault", 1), ("appProfile", 2), ("override", 3), ("dynamicOverride", 4))

class TmnxBsxAaSubPolicerResStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("okay", 1), ("unknown", 2), ("exceeded", 3))

class TmnxBsxStatIsaAaCfgType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("unknown", 0), ("aaPerformance", 1))

class TmnxBsxTransitSubOrigin(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("static", 0), ("dhcp", 1), ("radius", 2), ("autoSeenIp", 3), ("diameter", 4))

class TmnxBsxTListAttribType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("none", 0), ("uint", 1), ("string", 2), ("truthValue", 3))

class TmnxBsxTListAttribValue(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 80)

class TmnxBsxAqpHttpRedirFlowType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("none", 0), ("droppedFlows", 1), ("admittedFlows", 2))

class TmnxBsxAarpInstState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))
    namedValues = NamedValues(("standAlone", 0), ("remote", 1), ("master", 2), ("backup", 3))

class TmnxBsxAarpInstOperFlags(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("adminDown", 0), ("noSubConfigd", 1), ("peerDown", 2), ("peerAarpDown", 3), ("subTypeMismatch", 4), ("subDown", 5), ("shuntsDown", 6), ("divertCapDown", 7), ("appProfNoDivert", 8), ("subSidePipeMismatch", 9), ("subSideIfMismatch", 10), ("netSidePipeMismatch", 11), ("netSideIfMismatch", 12), ("unsupportedIoms", 13), ("configMismatch", 14), ("noSecondaryEps", 15))

class TmnxBsxAarpCommand(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1))
    namedValues = NamedValues(("noCmd", 0), ("forceEvaluate", 1))

class TmnxBsxAarpServPointRole(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("none", 0), ("dualHomed", 1), ("pipeShuntSub", 2), ("pipeShuntNet", 3), ("interfaceShuntSub", 4), ("interfaceShuntNet", 5), ("dualHomedSecondary", 6))

class TmnxBsxAarpServPointType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("unknown", 0), ("sap", 1), ("spokeSdp", 2))

class TmnxBsxAarpServPoint(TextualConvention, OctetString):
    status = 'current'
    subtypeSpec = OctetString.subtypeSpec + ValueSizeConstraint(0, 32)

class TmnxBsxFltrAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("deny", 1), ("permit", 2))

class TmnxBsxAqpAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("drop", 1), ("allow", 2))

class TmnxBsxUmOperStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("inactiveAdminDisabled", 0), ("inactive", 1), ("active", 2))

class TmnxBsxEventLogAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("deny", 0), ("permit", 1), ("all", 2))

class TmnxBsxUmGrantStatus(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("invalid", 0), ("valid", 1), ("exceeded", 2))

class TmnxBsxAaSubTetherState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(0, 1, 2))
    namedValues = NamedValues(("notApplicable", 0), ("detected", 1), ("notDetected", 2))

class TmnxBsxUrlListFlags(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("adminDown", 0), ("fileDoesNotExist", 1), ("invalidFileFormat", 2), ("tooManyUrls", 3), ("switchOverError", 4), ("tooManyChars", 5), ("tooManyHostExprUrls", 6))

class TmnxBsxSessionFilterAction(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3))
    namedValues = NamedValues(("deny", 1), ("permit", 2), ("httpRedirect", 3))

class TmnxBsxTcaState(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("cleared", 1), ("raised", 2))

class TmnxBsxTcaTriggerType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("deniedTraffic", 1), ("admittedTraffic", 2))

class TmnxBsxHundredthsOfPercent(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 10000)

class TmnxBsxAaSubCircuitId(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 64)

class TmnxBsxAaSubRemoteId(DisplayString):
    status = 'current'
    subtypeSpec = DisplayString.subtypeSpec + ValueSizeConstraint(0, 64)

class TmnxBsxHttpEnrichRATType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
    namedValues = NamedValues(("utran", 1), ("geran", 2), ("wlan", 3), ("gan", 4), ("hspa-evol", 5), ("eutran", 6), ("virtual", 7), ("eutran-nb", 8), ("ehrpd", 9), ("hrpd", 10), ("cdma-1x", 11), ("umb", 12), ("wifi", 13), ("nr", 14))

tmnxBsxObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63))
tmnxBsxMdaObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1))
tmnxBsxMdaScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 1))
tmnxBsxIsaAaGrpLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpLastChangeTime.setStatus('current')
tmnxBsxIsaAaGrpFcLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFcLastChangeTime.setStatus('current')
tmnxBsxIsaAaGrpMdaLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpMdaLastChangeTime.setStatus('current')
tmnxBsxAaGrpPartLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaGrpPartLastChangeTime.setStatus('current')
tmnxBsxAaWap1xLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaWap1xLastChangeTime.setStatus('current')
tmnxBsxTetherLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTetherLastChangeTime.setStatus('current')
tmnxBsxIsaAaGrpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2), )
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpTable.setStatus('current')
tmnxBsxIsaAaGrpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpEntry.setStatus('current')
tmnxBsxIsaAaGroupIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 1), TmnxBsxIsaAaGroupIndex())
if mibBuilder.loadTexts: tmnxBsxIsaAaGroupIndex.setStatus('current')
tmnxBsxIsaAaGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpRowStatus.setStatus('current')
tmnxBsxIsaAaGrpRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpRowLastChange.setStatus('current')
tmnxBsxIsaAaGrpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpDescription.setStatus('current')
tmnxBsxIsaAaGrpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 5), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpAdminState.setStatus('current')
tmnxBsxIsaAaGrpOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 6), TmnxOperState().clone('outOfService')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpOperState.setStatus('current')
tmnxBsxIsaAaGrpFailToMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 7), TmnxBsxFailToMode().clone('failToWire')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFailToMode.setStatus('current')
tmnxBsxIsaAaGrpFromSubPool = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 8), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFromSubPool.setStatus('current')
tmnxBsxIsaAaGrpFromSubResvCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFromSubResvCbs.setStatus('current')
tmnxBsxIsaAaGrpFromSubSlpPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 10), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFromSubSlpPolicy.setStatus('current')
tmnxBsxIsaAaGrpFromSubQuePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 11), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFromSubQuePolicy.setStatus('current')
tmnxBsxIsaAaGrpFromSubSchPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 12), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFromSubSchPolicy.setStatus('current')
tmnxBsxIsaAaGrpToSubPool = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 13), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSubPool.setStatus('current')
tmnxBsxIsaAaGrpToSubResvCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 14), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSubResvCbs.setStatus('current')
tmnxBsxIsaAaGrpToSubSlpPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 15), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSubSlpPolicy.setStatus('current')
tmnxBsxIsaAaGrpToSubQuePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 16), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSubQuePolicy.setStatus('current')
tmnxBsxIsaAaGrpToSubSchPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 17), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSubSchPolicy.setStatus('current')
tmnxBsxIsaAaGrpIngressPool = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 18), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpIngressPool.setStatus('obsolete')
tmnxBsxIsaAaGrpIngressResvCbs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 19), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 100)).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpIngressResvCbs.setStatus('obsolete')
tmnxBsxIsaAaGrpIngressSlpPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 20), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpIngressSlpPolicy.setStatus('obsolete')
tmnxBsxIsaAaGrpIngressQuePolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 21), TNamedItem().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpIngressQuePolicy.setStatus('obsolete')
tmnxBsxIsaAaGrpActivityChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 22), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpActivityChange.setStatus('current')
tmnxBsxIsaAaGrpPartitions = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 23), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpPartitions.setStatus('obsolete')
tmnxBsxIsaAaGrpCapCostLowThres = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 24), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpCapCostLowThres.setStatus('current')
tmnxBsxIsaAaGrpCapCostHighThres = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 25), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpCapCostHighThres.setStatus('current')
tmnxBsxIsaAaGrpLoadBalanceStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 26), TmnxBsxLoadBalanceStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpLoadBalanceStatus.setStatus('current')
tmnxBsxIsaAaGrpUnassignedEsmSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 27), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpUnassignedEsmSubs.setStatus('current')
tmnxBsxIsaAaGrpUnassignedSapSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 28), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpUnassignedSapSubs.setStatus('current')
tmnxBsxIsaAaGrpUnassignedSpkSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 29), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpUnassignedSpkSubs.setStatus('current')
tmnxBsxIsaAaGrpUnassignedTIpSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 30), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpUnassignedTIpSubs.setStatus('obsolete')
tmnxBsxIsaAaGrpAaSubScale = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 31), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("residential", 0), ("vpn", 1), ("mobileGateway", 2), ("lightweightInternet", 3), ("residential8k", 4), ("residential16k", 5), ("residential32k", 6), ("residential64k", 7), ("vpn1k", 8), ("vpn2k", 9), ("vpn4k", 10), ("vpn8k", 11), ("mobileGateway1M", 12), ("mobileGateway2M", 13), ("lightweightInternet512k", 14))).clone('residential')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpAaSubScale.setStatus('current')
tmnxBsxIsaAaGrpOverloadCutThru = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 32), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpOverloadCutThru.setStatus('current')
tmnxBsxIsaAaGrpFromSubWaSBfHiWmk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 100), )).clone(-1)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFromSubWaSBfHiWmk.setStatus('current')
tmnxBsxIsaAaGrpFromSubWaSBfLoWmk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFromSubWaSBfLoWmk.setStatus('current')
tmnxBsxIsaAaGrpToSubWaSBfHiWmk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 35), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 100), )).clone(-1)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSubWaSBfHiWmk.setStatus('current')
tmnxBsxIsaAaGrpToSubWaSBfLoWmk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSubWaSBfLoWmk.setStatus('current')
tmnxBsxIsaAaGrpTransPrefV4NmEntr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 37), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpTransPrefV4NmEntr.setStatus('current')
tmnxBsxIsaAaGrpTransPrefV6NmEntr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 38), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpTransPrefV6NmEntr.setStatus('current')
tmnxBsxIsaAaGrpTransPrefV6RmEntr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 39), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpTransPrefV6RmEntr.setStatus('current')
tmnxBsxIsaAaGrpHttpEnrichMaxPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 40), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(576, 9212)).clone(1500)).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpHttpEnrichMaxPkt.setStatus('current')
tmnxBsxIsaAaGrpMinIsaGeneration = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 41), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpMinIsaGeneration.setStatus('current')
tmnxBsxIsaAaGrpWlanGwGrpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 42), TmnxWlanGwIsaGrpIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpWlanGwGrpId.setStatus('current')
tmnxBsxIsaAaGrpTransPrefV4RmEntr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 43), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2047))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpTransPrefV4RmEntr.setStatus('current')
tmnxBsxIsaAaGrpUnassEsmMacSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 44), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpUnassEsmMacSubs.setStatus('current')
tmnxBsxIsaAaGrpOvrldSubQuarAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 46), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpOvrldSubQuarAdmin.setStatus('current')
tmnxBsxIsaAaGrpFlowAttributes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 47), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFlowAttributes.setStatus('obsolete')
tmnxBsxIsaAaGrpVmTrafficDistByIp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 48), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpVmTrafficDistByIp.setStatus('current')
tmnxBsxIsaAaGrpSRWebServCachSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 49), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpSRWebServCachSize.setStatus('current')
tmnxBsxIsaAaGrpGtpTunnelDb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 50), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpGtpTunnelDb.setStatus('current')
tmnxBsxIsaAaGrpVmTrafficDistTeid = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 2, 1, 51), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpVmTrafficDistTeid.setStatus('current')
tmnxBsxIsaAaGrpFcTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 3), )
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFcTable.setStatus('current')
tmnxBsxIsaAaGrpFcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-QOS-MIB", "tFCName"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFcEntry.setStatus('current')
tmnxBsxIsaAaGrpFcRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 3, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFcRowStatus.setStatus('current')
tmnxBsxIsaAaGrpFcRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 3, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFcRowLastChange.setStatus('current')
tmnxBsxGrpMdaTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4), )
if mibBuilder.loadTexts: tmnxBsxGrpMdaTable.setStatus('current')
tmnxBsxGrpMdaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxGrpMdaEntry.setStatus('current')
tmnxBsxCardSlotEsaId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 1), Integer32())
if mibBuilder.loadTexts: tmnxBsxCardSlotEsaId.setStatus('current')
tmnxBsxGrpMdaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGrpMdaRowStatus.setStatus('current')
tmnxBsxGrpMdaRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaRowLastChange.setStatus('current')
tmnxBsxGrpMdaRole = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 4), TmnxBsxMdaRole().clone('primary')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGrpMdaRole.setStatus('current')
tmnxBsxGrpMdaActivityState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 5), TmnxBsxMdaActivityState().clone('unavailable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaActivityState.setStatus('current')
tmnxBsxGrpMdaActivityChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaActivityChange.setStatus('current')
tmnxBsxGrpMdaEsmSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 7), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaEsmSubscribers.setStatus('current')
tmnxBsxGrpMdaSapSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 8), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaSapSubscribers.setStatus('current')
tmnxBsxGrpMdaSpokeSdpSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 9), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaSpokeSdpSubscribers.setStatus('current')
tmnxBsxGrpMdaCapacityCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 10), Gauge32()).setUnits('cost').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaCapacityCost.setStatus('current')
tmnxBsxGrpMdaStatsResourceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 11), Gauge32()).setUnits('resources').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaStatsResourceCount.setStatus('current')
tmnxBsxGrpMdaTransitIpSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 12), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaTransitIpSubs.setStatus('current')
tmnxBsxGrpMdaTransitIpAddrs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaTransitIpAddrs.setStatus('current')
tmnxBsxGrpMdaTransitSubs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 14), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaTransitSubs.setStatus('current')
tmnxBsxGrpMdaTransPrefEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaTransPrefEntries.setStatus('obsolete')
tmnxBsxGrpMdaTransPrefV4Entr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 16), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaTransPrefV4Entr.setStatus('current')
tmnxBsxGrpMdaTransPrefV6Entr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 17), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaTransPrefV6Entr.setStatus('current')
tmnxBsxGrpMdaTransPrefV6RemEntr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 18), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaTransPrefV6RemEntr.setStatus('current')
tmnxBsxGrpMdaTransPrefV4RemEntr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 19), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaTransPrefV4RemEntr.setStatus('current')
tmnxBsxGrpMdaEsmMacSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 20), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaEsmMacSubscribers.setStatus('current')
tmnxBsxMdaSlotEsaVmId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 4, 1, 21), Unsigned32())
if mibBuilder.loadTexts: tmnxBsxMdaSlotEsaVmId.setStatus('current')
tmnxBsxGrpStatusTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5), )
if mibBuilder.loadTexts: tmnxBsxGrpStatusTable.setStatus('current')
tmnxBsxGrpStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxGrpStatusEntry.setStatus('current')
tmnxBsxGrpStatusDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusDiscontTime.setStatus('current')
tmnxBsxGrpStatusOctsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 2), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsIn.setStatus('current')
tmnxBsxGrpStatusPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsIn.setStatus('current')
tmnxBsxGrpStatusPktsInPChipErs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsInPChipErs.setStatus('current')
tmnxBsxGrpStatusOctsDiscCongIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 5), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsDiscCongIn.setStatus('current')
tmnxBsxGrpStatusPktsDiscCongIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsDiscCongIn.setStatus('current')
tmnxBsxGrpStatusOctsToMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 7), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsToMda.setStatus('current')
tmnxBsxGrpStatusPktsToMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsToMda.setStatus('current')
tmnxBsxGrpStatusOctsDisCongMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 9), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsDisCongMda.setStatus('current')
tmnxBsxGrpStatusPktsDisCongMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsDisCongMda.setStatus('current')
tmnxBsxGrpStatusOctsDiscErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 11), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsDiscErrors.setStatus('current')
tmnxBsxGrpStatusPktsDiscErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsDiscErrors.setStatus('current')
tmnxBsxGrpStatusOctsPolicyByps = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 13), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsPolicyByps.setStatus('current')
tmnxBsxGrpStatusPktsPolicyByps = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 14), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsPolicyByps.setStatus('current')
tmnxBsxGrpStatusOctsInspected = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 15), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsInspected.setStatus('current')
tmnxBsxGrpStatusPktsInspected = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsInspected.setStatus('current')
tmnxBsxGrpStatusOctsDiscPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 17), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsDiscPolicy.setStatus('current')
tmnxBsxGrpStatusPktsDiscPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 18), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsDiscPolicy.setStatus('current')
tmnxBsxGrpStatusOctsInMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 19), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsInMda.setStatus('current')
tmnxBsxGrpStatusPktsInMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 20), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsInMda.setStatus('current')
tmnxBsxGrpStatusOctsFromMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 21), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsFromMda.setStatus('current')
tmnxBsxGrpStatusPktsFromMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 22), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsFromMda.setStatus('current')
tmnxBsxGrpStatusPktsOutPChipEr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 23), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsOutPChipEr.setStatus('current')
tmnxBsxGrpStatusOctsDisCongOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 24), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsDisCongOut.setStatus('current')
tmnxBsxGrpStatusPktsDisCongOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 25), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsDisCongOut.setStatus('current')
tmnxBsxGrpStatusOctsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 26), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsOut.setStatus('current')
tmnxBsxGrpStatusPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 27), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsOut.setStatus('current')
tmnxBsxGrpStatusFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 28), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlows.setStatus('current')
tmnxBsxGrpStatusFlowsCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 29), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowsCurrent.setStatus('current')
tmnxBsxGrpStatusFlowSetupRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 30), Gauge32()).setUnits('flows per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowSetupRate.setStatus('current')
tmnxBsxGrpStatusSubsDiverted = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 31), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsDiverted.setStatus('current')
tmnxBsxGrpStatusSubsCurrent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 32), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsCurrent.setStatus('current')
tmnxBsxGrpStatusTrafficRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 33), Gauge32()).setUnits('kilobps').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusTrafficRate.setStatus('current')
tmnxBsxGrpStatusHCOctsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 34), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsIn.setStatus('current')
tmnxBsxGrpStatusHCPktsIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 35), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsIn.setStatus('current')
tmnxBsxGrpStatusHCPktsInPChipErs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 36), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsInPChipErs.setStatus('current')
tmnxBsxGrpStatusHCOctsDiscCongIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 37), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsDiscCongIn.setStatus('current')
tmnxBsxGrpStatusHCPktsDiscCongIn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 38), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsDiscCongIn.setStatus('current')
tmnxBsxGrpStatusHCOctsToMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 39), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsToMda.setStatus('current')
tmnxBsxGrpStatusHCPktsToMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 40), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsToMda.setStatus('current')
tmnxBsxGrpStatusHCOctsDisCongMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 41), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsDisCongMda.setStatus('current')
tmnxBsxGrpStatusHCPktsDisCongMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 42), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsDisCongMda.setStatus('current')
tmnxBsxGrpStatusHCOctsDiscErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 43), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsDiscErrors.setStatus('current')
tmnxBsxGrpStatusHCPktsDiscErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 44), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsDiscErrors.setStatus('current')
tmnxBsxGrpStatusHCOctsPolicyByps = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 45), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsPolicyByps.setStatus('current')
tmnxBsxGrpStatusHCPktsPolicyByps = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 46), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsPolicyByps.setStatus('current')
tmnxBsxGrpStatusHCOctsInspected = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 47), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsInspected.setStatus('current')
tmnxBsxGrpStatusHCPktsInspected = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 48), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsInspected.setStatus('current')
tmnxBsxGrpStatusHCOctsDiscPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 49), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsDiscPolicy.setStatus('current')
tmnxBsxGrpStatusHCPktsDiscPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 50), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsDiscPolicy.setStatus('current')
tmnxBsxGrpStatusHCOctsInMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 51), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsInMda.setStatus('current')
tmnxBsxGrpStatusHCPktsInMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 52), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsInMda.setStatus('current')
tmnxBsxGrpStatusHCOctsFromMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 53), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsFromMda.setStatus('current')
tmnxBsxGrpStatusHCPktsFromMda = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 54), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsFromMda.setStatus('current')
tmnxBsxGrpStatusHCPktsOutPChipEr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 55), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsOutPChipEr.setStatus('current')
tmnxBsxGrpStatusHCOctsDisCongOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 56), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsDisCongOut.setStatus('current')
tmnxBsxGrpStatusHCPktsDisCongOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 57), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsDisCongOut.setStatus('current')
tmnxBsxGrpStatusHCOctsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 58), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCOctsOut.setStatus('current')
tmnxBsxGrpStatusHCPktsOut = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 59), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktsOut.setStatus('current')
tmnxBsxGrpStatusHCFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 60), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCFlows.setStatus('current')
tmnxBsxGrpStatusFlowsAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 61), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowsAverage.setStatus('current')
tmnxBsxGrpStatusFlowsPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 62), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowsPeak.setStatus('current')
tmnxBsxGrpStatusFlowSetupRateAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 63), Gauge32()).setUnits('flows per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowSetupRateAvg.setStatus('current')
tmnxBsxGrpStatusFlowSetupRatePk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 64), Gauge32()).setUnits('flows per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowSetupRatePk.setStatus('current')
tmnxBsxGrpStatusSubsDivertedAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 65), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsDivertedAvg.setStatus('current')
tmnxBsxGrpStatusSubsDivertedPk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 66), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsDivertedPk.setStatus('current')
tmnxBsxGrpStatusSubsAverage = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 67), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsAverage.setStatus('current')
tmnxBsxGrpStatusSubsPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 68), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsPeak.setStatus('current')
tmnxBsxGrpStatusTrafficRateAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 69), Gauge32()).setUnits('kilobps').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusTrafficRateAvg.setStatus('current')
tmnxBsxGrpStatusTrafficRatePeak = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 70), Gauge32()).setUnits('kilobps').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusTrafficRatePeak.setStatus('current')
tmnxBsxGrpStatusPacketRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 71), Gauge32()).setUnits('packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPacketRate.setStatus('current')
tmnxBsxGrpStatusPacketRateAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 72), Gauge32()).setUnits('packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPacketRateAvg.setStatus('current')
tmnxBsxGrpStatusPacketRatePeak = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 73), Gauge32()).setUnits('packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPacketRatePeak.setStatus('current')
tmnxBsxGrpStatusFlowResInUse = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 74), Gauge32()).setUnits('flow resources').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowResInUse.setStatus('current')
tmnxBsxGrpStatusHCPktSzIncPk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 75), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktSzIncPk.setStatus('current')
tmnxBsxGrpStatusPktSzIncPkLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 76), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzIncPkLo.setStatus('current')
tmnxBsxGrpStatusPktSzIncPkHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 77), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzIncPkHi.setStatus('current')
tmnxBsxGrpStatusHCPktSzDecPk = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 78), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktSzDecPk.setStatus('current')
tmnxBsxGrpStatusPktSzDecPkLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 79), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzDecPkLo.setStatus('current')
tmnxBsxGrpStatusPktSzDecPkHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 80), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzDecPkHi.setStatus('current')
tmnxBsxGrpStatusHCPktSzIncOc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 81), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktSzIncOc.setStatus('current')
tmnxBsxGrpStatusPktSzIncOcLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 82), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzIncOcLo.setStatus('current')
tmnxBsxGrpStatusPktSzIncOcHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 83), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzIncOcHi.setStatus('current')
tmnxBsxGrpStatusHCPktSzDecOc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 84), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCPktSzDecOc.setStatus('current')
tmnxBsxGrpStatusPktSzDecOcLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 85), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzDecOcLo.setStatus('current')
tmnxBsxGrpStatusPktSzDecOcHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 86), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzDecOcHi.setStatus('current')
tmnxBsxGrpStatusHCSeenIpReqSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 87), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCSeenIpReqSent.setStatus('current')
tmnxBsxGrpStatusSeenIpReqSentLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 88), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSeenIpReqSentLo.setStatus('current')
tmnxBsxGrpStatusSeenIpReqSentHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 89), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSeenIpReqSentHi.setStatus('current')
tmnxBsxGrpStatusHCSeenIpReqDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 90), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCSeenIpReqDrop.setStatus('current')
tmnxBsxGrpStatusSeenIpReqDropLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 91), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSeenIpReqDropLo.setStatus('current')
tmnxBsxGrpStatusSeenIpReqDropHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 92), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSeenIpReqDropHi.setStatus('current')
tmnxBsxGrpStatusHCSubsCreated = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 93), Counter64()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCSubsCreated.setStatus('current')
tmnxBsxGrpStatusSubsCreatedLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 94), Counter32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsCreatedLo.setStatus('current')
tmnxBsxGrpStatusSubsCreatedHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 95), Counter32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsCreatedHi.setStatus('current')
tmnxBsxGrpStatusHCSubsDeleted = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 96), Counter64()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCSubsDeleted.setStatus('current')
tmnxBsxGrpStatusSubsDeletedLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 97), Counter32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsDeletedLo.setStatus('current')
tmnxBsxGrpStatusSubsDeletedHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 98), Counter32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsDeletedHi.setStatus('current')
tmnxBsxGrpStatusHCSubsModified = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 99), Counter64()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusHCSubsModified.setStatus('current')
tmnxBsxGrpStatusSubsModifiedLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 100), Counter32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsModifiedLo.setStatus('current')
tmnxBsxGrpStatusSubsModifiedHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 101), Counter32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsModifiedHi.setStatus('current')
tmnxBsxGrpStatusFlowResMax = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 106), Gauge32()).setUnits('flow resources').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowResMax.setStatus('current')
tmnxBsxGrpStatusFlowResAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 107), Gauge32()).setUnits('flow resources').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowResAvg.setStatus('current')
tmnxBsxGrpStatusFlowResPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 108), Gauge32()).setUnits('flow resources').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowResPeak.setStatus('current')
tmnxBsxGrpStatusFlowResState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 109), TmnxBsxTcaState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowResState.setStatus('current')
tmnxBsxGrpStatusFlowResRsdCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 110), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowResRsdCount.setStatus('current')
tmnxBsxGrpStatusFlowResRaisdTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 111), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowResRaisdTime.setStatus('current')
tmnxBsxGrpStatusFlowSetupState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 112), TmnxBsxTcaState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowSetupState.setStatus('current')
tmnxBsxGrpStatusFlowSetupRsdCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 113), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowSetupRsdCnt.setStatus('current')
tmnxBsxGrpStatusFlowSetupRsdTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 114), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlowSetupRsdTime.setStatus('current')
tmnxBsxGrpStatusBitRateState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 115), TmnxBsxTcaState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusBitRateState.setStatus('current')
tmnxBsxGrpStatusBitRateRsdCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 116), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusBitRateRsdCount.setStatus('current')
tmnxBsxGrpStatusBitRateRsdTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 117), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusBitRateRsdTime.setStatus('current')
tmnxBsxGrpStatusPktRateState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 118), TmnxBsxTcaState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktRateState.setStatus('current')
tmnxBsxGrpStatusPktRateRsdCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 119), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktRateRsdCount.setStatus('current')
tmnxBsxGrpStatusPktRateRaisdTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 120), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktRateRaisdTime.setStatus('current')
tmnxBsxGrpStatusDatapathCpu = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 121), TmnxBsxHundredthsOfPercent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusDatapathCpu.setStatus('current')
tmnxBsxGrpStatusDatapathCpuAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 122), TmnxBsxHundredthsOfPercent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusDatapathCpuAvg.setStatus('current')
tmnxBsxGrpStatusDatapathCpuPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 123), TmnxBsxHundredthsOfPercent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusDatapathCpuPeak.setStatus('current')
tmnxBsxGrpStatusDatapathCpuState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 124), TmnxBsxTcaState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusDatapathCpuState.setStatus('current')
tmnxBsxGrpStatusDatapathCpuRsdCt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 125), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusDatapathCpuRsdCt.setStatus('current')
tmnxBsxGrpStatusDatapathCpuRsdTm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 126), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusDatapathCpuRsdTm.setStatus('current')
tmnxBsxGrpStatusMgmtCpu = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 127), TmnxBsxHundredthsOfPercent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusMgmtCpu.setStatus('current')
tmnxBsxGrpStatusMgmtCpuAvg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 128), TmnxBsxHundredthsOfPercent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusMgmtCpuAvg.setStatus('current')
tmnxBsxGrpStatusMgmtCpuPeak = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 129), TmnxBsxHundredthsOfPercent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusMgmtCpuPeak.setStatus('current')
tmnxBsxGrpStatusWaSBfFmSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 130), TmnxBsxHundredthsOfPercent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusWaSBfFmSub.setStatus('current')
tmnxBsxGrpStatusWaSBfFmSubState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 131), TmnxBsxTcaState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusWaSBfFmSubState.setStatus('current')
tmnxBsxGrpStatusWaSBfFmSubRsdCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 132), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusWaSBfFmSubRsdCnt.setStatus('current')
tmnxBsxGrpStatusWaSBfFmSubRsdTm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 133), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusWaSBfFmSubRsdTm.setStatus('current')
tmnxBsxGrpStatusWaSBfToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 134), TmnxBsxHundredthsOfPercent()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusWaSBfToSub.setStatus('current')
tmnxBsxGrpStatusWaSBfToSubState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 135), TmnxBsxTcaState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusWaSBfToSubState.setStatus('current')
tmnxBsxGrpStatusWaSBfToSubRsdCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 136), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusWaSBfToSubRsdCnt.setStatus('current')
tmnxBsxGrpStatusWaSBfToSubRsdTm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 137), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusWaSBfToSubRsdTm.setStatus('current')
tmnxBsxGrpStatusFlwResCtThruOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 138), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlwResCtThruOcts.setStatus('current')
tmnxBsxGrpStatusFlwResCtThruPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 139), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusFlwResCtThruPkts.setStatus('current')
tmnxBsxGrpStatusOvrldCtThruOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 140), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOvrldCtThruOcts.setStatus('current')
tmnxBsxGrpStatusOvrldCtThruPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 141), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOvrldCtThruPkts.setStatus('current')
tmnxBsxGrpStatusOvrldCtThruState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 142), TmnxBsxTcaState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOvrldCtThruState.setStatus('current')
tmnxBsxGrpStatusOvrldCtThruRsdCt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 143), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOvrldCtThruRsdCt.setStatus('current')
tmnxBsxGrpStatusOvrldCtThruRsdTm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 144), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOvrldCtThruRsdTm.setStatus('current')
tmnxBsxGrpStatusOctsGenHttpRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 149), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsGenHttpRedir.setStatus('current')
tmnxBsxGrpStatusPktsGenHttpRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 150), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsGenHttpRedir.setStatus('current')
tmnxBsxGrpStatusPktsInToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 151), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsInToSub.setStatus('current')
tmnxBsxGrpStatusPktsInFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 152), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsInFrSub.setStatus('current')
tmnxBsxGrpStatusOctsInToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 153), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsInToSub.setStatus('current')
tmnxBsxGrpStatusOctsInFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 154), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsInFrSub.setStatus('current')
tmnxBsxGrpStatusPktDisCngInToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 155), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktDisCngInToSub.setStatus('current')
tmnxBsxGrpStatusPktDisCngInFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 156), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktDisCngInFrSub.setStatus('current')
tmnxBsxGrpStatusOctDisCngInToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 157), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctDisCngInToSub.setStatus('current')
tmnxBsxGrpStatusOctDisCngInFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 158), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctDisCngInFrSub.setStatus('current')
tmnxBsxGrpStatusPktInPChpErToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 159), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktInPChpErToSub.setStatus('current')
tmnxBsxGrpStatusPktInPChpErFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 160), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktInPChpErFrSub.setStatus('current')
tmnxBsxGrpStatusPktsToMdaToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 161), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsToMdaToSub.setStatus('current')
tmnxBsxGrpStatusPktsToMdaFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 162), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsToMdaFrSub.setStatus('current')
tmnxBsxGrpStatusPktsInMdaToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 163), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsInMdaToSub.setStatus('current')
tmnxBsxGrpStatusPktsInMdaFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 164), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsInMdaFrSub.setStatus('current')
tmnxBsxGrpStatusPkDisCngMdaToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 165), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPkDisCngMdaToSub.setStatus('current')
tmnxBsxGrpStatusPkDisCngMdaFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 166), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPkDisCngMdaFrSub.setStatus('current')
tmnxBsxGrpStatusPktDiscErrToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 167), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktDiscErrToSub.setStatus('current')
tmnxBsxGrpStatusPktDiscErrFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 168), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktDiscErrFrSub.setStatus('current')
tmnxBsxGrpStatusPktDiscPlcyToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 169), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktDiscPlcyToSub.setStatus('current')
tmnxBsxGrpStatusPktDiscPlcyFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 170), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktDiscPlcyFrSub.setStatus('current')
tmnxBsxGrpStatusOcDisCngMdaToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 175), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOcDisCngMdaToSub.setStatus('current')
tmnxBsxGrpStatusOcDisCngMdaFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 176), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOcDisCngMdaFrSub.setStatus('current')
tmnxBsxGrpStatusOctDiscErrToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 177), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctDiscErrToSub.setStatus('current')
tmnxBsxGrpStatusOctDiscErrFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 178), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctDiscErrFrSub.setStatus('current')
tmnxBsxGrpStatusOctDiscPlcyToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 179), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctDiscPlcyToSub.setStatus('current')
tmnxBsxGrpStatusOctDiscPlcyFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 180), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctDiscPlcyFrSub.setStatus('current')
tmnxBsxGrpStatusPktSzIncPkToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 185), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzIncPkToSub.setStatus('current')
tmnxBsxGrpStatusPktSzIncPkFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 186), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzIncPkFrSub.setStatus('current')
tmnxBsxGrpStatusPktSzDecPkToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 187), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzDecPkToSub.setStatus('current')
tmnxBsxGrpStatusPktSzDecPkFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 188), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzDecPkFrSub.setStatus('current')
tmnxBsxGrpStatusPktSzIncOcToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 189), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzIncOcToSub.setStatus('current')
tmnxBsxGrpStatusPktSzIncOcFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 190), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzIncOcFrSub.setStatus('current')
tmnxBsxGrpStatusPktSzDecOcToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 191), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzDecOcToSub.setStatus('current')
tmnxBsxGrpStatusPktSzDecOcFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 192), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktSzDecOcFrSub.setStatus('current')
tmnxBsxGrpStatusPktPlcyBypsToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 193), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktPlcyBypsToSub.setStatus('current')
tmnxBsxGrpStatusPktPlcyBypsFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 194), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktPlcyBypsFrSub.setStatus('current')
tmnxBsxGrpStatusOctPlcyBypsToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 195), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctPlcyBypsToSub.setStatus('current')
tmnxBsxGrpStatusOctPlcyBypsFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 196), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctPlcyBypsFrSub.setStatus('current')
tmnxBsxGrpStatusPkGenHttpRdToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 205), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPkGenHttpRdToSub.setStatus('current')
tmnxBsxGrpStatusPkGenHttpRdFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 206), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPkGenHttpRdFrSub.setStatus('current')
tmnxBsxGrpStatusOcGenHttpRdToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 207), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOcGenHttpRdToSub.setStatus('current')
tmnxBsxGrpStatusOcGenHttpRdFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 208), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOcGenHttpRdFrSub.setStatus('current')
tmnxBsxGrpStatusPktsFromMdaToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 209), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsFromMdaToSub.setStatus('current')
tmnxBsxGrpStatusPktsFromMdaFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 210), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsFromMdaFrSub.setStatus('current')
tmnxBsxGrpStatusOctsFromMdaToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 211), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsFromMdaToSub.setStatus('current')
tmnxBsxGrpStatusOctsFromMdaFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 212), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsFromMdaFrSub.setStatus('current')
tmnxBsxGrpStatusPkDisConOutToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 213), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPkDisConOutToSub.setStatus('current')
tmnxBsxGrpStatusPkDisConOutFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 214), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPkDisConOutFrSub.setStatus('current')
tmnxBsxGrpStatusOcDisConOutToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 215), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOcDisConOutToSub.setStatus('current')
tmnxBsxGrpStatusOcDisConOutFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 216), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOcDisConOutFrSub.setStatus('current')
tmnxBsxGrpStatusPktOutPChErToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 217), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktOutPChErToSub.setStatus('current')
tmnxBsxGrpStatusPktOutPChErFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 218), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktOutPChErFrSub.setStatus('current')
tmnxBsxGrpStatusPktsOutToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 219), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsOutToSub.setStatus('current')
tmnxBsxGrpStatusPktsOutFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 220), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktsOutFrSub.setStatus('current')
tmnxBsxGrpStatusOctsOutToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 221), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsOutToSub.setStatus('current')
tmnxBsxGrpStatusOctsOutFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 222), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsOutFrSub.setStatus('current')
tmnxBsxGrpStatusPktCutThrough = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 223), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktCutThrough.setStatus('current')
tmnxBsxGrpStatusPktCutThrouToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 224), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktCutThrouToSub.setStatus('current')
tmnxBsxGrpStatusPktCutThrouFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 225), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusPktCutThrouFrSub.setStatus('current')
tmnxBsxGrpStatusOctCutThrough = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 226), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctCutThrough.setStatus('current')
tmnxBsxGrpStatusOctCutThrouToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 227), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctCutThrouToSub.setStatus('current')
tmnxBsxGrpStatusOctCutThrouFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 228), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctCutThrouFrSub.setStatus('current')
tmnxBsxGrpStatusOctsToMdaToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 229), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsToMdaToSub.setStatus('current')
tmnxBsxGrpStatusOctsToMdaFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 230), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsToMdaFrSub.setStatus('current')
tmnxBsxGrpStatusOctsInMdaToSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 231), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsInMdaToSub.setStatus('current')
tmnxBsxGrpStatusOctsInMdaFrSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 232), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusOctsInMdaFrSub.setStatus('current')
tmnxBsxGrpStatusSubsQuarantined = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 5, 1, 233), Counter64()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusSubsQuarantined.setStatus('current')
tmnxBsxGrpStatusIngQTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6), )
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQTable.setStatus('current')
tmnxBsxGrpStatusIngQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusInQDirection"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusInQIndex"))
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQEntry.setStatus('current')
tmnxBsxGrpStatusInQDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 1), TmnxBsxDirection())
if mibBuilder.loadTexts: tmnxBsxGrpStatusInQDirection.setStatus('current')
tmnxBsxGrpStatusInQIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 2), TQueueId())
if mibBuilder.loadTexts: tmnxBsxGrpStatusInQIndex.setStatus('current')
tmnxBsxGrpStatusIngQDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQDiscontTime.setStatus('current')
tmnxBsxGrpStatusIngQFwdInPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQFwdInPPkts.setStatus('current')
tmnxBsxGrpStatusIngQFwdOutPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQFwdOutPPkts.setStatus('current')
tmnxBsxGrpStatusIngQFwdInPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 6), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQFwdInPOcts.setStatus('current')
tmnxBsxGrpStatusIngQFwdOutPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 7), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQFwdOutPOcts.setStatus('current')
tmnxBsxGrpStatusIngQDroInPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQDroInPPkts.setStatus('current')
tmnxBsxGrpStatusIngQDroOutPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQDroOutPPkts.setStatus('current')
tmnxBsxGrpStatusIngQDroInPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 10), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQDroInPOcts.setStatus('current')
tmnxBsxGrpStatusIngQDroOutPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 11), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQDroOutPOcts.setStatus('current')
tmnxBsxGrpStatusIngQHCFwdInPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 12), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQHCFwdInPPkts.setStatus('current')
tmnxBsxGrpStatusIngQHCFwdOutPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 13), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQHCFwdOutPPkts.setStatus('current')
tmnxBsxGrpStatusIngQHCFwdInPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 14), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQHCFwdInPOcts.setStatus('current')
tmnxBsxGrpStatusIngQHCFwdOutPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 15), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQHCFwdOutPOcts.setStatus('current')
tmnxBsxGrpStatusIngQHCDroInPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 16), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQHCDroInPPkts.setStatus('current')
tmnxBsxGrpStatusIngQHCDroOutPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 17), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQHCDroOutPPkts.setStatus('current')
tmnxBsxGrpStatusIngQHCDroInPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 18), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQHCDroInPOcts.setStatus('current')
tmnxBsxGrpStatusIngQHCDroOutPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 6, 1, 19), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusIngQHCDroOutPOcts.setStatus('current')
tmnxBsxGrpStatusEgrQTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7), )
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQTable.setStatus('current')
tmnxBsxGrpStatusEgrQEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDirection"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQIndex"))
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQEntry.setStatus('current')
tmnxBsxGrpStatusEgrQDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 1), TmnxBsxDirection())
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQDirection.setStatus('current')
tmnxBsxGrpStatusEgrQIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 2), TQueueId())
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQIndex.setStatus('current')
tmnxBsxGrpStatusEgrQDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQDiscontTime.setStatus('current')
tmnxBsxGrpStatusEgrQFwdInPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 4), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQFwdInPPkts.setStatus('current')
tmnxBsxGrpStatusEgrQFwdOutPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 5), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQFwdOutPPkts.setStatus('current')
tmnxBsxGrpStatusEgrQFwdInPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 6), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQFwdInPOcts.setStatus('current')
tmnxBsxGrpStatusEgrQFwdOutPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 7), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQFwdOutPOcts.setStatus('current')
tmnxBsxGrpStatusEgrQDroInPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 8), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQDroInPPkts.setStatus('current')
tmnxBsxGrpStatusEgrQDroOutPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQDroOutPPkts.setStatus('current')
tmnxBsxGrpStatusEgrQDroInPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 10), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQDroInPOcts.setStatus('current')
tmnxBsxGrpStatusEgrQDroOutPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 11), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQDroOutPOcts.setStatus('current')
tmnxBsxGrpStatusEgrQHCFwdInPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 12), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQHCFwdInPPkts.setStatus('current')
tmnxBsxGrpStatusEgrQHCFwdOutPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 13), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQHCFwdOutPPkts.setStatus('current')
tmnxBsxGrpStatusEgrQHCFwdInPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 14), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQHCFwdInPOcts.setStatus('current')
tmnxBsxGrpStatusEgrQHCFwdOutPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 15), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQHCFwdOutPOcts.setStatus('current')
tmnxBsxGrpStatusEgrQHCDroInPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 16), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQHCDroInPPkts.setStatus('current')
tmnxBsxGrpStatusEgrQHCDroOutPPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 17), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQHCDroOutPPkts.setStatus('current')
tmnxBsxGrpStatusEgrQHCDroInPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 18), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQHCDroInPOcts.setStatus('current')
tmnxBsxGrpStatusEgrQHCDroOutPOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 7, 1, 19), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpStatusEgrQHCDroOutPOcts.setStatus('current')
tmnxBsxAaSubSumTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8), )
if mibBuilder.loadTexts: tmnxBsxAaSubSumTable.setStatus('current')
tmnxBsxAaSubSumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubStatsInterval"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"))
if mibBuilder.loadTexts: tmnxBsxAaSubSumEntry.setStatus('current')
tmnxBsxAaSubStatsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 1), TmnxBsxAaSubStatsInterval())
if mibBuilder.loadTexts: tmnxBsxAaSubStatsInterval.setStatus('current')
tmnxBsxAaSubSumMdaSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 2), TmnxSlotNumOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumMdaSlotNum.setStatus('current')
tmnxBsxAaSubSumMdaMdaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumMdaMdaNum.setStatus('current')
tmnxBsxAaSubSumAppProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 4), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumAppProfName.setStatus('current')
tmnxBsxAaSubSumDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumDiscontTime.setStatus('current')
tmnxBsxAaSubSumOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 6), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumOctsAdmFmSb.setStatus('current')
tmnxBsxAaSubSumPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumPktsAdmFmSb.setStatus('current')
tmnxBsxAaSubSumFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 8), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumFlwsAdmFmSb.setStatus('current')
tmnxBsxAaSubSumOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 9), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumOctsDnyFmSb.setStatus('current')
tmnxBsxAaSubSumPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumPktsDnyFmSb.setStatus('current')
tmnxBsxAaSubSumFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 11), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumFlwsDnyFmSb.setStatus('current')
tmnxBsxAaSubSumOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 12), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumOctsAdmToSb.setStatus('current')
tmnxBsxAaSubSumPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumPktsAdmToSb.setStatus('current')
tmnxBsxAaSubSumFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 14), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumFlwsAdmToSb.setStatus('current')
tmnxBsxAaSubSumOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 15), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumOctsDnyToSb.setStatus('current')
tmnxBsxAaSubSumPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumPktsDnyToSb.setStatus('current')
tmnxBsxAaSubSumFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 17), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumFlwsDnyToSb.setStatus('current')
tmnxBsxAaSubSumTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 18), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumTermFlwDur.setStatus('current')
tmnxBsxAaSubSumTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 19), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumTermFlws.setStatus('current')
tmnxBsxAaSubSumShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 20), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumShrtDurFlws.setStatus('current')
tmnxBsxAaSubSumMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 21), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumMedDurFlws.setStatus('current')
tmnxBsxAaSubSumLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 22), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumLngDurFlws.setStatus('current')
tmnxBsxAaSubSumActFlwsFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 23), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumActFlwsFmSb.setStatus('current')
tmnxBsxAaSubSumActFlwsToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 24), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumActFlwsToSb.setStatus('current')
tmnxBsxAaSubSumHCOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 25), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCOctsAdmFmSb.setStatus('current')
tmnxBsxAaSubSumHCPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 26), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCPktsAdmFmSb.setStatus('current')
tmnxBsxAaSubSumHCFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 27), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCFlwsAdmFmSb.setStatus('current')
tmnxBsxAaSubSumHCOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 28), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCOctsDnyFmSb.setStatus('current')
tmnxBsxAaSubSumHCPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 29), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCPktsDnyFmSb.setStatus('current')
tmnxBsxAaSubSumHCFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 30), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCFlwsDnyFmSb.setStatus('current')
tmnxBsxAaSubSumHCOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 31), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCOctsAdmToSb.setStatus('current')
tmnxBsxAaSubSumHCPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 32), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCPktsAdmToSb.setStatus('current')
tmnxBsxAaSubSumHCFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 33), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCFlwsAdmToSb.setStatus('current')
tmnxBsxAaSubSumHCOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 34), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCOctsDnyToSb.setStatus('current')
tmnxBsxAaSubSumHCPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 35), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCPktsDnyToSb.setStatus('current')
tmnxBsxAaSubSumHCFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 36), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCFlwsDnyToSb.setStatus('current')
tmnxBsxAaSubSumHCTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 37), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCTermFlwDur.setStatus('current')
tmnxBsxAaSubSumHCTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 38), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCTermFlws.setStatus('current')
tmnxBsxAaSubSumHCShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 39), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCShrtDurFlws.setStatus('current')
tmnxBsxAaSubSumHCMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 40), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCMedDurFlws.setStatus('current')
tmnxBsxAaSubSumHCLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 41), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumHCLngDurFlws.setStatus('current')
tmnxBsxAaSubSumTetherState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 8, 1, 42), TmnxBsxAaSubTetherState().clone('notApplicable')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSumTetherState.setStatus('current')
tmnxBsxAaGrpPartTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9), )
if mibBuilder.loadTexts: tmnxBsxAaGrpPartTable.setStatus('current')
tmnxBsxAaGrpPartEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"))
if mibBuilder.loadTexts: tmnxBsxAaGrpPartEntry.setStatus('current')
tmnxBsxAaGrpPartIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1, 1), TmnxBsxAaGrpPartIndex())
if mibBuilder.loadTexts: tmnxBsxAaGrpPartIndex.setStatus('current')
tmnxBsxAaGrpPartRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAaGrpPartRowStatus.setStatus('current')
tmnxBsxAaGrpPartRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaGrpPartRowLastChange.setStatus('current')
tmnxBsxAaGrpPartDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAaGrpPartDescription.setStatus('current')
tmnxBsxAaGrpPartXOnlineHost = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1, 5), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAaGrpPartXOnlineHost.setStatus('current')
tmnxBsxAaGrpPartHttpMatchAllReq = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1, 6), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAaGrpPartHttpMatchAllReq.setStatus('current')
tmnxBsxAaGrpPartAaSubRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1, 7), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAaGrpPartAaSubRemote.setStatus('current')
tmnxBsxAaGrpPartAqpInitialLookup = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1, 8), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAaGrpPartAqpInitialLookup.setStatus('current')
tmnxBsxAaGrpPartShallowInspect = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 9, 1, 12), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAaGrpPartShallowInspect.setStatus('current')
tmnxBsxIsaLoadBalUnSubTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 10), )
if mibBuilder.loadTexts: tmnxBsxIsaLoadBalUnSubTable.setStatus('current')
tmnxBsxIsaLoadBalUnSubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 10, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaLoadBalUnSub"))
if mibBuilder.loadTexts: tmnxBsxIsaLoadBalUnSubEntry.setStatus('current')
tmnxBsxIsaLoadBalUnSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 10, 1, 1), TmnxBsxAaSubscriber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaLoadBalUnSub.setStatus('current')
tmnxBsxIsaLoadBalUnSubTransit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 10, 1, 2), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaLoadBalUnSubTransit.setStatus('current')
tmnxBsxAaSubTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11), )
if mibBuilder.loadTexts: tmnxBsxAaSubTable.setStatus('current')
tmnxBsxAaSubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"))
if mibBuilder.loadTexts: tmnxBsxAaSubEntry.setStatus('current')
tmnxBsxAaSubMdaSlotNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 1), TmnxSlotNumOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubMdaSlotNum.setStatus('current')
tmnxBsxAaSubMdaMdaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubMdaMdaNum.setStatus('current')
tmnxBsxAaSubAppProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 3), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubAppProfName.setStatus('current')
tmnxBsxAaSubHasOverrides = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubHasOverrides.setStatus('current')
tmnxBsxAaSubTransitIpPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 5), TmnxBsxTransitIpPolicyIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubTransitIpPolicyId.setStatus('current')
tmnxBsxAaSubTransPrefPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 6), TmnxBsxTransPrefPolicyIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubTransPrefPolicyId.setStatus('current')
tmnxBsxAaSubAarpId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 7), TmnxBsxAarpIdOrZero()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubAarpId.setStatus('current')
tmnxBsxAaSubHttpNotifLastTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 8), DateAndTime().subtype(subtypeSpec=ValueSizeConstraint(11, 11)).setFixedLength(11)).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubHttpNotifLastTime.setStatus('current')
tmnxBsxAaSubHttpUrlParam = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 9), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubHttpUrlParam.setStatus('current')
tmnxBsxAaSubCircuitId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 10), TmnxBsxAaSubCircuitId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubCircuitId.setStatus('current')
tmnxBsxAaSubRemoteId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 11), TmnxBsxAaSubRemoteId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubRemoteId.setStatus('current')
tmnxBsxAaSubMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 12), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubMacAddr.setStatus('current')
tmnxBsxAaSubSapPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 13), TmnxPortID()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSapPortId.setStatus('current')
tmnxBsxAaSubSapEncapVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 14), TmnxEncapVal()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubSapEncapVal.setStatus('current')
tmnxBsxAaSubQuarantined = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 11, 1, 15), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubQuarantined.setStatus('current')
tmnxBsxAaWap1xTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 12), )
if mibBuilder.loadTexts: tmnxBsxAaWap1xTable.setStatus('current')
tmnxBsxAaWap1xEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 12, 1), )
tmnxBsxAaGrpPartEntry.registerAugmentions(("TIMETRA-BSX-NG-MIB", "tmnxBsxAaWap1xEntry"))
tmnxBsxAaWap1xEntry.setIndexNames(*tmnxBsxAaGrpPartEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxBsxAaWap1xEntry.setStatus('current')
tmnxBsxAaWap1xRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 12, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaWap1xRowLastChange.setStatus('current')
tmnxBsxAaWap1xAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 12, 1, 2), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAaWap1xAdminState.setStatus('current')
tmnxBsxTetherTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 13), )
if mibBuilder.loadTexts: tmnxBsxTetherTable.setStatus('current')
tmnxBsxTetherEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 13, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"))
if mibBuilder.loadTexts: tmnxBsxTetherEntry.setStatus('current')
tmnxBsxTetherRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 13, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTetherRowLastChange.setStatus('current')
tmnxBsxTetherAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 13, 1, 2), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTetherAdminState.setStatus('current')
tmnxBsxTetherSingleDeviceTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 14), )
if mibBuilder.loadTexts: tmnxBsxTetherSingleDeviceTable.setStatus('current')
tmnxBsxTetherSingleDeviceEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 14, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTetherSingleDeviceExpTTL"))
if mibBuilder.loadTexts: tmnxBsxTetherSingleDeviceEntry.setStatus('current')
tmnxBsxTetherSingleDeviceExpTTL = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 14, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTetherSingleDeviceExpTTL.setStatus('current')
tmnxBsxTetherSingleDevRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 14, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTetherSingleDevRowStatus.setStatus('current')
tmnxBsxGrpMdaSharedResTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 15), )
if mibBuilder.loadTexts: tmnxBsxGrpMdaSharedResTable.setStatus('current')
tmnxBsxGrpMdaSharedResEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 15, 1), )
tmnxBsxGrpMdaEntry.registerAugmentions(("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaSharedResEntry"))
tmnxBsxGrpMdaSharedResEntry.setIndexNames(*tmnxBsxGrpMdaEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxBsxGrpMdaSharedResEntry.setStatus('current')
tmnxBsxGrpMdaSRGtpTunDbSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 15, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaSRGtpTunDbSize.setStatus('current')
tmnxBsxGrpMdaSRGtpTunDbUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 15, 1, 7), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGrpMdaSRGtpTunDbUtil.setStatus('current')
tmnxBsxIsaAaGrpFlowAttrTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 16), )
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFlowAttrTable.setStatus('current')
tmnxBsxIsaAaGrpFlowAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 16, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowAttr"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFlowAttrEntry.setStatus('current')
tmnxBsxIsaAaGrpFlowAttrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 16, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFlowAttrRowStatus.setStatus('current')
tmnxBsxIsaAaGrpFlowAttrRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 1, 16, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFlowAttrRowLastCh.setStatus('current')
tmnxBsxPolicyObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2))
tmnxBsxProtTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 1), )
if mibBuilder.loadTexts: tmnxBsxProtTable.setStatus('current')
tmnxBsxProtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 1, 1), ).setIndexNames((1, "TIMETRA-BSX-NG-MIB", "tmnxBsxProtName"))
if mibBuilder.loadTexts: tmnxBsxProtEntry.setStatus('current')
tmnxBsxProtName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 1, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxProtName.setStatus('current')
tmnxBsxProtDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 1, 1, 2), TItemDescription()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxProtDescription.setStatus('current')
tmnxBsxProtParentName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 1, 1, 3), TNamedItemOrEmpty()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxProtParentName.setStatus('current')
tmnxBsxProtAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 1, 1, 4), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxProtAdminState.setStatus('current')
tmnxBsxProtObsolete = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 1, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxProtObsolete.setStatus('current')
tmnxBsxProtRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 1, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxProtRowLastChange.setStatus('current')
tmnxBsxAppGrpCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2), )
if mibBuilder.loadTexts: tmnxBsxAppGrpCfgTable.setStatus('current')
tmnxBsxAppGrpCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpName"))
if mibBuilder.loadTexts: tmnxBsxAppGrpCfgEntry.setStatus('current')
tmnxBsxAppGrpPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxAppGrpPolicyVersion.setStatus('current')
tmnxBsxAppGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1, 2), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAppGrpName.setStatus('current')
tmnxBsxAppGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppGrpRowStatus.setStatus('current')
tmnxBsxAppGrpStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1, 4), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppGrpStorageType.setStatus('current')
tmnxBsxAppGrpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppGrpDescription.setStatus('current')
tmnxBsxAppGrpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1, 6), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppGrpAdminState.setStatus('obsolete')
tmnxBsxAppGrpChargeGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1, 7), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppGrpChargeGrp.setStatus('current')
tmnxBsxAppGrpRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAppGrpRowLastCh.setStatus('current')
tmnxBsxAppGrpExportId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppGrpExportId.setStatus('current')
tmnxBsxAppCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3), )
if mibBuilder.loadTexts: tmnxBsxAppCfgTable.setStatus('current')
tmnxBsxAppCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppName"))
if mibBuilder.loadTexts: tmnxBsxAppCfgEntry.setStatus('current')
tmnxBsxAppPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxAppPolicyVersion.setStatus('current')
tmnxBsxAppName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1, 2), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAppName.setStatus('current')
tmnxBsxAppRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppRowStatus.setStatus('current')
tmnxBsxAppStorageType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1, 4), StorageType().clone('nonVolatile')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppStorageType.setStatus('current')
tmnxBsxAppDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppDescription.setStatus('current')
tmnxBsxAppAppGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1, 6), TNamedItem().clone('Unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppAppGroup.setStatus('current')
tmnxBsxAppChargeGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1, 7), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppChargeGrp.setStatus('current')
tmnxBsxAppRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAppRowLastCh.setStatus('current')
tmnxBsxAppExportId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 3, 1, 9), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppExportId.setStatus('current')
tmnxBsxAppFilterTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4), )
if mibBuilder.loadTexts: tmnxBsxAppFilterTable.setStatus('current')
tmnxBsxAppFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterEntryId"))
if mibBuilder.loadTexts: tmnxBsxAppFilterEntry.setStatus('current')
tmnxBsxAppFilterPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxAppFilterPolicyVersion.setStatus('current')
tmnxBsxAppFilterEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 2), TEntryId())
if mibBuilder.loadTexts: tmnxBsxAppFilterEntryId.setStatus('current')
tmnxBsxAppFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterRowStatus.setStatus('current')
tmnxBsxAppFilterDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterDescription.setStatus('current')
tmnxBsxAppFilterAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 5), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterAdminState.setStatus('current')
tmnxBsxAppFilterProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 6), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterProtocol.setStatus('current')
tmnxBsxAppFilterProtocolOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 7), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterProtocolOp.setStatus('current')
tmnxBsxAppFilterFlowSetupDir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 8), TmnxBsxDirection().clone('both')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterFlowSetupDir.setStatus('current')
tmnxBsxAppFilterIpProtocolNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 9), TIpProtocol().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterIpProtocolNum.setStatus('current')
tmnxBsxAppFilterIpProtocolNumOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 10), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterIpProtocolNumOp.setStatus('current')
tmnxBsxAppFilterServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 11), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerAddrType.setStatus('current')
tmnxBsxAppFilterServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 12), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerAddr.setStatus('current')
tmnxBsxAppFilterServerAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 13), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerAddrLen.setStatus('current')
tmnxBsxAppFilterServerAddrOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 14), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerAddrOp.setStatus('current')
tmnxBsxAppFilterServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 15), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerPort.setStatus('obsolete')
tmnxBsxAppFilterServerPortOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 16), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerPortOp.setStatus('current')
tmnxBsxAppFilterServerPortFpp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 17), TmnxBsxFirstPacketPolicy().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerPortFpp.setStatus('current')
tmnxBsxAppFilterServerPortLow = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 18), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerPortLow.setStatus('current')
tmnxBsxAppFilterServerPortHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 19), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerPortHigh.setStatus('current')
tmnxBsxAppFilterServerPfxList = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 20), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerPfxList.setStatus('current')
tmnxBsxAppFilterServerDnsIpCache = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 21), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerDnsIpCache.setStatus('current')
tmnxBsxAppFilterNetworkAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 22), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterNetworkAddrType.setStatus('current')
tmnxBsxAppFilterNetworkAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 23), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterNetworkAddr.setStatus('current')
tmnxBsxAppFilterNetworkAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 24), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterNetworkAddrLen.setStatus('current')
tmnxBsxAppFilterNetworkAddrOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 25), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterNetworkAddrOp.setStatus('current')
tmnxBsxAppFilterNetworkPfxList = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 26), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterNetworkPfxList.setStatus('current')
tmnxBsxAppFilterHttpPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 27), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterHttpPort.setStatus('current')
tmnxBsxAppFilterHttpPortOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 28), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterHttpPortOp.setStatus('current')
tmnxBsxAppFilterServerPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 29), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterServerPortList.setStatus('current')
tmnxBsxAppFilterHttpPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 30), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterHttpPortList.setStatus('current')
tmnxBsxAppFilterApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 99), TNamedItem().clone('Unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterApplication.setStatus('current')
tmnxBsxAppFilterRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 100), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAppFilterRowLastChange.setStatus('current')
tmnxBsxAppFilterHttpMatchAllReq = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 4, 1, 101), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterHttpMatchAllReq.setStatus('current')
tmnxBsxAsoTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 5), )
if mibBuilder.loadTexts: tmnxBsxAsoTable.setStatus('current')
tmnxBsxAsoEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoCharName"))
if mibBuilder.loadTexts: tmnxBsxAsoEntry.setStatus('current')
tmnxBsxAsoPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 5, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxAsoPolicyVersion.setStatus('current')
tmnxBsxAsoCharName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 5, 1, 2), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAsoCharName.setStatus('current')
tmnxBsxAsoRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAsoRowStatus.setStatus('current')
tmnxBsxAsoDefValName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 5, 1, 4), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAsoDefValName.setStatus('current')
tmnxBsxAsoRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 5, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAsoRowLastChange.setStatus('current')
tmnxBsxAsoPersistId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 5, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAsoPersistId.setStatus('current')
tmnxBsxAsoValTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 6), )
if mibBuilder.loadTexts: tmnxBsxAsoValTable.setStatus('current')
tmnxBsxAsoValEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 6, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValCharName"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValValName"))
if mibBuilder.loadTexts: tmnxBsxAsoValEntry.setStatus('current')
tmnxBsxAsoValPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 6, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxAsoValPolicyVersion.setStatus('current')
tmnxBsxAsoValCharName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 6, 1, 2), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAsoValCharName.setStatus('current')
tmnxBsxAsoValValName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 6, 1, 3), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAsoValValName.setStatus('current')
tmnxBsxAsoValRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAsoValRowStatus.setStatus('current')
tmnxBsxAsoValRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 6, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAsoValRowLastChange.setStatus('current')
tmnxBsxAsoValPersistId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 6, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAsoValPersistId.setStatus('current')
tmnxBsxAppProfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 7), )
if mibBuilder.loadTexts: tmnxBsxAppProfTable.setStatus('current')
tmnxBsxAppProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 7, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfName"))
if mibBuilder.loadTexts: tmnxBsxAppProfEntry.setStatus('current')
tmnxBsxAppProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 7, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAppProfName.setStatus('current')
tmnxBsxAppProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppProfRowStatus.setStatus('current')
tmnxBsxAppProfDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 7, 1, 3), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppProfDescription.setStatus('current')
tmnxBsxAppProfDivert = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 7, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppProfDivert.setStatus('current')
tmnxBsxAppProfCapacityCost = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 7, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppProfCapacityCost.setStatus('current')
tmnxBsxAppProfRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 7, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAppProfRowLastChange.setStatus('current')
tmnxBsxAppProfSubSuppressible = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 7, 1, 7), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppProfSubSuppressible.setStatus('current')
tmnxBsxAppProfCharTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 8), )
if mibBuilder.loadTexts: tmnxBsxAppProfCharTable.setStatus('current')
tmnxBsxAppProfCharEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 8, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharProfName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharCharName"))
if mibBuilder.loadTexts: tmnxBsxAppProfCharEntry.setStatus('current')
tmnxBsxAppProfCharPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 8, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxAppProfCharPolicyVersion.setStatus('current')
tmnxBsxAppProfCharProfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 8, 1, 2), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAppProfCharProfName.setStatus('current')
tmnxBsxAppProfCharCharName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 8, 1, 3), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAppProfCharCharName.setStatus('current')
tmnxBsxAppProfCharRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 8, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppProfCharRowStatus.setStatus('current')
tmnxBsxAppProfCharValName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 8, 1, 5), TNamedItem()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppProfCharValName.setStatus('current')
tmnxBsxAppProfCharRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 8, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAppProfCharRowLastChange.setStatus('current')
tmnxBsxAqpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9), )
if mibBuilder.loadTexts: tmnxBsxAqpTable.setStatus('obsolete')
tmnxBsxAqpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpEntryId"))
if mibBuilder.loadTexts: tmnxBsxAqpEntry.setStatus('obsolete')
tmnxBsxAqpPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxAqpPolicyVersion.setStatus('obsolete')
tmnxBsxAqpEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 2), TEntryId())
if mibBuilder.loadTexts: tmnxBsxAqpEntryId.setStatus('obsolete')
tmnxBsxAqpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpRowStatus.setStatus('obsolete')
tmnxBsxAqpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDescription.setStatus('obsolete')
tmnxBsxAqpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 5), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpAdminState.setStatus('obsolete')
tmnxBsxAqpApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 6), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpApplication.setStatus('obsolete')
tmnxBsxAqpApplicationOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 7), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpApplicationOp.setStatus('obsolete')
tmnxBsxAqpAppGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 8), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpAppGroup.setStatus('obsolete')
tmnxBsxAqpAppGroupOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 9), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpAppGroupOp.setStatus('obsolete')
tmnxBsxAqpTrafficDir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 10), TmnxBsxDirection().clone('both')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpTrafficDir.setStatus('obsolete')
tmnxBsxAqpSubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 11), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSubscriber.setStatus('obsolete')
tmnxBsxAqpSubscriberOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 12), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSubscriberOp.setStatus('obsolete')
tmnxBsxAqpDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 13), TDSCPNameOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDscp.setStatus('obsolete')
tmnxBsxAqpDscpOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 14), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDscpOp.setStatus('obsolete')
tmnxBsxAqpSapSubscrPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 15), TmnxPortID()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSapSubscrPortId.setStatus('obsolete')
tmnxBsxAqpSapSubscrEncapValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 16), TmnxEncapVal()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSapSubscrEncapValue.setStatus('obsolete')
tmnxBsxAqpSapSubscrOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 17), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSapSubscrOp.setStatus('obsolete')
tmnxBsxAqpSrcAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 18), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSrcAddressType.setStatus('obsolete')
tmnxBsxAqpSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 19), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSrcAddress.setStatus('obsolete')
tmnxBsxAqpSrcAddressLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 20), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSrcAddressLength.setStatus('obsolete')
tmnxBsxAqpSrcAddressOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 21), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSrcAddressOp.setStatus('obsolete')
tmnxBsxAqpSrcPortOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 22), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSrcPortOp.setStatus('obsolete')
tmnxBsxAqpSrcPortLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 23), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSrcPortLowValue.setStatus('obsolete')
tmnxBsxAqpSrcPortHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 24), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSrcPortHighValue.setStatus('obsolete')
tmnxBsxAqpDstAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 25), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDstAddressType.setStatus('obsolete')
tmnxBsxAqpDstAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 26), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDstAddress.setStatus('obsolete')
tmnxBsxAqpDstAddressLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 27), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDstAddressLength.setStatus('obsolete')
tmnxBsxAqpDstAddressOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 28), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDstAddressOp.setStatus('obsolete')
tmnxBsxAqpDstPortOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 29), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDstPortOp.setStatus('obsolete')
tmnxBsxAqpDstPortLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 30), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDstPortLowValue.setStatus('obsolete')
tmnxBsxAqpDstPortHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 31), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDstPortHighValue.setStatus('obsolete')
tmnxBsxAqpSpokeSdpSubscr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 32), SdpBindId().clone(hexValue="0000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSpokeSdpSubscr.setStatus('obsolete')
tmnxBsxAqpSpokeSdpSubscrOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 33), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSpokeSdpSubscrOp.setStatus('obsolete')
tmnxBsxAqpAaSubscriberType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 34), TmnxBsxAaSubscriberType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpAaSubscriberType.setStatus('obsolete')
tmnxBsxAqpAaSubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 35), TmnxBsxAaSubscriber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpAaSubscriber.setStatus('obsolete')
tmnxBsxAqpAaSubscriberOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 36), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpAaSubscriberOp.setStatus('obsolete')
tmnxBsxAqpChargeGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 37), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpChargeGrp.setStatus('obsolete')
tmnxBsxAqpChargeGrpOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 38), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpChargeGrpOp.setStatus('obsolete')
tmnxBsxAqpIpProtocolNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 39), TIpProtocol().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpIpProtocolNum.setStatus('obsolete')
tmnxBsxAqpIpProtocolNumOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 40), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpIpProtocolNumOp.setStatus('obsolete')
tmnxBsxAqpDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 50), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpDrop.setStatus('obsolete')
tmnxBsxAqpBwLimitPolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 51), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpBwLimitPolicer.setStatus('obsolete')
tmnxBsxAqpFlowRatePolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 52), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpFlowRatePolicer.setStatus('obsolete')
tmnxBsxAqpFlowCountPolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 53), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpFlowCountPolicer.setStatus('obsolete')
tmnxBsxAqpRemarkFc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 54), TFCNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpRemarkFc.setStatus('obsolete')
tmnxBsxAqpRemarkPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 55), TPriorityOrDefault().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpRemarkPriority.setStatus('obsolete')
tmnxBsxAqpRemarkDscpInProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 56), TDSCPNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpRemarkDscpInProfile.setStatus('obsolete')
tmnxBsxAqpRemarkDscpOutProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 57), TDSCPNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpRemarkDscpOutProfile.setStatus('obsolete')
tmnxBsxAqpMirrorSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 58), TmnxServId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMirrorSource.setStatus('obsolete')
tmnxBsxAqpMirrorSourceAllIncl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 59), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMirrorSourceAllIncl.setStatus('obsolete')
tmnxBsxAqpHttpErrRedirName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 60), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpHttpErrRedirName.setStatus('obsolete')
tmnxBsxAqpHttpRedirName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 61), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpHttpRedirName.setStatus('obsolete')
tmnxBsxAqpHttpRedirFlowType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 62), TmnxBsxAqpHttpRedirFlowType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpHttpRedirFlowType.setStatus('obsolete')
tmnxBsxAqpHttpEnrichName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 63), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpHttpEnrichName.setStatus('obsolete')
tmnxBsxAqpRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 64), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpRowLastChange.setStatus('obsolete')
tmnxBsxAqpSessionFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 65), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpSessionFilter.setStatus('obsolete')
tmnxBsxAqpAaSubErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 66), TmnxBsxAqpAction().clone('allow')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpAaSubErrors.setStatus('obsolete')
tmnxBsxAqpOutOfOrderFrags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 67), TmnxBsxAqpAction().clone('allow')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpOutOfOrderFrags.setStatus('obsolete')
tmnxBsxAqpAaSubCutThru = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 68), TmnxBsxAqpAction().clone('allow')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpAaSubCutThru.setStatus('obsolete')
tmnxBsxAqpUrlFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 69), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpUrlFilter.setStatus('obsolete')
tmnxBsxAqpHttpNotif = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 9, 1, 70), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpHttpNotif.setStatus('obsolete')
tmnxBsxAdminControl = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10))
tmnxBsxAdminOwner = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10, 1), TNamedItemOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxAdminOwner.setStatus('obsolete')
tmnxBsxAdminControlApply = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("initialize", 2), ("commit", 3)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxAdminControlApply.setStatus('obsolete')
tmnxBsxAdminLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAdminLastChangeTime.setStatus('obsolete')
tmnxBsxAdminCtrlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10, 4), )
if mibBuilder.loadTexts: tmnxBsxAdminCtrlTable.setStatus('current')
tmnxBsxAdminCtrlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"))
if mibBuilder.loadTexts: tmnxBsxAdminCtrlEntry.setStatus('current')
tmnxBsxAdminCtrlLastChTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10, 4, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAdminCtrlLastChTime.setStatus('current')
tmnxBsxAdminCtrlConfigOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10, 4, 1, 2), TNamedItemOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxAdminCtrlConfigOwner.setStatus('current')
tmnxBsxAdminCtrlApply = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 10, 4, 1, 3), TmnxBsxAdminCtrl()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxAdminCtrlApply.setStatus('current')
tmnxBsxPolicerTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11), )
if mibBuilder.loadTexts: tmnxBsxPolicerTable.setStatus('current')
tmnxBsxPolicerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerName"))
if mibBuilder.loadTexts: tmnxBsxPolicerEntry.setStatus('current')
tmnxBsxPolicerName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxPolicerName.setStatus('current')
tmnxBsxPolicerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerRowStatus.setStatus('current')
tmnxBsxPolicerDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 3), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerDescription.setStatus('current')
tmnxBsxPolicerType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 4), TmnxBsxPolicerType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerType.setStatus('current')
tmnxBsxPolicerGranularity = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 5), TmnxBsxGranularity().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerGranularity.setStatus('current')
tmnxBsxPolicerAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 6), TmnxBsxPolicerAction().clone('permitDeny')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerAction.setStatus('current')
tmnxBsxPolicerAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 7), TPIRRateOrZero().clone(-1)).setUnits('kbps or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerAdminPIR.setStatus('current')
tmnxBsxPolicerAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 8), TCIRRate()).setUnits('kbps or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerAdminCIR.setStatus('current')
tmnxBsxPolicerMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 9), TmnxBsxBurstSize()).setUnits('KB or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerMBS.setStatus('current')
tmnxBsxPolicerCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 10), TmnxBsxBurstSize()).setUnits('KB or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerCBS.setStatus('current')
tmnxBsxPolicerPIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 11), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerPIRAdaptation.setStatus('current')
tmnxBsxPolicerCIRAdaptation = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 12), TAdaptationRule().clone('closest')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerCIRAdaptation.setStatus('current')
tmnxBsxPolicerRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 13), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxPolicerRowLastChange.setStatus('current')
tmnxBsxPolicerOperTodOverride = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 14), Integer32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxPolicerOperTodOverride.setStatus('current')
tmnxBsxPolicerGtpFlowCountLmt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 15), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerGtpFlowCountLmt.setStatus('current')
tmnxBsxPolicerRatePercentage = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 16), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 200), )).clone(-1)).setUnits('percent').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerRatePercentage.setStatus('current')
tmnxBsxPolicerCongestedAnlPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 17), TPIRRateOrZero().clone(-1)).setUnits('kbps or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerCongestedAnlPIR.setStatus('obsolete')
tmnxBsxPolicerCongestedAnlCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 18), TCIRRate()).setUnits('kbps or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerCongestedAnlCIR.setStatus('obsolete')
tmnxBsxPolicerCongestedAnlMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 19), TmnxBsxBurstSize()).setUnits('KB or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerCongestedAnlMBS.setStatus('obsolete')
tmnxBsxPolicerCongestedAnlCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 20), TmnxBsxBurstSize()).setUnits('KB or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerCongestedAnlCBS.setStatus('obsolete')
tmnxBsxPolicerCongestedPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 21), TPIRRateOrZero().clone(-1)).setUnits('kbps or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerCongestedPIR.setStatus('current')
tmnxBsxPolicerCongestedCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 22), TCIRRate()).setUnits('kbps or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerCongestedCIR.setStatus('current')
tmnxBsxPolicerCongestedMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 23), TmnxBsxBurstSize()).setUnits('KB or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerCongestedMBS.setStatus('current')
tmnxBsxPolicerCongestedCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 11, 1, 24), TmnxBsxBurstSize()).setUnits('KB or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerCongestedCBS.setStatus('current')
tmnxBsxIsaAaTim = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 12))
tmnxBsxUpgrade = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 12, 1), TmnxActionType()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxUpgrade.setStatus('current')
tmnxBsxVersion = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 12, 2), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxVersion.setStatus('current')
tmnxBsxAqpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13), )
if mibBuilder.loadTexts: tmnxBsxAqpStatsTable.setStatus('current')
tmnxBsxAqpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBaseEntryId"))
if mibBuilder.loadTexts: tmnxBsxAqpStatsEntry.setStatus('current')
tmnxBsxAqpStatsFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpStatsFlows.setStatus('obsolete')
tmnxBsxAqpStatsConflicts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpStatsConflicts.setStatus('obsolete')
tmnxBsxAqpStatsHCFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpStatsHCFlows.setStatus('current')
tmnxBsxAqpStatsFlowsLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpStatsFlowsLo.setStatus('current')
tmnxBsxAqpStatsFlowsHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpStatsFlowsHi.setStatus('current')
tmnxBsxAqpStatsHCConflicts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpStatsHCConflicts.setStatus('current')
tmnxBsxAqpStatsConflictsLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpStatsConflictsLo.setStatus('current')
tmnxBsxAqpStatsConflictsHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 13, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpStatsConflictsHi.setStatus('current')
tmnxBsxInfo = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14))
tmnxBsxFlowFullHighWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(95)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxFlowFullHighWatermark.setStatus('current')
tmnxBsxFlowFullLowWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 2), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(90)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxFlowFullLowWatermark.setStatus('current')
tmnxBsxFlowSetupHighWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 2000000), )).clone(-1)).setUnits('flows per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxFlowSetupHighWatermark.setStatus('current')
tmnxBsxFlowSetupLowWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 4), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1999999))).setUnits('flows per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxFlowSetupLowWatermark.setStatus('current')
tmnxBsxPacketRateHighWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 148809524), )).clone(-1)).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxPacketRateHighWatermark.setStatus('current')
tmnxBsxPacketRateLowWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 148809523))).setUnits('packets per second').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxPacketRateLowWatermark.setStatus('current')
tmnxBsxBitRateHighWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(1, 100000), )).clone(-1)).setUnits('megabps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxBitRateHighWatermark.setStatus('current')
tmnxBsxBitRateLowWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 99999))).setUnits('megabps').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxBitRateLowWatermark.setStatus('current')
tmnxBsxDatapathCpuHighWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 100), )).clone(95)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxDatapathCpuHighWatermark.setStatus('current')
tmnxBsxDatapathCpuLowWatermark = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 14, 10), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(90)).setUnits('percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxDatapathCpuLowWatermark.setStatus('current')
tmnxBsxAqpCharTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 15), )
if mibBuilder.loadTexts: tmnxBsxAqpCharTable.setStatus('current')
tmnxBsxAqpCharEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 15, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBasePolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBaseEntryId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoCharName"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValValName"))
if mibBuilder.loadTexts: tmnxBsxAqpCharEntry.setStatus('current')
tmnxBsxAqpCharRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 15, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpCharRowStatus.setStatus('current')
tmnxBsxAqpCharOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 15, 1, 2), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpCharOperator.setStatus('current')
tmnxBsxAqpCharRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 15, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpCharRowLastChange.setStatus('current')
tmnxBsxAppFilterExprTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 16), )
if mibBuilder.loadTexts: tmnxBsxAppFilterExprTable.setStatus('current')
tmnxBsxAppFilterExprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 16, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterEntryId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprIndex"))
if mibBuilder.loadTexts: tmnxBsxAppFilterExprEntry.setStatus('current')
tmnxBsxAppFilterExprIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 16, 1, 1), TmnxBsxExprSubStringIndex())
if mibBuilder.loadTexts: tmnxBsxAppFilterExprIndex.setStatus('current')
tmnxBsxAppFilterExprRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 16, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterExprRowStatus.setStatus('current')
tmnxBsxAppFilterExprType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 16, 1, 3), TmnxBsxExprSubStringType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterExprType.setStatus('current')
tmnxBsxAppFilterExprOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 16, 1, 4), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterExprOperator.setStatus('current')
tmnxBsxAppFilterExprStr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 16, 1, 5), TmnxBsxExprSubString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAppFilterExprStr.setStatus('current')
tmnxBsxAppFilterExprRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 16, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAppFilterExprRowLastCh.setStatus('current')
tmnxBsxCustProtTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17), )
if mibBuilder.loadTexts: tmnxBsxCustProtTable.setStatus('current')
tmnxBsxCustProtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtEntryId"))
if mibBuilder.loadTexts: tmnxBsxCustProtEntry.setStatus('current')
tmnxBsxCustProtPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxCustProtPolicyVersion.setStatus('current')
tmnxBsxCustProtEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17, 1, 2), TEntryId())
if mibBuilder.loadTexts: tmnxBsxCustProtEntryId.setStatus('current')
tmnxBsxCustProtRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtRowStatus.setStatus('current')
tmnxBsxCustProtRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCustProtRowLastChange.setStatus('current')
tmnxBsxCustProtIpProtocolNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17, 1, 5), TIpProtocol().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtIpProtocolNum.setStatus('current')
tmnxBsxCustProtDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17, 1, 6), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtDescription.setStatus('current')
tmnxBsxCustProtAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 17, 1, 7), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtAdminState.setStatus('current')
tmnxBsxCustProtExprTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18), )
if mibBuilder.loadTexts: tmnxBsxCustProtExprTable.setStatus('current')
tmnxBsxCustProtExprEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtEntryId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprIndex"))
if mibBuilder.loadTexts: tmnxBsxCustProtExprEntry.setStatus('current')
tmnxBsxCustProtExprIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18, 1, 1), TmnxBsxExprSubStringIndex())
if mibBuilder.loadTexts: tmnxBsxCustProtExprIndex.setStatus('current')
tmnxBsxCustProtExprRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtExprRowStatus.setStatus('current')
tmnxBsxCustProtExprRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCustProtExprRowLastChange.setStatus('current')
tmnxBsxCustProtExprOffset = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 127))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtExprOffset.setStatus('current')
tmnxBsxCustProtExprDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18, 1, 5), TmnxBsxProtocolDirection().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtExprDirection.setStatus('current')
tmnxBsxCustProtExprOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18, 1, 6), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtExprOperator.setStatus('current')
tmnxBsxCustProtExprStr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 18, 1, 7), TmnxBsxCustProtExprSubString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCustProtExprStr.setStatus('current')
tmnxBsxAaSubAsoValTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 19), )
if mibBuilder.loadTexts: tmnxBsxAaSubAsoValTable.setStatus('current')
tmnxBsxAaSubAsoValEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 19, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValCharName"))
if mibBuilder.loadTexts: tmnxBsxAaSubAsoValEntry.setStatus('current')
tmnxBsxAaSubAsoValName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 19, 1, 1), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubAsoValName.setStatus('current')
tmnxBsxAaSubAsoValDerivedFrom = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 19, 1, 2), TmnxBsxAaSubAsoValDerivedFrom()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubAsoValDerivedFrom.setStatus('current')
tmnxBsxAaSubPolicerTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 20), )
if mibBuilder.loadTexts: tmnxBsxAaSubPolicerTable.setStatus('current')
tmnxBsxAaSubPolicerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 20, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerDirection"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerIndex"))
if mibBuilder.loadTexts: tmnxBsxAaSubPolicerEntry.setStatus('current')
tmnxBsxAaSubPolicerType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 20, 1, 1), TmnxBsxPolicerType())
if mibBuilder.loadTexts: tmnxBsxAaSubPolicerType.setStatus('current')
tmnxBsxAaSubPolicerDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 20, 1, 2), TmnxBsxDirection())
if mibBuilder.loadTexts: tmnxBsxAaSubPolicerDirection.setStatus('current')
tmnxBsxAaSubPolicerIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 20, 1, 3), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 4096)))
if mibBuilder.loadTexts: tmnxBsxAaSubPolicerIndex.setStatus('current')
tmnxBsxAaSubPolicerAqpEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 20, 1, 4), TEntryId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubPolicerAqpEntryId.setStatus('current')
tmnxBsxAaSubPolicerName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 20, 1, 5), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubPolicerName.setStatus('current')
tmnxBsxAaSubPolResExTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 21), )
if mibBuilder.loadTexts: tmnxBsxAaSubPolResExTable.setStatus('obsolete')
tmnxBsxAaSubPolResExEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 21, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"))
if mibBuilder.loadTexts: tmnxBsxAaSubPolResExEntry.setStatus('obsolete')
tmnxBsxAaSubPolResExStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 21, 1, 1), TmnxBsxAaSubPolicerResStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubPolResExStatus.setStatus('obsolete')
tmnxBsxPolicyScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22))
tmnxBsxPlcyCfgLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxPlcyCfgLastChTime.setStatus('current')
tmnxBsxChargeGrpLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxChargeGrpLastChTime.setStatus('current')
tmnxBsxPolicerLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxPolicerLastChTime.setStatus('current')
tmnxBsxPolicerOvrdLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdLastChTime.setStatus('current')
tmnxBsxAppGrpLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAppGrpLastChTime.setStatus('current')
tmnxBsxAqpLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpLastChTime.setStatus('obsolete')
tmnxBsxAppLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAppLastChTime.setStatus('current')
tmnxBsxAppFilterLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAppFilterLastChTime.setStatus('current')
tmnxBsxProtLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxProtLastChTime.setStatus('current')
tmnxBsxCustProtLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCustProtLastChTime.setStatus('current')
tmnxBsxCustProtExprLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 11), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCustProtExprLastChTime.setStatus('current')
tmnxBsxAsoLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 12), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAsoLastChTime.setStatus('current')
tmnxBsxAsoValLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 13), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAsoValLastChTime.setStatus('current')
tmnxBsxAppProfLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 14), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAppProfLastChTime.setStatus('current')
tmnxBsxAppProfCharLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 15), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAppProfCharLastChTime.setStatus('current')
tmnxBsxAqpCharLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 16), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpCharLastChTime.setStatus('current')
tmnxBsxAppFilterExprLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 17), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAppFilterExprLastChTime.setStatus('current')
tmnxBsxPrefixListLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 18), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxPrefixListLastChTime.setStatus('current')
tmnxBsxPrefixLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 19), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxPrefixLastChTime.setStatus('current')
tmnxBsxEventLogLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 20), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxEventLogLastChTime.setStatus('current')
tmnxBsxAqpBaseLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 21), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpBaseLastChTime.setStatus('current')
tmnxBsxAqpMatchLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 22), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpMatchLastChTime.setStatus('current')
tmnxBsxAqpActionLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 22, 23), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpActionLastChTime.setStatus('current')
tmnxBsxChargeGrpCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23), )
if mibBuilder.loadTexts: tmnxBsxChargeGrpCfgTable.setStatus('current')
tmnxBsxChargeGrpCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxChargeGrpPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxChargeGrpName"))
if mibBuilder.loadTexts: tmnxBsxChargeGrpCfgEntry.setStatus('current')
tmnxBsxChargeGrpPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxChargeGrpPolicyVersion.setStatus('current')
tmnxBsxChargeGrpName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23, 1, 2), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxChargeGrpName.setStatus('current')
tmnxBsxChargeGrpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxChargeGrpRowStatus.setStatus('current')
tmnxBsxChargeGrpRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxChargeGrpRowLastCh.setStatus('current')
tmnxBsxChargeGrpDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxChargeGrpDescription.setStatus('current')
tmnxBsxChargeGrpExportId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 255), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxChargeGrpExportId.setStatus('current')
tmnxBsxChargeGrpNotifyStartStop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 23, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("none", 1), ("flow", 2), ("chargingGroup", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxChargeGrpNotifyStartStop.setStatus('current')
tmnxBsxPlcyCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 24), )
if mibBuilder.loadTexts: tmnxBsxPlcyCfgTable.setStatus('current')
tmnxBsxPlcyCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 24, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxPlcyPolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"))
if mibBuilder.loadTexts: tmnxBsxPlcyCfgEntry.setStatus('current')
tmnxBsxPlcyPolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 24, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxPlcyPolicyVersion.setStatus('current')
tmnxBsxPlcyRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 24, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxPlcyRowLastCh.setStatus('current')
tmnxBsxPlcyDefChargeGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 24, 1, 3), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPlcyDefChargeGrp.setStatus('current')
tmnxBsxPlcyDefTetherChargeGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 24, 1, 4), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPlcyDefTetherChargeGrp.setStatus('current')
tmnxBsxPolicerOvrdTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25), )
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdTable.setStatus('current')
tmnxBsxPolicerOvrdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdIndex"))
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdEntry.setStatus('current')
tmnxBsxPolicerOvrdIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1, 1), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdIndex.setStatus('current')
tmnxBsxPolicerOvrdRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdRowStatus.setStatus('current')
tmnxBsxPolicerOvrdRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdRowLastChange.setStatus('current')
tmnxBsxPolicerOvrdDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdDescription.setStatus('current')
tmnxBsxPolicerOvrdAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1, 5), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdAdminState.setStatus('current')
tmnxBsxPolicerOvrdDayList = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1, 6), TmnxDayOfWeekList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdDayList.setStatus('current')
tmnxBsxPolicerOvrdStartDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1, 7), TmnxDayOfWeek().clone('unspecified')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdStartDay.setStatus('current')
tmnxBsxPolicerOvrdStartHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1, 8), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 23))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdStartHour.setStatus('current')
tmnxBsxPolicerOvrdStartMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1, 9), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdStartMinute.setStatus('current')
tmnxBsxPolicerOvrdEndDay = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1, 10), TmnxDayOfWeek().clone('unspecified')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdEndDay.setStatus('current')
tmnxBsxPolicerOvrdEndHour = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 24)).clone(24)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdEndHour.setStatus('current')
tmnxBsxPolicerOvrdEndMinute = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 59))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdEndMinute.setStatus('current')
tmnxBsxPolicerOvrdAdminPIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1, 13), TPIRRateOrZero().clone(-1)).setUnits('kbps or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdAdminPIR.setStatus('current')
tmnxBsxPolicerOvrdAdminCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1, 14), TCIRRate()).setUnits('kbps or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdAdminCIR.setStatus('current')
tmnxBsxPolicerOvrdMBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1, 15), TmnxBsxBurstSize()).setUnits('KB or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdMBS.setStatus('current')
tmnxBsxPolicerOvrdCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 25, 1, 16), TmnxBsxBurstSize()).setUnits('KB or flows').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPolicerOvrdCBS.setStatus('current')
tmnxBsxPrefixListTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 26), )
if mibBuilder.loadTexts: tmnxBsxPrefixListTable.setStatus('current')
tmnxBsxPrefixListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 26, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxPrefixListName"))
if mibBuilder.loadTexts: tmnxBsxPrefixListEntry.setStatus('current')
tmnxBsxPrefixListName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 26, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxPrefixListName.setStatus('current')
tmnxBsxPrefixListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 26, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPrefixListRowStatus.setStatus('current')
tmnxBsxPrefixListRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 26, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxPrefixListRowLastChange.setStatus('current')
tmnxBsxPrefixListDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 26, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPrefixListDescription.setStatus('current')
tmnxBsxPrefixTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 27), )
if mibBuilder.loadTexts: tmnxBsxPrefixTable.setStatus('current')
tmnxBsxPrefixEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 27, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxPrefixListName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxPrefixType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxPrefixAddr"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxPrefixLength"))
if mibBuilder.loadTexts: tmnxBsxPrefixEntry.setStatus('current')
tmnxBsxPrefixType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 27, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxBsxPrefixType.setStatus('current')
tmnxBsxPrefixAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 27, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxBsxPrefixAddr.setStatus('current')
tmnxBsxPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 27, 1, 3), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128)))
if mibBuilder.loadTexts: tmnxBsxPrefixLength.setStatus('current')
tmnxBsxPrefixRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 27, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPrefixRowStatus.setStatus('current')
tmnxBsxPrefixName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 27, 1, 5), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPrefixName.setStatus('current')
tmnxBsxEventLogTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 28), )
if mibBuilder.loadTexts: tmnxBsxEventLogTable.setStatus('current')
tmnxBsxEventLogEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 28, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxEventLogName"))
if mibBuilder.loadTexts: tmnxBsxEventLogEntry.setStatus('current')
tmnxBsxEventLogName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 28, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxEventLogName.setStatus('current')
tmnxBsxEventLogRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 28, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxEventLogRowStatus.setStatus('current')
tmnxBsxEventLogRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 28, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxEventLogRowLastChange.setStatus('current')
tmnxBsxEventLogBufferType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 28, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("linear", 1), ("circular", 2), ("syslog", 3))).clone('linear')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxEventLogBufferType.setStatus('current')
tmnxBsxEventLogMaxEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 28, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 100000)).clone(500)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxEventLogMaxEntries.setStatus('current')
tmnxBsxEventLogAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 28, 1, 6), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxEventLogAdminState.setStatus('current')
tmnxBsxEventLogSyslogAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 28, 1, 7), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxEventLogSyslogAddrType.setStatus('current')
tmnxBsxEventLogSyslogAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 28, 1, 8), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxEventLogSyslogAddr.setStatus('current')
tmnxBsxEventLogSyslogPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 28, 1, 9), TmnxUdpPort().clone(514)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxEventLogSyslogPort.setStatus('current')
tmnxBsxEventLogSyslogDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 28, 1, 10), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxEventLogSyslogDescription.setStatus('current')
tmnxBsxEventLogSyslogVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 28, 1, 11), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxEventLogSyslogVlan.setStatus('current')
tmnxBsxEventLogSyslogFacility = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 28, 1, 12), TmnxSyslogFacility().clone('local7')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxEventLogSyslogFacility.setStatus('current')
tmnxBsxEventLogSyslogSeverity = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 28, 1, 13), TmnxSyslogSeverity().clone('info')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxEventLogSyslogSeverity.setStatus('current')
tmnxBsxAqpObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29))
tmnxBsxAqpBaseTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 1), )
if mibBuilder.loadTexts: tmnxBsxAqpBaseTable.setStatus('current')
tmnxBsxAqpBaseEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 1, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBasePolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBaseEntryId"))
if mibBuilder.loadTexts: tmnxBsxAqpBaseEntry.setStatus('current')
tmnxBsxAqpBasePolicyVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 1, 1, 1), TmnxBsxPolicyVersion())
if mibBuilder.loadTexts: tmnxBsxAqpBasePolicyVersion.setStatus('current')
tmnxBsxAqpBaseEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 1, 1, 2), TEntryId())
if mibBuilder.loadTexts: tmnxBsxAqpBaseEntryId.setStatus('current')
tmnxBsxAqpBaseRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 1, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpBaseRowStatus.setStatus('current')
tmnxBsxAqpBaseRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 1, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpBaseRowLastChange.setStatus('current')
tmnxBsxAqpBaseDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 1, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpBaseDescription.setStatus('current')
tmnxBsxAqpBaseAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 1, 1, 6), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpBaseAdminState.setStatus('current')
tmnxBsxAqpMatchTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2), )
if mibBuilder.loadTexts: tmnxBsxAqpMatchTable.setStatus('current')
tmnxBsxAqpMatchEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1), )
tmnxBsxAqpBaseEntry.registerAugmentions(("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchEntry"))
tmnxBsxAqpMatchEntry.setIndexNames(*tmnxBsxAqpBaseEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxBsxAqpMatchEntry.setStatus('current')
tmnxBsxAqpMatchRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpMatchRowLastChange.setStatus('current')
tmnxBsxAqpMatchApplication = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 2), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchApplication.setStatus('current')
tmnxBsxAqpMatchApplicationOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 3), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchApplicationOp.setStatus('current')
tmnxBsxAqpMatchAppGroup = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 4), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchAppGroup.setStatus('current')
tmnxBsxAqpMatchAppGroupOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 5), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchAppGroupOp.setStatus('current')
tmnxBsxAqpMatchTrafficDir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 6), TmnxBsxDirection().clone('both')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchTrafficDir.setStatus('current')
tmnxBsxAqpMatchDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 7), TDSCPNameOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchDscp.setStatus('current')
tmnxBsxAqpMatchDscpOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 8), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchDscpOp.setStatus('current')
tmnxBsxAqpMatchSrcAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 9), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchSrcAddressType.setStatus('current')
tmnxBsxAqpMatchSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 10), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchSrcAddress.setStatus('current')
tmnxBsxAqpMatchSrcAddressLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 11), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchSrcAddressLength.setStatus('current')
tmnxBsxAqpMatchSrcAddressOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 12), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchSrcAddressOp.setStatus('current')
tmnxBsxAqpMatchSrcPortOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 13), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchSrcPortOp.setStatus('current')
tmnxBsxAqpMatchSrcPortLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 14), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchSrcPortLowValue.setStatus('current')
tmnxBsxAqpMatchSrcPortHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 15), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchSrcPortHighValue.setStatus('current')
tmnxBsxAqpMatchDstAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 16), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchDstAddressType.setStatus('current')
tmnxBsxAqpMatchDstAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 17), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchDstAddress.setStatus('current')
tmnxBsxAqpMatchDstAddressLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 18), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchDstAddressLength.setStatus('current')
tmnxBsxAqpMatchDstAddressOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 19), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchDstAddressOp.setStatus('current')
tmnxBsxAqpMatchDstPortOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 20), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchDstPortOp.setStatus('current')
tmnxBsxAqpMatchDstPortLowValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 21), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchDstPortLowValue.setStatus('current')
tmnxBsxAqpMatchDstPortHighValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 22), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchDstPortHighValue.setStatus('current')
tmnxBsxAqpMatchAaSubscriberType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 23), TmnxBsxAaSubscriberType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchAaSubscriberType.setStatus('current')
tmnxBsxAqpMatchAaSubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 24), TmnxBsxAaSubscriber()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchAaSubscriber.setStatus('current')
tmnxBsxAqpMatchAaSubscriberOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 25), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchAaSubscriberOp.setStatus('current')
tmnxBsxAqpMatchChargeGrp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 26), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchChargeGrp.setStatus('current')
tmnxBsxAqpMatchChargeGrpOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 27), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchChargeGrpOp.setStatus('current')
tmnxBsxAqpMatchIpProtocolNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 28), TIpProtocol().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchIpProtocolNum.setStatus('current')
tmnxBsxAqpMatchIpProtocolNumOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 29), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchIpProtocolNumOp.setStatus('current')
tmnxBsxAqpMatchSrcPfxList = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 30), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchSrcPfxList.setStatus('current')
tmnxBsxAqpMatchDstPfxList = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 31), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchDstPfxList.setStatus('current')
tmnxBsxAqpMatchAaSubTetherState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 32), TmnxBsxAaSubTetherState().clone('notApplicable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchAaSubTetherState.setStatus('current')
tmnxBsxAqpMatchSrcPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 33), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchSrcPortList.setStatus('current')
tmnxBsxAqpMatchDstPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 2, 1, 34), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpMatchDstPortList.setStatus('current')
tmnxBsxAqpActionTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3), )
if mibBuilder.loadTexts: tmnxBsxAqpActionTable.setStatus('current')
tmnxBsxAqpActionEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1), )
tmnxBsxAqpBaseEntry.registerAugmentions(("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActionEntry"))
tmnxBsxAqpActionEntry.setIndexNames(*tmnxBsxAqpBaseEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxBsxAqpActionEntry.setStatus('current')
tmnxBsxAqpActRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpActRowLastChange.setStatus('current')
tmnxBsxAqpActDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 2), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActDrop.setStatus('current')
tmnxBsxAqpActBwLimitPolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 3), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActBwLimitPolicer.setStatus('current')
tmnxBsxAqpActFlowRatePolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 4), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActFlowRatePolicer.setStatus('current')
tmnxBsxAqpActFlowCountPolicer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 5), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActFlowCountPolicer.setStatus('current')
tmnxBsxAqpActRemarkFc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 6), TFCNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActRemarkFc.setStatus('current')
tmnxBsxAqpActRemarkPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 7), TPriorityOrDefault().clone('default')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActRemarkPriority.setStatus('current')
tmnxBsxAqpActRemarkDscpInProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 8), TDSCPNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActRemarkDscpInProf.setStatus('current')
tmnxBsxAqpActRemarkDscpOutProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 9), TDSCPNameOrEmpty().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActRemarkDscpOutProf.setStatus('current')
tmnxBsxAqpActMirrorSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 10), TmnxServId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActMirrorSource.setStatus('current')
tmnxBsxAqpActMirrorSourceAllIncl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 11), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActMirrorSourceAllIncl.setStatus('current')
tmnxBsxAqpActHttpErrRedirName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 12), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActHttpErrRedirName.setStatus('current')
tmnxBsxAqpActHttpRedirName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 13), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActHttpRedirName.setStatus('current')
tmnxBsxAqpActHttpRedirFlowType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 14), TmnxBsxAqpHttpRedirFlowType().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActHttpRedirFlowType.setStatus('current')
tmnxBsxAqpActHttpEnrichName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 15), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActHttpEnrichName.setStatus('current')
tmnxBsxAqpActSessionFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 16), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActSessionFilter.setStatus('current')
tmnxBsxAqpActUrlFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 17), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActUrlFilter.setStatus('current')
tmnxBsxAqpActHttpNotif = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 18), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActHttpNotif.setStatus('current')
tmnxBsxAqpActOverloadDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 19), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActOverloadDrop.setStatus('current')
tmnxBsxAqpActEvtLogOverloadDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 20), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActEvtLogOverloadDrop.setStatus('current')
tmnxBsxAqpActErrorDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 21), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActErrorDrop.setStatus('current')
tmnxBsxAqpActEvtLogErrorDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 22), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActEvtLogErrorDrop.setStatus('current')
tmnxBsxAqpActFragDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("none", 0), ("all", 1), ("outOfOrder", 2))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActFragDrop.setStatus('current')
tmnxBsxAqpActEvtLogFragDrop = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 24), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActEvtLogFragDrop.setStatus('current')
tmnxBsxAqpActDnsIpCache = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 25), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActDnsIpCache.setStatus('current')
tmnxBsxAqpActGtpFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 26), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActGtpFilter.setStatus('current')
tmnxBsxAqpActSctpFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 27), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActSctpFilter.setStatus('current')
tmnxBsxAqpActFlowRatePlcrEvtLog = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 28), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActFlowRatePlcrEvtLog.setStatus('current')
tmnxBsxAqpActFlowCountPlcrEvtLog = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 29), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActFlowCountPlcrEvtLog.setStatus('current')
tmnxBsxAqpActUrlFiltrXHeaderChar = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 30), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActUrlFiltrXHeaderChar.setStatus('current')
tmnxBsxAqpActTcpMaxSegSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 31), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(160, 10240), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActTcpMaxSegSize.setStatus('current')
tmnxBsxAqpActTcpValidate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 3, 1, 32), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpActTcpValidate.setStatus('current')
tmnxBsxAqpFlowAttrTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 4), )
if mibBuilder.loadTexts: tmnxBsxAqpFlowAttrTable.setStatus('current')
tmnxBsxAqpFlowAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBasePolicyVersion"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBaseEntryId"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowAttr"))
if mibBuilder.loadTexts: tmnxBsxAqpFlowAttrEntry.setStatus('current')
tmnxBsxAqpFlowAttr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 4, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxAqpFlowAttr.setStatus('current')
tmnxBsxAqpFlowAttrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 4, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpFlowAttrRowStatus.setStatus('current')
tmnxBsxAqpFlowAttrRowLstChg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 4, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAqpFlowAttrRowLstChg.setStatus('current')
tmnxBsxAqpFlowAttrConf = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpFlowAttrConf.setStatus('current')
tmnxBsxAqpFlowAttrOperator = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 4, 1, 5), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAqpFlowAttrOperator.setStatus('current')
tmnxBsxCflowdRecTmplTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 5), )
if mibBuilder.loadTexts: tmnxBsxCflowdRecTmplTable.setStatus('current')
tmnxBsxCflowdRecTmplEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdRecTemplate"))
if mibBuilder.loadTexts: tmnxBsxCflowdRecTmplEntry.setStatus('current')
tmnxBsxCflowdRecTemplate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 5, 1, 1), TmnxBsxCflowdRecTemplate())
if mibBuilder.loadTexts: tmnxBsxCflowdRecTemplate.setStatus('current')
tmnxBsxCflowdRecTmplAdmin = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 5, 1, 2), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdRecTmplAdmin.setStatus('current')
tmnxBsxCflowdRecTmplFldsSelType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 5, 1, 3), TmnxBsxCflowdFieldSelType().clone('legacy')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdRecTmplFldsSelType.setStatus('current')
tmnxBsxCflowdRecTmplRowLstChg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 5, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdRecTmplRowLstChg.setStatus('current')
tmnxBsxCflowdRecFieldTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 6), )
if mibBuilder.loadTexts: tmnxBsxCflowdRecFieldTable.setStatus('current')
tmnxBsxCflowdRecFieldEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 6, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdRecTemplate"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdRecField"))
if mibBuilder.loadTexts: tmnxBsxCflowdRecFieldEntry.setStatus('current')
tmnxBsxCflowdRecField = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tmnxBsxCflowdRecField.setStatus('current')
tmnxBsxCflowdRecFldRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdRecFldRowStatus.setStatus('current')
tmnxBsxCflowdRecFieldName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 6, 1, 3), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdRecFieldName.setStatus('current')
tmnxBsxCflowdRecFieldDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 6, 1, 4), TItemDescription()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdRecFieldDescr.setStatus('current')
tmnxBsxCflowdRecFieldSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 6, 1, 5), Unsigned32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdRecFieldSize.setStatus('current')
tmnxBsxCflowdRecFieldId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 6, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdRecFieldId.setStatus('current')
tmnxBsxCflowdRecFieldEnterprise = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 6, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdRecFieldEnterprise.setStatus('current')
tmnxBsxCflowdRecFldRowLstChg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 6, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdRecFldRowLstChg.setStatus('current')
tmnxBsxWebServiceCategoryTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 7), )
if mibBuilder.loadTexts: tmnxBsxWebServiceCategoryTable.setStatus('current')
tmnxBsxWebServiceCategoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 7, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxWebServCategorySetId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxWebServCategoryId"))
if mibBuilder.loadTexts: tmnxBsxWebServiceCategoryEntry.setStatus('current')
tmnxBsxWebServCategorySetId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 7, 1, 1), TmnxBsxWebServCategorySetIdKey())
if mibBuilder.loadTexts: tmnxBsxWebServCategorySetId.setStatus('current')
tmnxBsxWebServCategoryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 7, 1, 2), TmnxBsxWebServiceCategoryIdKey())
if mibBuilder.loadTexts: tmnxBsxWebServCategoryId.setStatus('current')
tmnxBsxWebServCategoryName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 7, 1, 3), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxWebServCategoryName.setStatus('current')
tmnxBsxWebServCategRowLastChg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 7, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxWebServCategRowLastChg.setStatus('current')
tmnxBsxWebServCategDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 7, 1, 5), TXLNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxWebServCategDescr.setStatus('current')
tmnxBsxUrlFltrWebServProfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 8), )
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebServProfTable.setStatus('current')
tmnxBsxUrlFltrWebServProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 8, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebServProfile"))
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebServProfEntry.setStatus('current')
tmnxBsxUrlFltrWebServProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 8, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebServProfile.setStatus('current')
tmnxBsxUrlFltWebSerProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 8, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFltWebSerProfRowStatus.setStatus('current')
tmnxBsxUrlFltWebSerProfDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 8, 1, 3), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFltWebSerProfDescr.setStatus('current')
tmnxBsxUrlFltWebSerProfRoLstChg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 8, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltWebSerProfRoLstChg.setStatus('current')
tmnxBsxUrlFltWebSerCategoryTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 9), )
if mibBuilder.loadTexts: tmnxBsxUrlFltWebSerCategoryTable.setStatus('current')
tmnxBsxUrlFltWebSerCategoryEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 9, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebServProfile"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebServCategory"))
if mibBuilder.loadTexts: tmnxBsxUrlFltWebSerCategoryEntry.setStatus('current')
tmnxBsxUrlFltrWebServCategory = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 9, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebServCategory.setStatus('current')
tmnxBsxUrlFltWebServCategRowSt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 9, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFltWebServCategRowSt.setStatus('current')
tmnxBsxUrlFltWebServCategName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 9, 1, 3), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltWebServCategName.setStatus('current')
tmnxBsxUrlFltWebSerCategRoLstChg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 9, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltWebSerCategRoLstChg.setStatus('current')
tmnxBsxWebUrlCategorySetTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 10), )
if mibBuilder.loadTexts: tmnxBsxWebUrlCategorySetTable.setStatus('current')
tmnxBsxWebUrlCategorySetEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 10, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxWebUrlCategorySetId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxWebUrlClassifier"))
if mibBuilder.loadTexts: tmnxBsxWebUrlCategorySetEntry.setStatus('current')
tmnxBsxWebUrlCategorySetId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 10, 1, 1), TmnxBsxWebServCategorySetIdKey())
if mibBuilder.loadTexts: tmnxBsxWebUrlCategorySetId.setStatus('current')
tmnxBsxWebUrlClassifier = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 10, 1, 2), TmnxBsxWebServClassifierIdKey())
if mibBuilder.loadTexts: tmnxBsxWebUrlClassifier.setStatus('current')
tmnxBsxWebUrlClassifierDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 10, 1, 3), TItemDescription()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxWebUrlClassifierDescr.setStatus('current')
tmnxBsxWebUrlCategSetRowLastChg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 10, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxWebUrlCategSetRowLastChg.setStatus('current')
tmnxBsxUrlFltrWSClassOvrdTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 11), )
if mibBuilder.loadTexts: tmnxBsxUrlFltrWSClassOvrdTable.setStatus('current')
tmnxBsxUrlFltrWSClassOvrdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 11, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWSClassOvrdEntryId"))
if mibBuilder.loadTexts: tmnxBsxUrlFltrWSClassOvrdEntry.setStatus('current')
tmnxBsxUrlFltrWSClassOvrdEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 11, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tmnxBsxUrlFltrWSClassOvrdEntryId.setStatus('current')
tmnxBsxUrlFltWSClassOvrdRowSt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 11, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFltWSClassOvrdRowSt.setStatus('current')
tmnxBsxUrlFltWSClassOvrdUrlExpr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 11, 1, 3), TmnxBsxExprSubString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFltWSClassOvrdUrlExpr.setStatus('current')
tmnxBsxUrlFltWSClassOvrdUrlCateg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 11, 1, 4), TmnxBsxWebServiceCategoryId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFltWSClassOvrdUrlCateg.setStatus('current')
tmnxBsxUrlFltWSClassOvrdLstChg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 11, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltWSClassOvrdLstChg.setStatus('current')
tmnxBsxUrlFltWSClassOvrdCategNam = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 29, 11, 1, 6), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltWSClassOvrdCategNam.setStatus('current')
tmnxBsxAnlTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 30), )
if mibBuilder.loadTexts: tmnxBsxAnlTable.setStatus('current')
tmnxBsxAnlEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 30, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAnlSource"))
if mibBuilder.loadTexts: tmnxBsxAnlEntry.setStatus('current')
tmnxBsxAnlSource = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 30, 1, 1), TmnxBsxAnlSource().clone('mobile-3g')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAnlSource.setStatus('current')
tmnxBsxAnlRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 30, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAnlRowLastChange.setStatus('current')
tmnxBsxAnlRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 30, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAnlRowStatus.setStatus('current')
tmnxBsxAnlSourceLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 30, 1, 4), TmnxBsxAnlSourceLevel().clone('cell')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAnlSourceLevel.setStatus('current')
tmnxBsxAnlRttThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 30, 1, 5), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 500), )).clone(173)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAnlRttThreshold.setStatus('current')
tmnxBsxAnlRttThresholdTolerance = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 30, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAnlRttThresholdTolerance.setStatus('current')
tmnxBsxPortListTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 31), )
if mibBuilder.loadTexts: tmnxBsxPortListTable.setStatus('current')
tmnxBsxPortListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 31, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxPortListName"))
if mibBuilder.loadTexts: tmnxBsxPortListEntry.setStatus('current')
tmnxBsxPortListName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 31, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxPortListName.setStatus('current')
tmnxBsxPortListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 31, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPortListRowStatus.setStatus('current')
tmnxBsxPortListRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 31, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxPortListRowLastChange.setStatus('current')
tmnxBsxPortListDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 31, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPortListDescription.setStatus('current')
tmnxBsxPortTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 32), )
if mibBuilder.loadTexts: tmnxBsxPortTable.setStatus('current')
tmnxBsxPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 32, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxPortListName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxPortLow"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxPortHigh"))
if mibBuilder.loadTexts: tmnxBsxPortEntry.setStatus('current')
tmnxBsxPortRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 32, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPortRowStatus.setStatus('current')
tmnxBsxPortLow = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 32, 1, 2), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPortLow.setStatus('current')
tmnxBsxPortHigh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 32, 1, 3), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxPortHigh.setStatus('current')
tmnxBsxCertProfileTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 33), )
if mibBuilder.loadTexts: tmnxBsxCertProfileTable.setStatus('current')
tmnxBsxCertProfileEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 33, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxCertProfileName"))
if mibBuilder.loadTexts: tmnxBsxCertProfileEntry.setStatus('current')
tmnxBsxCertProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 33, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxCertProfileName.setStatus('current')
tmnxBsxCertProfileRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 33, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCertProfileRowStatus.setStatus('current')
tmnxBsxCertProfileLastChgd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 33, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCertProfileLastChgd.setStatus('current')
tmnxBsxCertProfileAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 33, 1, 4), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCertProfileAdminState.setStatus('current')
tmnxBsxCertProfileOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 33, 1, 5), TmnxOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCertProfileOperState.setStatus('current')
tmnxBsxCertProfileOperFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 33, 1, 6), Bits().clone(namedValues=NamedValues(("profileAdminDown", 0), ("invalidCertFile", 1), ("invalidCertFilePublicKey", 2), ("invalidPublicKeyModulus", 3), ("invalidPublicKeyExponent", 4), ("unsupportedCertFileAlgorithm", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCertProfileOperFlags.setStatus('current')
tmnxBsxCertProfileCertFile = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 33, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 95)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCertProfileCertFile.setStatus('current')
tmnxBsxCertProfileDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 33, 1, 8), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCertProfileDescription.setStatus('current')
tmnxBsxCertProfileReferenceCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 33, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCertProfileReferenceCount.setStatus('current')
tmnxBsxSubCongDetectTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 34), )
if mibBuilder.loadTexts: tmnxBsxSubCongDetectTable.setStatus('current')
tmnxBsxSubCongDetectEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 34, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"))
if mibBuilder.loadTexts: tmnxBsxSubCongDetectEntry.setStatus('current')
tmnxBsxSubCongDetectRowLastChg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 34, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSubCongDetectRowLastChg.setStatus('current')
tmnxBsxSubCongDetectAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 34, 1, 2), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSubCongDetectAdminState.setStatus('current')
tmnxBsxSubRttThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 34, 1, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 500), )).clone(173)).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSubRttThreshold.setStatus('current')
tmnxBsxSubRttThresholdTolerance = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 2, 34, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(50)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSubRttThresholdTolerance.setStatus('current')
tmnxBsxStatsObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3))
tmnxBsxStatsAccounting = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 1))
tmnxBsxStatAaAcctLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctLastChTime.setStatus('current')
tmnxBsxStatAaSubLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubLastChTime.setStatus('current')
tmnxBsxStatAaSubSdyLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyLastChTime.setStatus('current')
tmnxBsxStatIsaAaCfgLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatIsaAaCfgLastChTime.setStatus('current')
tmnxBsxPartAcctCfgLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxPartAcctCfgLastChTime.setStatus('current')
tmnxBsxStatTcaCfgTableLastCh = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatTcaCfgTableLastCh.setStatus('current')
tmnxBsxStatTcaPolcrCfgTableLstCh = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatTcaPolcrCfgTableLstCh.setStatus('current')
tmnxBsxStatTcaFtrCfgTableLastCh = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatTcaFtrCfgTableLastCh.setStatus('current')
tmnxBsxStatTcaFtrEnCfgTableLstCh = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatTcaFtrEnCfgTableLstCh.setStatus('current')
tmnxBsxAdmitDenyAcctTableLastCh = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAdmitDenyAcctTableLastCh.setStatus('current')
tmnxBsxStatAaAcctCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2), )
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgTable.setStatus('current')
tmnxBsxStatAaAcctCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgType"))
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgEntry.setStatus('current')
tmnxBsxStatAaAcctCfgType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 1), TmnxBsxStatAaAcctCfgType())
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgType.setStatus('current')
tmnxBsxStatAaAcctCfgCollStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgCollStats.setStatus('current')
tmnxBsxStatAaAcctCfgPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgPolicy.setStatus('current')
tmnxBsxStatAaAcctCfgAggrStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgAggrStats.setStatus('obsolete')
tmnxBsxStatAaAcctCfgAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 5), TmnxAdminState().clone('inService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgAdminState.setStatus('current')
tmnxBsxStatAaAcctCfgMaxThruStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgMaxThruStats.setStatus('current')
tmnxBsxStatAaAcctCfgRadiusPlcy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 7), TNamedItemOrEmpty()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgRadiusPlcy.setStatus('current')
tmnxBsxStatAaAcctCfgExTcpRetrans = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 8), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgExTcpRetrans.setStatus('current')
tmnxBsxStatAaAcctCfgRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgRowLastCh.setStatus('current')
tmnxBsxStatAaAcctCfgUMStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 10), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgUMStats.setStatus('current')
tmnxBsxStatAaAcctCfgAggrExpMeth = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 2, 1, 11), TmnxBsxAaStatExportMethod()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatAaAcctCfgAggrExpMeth.setStatus('current')
tmnxBsxStatAaSubTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3), )
if mibBuilder.loadTexts: tmnxBsxStatAaSubTable.setStatus('current')
tmnxBsxStatAaSubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubStatsInterval"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaType"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaName"))
if mibBuilder.loadTexts: tmnxBsxStatAaSubEntry.setStatus('current')
tmnxBsxAaSubscriberType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 1), TmnxBsxAaSubscriberType())
if mibBuilder.loadTexts: tmnxBsxAaSubscriberType.setStatus('current')
tmnxBsxAaSubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 2), TmnxBsxAaSubscriber())
if mibBuilder.loadTexts: tmnxBsxAaSubscriber.setStatus('current')
tmnxBsxStatAaType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 3), TmnxBsxAaStatType())
if mibBuilder.loadTexts: tmnxBsxStatAaType.setStatus('current')
tmnxBsxStatAaName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 4), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxStatAaName.setStatus('current')
tmnxBsxStatAaSubDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubDiscontTime.setStatus('current')
tmnxBsxStatAaSubOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 6), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubOctsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 7), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubPktsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 8), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubFlwsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 9), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubOctsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 10), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubPktsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 11), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubFlwsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 12), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubOctsAdmToSb.setStatus('current')
tmnxBsxStatAaSubPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 13), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubPktsAdmToSb.setStatus('current')
tmnxBsxStatAaSubFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 14), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubFlwsAdmToSb.setStatus('current')
tmnxBsxStatAaSubOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 15), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubOctsDnyToSb.setStatus('current')
tmnxBsxStatAaSubPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 16), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubPktsDnyToSb.setStatus('current')
tmnxBsxStatAaSubFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 17), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubFlwsDnyToSb.setStatus('current')
tmnxBsxStatAaSubTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 18), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubTermFlwDur.setStatus('current')
tmnxBsxStatAaSubTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 19), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubTermFlws.setStatus('current')
tmnxBsxStatAaSubShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 20), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubShrtDurFlws.setStatus('current')
tmnxBsxStatAaSubMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 21), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubMedDurFlws.setStatus('current')
tmnxBsxStatAaSubLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 22), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubLngDurFlws.setStatus('current')
tmnxBsxStatAaSubActFlwsFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 23), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubActFlwsFmSb.setStatus('current')
tmnxBsxStatAaSubActFlwsToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 24), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubActFlwsToSb.setStatus('current')
tmnxBsxStatAaSubHCOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 25), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCOctsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubHCPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 26), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCPktsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubHCFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 27), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCFlwsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubHCOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 28), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCOctsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubHCPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 29), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCPktsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubHCFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 30), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCFlwsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubHCOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 31), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCOctsAdmToSb.setStatus('current')
tmnxBsxStatAaSubHCPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 32), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCPktsAdmToSb.setStatus('current')
tmnxBsxStatAaSubHCFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 33), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCFlwsAdmToSb.setStatus('current')
tmnxBsxStatAaSubHCOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 34), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCOctsDnyToSb.setStatus('current')
tmnxBsxStatAaSubHCPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 35), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCPktsDnyToSb.setStatus('current')
tmnxBsxStatAaSubHCFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 36), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCFlwsDnyToSb.setStatus('current')
tmnxBsxStatAaSubHCTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 37), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCTermFlwDur.setStatus('current')
tmnxBsxStatAaSubHCTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 38), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCTermFlws.setStatus('current')
tmnxBsxStatAaSubHCShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 39), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCShrtDurFlws.setStatus('current')
tmnxBsxStatAaSubHCMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 40), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCMedDurFlws.setStatus('current')
tmnxBsxStatAaSubHCLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 3, 1, 41), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubHCLngDurFlws.setStatus('current')
tmnxBsxStatAaSubSdyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4), )
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyTable.setStatus('current')
tmnxBsxStatAaSubSdyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubStatsInterval"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaName"))
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyEntry.setStatus('current')
tmnxBsxStatAaSubSdyDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyDiscontTime.setStatus('current')
tmnxBsxStatAaSubSdyOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 2), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyOctsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubSdyPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyPktsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubSdyFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 4), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyFlwsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubSdyOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 5), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyOctsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubSdyPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyPktsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubSdyFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 7), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyFlwsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubSdyOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 8), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyOctsAdmToSb.setStatus('current')
tmnxBsxStatAaSubSdyPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyPktsAdmToSb.setStatus('current')
tmnxBsxStatAaSubSdyFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 10), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyFlwsAdmToSb.setStatus('current')
tmnxBsxStatAaSubSdyOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 11), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyOctsDnyToSb.setStatus('current')
tmnxBsxStatAaSubSdyPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyPktsDnyToSb.setStatus('current')
tmnxBsxStatAaSubSdyFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 13), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyFlwsDnyToSb.setStatus('current')
tmnxBsxStatAaSubSdyTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 14), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyTermFlwDur.setStatus('current')
tmnxBsxStatAaSubSdyTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 15), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyTermFlws.setStatus('current')
tmnxBsxStatAaSubSdyShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 16), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyShrtDurFlws.setStatus('current')
tmnxBsxStatAaSubSdyMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 17), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyMedDurFlws.setStatus('current')
tmnxBsxStatAaSubSdyLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 18), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyLngDurFlws.setStatus('current')
tmnxBsxStatAaSubSdyActFlwsFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 19), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyActFlwsFmSb.setStatus('current')
tmnxBsxStatAaSubSdyActFlwsToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 20), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyActFlwsToSb.setStatus('current')
tmnxBsxStatAaSubSdyHCOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 21), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCOctsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubSdyHCPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 22), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCPktsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubSdyHCFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 23), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCFlwsAdmFmSb.setStatus('current')
tmnxBsxStatAaSubSdyHCOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 24), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCOctsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubSdyHCPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 25), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCPktsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubSdyHCFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 26), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCFlwsDnyFmSb.setStatus('current')
tmnxBsxStatAaSubSdyHCOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 27), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCOctsAdmToSb.setStatus('current')
tmnxBsxStatAaSubSdyHCPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 28), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCPktsAdmToSb.setStatus('current')
tmnxBsxStatAaSubSdyHCFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 29), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCFlwsAdmToSb.setStatus('current')
tmnxBsxStatAaSubSdyHCOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 30), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCOctsDnyToSb.setStatus('current')
tmnxBsxStatAaSubSdyHCPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 31), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCPktsDnyToSb.setStatus('current')
tmnxBsxStatAaSubSdyHCFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 32), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCFlwsDnyToSb.setStatus('current')
tmnxBsxStatAaSubSdyHCTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 33), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCTermFlwDur.setStatus('current')
tmnxBsxStatAaSubSdyHCTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 34), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCTermFlws.setStatus('current')
tmnxBsxStatAaSubSdyHCShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 35), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCShrtDurFlws.setStatus('current')
tmnxBsxStatAaSubSdyHCMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 36), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCMedDurFlws.setStatus('current')
tmnxBsxStatAaSubSdyHCLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 4, 1, 37), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyHCLngDurFlws.setStatus('current')
tmnxBsxStatAaSubCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 5), )
if mibBuilder.loadTexts: tmnxBsxStatAaSubCfgTable.setStatus('current')
tmnxBsxStatAaSubCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaType"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaName"))
if mibBuilder.loadTexts: tmnxBsxStatAaSubCfgEntry.setStatus('current')
tmnxBsxStatAaSubCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 5, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatAaSubCfgRowStatus.setStatus('current')
tmnxBsxStatAaSubCfgExportMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 5, 1, 2), TmnxBsxAaStatExportMethod()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatAaSubCfgExportMethod.setStatus('current')
tmnxBsxStatAaSubSdyCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 6), )
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyCfgTable.setStatus('current')
tmnxBsxStatAaSubSdyCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 6, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"))
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyCfgEntry.setStatus('current')
tmnxBsxStatAaSubSdyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 6, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatAaSubSdyRowStatus.setStatus('current')
tmnxBsxStatAaTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7), )
if mibBuilder.loadTexts: tmnxBsxStatAaTable.setStatus('current')
tmnxBsxStatAaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaType"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaName"))
if mibBuilder.loadTexts: tmnxBsxStatAaEntry.setStatus('current')
tmnxBsxStatAaDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaDiscontTime.setStatus('current')
tmnxBsxStatAaOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 2), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaOctsAdmFmSb.setStatus('current')
tmnxBsxStatAaPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 3), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaPktsAdmFmSb.setStatus('current')
tmnxBsxStatAaFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 4), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaFlwsAdmFmSb.setStatus('current')
tmnxBsxStatAaOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 5), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaOctsDnyFmSb.setStatus('current')
tmnxBsxStatAaPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 6), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaPktsDnyFmSb.setStatus('current')
tmnxBsxStatAaFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 7), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaFlwsDnyFmSb.setStatus('current')
tmnxBsxStatAaOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 8), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaOctsAdmToSb.setStatus('current')
tmnxBsxStatAaPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaPktsAdmToSb.setStatus('current')
tmnxBsxStatAaFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 10), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaFlwsAdmToSb.setStatus('current')
tmnxBsxStatAaOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 11), Counter32()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaOctsDnyToSb.setStatus('current')
tmnxBsxStatAaPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 12), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaPktsDnyToSb.setStatus('current')
tmnxBsxStatAaFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 13), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaFlwsDnyToSb.setStatus('current')
tmnxBsxStatAaTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 14), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaTermFlwDur.setStatus('current')
tmnxBsxStatAaTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 15), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaTermFlws.setStatus('current')
tmnxBsxStatAaShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 16), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaShrtDurFlws.setStatus('current')
tmnxBsxStatAaMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 17), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaMedDurFlws.setStatus('current')
tmnxBsxStatAaLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 18), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaLngDurFlws.setStatus('current')
tmnxBsxStatAaActFlwsFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 19), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaActFlwsFmSb.setStatus('current')
tmnxBsxStatAaActFlwsToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 20), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaActFlwsToSb.setStatus('current')
tmnxBsxStatAaNumSubscribers = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 21), Gauge32()).setUnits('subscribers').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaNumSubscribers.setStatus('current')
tmnxBsxStatAaHCOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 22), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCOctsAdmFmSb.setStatus('current')
tmnxBsxStatAaHCPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 23), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCPktsAdmFmSb.setStatus('current')
tmnxBsxStatAaHCFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 24), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCFlwsAdmFmSb.setStatus('current')
tmnxBsxStatAaHCOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 25), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCOctsDnyFmSb.setStatus('current')
tmnxBsxStatAaHCPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 26), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCPktsDnyFmSb.setStatus('current')
tmnxBsxStatAaHCFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 27), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCFlwsDnyFmSb.setStatus('current')
tmnxBsxStatAaHCOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 28), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCOctsAdmToSb.setStatus('current')
tmnxBsxStatAaHCPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 29), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCPktsAdmToSb.setStatus('current')
tmnxBsxStatAaHCFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 30), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCFlwsAdmToSb.setStatus('current')
tmnxBsxStatAaHCOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 31), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCOctsDnyToSb.setStatus('current')
tmnxBsxStatAaHCPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 32), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCPktsDnyToSb.setStatus('current')
tmnxBsxStatAaHCFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 33), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCFlwsDnyToSb.setStatus('current')
tmnxBsxStatAaHCTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 34), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCTermFlwDur.setStatus('current')
tmnxBsxStatAaHCTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 35), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCTermFlws.setStatus('current')
tmnxBsxStatAaHCShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 36), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCShrtDurFlws.setStatus('current')
tmnxBsxStatAaHCMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 37), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCMedDurFlws.setStatus('current')
tmnxBsxStatAaHCLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 7, 1, 38), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaHCLngDurFlws.setStatus('current')
tmnxBsxStatAaAppFilterTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 8), )
if mibBuilder.loadTexts: tmnxBsxStatAaAppFilterTable.setStatus('current')
tmnxBsxStatAaAppFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 8, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterEntryId"))
if mibBuilder.loadTexts: tmnxBsxStatAaAppFilterEntry.setStatus('current')
tmnxBsxStatAaAppFilterHCFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 8, 1, 1), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaAppFilterHCFlows.setStatus('current')
tmnxBsxStatAaAppFilterFlowsLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 8, 1, 2), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaAppFilterFlowsLo.setStatus('current')
tmnxBsxStatAaAppFilterFlowsHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 8, 1, 3), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaAppFilterFlowsHi.setStatus('current')
tmnxBsxStatAaAppFilterFlowHCOctC = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 8, 1, 4), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaAppFilterFlowHCOctC.setStatus('current')
tmnxBsxStatAaAppFilterFlowOctCLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 8, 1, 5), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaAppFilterFlowOctCLo.setStatus('current')
tmnxBsxStatAaAppFilterFlowOctCHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 8, 1, 6), Counter32()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatAaAppFilterFlowOctCHi.setStatus('current')
tmnxBsxStatIsaAaCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 9), )
if mibBuilder.loadTexts: tmnxBsxStatIsaAaCfgTable.setStatus('current')
tmnxBsxStatIsaAaCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 9, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatIsaAaCfgType"))
if mibBuilder.loadTexts: tmnxBsxStatIsaAaCfgEntry.setStatus('current')
tmnxBsxStatIsaAaCfgType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 9, 1, 1), TmnxBsxStatIsaAaCfgType())
if mibBuilder.loadTexts: tmnxBsxStatIsaAaCfgType.setStatus('current')
tmnxBsxStatIsaAaCfgCollStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 9, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatIsaAaCfgCollStats.setStatus('current')
tmnxBsxStatIsaAaCfgPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 9, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxStatIsaAaCfgPolicy.setStatus('current')
tmnxBsxTrafStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10), )
if mibBuilder.loadTexts: tmnxBsxTrafStatTable.setStatus('current')
tmnxBsxTrafStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatIpProtocol"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatIpFamily"))
if mibBuilder.loadTexts: tmnxBsxTrafStatEntry.setStatus('current')
tmnxBsxTrafStatIpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("other", 1), ("tcp", 2), ("udp", 3))))
if mibBuilder.loadTexts: tmnxBsxTrafStatIpProtocol.setStatus('current')
tmnxBsxTrafStatIpFamily = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("ipv4", 1), ("ipv6", 2), ("dsLite", 3), ("sixRd", 4), ("teredo", 5), ("v4inv4Gtp", 6), ("v4inv6Gtp", 7), ("v6inv4Gtp", 8), ("v6inv6Gtp", 9))))
if mibBuilder.loadTexts: tmnxBsxTrafStatIpFamily.setStatus('current')
tmnxBsxTrafStatDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatDiscontTime.setStatus('current')
tmnxBsxTrafStatOctsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 4), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatOctsAdmFmSb.setStatus('current')
tmnxBsxTrafStatPktsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 5), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatPktsAdmFmSb.setStatus('current')
tmnxBsxTrafStatFlwsAdmFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 6), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatFlwsAdmFmSb.setStatus('current')
tmnxBsxTrafStatOctsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 7), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatOctsDnyFmSb.setStatus('current')
tmnxBsxTrafStatPktsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 8), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatPktsDnyFmSb.setStatus('current')
tmnxBsxTrafStatFlwsDnyFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 9), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatFlwsDnyFmSb.setStatus('current')
tmnxBsxTrafStatOctsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 10), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatOctsAdmToSb.setStatus('current')
tmnxBsxTrafStatPktsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 11), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatPktsAdmToSb.setStatus('current')
tmnxBsxTrafStatFlwsAdmToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 12), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatFlwsAdmToSb.setStatus('current')
tmnxBsxTrafStatOctsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 13), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatOctsDnyToSb.setStatus('current')
tmnxBsxTrafStatPktsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 14), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatPktsDnyToSb.setStatus('current')
tmnxBsxTrafStatFlwsDnyToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 15), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatFlwsDnyToSb.setStatus('current')
tmnxBsxTrafStatTermFlwDur = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 16), Counter64()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatTermFlwDur.setStatus('current')
tmnxBsxTrafStatTermFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 17), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatTermFlws.setStatus('current')
tmnxBsxTrafStatShrtDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 18), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatShrtDurFlws.setStatus('current')
tmnxBsxTrafStatMedDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 19), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatMedDurFlws.setStatus('current')
tmnxBsxTrafStatLngDurFlws = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 20), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatLngDurFlws.setStatus('current')
tmnxBsxTrafStatActFlwsFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 21), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatActFlwsFmSb.setStatus('current')
tmnxBsxTrafStatActFlwsToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 10, 1, 22), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTrafStatActFlwsToSb.setStatus('current')
tmnxBsxPartAcctCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 11), )
if mibBuilder.loadTexts: tmnxBsxPartAcctCfgTable.setStatus('current')
tmnxBsxPartAcctCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 11, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"))
if mibBuilder.loadTexts: tmnxBsxPartAcctCfgEntry.setStatus('current')
tmnxBsxPartAcctCfgRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 11, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxPartAcctCfgRowLastCh.setStatus('current')
tmnxBsxPartAcctCfgCollStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 11, 1, 2), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxPartAcctCfgCollStats.setStatus('current')
tmnxBsxPartAcctCfgPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 11, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxPartAcctCfgPolicy.setStatus('current')
tmnxBsxPartAcctCfgTrafStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 11, 1, 4), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxPartAcctCfgTrafStats.setStatus('current')
tmnxBsxPartAcctCfgTetherStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 11, 1, 5), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxPartAcctCfgTetherStats.setStatus('current')
tmnxBsxAaSubUsageMonTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 12), )
if mibBuilder.loadTexts: tmnxBsxAaSubUsageMonTable.setStatus('current')
tmnxBsxAaSubUsageMonEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 12, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubStatsInterval"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaType"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaName"))
if mibBuilder.loadTexts: tmnxBsxAaSubUsageMonEntry.setStatus('current')
tmnxBsxAaSubUMOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 12, 1, 1), TmnxBsxUmOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubUMOperStatus.setStatus('current')
tmnxBsxAaSubUMToSubGrantStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 12, 1, 2), TmnxBsxUmGrantStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubUMToSubGrantStatus.setStatus('current')
tmnxBsxAaSubUMFmSubGrantStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 12, 1, 3), TmnxBsxUmGrantStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubUMFmSubGrantStatus.setStatus('current')
tmnxBsxAaSubUMBothGrantStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 12, 1, 4), TmnxBsxUmGrantStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubUMBothGrantStatus.setStatus('current')
tmnxBsxAaSubUMToSubGrantCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 12, 1, 5), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubUMToSubGrantCredit.setStatus('current')
tmnxBsxAaSubUMFmSubGrantCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 12, 1, 6), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubUMFmSubGrantCredit.setStatus('current')
tmnxBsxAaSubUMBothGrantCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 12, 1, 7), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubUMBothGrantCredit.setStatus('current')
tmnxBsxAaSubUMToSubUsedCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 12, 1, 8), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubUMToSubUsedCredit.setStatus('current')
tmnxBsxAaSubUMFmSubUsedCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 12, 1, 9), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubUMFmSubUsedCredit.setStatus('current')
tmnxBsxAaSubUMBothUsedCredit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 12, 1, 10), Counter64()).setUnits('octets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaSubUMBothUsedCredit.setStatus('current')
tmnxBsxDnsIpCacheStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 13), )
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheStatTable.setStatus('current')
tmnxBsxDnsIpCacheStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 13, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheName"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheStatEntry.setStatus('current')
tmnxBsxDnsIpCacheStatDnsResp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 13, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheStatDnsResp.setStatus('current')
tmnxBsxDnsIpCacheStatDomMtch = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 13, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheStatDomMtch.setStatus('current')
tmnxBsxDnsIpCacheStatDomSerMtch = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 13, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheStatDomSerMtch.setStatus('current')
tmnxBsxDnsIpCacheStatAlarmClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 13, 1, 4), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheStatAlarmClear.setStatus('current')
tmnxBsxDnsIpCacheStatEntrAdd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 13, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheStatEntrAdd.setStatus('current')
tmnxBsxDnsIpCacheStatEntrRmvd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 13, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheStatEntrRmvd.setStatus('current')
tmnxBsxDnsIpCacheStatFullCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 13, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheStatFullCnt.setStatus('current')
tmnxBsxDnsIpCacheStatHitCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 13, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheStatHitCnt.setStatus('current')
tmnxBsxDnsIpCacheStatMissCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 13, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheStatMissCnt.setStatus('current')
tmnxBsxDnsIpCacheStatDiscntTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 13, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheStatDiscntTime.setStatus('current')
tmnxBsxDnsIpCacheStatPrxyMtchCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 13, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheStatPrxyMtchCnt.setStatus('current')
tmnxBsxUrlListStatusTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15), )
if mibBuilder.loadTexts: tmnxBsxUrlListStatusTable.setStatus('current')
tmnxBsxUrlListStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListName"))
if mibBuilder.loadTexts: tmnxBsxUrlListStatusEntry.setStatus('current')
tmnxBsxUrlListStatusOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15, 1, 1), TmnxOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListStatusOperState.setStatus('current')
tmnxBsxUrlListStatusOperFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15, 1, 2), TmnxBsxUrlListFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListStatusOperFlags.setStatus('current')
tmnxBsxUrlListStatusNumEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15, 1, 3), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListStatusNumEntries.setStatus('current')
tmnxBsxUrlListStatusUpgAttemptTm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListStatusUpgAttemptTm.setStatus('current')
tmnxBsxUrlListStatusUpgSuccessTm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListStatusUpgSuccessTm.setStatus('current')
tmnxBsxUrlListStatusUpgErrorLine = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-1, 2147483647))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListStatusUpgErrorLine.setStatus('current')
tmnxBsxUrlListStatusUpgErrReason = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15, 1, 7), TmnxBsxUrlListFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListStatusUpgErrReason.setStatus('current')
tmnxBsxUrlListStatusUpgErrDetail = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15, 1, 8), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListStatusUpgErrDetail.setStatus('current')
tmnxBsxUrlListStatusUpgLineSkipd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15, 1, 9), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListStatusUpgLineSkipd.setStatus('current')
tmnxBsxUrlListStatusUrlDeployed = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15, 1, 10), TmnxDisplayStringURL()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListStatusUrlDeployed.setStatus('current')
tmnxBsxUrlListStatusUrlAttempted = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15, 1, 11), TmnxDisplayStringURL()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListStatusUrlAttempted.setStatus('current')
tmnxBsxUrlListStatusIsCfgUrlDpld = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15, 1, 12), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListStatusIsCfgUrlDpld.setStatus('current')
tmnxBsxUrlListStatusNumChars = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15, 1, 13), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListStatusNumChars.setStatus('current')
tmnxBsxUrlListStatusUpgInProgres = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15, 1, 14), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListStatusUpgInProgres.setStatus('current')
tmnxBsxUrlListRegExprNumEntries = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 15, 1, 15), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListRegExprNumEntries.setStatus('current')
tmnxBsxGtpStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16), )
if mibBuilder.loadTexts: tmnxBsxGtpStatsTable.setStatus('current')
tmnxBsxGtpStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxGtpStatsEntry.setStatus('current')
tmnxBsxGtpStatsDiscntTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsDiscntTime.setStatus('current')
tmnxBsxGtpStatsPkPermittedFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsPkPermittedFmSb.setStatus('current')
tmnxBsxGtpStatsPkPermittedToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsPkPermittedToSb.setStatus('current')
tmnxBsxGtpStatsPkPrmtNoFltrFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsPkPrmtNoFltrFmSb.setStatus('current')
tmnxBsxGtpStatsPkPrmtNoFltrToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsPkPrmtNoFltrToSb.setStatus('current')
tmnxBsxGtpStatsPkDndUdpLenFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsPkDndUdpLenFmSb.setStatus('current')
tmnxBsxGtpStatsPkDndUdpLenToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsPkDndUdpLenToSb.setStatus('current')
tmnxBsxGtpStatsPkDndGtpLenFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsPkDndGtpLenFmSb.setStatus('current')
tmnxBsxGtpStatsPkDndGtpLenToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsPkDndGtpLenToSb.setStatus('current')
tmnxBsxGtpStatsPkDndGtpVerFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsPkDndGtpVerFmSb.setStatus('current')
tmnxBsxGtpStatsPkDndGtpVerToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsPkDndGtpVerToSb.setStatus('current')
tmnxBsxGtpStatsPkDndFlPlcrFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsPkDndFlPlcrFmSb.setStatus('current')
tmnxBsxGtpStatsPkDndFlPlcrToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsPkDndFlPlcrToSb.setStatus('current')
tmnxBsxGtpStatsPkDndGtpFltrFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsPkDndGtpFltrFmSb.setStatus('current')
tmnxBsxGtpStatsPkDndGtpFltrToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsPkDndGtpFltrToSb.setStatus('current')
tmnxBsxGtpStatsPkDndPlcyOthrFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsPkDndPlcyOthrFmSb.setStatus('current')
tmnxBsxGtpStatsPkDndPlcyOthrToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 16, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpStatsPkDndPlcyOthrToSb.setStatus('current')
tmnxBsxGtpFltrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17), )
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsTable.setStatus('current')
tmnxBsxGtpFltrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrName"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsEntry.setStatus('current')
tmnxBsxGtpFltrStatsDiscntTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsDiscntTime.setStatus('current')
tmnxBsxGtpFltrStatsPkPermitted = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsPkPermitted.setStatus('current')
tmnxBsxGtpFltrStatsPkDndPayldLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsPkDndPayldLen.setStatus('current')
tmnxBsxGtpFltrStatsPkDndMsgType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsPkDndMsgType.setStatus('current')
tmnxBsxGtpFltrStatsPkDndMandHdr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsPkDndMandHdr.setStatus('current')
tmnxBsxGtpFltrStatsPkDndExtHdr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsPkDndExtHdr.setStatus('current')
tmnxBsxGtpFltrStatsPkDndInfoElem = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsPkDndInfoElem.setStatus('current')
tmnxBsxGtpFltrStatsPkDndV2MsgTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsPkDndV2MsgTyp.setStatus('current')
tmnxBsxGtpFltrStatsPkDndImsiApn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsPkDndImsiApn.setStatus('current')
tmnxBsxGtpFltrStatsPkDndInvSeqNo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsPkDndInvSeqNo.setStatus('current')
tmnxBsxGtpFltrStatsPkDndInvTeid = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsPkDndInvTeid.setStatus('current')
tmnxBsxGtpFltrStatsPkDndInvSubIp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsPkDndInvSubIp.setStatus('current')
tmnxBsxGtpFltrStatsPkDndGtpInGtp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsPkDndGtpInGtp.setStatus('current')
tmnxBsxGtpFltrStatsPkDndMandIE = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsPkDndMandIE.setStatus('current')
tmnxBsxGtpFltrStatsPkDndTunDbRes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsPkDndTunDbRes.setStatus('current')
tmnxBsxGtpFltrStatsPkDndTunEpLmt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 17, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrStatsPkDndTunEpLmt.setStatus('current')
tmnxBsxSctpFltrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 18), )
if mibBuilder.loadTexts: tmnxBsxSctpFltrStatsTable.setStatus('current')
tmnxBsxSctpFltrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 18, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrName"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxSctpFltrStatsEntry.setStatus('current')
tmnxBsxSctpFltrStatsDiscntTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 18, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSctpFltrStatsDiscntTime.setStatus('current')
tmnxBsxSctpFltrStatsPkPermitted = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 18, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSctpFltrStatsPkPermitted.setStatus('current')
tmnxBsxSctpFltrStatsPkDndMalfd = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 18, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSctpFltrStatsPkDndMalfd.setStatus('current')
tmnxBsxSctpFltrStatsPkDndPpidOOR = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 18, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSctpFltrStatsPkDndPpidOOR.setStatus('current')
tmnxBsxSctpFltrStatsPkDndPpidVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 18, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSctpFltrStatsPkDndPpidVal.setStatus('current')
tmnxBsxSyslogStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 19), )
if mibBuilder.loadTexts: tmnxBsxSyslogStatsTable.setStatus('current')
tmnxBsxSyslogStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 19, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxEventLogName"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxSyslogStatsEntry.setStatus('current')
tmnxBsxSyslogStatsDiscntTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 19, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSyslogStatsDiscntTime.setStatus('current')
tmnxBsxSyslogStatsEventsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 19, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSyslogStatsEventsSent.setStatus('current')
tmnxBsxSyslogStatsEventsFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 19, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSyslogStatsEventsFailed.setStatus('current')
tmnxBsxStatTcaCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 20), )
if mibBuilder.loadTexts: tmnxBsxStatTcaCfgTable.setStatus('current')
tmnxBsxStatTcaCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 20, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgDirection"))
if mibBuilder.loadTexts: tmnxBsxStatTcaCfgEntry.setStatus('current')
tmnxBsxStatTcaCfgType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("errorDrop", 1), ("fragmentDropOutOfOrder", 2), ("fragmentDropAll", 3), ("overloadDrop", 4), ("gtpSanityDrop", 5))))
if mibBuilder.loadTexts: tmnxBsxStatTcaCfgType.setStatus('current')
tmnxBsxStatTcaCfgDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 20, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fromSub", 1), ("toSub", 2))))
if mibBuilder.loadTexts: tmnxBsxStatTcaCfgDirection.setStatus('current')
tmnxBsxStatTcaCfgRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 20, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatTcaCfgRowLastCh.setStatus('current')
tmnxBsxStatTcaCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 20, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatTcaCfgRowStatus.setStatus('current')
tmnxBsxStatTcaCfgHiWmark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 20, 1, 5), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatTcaCfgHiWmark.setStatus('current')
tmnxBsxStatTcaCfgLoWmark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 20, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatTcaCfgLoWmark.setStatus('current')
tmnxBsxStatTcaPolcrCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 21), )
if mibBuilder.loadTexts: tmnxBsxStatTcaPolcrCfgTable.setStatus('current')
tmnxBsxStatTcaPolcrCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 21, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgDirection"))
if mibBuilder.loadTexts: tmnxBsxStatTcaPolcrCfgEntry.setStatus('current')
tmnxBsxStatTcaPolcrCfgRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 21, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatTcaPolcrCfgRowLastCh.setStatus('current')
tmnxBsxStatTcaPolcrCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 21, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatTcaPolcrCfgRowStatus.setStatus('current')
tmnxBsxStatTcaPolcrCfgHiWmark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 21, 1, 3), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatTcaPolcrCfgHiWmark.setStatus('current')
tmnxBsxStatTcaPolcrCfgLoWmark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 21, 1, 4), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatTcaPolcrCfgLoWmark.setStatus('current')
tmnxBsxStatTcaFtrCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 22), )
if mibBuilder.loadTexts: tmnxBsxStatTcaFtrCfgTable.setStatus('current')
tmnxBsxStatTcaFtrCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 22, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgFilterType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgFilterName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgFilterWmarkType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgDirection"))
if mibBuilder.loadTexts: tmnxBsxStatTcaFtrCfgEntry.setStatus('current')
tmnxBsxStatTcaCfgFilterType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 22, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("gtpFilter", 1), ("sctpFilter", 2), ("sessionFilter", 3))))
if mibBuilder.loadTexts: tmnxBsxStatTcaCfgFilterType.setStatus('current')
tmnxBsxStatTcaCfgFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 22, 1, 2), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxStatTcaCfgFilterName.setStatus('current')
tmnxBsxStatTcaCfgFilterWmarkType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 22, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("payloadOutOfRange", 1), ("idOutOfRange", 2), ("defaultAction", 3), ("headerSanity", 4), ("packetSanity", 5), ("gtpv2DefAction", 6), ("gtpImsiApnDefAction", 7), ("gtpTeidValidity", 8), ("gtpSeqNumValidity", 9), ("gtpSrcIpAddrValidity", 10), ("gtpMissingMandIE", 11), ("gtpInGtp", 12), ("gtpTunDbRes", 13), ("gtpDefTunEpLimit", 14))))
if mibBuilder.loadTexts: tmnxBsxStatTcaCfgFilterWmarkType.setStatus('current')
tmnxBsxStatTcaFtrCfgRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 22, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatTcaFtrCfgRowLastCh.setStatus('current')
tmnxBsxStatTcaFtrCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 22, 1, 5), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatTcaFtrCfgRowStatus.setStatus('current')
tmnxBsxStatTcaFtrCfgHiWmark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 22, 1, 6), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatTcaFtrCfgHiWmark.setStatus('current')
tmnxBsxStatTcaFtrCfgLoWmark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 22, 1, 7), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatTcaFtrCfgLoWmark.setStatus('current')
tmnxBsxStatTcaFtrEnCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 23), )
if mibBuilder.loadTexts: tmnxBsxStatTcaFtrEnCfgTable.setStatus('current')
tmnxBsxStatTcaFtrEnCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 23, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgFilterType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgFilterName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaFtrEnCfgEntryId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgDirection"))
if mibBuilder.loadTexts: tmnxBsxStatTcaFtrEnCfgEntry.setStatus('current')
tmnxBsxStatTcaFtrEnCfgEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 23, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tmnxBsxStatTcaFtrEnCfgEntryId.setStatus('current')
tmnxBsxStatTcaFtrEnCfgRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 23, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatTcaFtrEnCfgRowLastCh.setStatus('current')
tmnxBsxStatTcaFtrEnCfgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 23, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatTcaFtrEnCfgRowStatus.setStatus('current')
tmnxBsxStatTcaFtrEnCfgHiWmark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 23, 1, 4), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatTcaFtrEnCfgHiWmark.setStatus('current')
tmnxBsxStatTcaFtrEnCfgLoWmark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 23, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxStatTcaFtrEnCfgLoWmark.setStatus('current')
tmnxBsxAdmitDenyAcctTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 24), )
if mibBuilder.loadTexts: tmnxBsxAdmitDenyAcctTable.setStatus('current')
tmnxBsxAdmitDenyAcctEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 24, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"))
if mibBuilder.loadTexts: tmnxBsxAdmitDenyAcctEntry.setStatus('current')
tmnxBsxAdmitDenyAcctRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 24, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAdmitDenyAcctRowLastCh.setStatus('current')
tmnxBsxAdmitDenyAcctPolicy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 24, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxAdmitDenyAcctPolicy.setStatus('current')
tmnxBsxAdmitDenyAcctCollStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 24, 1, 3), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxAdmitDenyAcctCollStats.setStatus('current')
tmnxBsxAdmitDenyAcctSctpFtrStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 24, 1, 4), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxAdmitDenyAcctSctpFtrStats.setStatus('current')
tmnxBsxAdmitDenyAcctGtpFtrStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 24, 1, 5), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxAdmitDenyAcctGtpFtrStats.setStatus('current')
tmnxBsxAdmitDenyAcctSessFtrStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 24, 1, 6), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxAdmitDenyAcctSessFtrStats.setStatus('current')
tmnxBsxAdmitDenyAcctPolcrStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 24, 1, 7), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxAdmitDenyAcctPolcrStats.setStatus('current')
tmnxBsxAdmitDenyAcctPolcrResrcs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 24, 1, 8), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxAdmitDenyAcctPolcrResrcs.setStatus('current')
tmnxBsxAdmitDenyAcctTcpValStats = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 24, 1, 9), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxAdmitDenyAcctTcpValStats.setStatus('current')
tmnxBsxTcaStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 25), )
if mibBuilder.loadTexts: tmnxBsxTcaStatsTable.setStatus('current')
tmnxBsxTcaStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 25, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgDirection"))
if mibBuilder.loadTexts: tmnxBsxTcaStatsEntry.setStatus('current')
tmnxBsxTcaStatsTimeLastRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 25, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcaStatsTimeLastRaised.setStatus('current')
tmnxBsxTcaStatsTimeLastCleared = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 25, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcaStatsTimeLastCleared.setStatus('current')
tmnxBsxTcaStatsTcaState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 25, 1, 3), TmnxBsxTcaState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcaStatsTcaState.setStatus('current')
tmnxBsxTcaStatsTcaTrigType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 25, 1, 4), TmnxBsxTcaTriggerType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcaStatsTcaTrigType.setStatus('current')
tmnxBsxTcaPolcrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 26), )
if mibBuilder.loadTexts: tmnxBsxTcaPolcrStatsTable.setStatus('current')
tmnxBsxTcaPolcrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 26, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgDirection"))
if mibBuilder.loadTexts: tmnxBsxTcaPolcrStatsEntry.setStatus('current')
tmnxBsxTcaPolcrStatsTmLastRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 26, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcaPolcrStatsTmLastRaised.setStatus('current')
tmnxBsxTcaPolcrStatsTmLastCleard = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 26, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcaPolcrStatsTmLastCleard.setStatus('current')
tmnxBsxTcaPolcrStatsTcaState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 26, 1, 3), TmnxBsxTcaState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcaPolcrStatsTcaState.setStatus('current')
tmnxBsxTcaPolcrStatsTcaTrigType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 26, 1, 4), TmnxBsxTcaTriggerType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcaPolcrStatsTcaTrigType.setStatus('current')
tmnxBsxTcaFtrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 27), )
if mibBuilder.loadTexts: tmnxBsxTcaFtrStatsTable.setStatus('current')
tmnxBsxTcaFtrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 27, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgFilterType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgFilterName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgFilterWmarkType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgDirection"))
if mibBuilder.loadTexts: tmnxBsxTcaFtrStatsEntry.setStatus('current')
tmnxBsxTcaFtrStatsTimeLastRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 27, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcaFtrStatsTimeLastRaised.setStatus('current')
tmnxBsxTcaFtrStatsTimeLastCleard = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 27, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcaFtrStatsTimeLastCleard.setStatus('current')
tmnxBsxTcaFtrStatsTcaState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 27, 1, 3), TmnxBsxTcaState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcaFtrStatsTcaState.setStatus('current')
tmnxBsxTcaFtrStatsTcaTrigType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 27, 1, 4), TmnxBsxTcaTriggerType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcaFtrStatsTcaTrigType.setStatus('current')
tmnxBsxTcaFtrEnStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 28), )
if mibBuilder.loadTexts: tmnxBsxTcaFtrEnStatsTable.setStatus('current')
tmnxBsxTcaFtrEnStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 28, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgFilterType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgFilterName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaFtrEnCfgEntryId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgDirection"))
if mibBuilder.loadTexts: tmnxBsxTcaFtrEnStatsEntry.setStatus('current')
tmnxBsxTcaFtrEnStatsTmLastRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 28, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcaFtrEnStatsTmLastRaised.setStatus('current')
tmnxBsxTcaFtrEnStatsTmLastCleard = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 28, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcaFtrEnStatsTmLastCleard.setStatus('current')
tmnxBsxTcaFtrEnStatsTcaState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 28, 1, 3), TmnxBsxTcaState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcaFtrEnStatsTcaState.setStatus('current')
tmnxBsxTcaFtrEnStatsTcaTrigType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 28, 1, 4), TmnxBsxTcaTriggerType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcaFtrEnStatsTcaTrigType.setStatus('current')
tmnxBsxStatsFlowAttrTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 29), )
if mibBuilder.loadTexts: tmnxBsxStatsFlowAttrTable.setStatus('current')
tmnxBsxStatsFlowAttrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 29, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowAttr"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxFlowAttrConfBin"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxStatsFlowAttrEntry.setStatus('current')
tmnxBsxFlowAttrConfBin = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 29, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 99)))
if mibBuilder.loadTexts: tmnxBsxFlowAttrConfBin.setStatus('current')
tmnxBsxStatFlowAttrConfBinName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 29, 1, 2), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatFlowAttrConfBinName.setStatus('current')
tmnxBsxFlowAttrStatsDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 29, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxFlowAttrStatsDiscontTime.setStatus('current')
tmnxBsxStatFlowAttrOctsFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 29, 1, 4), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatFlowAttrOctsFmSb.setStatus('current')
tmnxBsxStatFlowAttrPktsFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 29, 1, 5), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatFlowAttrPktsFmSb.setStatus('current')
tmnxBsxStatFlowAttrFlwsFmSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 29, 1, 6), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatFlowAttrFlwsFmSb.setStatus('current')
tmnxBsxStatFlowAttrOctsToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 29, 1, 7), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatFlowAttrOctsToSb.setStatus('current')
tmnxBsxStatFlowAttrPktsToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 29, 1, 8), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatFlowAttrPktsToSb.setStatus('current')
tmnxBsxStatFlowAttrFlwsToSb = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 29, 1, 9), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxStatFlowAttrFlwsToSb.setStatus('current')
tmnxBsxTlsTrafficStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30), )
if mibBuilder.loadTexts: tmnxBsxTlsTrafficStatsTable.setStatus('current')
tmnxBsxTlsTrafficStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxTlsTrafficStatsEntry.setStatus('current')
tmnxBsxTlsStatDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatDiscontTime.setStatus('current')
tmnxBsxTlsStatQuicOctsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 2), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicOctsAdm.setStatus('current')
tmnxBsxTlsStatQuicOctsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 3), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicOctsDny.setStatus('current')
tmnxBsxTlsStatQuicPktsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 4), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicPktsAdm.setStatus('current')
tmnxBsxTlsStatQuicPktsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 5), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicPktsDny.setStatus('current')
tmnxBsxTlsStatQuicFlwsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 6), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicFlwsAdm.setStatus('current')
tmnxBsxTlsStatQuicFlwsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 7), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicFlwsDny.setStatus('current')
tmnxBsxTlsStatQuicEsniOctsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 8), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicEsniOctsAdm.setStatus('current')
tmnxBsxTlsStatQuicEsniOctsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 9), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicEsniOctsDny.setStatus('current')
tmnxBsxTlsStatQuicEsniPktsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 10), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicEsniPktsAdm.setStatus('current')
tmnxBsxTlsStatQuicEsniPktsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 11), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicEsniPktsDny.setStatus('current')
tmnxBsxTlsStatQuicEsniFlwsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 12), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicEsniFlwsAdm.setStatus('current')
tmnxBsxTlsStatQuicEsniFlwsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 13), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicEsniFlwsDny.setStatus('current')
tmnxBsxTlsStatQuicExistOctsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 14), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicExistOctsAdm.setStatus('current')
tmnxBsxTlsStatQuicExistOctsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 15), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicExistOctsDny.setStatus('current')
tmnxBsxTlsStatQuicExistPktsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 16), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicExistPktsAdm.setStatus('current')
tmnxBsxTlsStatQuicExistPktsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 17), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicExistPktsDny.setStatus('current')
tmnxBsxTlsStatQuicExistFlwsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 18), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicExistFlwsAdm.setStatus('current')
tmnxBsxTlsStatQuicExistFlwsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 19), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicExistFlwsDny.setStatus('current')
tmnxBsxTlsStatQuicUnknwnOctsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 20), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicUnknwnOctsAdm.setStatus('current')
tmnxBsxTlsStatQuicUnknwnOctsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 21), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicUnknwnOctsDny.setStatus('current')
tmnxBsxTlsStatQuicUnknwnPktsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 22), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicUnknwnPktsAdm.setStatus('current')
tmnxBsxTlsStatQuicUnknwnPktsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 23), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicUnknwnPktsDny.setStatus('current')
tmnxBsxTlsStatQuicUnknwnFlwsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 24), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicUnknwnFlwsAdm.setStatus('current')
tmnxBsxTlsStatQuicUnknwnFlwsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 25), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatQuicUnknwnFlwsDny.setStatus('current')
tmnxBsxTlsStatTls10OctsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 26), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls10OctsAdm.setStatus('current')
tmnxBsxTlsStatTls10OctsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 27), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls10OctsDny.setStatus('current')
tmnxBsxTlsStatTls10PktsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 28), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls10PktsAdm.setStatus('current')
tmnxBsxTlsStatTls10PktsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 29), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls10PktsDny.setStatus('current')
tmnxBsxTlsStatTls10FlwsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 30), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls10FlwsAdm.setStatus('current')
tmnxBsxTlsStatTls10FlwsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 31), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls10FlwsDny.setStatus('current')
tmnxBsxTlsStatTls11OctsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 32), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls11OctsAdm.setStatus('current')
tmnxBsxTlsStatTls11OctsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 33), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls11OctsDny.setStatus('current')
tmnxBsxTlsStatTls11PktsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 34), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls11PktsAdm.setStatus('current')
tmnxBsxTlsStatTls11PktsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 35), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls11PktsDny.setStatus('current')
tmnxBsxTlsStatTls11FlwsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 36), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls11FlwsAdm.setStatus('current')
tmnxBsxTlsStatTls11FlwsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 37), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls11FlwsDny.setStatus('current')
tmnxBsxTlsStatTls12OctsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 38), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls12OctsAdm.setStatus('current')
tmnxBsxTlsStatTls12OctsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 39), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls12OctsDny.setStatus('current')
tmnxBsxTlsStatTls12PktsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 40), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls12PktsAdm.setStatus('current')
tmnxBsxTlsStatTls12PktsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 41), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls12PktsDny.setStatus('current')
tmnxBsxTlsStatTls12FlwsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 42), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls12FlwsAdm.setStatus('current')
tmnxBsxTlsStatTls12FlwsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 43), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls12FlwsDny.setStatus('current')
tmnxBsxTlsStatTls13OctsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 44), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls13OctsAdm.setStatus('current')
tmnxBsxTlsStatTls13OctsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 45), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls13OctsDny.setStatus('current')
tmnxBsxTlsStatTls13PktsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 46), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls13PktsAdm.setStatus('current')
tmnxBsxTlsStatTls13PktsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 47), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls13PktsDny.setStatus('current')
tmnxBsxTlsStatTls13FlwsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 48), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls13FlwsAdm.setStatus('current')
tmnxBsxTlsStatTls13FlwsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 49), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls13FlwsDny.setStatus('current')
tmnxBsxTlsStatTls13EsniOctsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 50), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls13EsniOctsAdm.setStatus('current')
tmnxBsxTlsStatTls13EsniOctsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 51), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls13EsniOctsDny.setStatus('current')
tmnxBsxTlsStatTls13EsniPktsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 52), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls13EsniPktsAdm.setStatus('current')
tmnxBsxTlsStatTls13EsniPktsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 53), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls13EsniPktsDny.setStatus('current')
tmnxBsxTlsStatTls13EsniFlwsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 54), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls13EsniFlwsAdm.setStatus('current')
tmnxBsxTlsStatTls13EsniFlwsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 55), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTls13EsniFlwsDny.setStatus('current')
tmnxBsxTlsStatTlsExistOctsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 56), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTlsExistOctsAdm.setStatus('current')
tmnxBsxTlsStatTlsExistOctsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 57), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTlsExistOctsDny.setStatus('current')
tmnxBsxTlsStatTlsExistPktsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 58), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTlsExistPktsAdm.setStatus('current')
tmnxBsxTlsStatTlsExistPktsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 59), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTlsExistPktsDny.setStatus('current')
tmnxBsxTlsStatTlsExistFlwsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 60), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTlsExistFlwsAdm.setStatus('current')
tmnxBsxTlsStatTlsExistFlwsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 61), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTlsExistFlwsDny.setStatus('current')
tmnxBsxTlsStatTlsUnknownOctsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 62), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTlsUnknownOctsAdm.setStatus('current')
tmnxBsxTlsStatTlsUnknownOctsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 63), Counter64()).setUnits('bytes').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTlsUnknownOctsDny.setStatus('current')
tmnxBsxTlsStatTlsUnknownPktsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 64), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTlsUnknownPktsAdm.setStatus('current')
tmnxBsxTlsStatTlsUnknownPktsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 65), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTlsUnknownPktsDny.setStatus('current')
tmnxBsxTlsStatTlsUnknownFlwsAdm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 66), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTlsUnknownFlwsAdm.setStatus('current')
tmnxBsxTlsStatTlsUnknownFlwsDny = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 3, 30, 1, 67), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTlsStatTlsUnknownFlwsDny.setStatus('current')
tmnxBsxNotifObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4))
tmnxBsxNotifyIsaAaGroupIndex = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 1), TmnxBsxIsaAaGroupIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyIsaAaGroupIndex.setStatus('current')
tmnxBsxNotifyActiveMda = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 2), TmnxHwIndexOrZero()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyActiveMda.setStatus('current')
tmnxBsxNotifyActionStatus = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 3), TmnxBsxActionStatus()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyActionStatus.setStatus('current')
tmnxBsxNotifyAaSubscriberType = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 4), TmnxBsxAaSubscriberType()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyAaSubscriberType.setStatus('current')
tmnxBsxNotifyAaSubscriberName = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 5), TmnxBsxAaSubscriber()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyAaSubscriberName.setStatus('current')
tmnxBsxNotifyAaSubAcctLossReason = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 6), TmnxBsxAaSubAcctLossReason()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyAaSubAcctLossReason.setStatus('current')
tmnxBsxNotifyAaGrpPartIndex = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 7), TmnxBsxAaGrpPartIndex()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyAaGrpPartIndex.setStatus('current')
tmnxBsxNotifyTransitIpPolicyId = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 8), TmnxBsxTransitIpPolicyId()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyTransitIpPolicyId.setStatus('current')
tmnxBsxNotifyRadiusCoAAuditState = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("start", 1), ("end", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyRadiusCoAAuditState.setStatus('current')
tmnxBsxNotifyReason = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 10), DisplayString()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyReason.setStatus('current')
tmnxBsxNotifySubFailedAction = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("create", 1), ("modify", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifySubFailedAction.setStatus('current')
tmnxBsxNotifyTcaCfgType = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("errorDrop", 1), ("fragmentDropOutOfOrder", 2), ("fragmentDropAll", 3), ("overloadDrop", 4), ("gtpSanityDrop", 5)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyTcaCfgType.setStatus('current')
tmnxBsxNotifyTcaCfgDirection = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("fromSub", 1), ("toSub", 2)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyTcaCfgDirection.setStatus('current')
tmnxBsxNotifyTcaPolicerName = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 14), TNamedItem()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyTcaPolicerName.setStatus('current')
tmnxBsxNotifyTcaCfgFilterType = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 15), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("gtpFilter", 1), ("sctpFilter", 2), ("sessionFilter", 3)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyTcaCfgFilterType.setStatus('current')
tmnxBsxNotifyTcaCfgFilterName = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 16), TNamedItem()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyTcaCfgFilterName.setStatus('current')
tmnxBsxNotifyTcaCfgFltrWmarkType = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 17), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))).clone(namedValues=NamedValues(("payloadOutOfRange", 1), ("idOutOfRange", 2), ("defaultAction", 3), ("headerSanity", 4), ("packetSanity", 5), ("gtpv2DefAction", 6), ("gtpImsiApnDefAction", 7), ("gtpTeidValidity", 8), ("gtpSeqNumValidity", 9), ("gtpSrcIpAddrValidity", 10), ("gtpMissingMandIE", 11), ("gtpInGtp", 12), ("gtpTunDbRes", 13), ("gtpDefTunEpLimit", 14)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyTcaCfgFltrWmarkType.setStatus('current')
tmnxBsxNotifyTcaFtrEnCfgEntryId = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyTcaFtrEnCfgEntryId.setStatus('current')
tmnxBsxNotifyTcpValTcaName = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 19), TNamedItem()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyTcpValTcaName.setStatus('current')
tmnxBsxNotifyTcpValTcaWmarkType = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("tcpVal", 1)))).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyTcpValTcaWmarkType.setStatus('current')
tmnxBsxNotifyCertProfileName = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 21), TNamedItem()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyCertProfileName.setStatus('current')
tmnxBsxNotifyCertProfOperState = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 22), TmnxOperState()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyCertProfOperState.setStatus('current')
tmnxBsxNotifyIsaSlotNum = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 23), Integer32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyIsaSlotNum.setStatus('current')
tmnxBsxNotifyIsaMdaNum = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 4, 24), Unsigned32()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: tmnxBsxNotifyIsaMdaNum.setStatus('current')
tmnxBsxCflowdObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5))
tmnxBsxCflowdScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 1))
tmnxBsxCflowdLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdLastChangeTime.setStatus('current')
tmnxBsxCflowdCollLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdCollLastChangeTime.setStatus('current')
tmnxBsxCflowdPerfLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdPerfLastChangeTime.setStatus('current')
tmnxBsxCflowdExpLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpLastChangeTime.setStatus('current')
tmnxBsxCflowdPerfExpLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdPerfExpLastChTime.setStatus('current')
tmnxBsxCflowdDirectExpLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdDirectExpLastChTime.setStatus('current')
tmnxBsxCflowdDirExpAddrLastChTim = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdDirExpAddrLastChTim.setStatus('current')
tmnxBsxCflowdTemplateLastChTim = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 1, 8), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdTemplateLastChTim.setStatus('current')
tmnxBsxCflowdTmplFieldLastChTim = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 1, 9), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdTmplFieldLastChTim.setStatus('current')
tmnxBsxCflowdTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2), )
if mibBuilder.loadTexts: tmnxBsxCflowdTable.setStatus('current')
tmnxBsxCflowdEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"))
if mibBuilder.loadTexts: tmnxBsxCflowdEntry.setStatus('current')
tmnxBsxCflowdRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdRowLastChange.setStatus('current')
tmnxBsxCflowdAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2, 1, 2), TmnxAdminState().clone('outOfService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdAdminState.setStatus('current')
tmnxBsxCflowdVolRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdVolRate.setStatus('current')
tmnxBsxCflowdTemplateRetransmit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 600)).clone(600)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdTemplateRetransmit.setStatus('current')
tmnxBsxCflowdDirectExportVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2, 1, 5), VlanIdOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdDirectExportVlan.setStatus('current')
tmnxBsxCflowdExpOvdMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2, 1, 6), TmnxBsxCflowdExpOvdMode().clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdExpOvdMode.setStatus('current')
tmnxBsxCflowdExpOvdPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2, 1, 7), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 8))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdExpOvdPrefix.setStatus('current')
tmnxBsxCflowdAes128EncrptKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2, 1, 8), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdAes128EncrptKey.setStatus('current')
tmnxBsxCflowdAes256EncrptKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 2, 1, 9), OctetString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(32, 32), )).clone(hexValue="")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdAes256EncrptKey.setStatus('current')
tmnxBsxCflowdCollTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3), )
if mibBuilder.loadTexts: tmnxBsxCflowdCollTable.setStatus('current')
tmnxBsxCflowdCollEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollAddressType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollAddress"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollPort"))
if mibBuilder.loadTexts: tmnxBsxCflowdCollEntry.setStatus('current')
tmnxBsxCflowdCollAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxBsxCflowdCollAddressType.setStatus('current')
tmnxBsxCflowdCollAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxBsxCflowdCollAddress.setStatus('current')
tmnxBsxCflowdCollPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 3), TTcpUdpPort().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tmnxBsxCflowdCollPort.setStatus('current')
tmnxBsxCflowdCollRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdCollRowStatus.setStatus('current')
tmnxBsxCflowdCollRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdCollRowLastChange.setStatus('current')
tmnxBsxCflowdCollDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 6), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdCollDescription.setStatus('current')
tmnxBsxCflowdCollAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 7), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdCollAdminState.setStatus('current')
tmnxBsxCflowdCollOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 8), TmnxOperState().clone('outOfService')).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdCollOperState.setStatus('current')
tmnxBsxCflowdCollVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 3, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 10)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdCollVersion.setStatus('current')
tmnxBsxCflowdPerfTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 4), )
if mibBuilder.loadTexts: tmnxBsxCflowdPerfTable.setStatus('current')
tmnxBsxCflowdPerfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfMeasType"))
if mibBuilder.loadTexts: tmnxBsxCflowdPerfEntry.setStatus('current')
tmnxBsxCflowdPerfMeasType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 4, 1, 1), TmnxBsxCflowdPerfMeasType())
if mibBuilder.loadTexts: tmnxBsxCflowdPerfMeasType.setStatus('current')
tmnxBsxCflowdPerfRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 4, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdPerfRowLastChange.setStatus('current')
tmnxBsxCflowdPerfFlowRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 4, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdPerfFlowRate.setStatus('current')
tmnxBsxCflowdPerfFlowRate2 = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1000))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdPerfFlowRate2.setStatus('current')
tmnxBsxCflowdExpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 5), )
if mibBuilder.loadTexts: tmnxBsxCflowdExpTable.setStatus('current')
tmnxBsxCflowdExpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpType"))
if mibBuilder.loadTexts: tmnxBsxCflowdExpEntry.setStatus('current')
tmnxBsxCflowdExpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 5, 1, 1), TmnxBsxCflowdExpType())
if mibBuilder.loadTexts: tmnxBsxCflowdExpType.setStatus('current')
tmnxBsxCflowdExpRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 5, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpRowLastChange.setStatus('current')
tmnxBsxCflowdExpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 5, 1, 3), TmnxAdminState().clone('outOfService')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: tmnxBsxCflowdExpAdminState.setStatus('current')
tmnxBsxCflowdPerfExpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 6), )
if mibBuilder.loadTexts: tmnxBsxCflowdPerfExpTable.setStatus('current')
tmnxBsxCflowdPerfExpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 6, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfMeasType"))
if mibBuilder.loadTexts: tmnxBsxCflowdPerfExpEntry.setStatus('current')
tmnxBsxCflowdPerfExpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 6, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdPerfExpRowStatus.setStatus('current')
tmnxBsxCflowdPerfExpRowLastChnge = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 6, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdPerfExpRowLastChnge.setStatus('current')
tmnxBsxCflowdPerfExpRateNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 6, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdPerfExpRateNum.setStatus('current')
tmnxBsxCflowdStatusTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7), )
if mibBuilder.loadTexts: tmnxBsxCflowdStatusTable.setStatus('current')
tmnxBsxCflowdStatusEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpType"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxCflowdStatusEntry.setStatus('current')
tmnxBsxCflowdStatusDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusDiscontTime.setStatus('current')
tmnxBsxCflowdStatusActFlowsCurr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 2), Gauge32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusActFlowsCurr.setStatus('current')
tmnxBsxCflowdStatusRecRateCurr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 3), Gauge32()).setUnits('records per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusRecRateCurr.setStatus('current')
tmnxBsxCflowdStatusPktRateCurr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 4), Gauge32()).setUnits('packets per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusPktRateCurr.setStatus('current')
tmnxBsxCflowdStatusRecReported = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 5), Counter32()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusRecReported.setStatus('current')
tmnxBsxCflowdStatusHCRecReported = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 6), Counter64()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusHCRecReported.setStatus('current')
tmnxBsxCflowdStatusRecDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 7), Counter32()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusRecDropped.setStatus('current')
tmnxBsxCflowdStatusHCRecDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 8), Counter64()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusHCRecDropped.setStatus('current')
tmnxBsxCflowdStatusPktsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 9), Counter32()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusPktsSent.setStatus('current')
tmnxBsxCflowdStatusHCPktsSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 10), Counter64()).setUnits('packets').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusHCPktsSent.setStatus('current')
tmnxBsxCflowdStatusFlowsNoRes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 11), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusFlowsNoRes.setStatus('current')
tmnxBsxCflowdStatusHCFlowsNoRes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 12), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusHCFlowsNoRes.setStatus('current')
tmnxBsxCflowdStatusHCUSupSSRCSt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusHCUSupSSRCSt.setStatus('current')
tmnxBsxCflowdStatusUSupSSRCStLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusUSupSSRCStLo.setStatus('current')
tmnxBsxCflowdStatusUSupSSRCStHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 7, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdStatusUSupSSRCStHi.setStatus('current')
tmnxBsxCflowdCollStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 8), )
if mibBuilder.loadTexts: tmnxBsxCflowdCollStatTable.setStatus('current')
tmnxBsxCflowdCollStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 8, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollAddressType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollAddress"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollPort"))
if mibBuilder.loadTexts: tmnxBsxCflowdCollStatEntry.setStatus('current')
tmnxBsxCflowdCollStatDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 8, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdCollStatDiscontTime.setStatus('current')
tmnxBsxCflowdCollStatRecSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 8, 1, 2), Counter32()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdCollStatRecSent.setStatus('current')
tmnxBsxCflowdCollStatHCRecSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 8, 1, 3), Counter64()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdCollStatHCRecSent.setStatus('current')
tmnxBsxCflowdExpStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9), )
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatTable.setStatus('current')
tmnxBsxCflowdExpStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpType"))
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatEntry.setStatus('current')
tmnxBsxCflowdExpStatDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatDiscontTime.setStatus('current')
tmnxBsxCflowdExpStatRecReport = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 2), Counter32()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatRecReport.setStatus('current')
tmnxBsxCflowdExpStatHCRecReport = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 3), Counter64()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatHCRecReport.setStatus('current')
tmnxBsxCflowdExpStatRecDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 4), Counter32()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatRecDropped.setStatus('current')
tmnxBsxCflowdExpStatHCRecDropped = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 5), Counter64()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatHCRecDropped.setStatus('current')
tmnxBsxCflowdExpStatFlowsNoRes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 6), Counter32()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatFlowsNoRes.setStatus('current')
tmnxBsxCflowdExpStatHCFlowsNoRes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 7), Counter64()).setUnits('flows').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatHCFlowsNoRes.setStatus('current')
tmnxBsxCflowdExpStatHCUSupSSRCSt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatHCUSupSSRCSt.setStatus('current')
tmnxBsxCflowdExpStatUSupSSRCStLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatUSupSSRCStLo.setStatus('current')
tmnxBsxCflowdExpStatUSupSSRCStHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 9, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdExpStatUSupSSRCStHi.setStatus('current')
tmnxBsxCflowdDirectExpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 10), )
if mibBuilder.loadTexts: tmnxBsxCflowdDirectExpTable.setStatus('current')
tmnxBsxCflowdDirectExpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 10, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirectExpIndex"))
if mibBuilder.loadTexts: tmnxBsxCflowdDirectExpEntry.setStatus('current')
tmnxBsxCflowdDirectExpIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 10, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tmnxBsxCflowdDirectExpIndex.setStatus('current')
tmnxBsxCflowdDirectExpRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 10, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdDirectExpRowStatus.setStatus('current')
tmnxBsxCflowdDirectExpRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 10, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdDirectExpRowLastCh.setStatus('current')
tmnxBsxCflowdDirectExpDescrption = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 10, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdDirectExpDescrption.setStatus('current')
tmnxBsxCflowdDirectExpVersion = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 10, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 10)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdDirectExpVersion.setStatus('current')
tmnxBsxCflowdDirExpAddrTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 11), )
if mibBuilder.loadTexts: tmnxBsxCflowdDirExpAddrTable.setStatus('current')
tmnxBsxCflowdDirExpAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 11, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirectExpIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirExpAddrType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirExpAddrAddress"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirExpAddrPort"))
if mibBuilder.loadTexts: tmnxBsxCflowdDirExpAddrEntry.setStatus('current')
tmnxBsxCflowdDirExpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 11, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxBsxCflowdDirExpAddrType.setStatus('current')
tmnxBsxCflowdDirExpAddrAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 11, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxBsxCflowdDirExpAddrAddress.setStatus('current')
tmnxBsxCflowdDirExpAddrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 11, 1, 3), TTcpUdpPort().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tmnxBsxCflowdDirExpAddrPort.setStatus('current')
tmnxBsxCflowdDirExpAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 11, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdDirExpAddrRowStatus.setStatus('current')
tmnxBsxCflowdDirExpAddrRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 11, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdDirExpAddrRowLastCh.setStatus('current')
tmnxBsxCflowdDirExpAddrAdmnState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 11, 1, 6), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxCflowdDirExpAddrAdmnState.setStatus('current')
tmnxBsxCflowdDirExpAddrOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 11, 1, 7), TmnxOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdDirExpAddrOperState.setStatus('current')
tmnxBsxCflowdDirExpStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 12), )
if mibBuilder.loadTexts: tmnxBsxCflowdDirExpStatTable.setStatus('current')
tmnxBsxCflowdDirExpStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 12, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirectExpIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirExpAddrType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirExpAddrAddress"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirExpAddrPort"))
if mibBuilder.loadTexts: tmnxBsxCflowdDirExpStatEntry.setStatus('current')
tmnxBsxCflowdDirExpStatDscntTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 12, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdDirExpStatDscntTime.setStatus('current')
tmnxBsxCflowdDirExpStatRecSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 5, 12, 1, 2), Counter64()).setUnits('records').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxCflowdDirExpStatRecSent.setStatus('current')
tmnxBsxOvrdObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6))
tmnxBsxOvrdScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 1))
tmnxBsxOvrdAaSubLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubLastChTime.setStatus('current')
tmnxBsxOvrdAaSubCharLastChTm = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubCharLastChTm.setStatus('current')
tmnxBsxOvrdAaSubTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 2), )
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubTable.setStatus('current')
tmnxBsxOvrdAaSubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"))
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubEntry.setStatus('current')
tmnxBsxOvrdAaSubRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 2, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubRowStatus.setStatus('current')
tmnxBsxOvrdAaSubRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 2, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubRowLastCh.setStatus('current')
tmnxBsxOvrdAaSubCharTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 3), )
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubCharTable.setStatus('current')
tmnxBsxOvrdAaSubCharEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriber"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxAsoCharName"))
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubCharEntry.setStatus('current')
tmnxBsxOvrdAaSubCharRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 3, 1, 1), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubCharRowStatus.setStatus('current')
tmnxBsxOvrdAaSubCharRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 3, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubCharRowLastCh.setStatus('current')
tmnxBsxOvrdAaSubCharValName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 6, 3, 1, 3), TNamedItem()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxOvrdAaSubCharValName.setStatus('current')
tmnxBsxTransitObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7))
tmnxBsxTransitScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 1))
tmnxBsxTransitIpPolicyLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyLastChTime.setStatus('current')
tmnxBsxTransIpPlcySubLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcySubLastChTime.setStatus('current')
tmnxBsxTransIpPlcyAddrLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcyAddrLastChTime.setStatus('current')
tmnxBsxTransPrefPlcyLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefPlcyLastChTime.setStatus('current')
tmnxBsxTransPrefSubLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSubLastChTime.setStatus('current')
tmnxBsxTransPrefEntryLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntryLastChTime.setStatus('current')
tmnxBsxTransitIpPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2), )
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyTable.setStatus('current')
tmnxBsxTransitIpPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyId"))
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyEntry.setStatus('current')
tmnxBsxTransitIpPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 1), TmnxBsxTransitIpPolicyId())
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyId.setStatus('current')
tmnxBsxTransitIpPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyRowStatus.setStatus('current')
tmnxBsxTransitIpPolicyRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyRowLastCh.setStatus('current')
tmnxBsxTransitIpPolicyDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyDesc.setStatus('current')
tmnxBsxTransitIpPolicyDefAppProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 5), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyDefAppProf.setStatus('current')
tmnxBsxTransitIpPolicySubIdPlcy = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 6), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicySubIdPlcy.setStatus('current')
tmnxBsxTransitIpPolicyRadius = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 7), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyRadius.setStatus('current')
tmnxBsxTransitIpPolicyRadAuthPlc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 8), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyRadAuthPlc.setStatus('current')
tmnxBsxTransitIpPolicyDhcp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 9), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyDhcp.setStatus('current')
tmnxBsxTransitIpPolicyIPv6PfxLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 10), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyIPv6PfxLen.setStatus('current')
tmnxBsxTransitIpPolicySubsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 11), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicySubsCount.setStatus('current')
tmnxBsxTransitIpPolicyIPv4EntCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyIPv4EntCnt.setStatus('current')
tmnxBsxTransitIpPolicyIPv6EntCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyIPv6EntCnt.setStatus('current')
tmnxBsxTransitIpPolicySeenIp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 14), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicySeenIp.setStatus('current')
tmnxBsxTransitIpPolicyAutoCreate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 15), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyAutoCreate.setStatus('current')
tmnxBsxTransitIpPolicySeenIpRad = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 16), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicySeenIpRad.setStatus('current')
tmnxBsxTransitIpPolicyDiameter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 17), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyDiameter.setStatus('current')
tmnxBsxTransitIpPolicyDiamAppPlc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 18), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyDiamAppPlc.setStatus('current')
tmnxBsxTransitIpPolicyAutoInact = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 2, 1, 19), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyAutoInact.setStatus('current')
tmnxBsxTransitIpPolicySubTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 3), )
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicySubTable.setStatus('current')
tmnxBsxTransitIpPolicySubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicySubscriber"))
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicySubEntry.setStatus('current')
tmnxBsxTransitIpPolicySubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 3, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicySubscriber.setStatus('current')
tmnxBsxTransIpPlcySubRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcySubRowStatus.setStatus('current')
tmnxBsxTransIpPlcySubRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcySubRowLastCh.setStatus('current')
tmnxBsxTransIpPlcySubAppProfNm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 3, 1, 4), TNamedItem()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcySubAppProfNm.setStatus('current')
tmnxBsxTransIpPlcySubRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 3, 1, 5), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcySubRefCount.setStatus('current')
tmnxBsxTransitIpPolicyAddrTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 4), )
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyAddrTable.setStatus('current')
tmnxBsxTransitIpPolicyAddrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyAddrType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyAddr"))
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyAddrEntry.setStatus('current')
tmnxBsxTransitIpPolicyAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyAddrType.setStatus('current')
tmnxBsxTransitIpPolicyAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 4, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxBsxTransitIpPolicyAddr.setStatus('current')
tmnxBsxTransIpPlcyAddrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcyAddrRowStatus.setStatus('current')
tmnxBsxTransIpPlcyAddrRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 4, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcyAddrRowLastCh.setStatus('current')
tmnxBsxTransIpPlcyAddrSubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 4, 1, 5), TNamedItem()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransIpPlcyAddrSubscriber.setStatus('current')
tmnxBsxTransitIpSumTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 5), )
if mibBuilder.loadTexts: tmnxBsxTransitIpSumTable.setStatus('current')
tmnxBsxTransitIpSumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicySubscriber"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyAddrType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyAddr"))
if mibBuilder.loadTexts: tmnxBsxTransitIpSumEntry.setStatus('current')
tmnxBsxTransitIpSumUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 5, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpSumUpdateTime.setStatus('current')
tmnxBsxTransitIpSumParentSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 5, 1, 2), TmnxBsxAaSubscriberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpSumParentSubType.setStatus('current')
tmnxBsxTransitIpSumParentSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 5, 1, 3), TmnxBsxAaSubscriber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpSumParentSub.setStatus('current')
tmnxBsxTransitIpSumAppProfNm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 5, 1, 4), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpSumAppProfNm.setStatus('current')
tmnxBsxTransitIpSumIpOriginMask = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 5, 1, 5), TmnxBsxTransitSubOrigin()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransitIpSumIpOriginMask.setStatus('current')
tmnxBsxTransPrefPolicyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6), )
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyTable.setStatus('current')
tmnxBsxTransPrefPolicyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyId"))
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyEntry.setStatus('current')
tmnxBsxTransPrefPolicyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1, 1), TmnxBsxTransPrefPolicyId())
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyId.setStatus('current')
tmnxBsxTransPrefPolicyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyRowStatus.setStatus('current')
tmnxBsxTransPrefPolicyRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyRowLastCh.setStatus('current')
tmnxBsxTransPrefPolicyDesc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyDesc.setStatus('current')
tmnxBsxTransPrefPolicySubsCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicySubsCount.setStatus('current')
tmnxBsxTransPrefPolicyEntCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyEntCount.setStatus('current')
tmnxBsxTransPrefPolicyIPv4EntCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyIPv4EntCnt.setStatus('current')
tmnxBsxTransPrefPolicyIPv6EntCnt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 6, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefPolicyIPv6EntCnt.setStatus('current')
tmnxBsxTransPrefSubTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 7), )
if mibBuilder.loadTexts: tmnxBsxTransPrefSubTable.setStatus('current')
tmnxBsxTransPrefSubEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 7, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSubscriber"))
if mibBuilder.loadTexts: tmnxBsxTransPrefSubEntry.setStatus('current')
tmnxBsxTransPrefSubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 7, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxTransPrefSubscriber.setStatus('current')
tmnxBsxTransPrefSubRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefSubRowStatus.setStatus('current')
tmnxBsxTransPrefSubRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 7, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSubRowLastCh.setStatus('current')
tmnxBsxTransPrefSubIsRemote = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 7, 1, 4), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefSubIsRemote.setStatus('current')
tmnxBsxTransPrefSubAppProfNm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 7, 1, 5), TNamedItem()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefSubAppProfNm.setStatus('current')
tmnxBsxTransPrefSubRefCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 7, 1, 6), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSubRefCount.setStatus('current')
tmnxBsxTransPrefTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8), )
if mibBuilder.loadTexts: tmnxBsxTransPrefTable.setStatus('current')
tmnxBsxTransPrefEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntryId"))
if mibBuilder.loadTexts: tmnxBsxTransPrefEntry.setStatus('current')
tmnxBsxTransPrefEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: tmnxBsxTransPrefEntryId.setStatus('current')
tmnxBsxTransPrefEntryRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntryRowStatus.setStatus('current')
tmnxBsxTransPrefEntryRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntryRowLastCh.setStatus('current')
tmnxBsxTransPrefEntrySubAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 4), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntrySubAddrType.setStatus('current')
tmnxBsxTransPrefEntrySubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntrySubAddr.setStatus('current')
tmnxBsxTransPrefEntrySubAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 6), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntrySubAddrLen.setStatus('current')
tmnxBsxTransPrefEntryNetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 7), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntryNetAddrType.setStatus('current')
tmnxBsxTransPrefEntryNetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 8), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntryNetAddr.setStatus('current')
tmnxBsxTransPrefEntryNetAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 9), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntryNetAddrLen.setStatus('current')
tmnxBsxTransPrefEntrySubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 8, 1, 10), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTransPrefEntrySubscriber.setStatus('current')
tmnxBsxTransPrefSumTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9), )
if mibBuilder.loadTexts: tmnxBsxTransPrefSumTable.setStatus('current')
tmnxBsxTransPrefSumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSubscriber"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntryId"))
if mibBuilder.loadTexts: tmnxBsxTransPrefSumEntry.setStatus('current')
tmnxBsxTransPrefSumUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumUpdateTime.setStatus('current')
tmnxBsxTransPrefSumSubAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 2), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumSubAddrType.setStatus('current')
tmnxBsxTransPrefSumSubAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumSubAddr.setStatus('current')
tmnxBsxTransPrefSumSubAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 4), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumSubAddrLen.setStatus('current')
tmnxBsxTransPrefSumNetAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumNetAddrType.setStatus('current')
tmnxBsxTransPrefSumNetAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumNetAddr.setStatus('current')
tmnxBsxTransPrefSumNetAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 7), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumNetAddrLen.setStatus('current')
tmnxBsxTransPrefSumParentSubType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 8), TmnxBsxAaSubscriberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumParentSubType.setStatus('current')
tmnxBsxTransPrefSumParentSub = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 9), TmnxBsxAaSubscriber()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumParentSub.setStatus('current')
tmnxBsxTransPrefSumAppProfNm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 7, 9, 1, 10), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTransPrefSumAppProfNm.setStatus('current')
tmnxBsxHttpRedirObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8))
tmnxBsxHttpRedirScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 1))
tmnxBsxHttpRedirErrLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrLastChTime.setStatus('current')
tmnxBsxHttpRedirErrCodeLastCh = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrCodeLastCh.setStatus('current')
tmnxBsxHttpRedirLastCh = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRedirLastCh.setStatus('current')
tmnxBsxHttpRedirErrTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2), )
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrTable.setStatus('current')
tmnxBsxHttpRedirErrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrName"))
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrEntry.setStatus('current')
tmnxBsxHttpRedirErrName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrName.setStatus('current')
tmnxBsxHttpRedirErrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrRowStatus.setStatus('current')
tmnxBsxHttpRedirErrRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrRowLastCh.setStatus('current')
tmnxBsxHttpRedirErrEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1, 4), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrEnabled.setStatus('current')
tmnxBsxHttpRedirErrDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrDescription.setStatus('current')
tmnxBsxHttpRedirErrTemplateId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrTemplateId.setStatus('current')
tmnxBsxHttpRedirErrHttpHost = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1, 7), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrHttpHost.setStatus('current')
tmnxBsxHttpRedirErrParticipantId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 2, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrParticipantId.setStatus('current')
tmnxBsxHttpRedirErrCodeTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 3), )
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrCodeTable.setStatus('current')
tmnxBsxHttpRedirErrCodeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrCode"))
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrCodeEntry.setStatus('current')
tmnxBsxHttpRedirErrCode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 3, 1, 1), Unsigned32())
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrCode.setStatus('current')
tmnxBsxHttpRedirErrCodeRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrCodeRowStatus.setStatus('current')
tmnxBsxHttpRedirErrCodeRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrCodeRowLastCh.setStatus('current')
tmnxBsxHttpRedirErrorCodeMsgSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 3, 1, 4), Unsigned32().clone(1024)).setUnits('octets').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirErrorCodeMsgSize.setStatus('current')
tmnxBsxHttpRdStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4), )
if mibBuilder.loadTexts: tmnxBsxHttpRdStatTable.setStatus('current')
tmnxBsxHttpRdStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrCode"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxHttpRdStatEntry.setStatus('current')
tmnxBsxHttpRdStatDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatDiscontTime.setStatus('current')
tmnxBsxHttpRdStatHCRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatHCRedir.setStatus('current')
tmnxBsxHttpRdStatRedirLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatRedirLo.setStatus('current')
tmnxBsxHttpRdStatRedirHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatRedirHi.setStatus('current')
tmnxBsxHttpRdStatHCSizeExceeded = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatHCSizeExceeded.setStatus('current')
tmnxBsxHttpRdStatSizeExceededLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatSizeExceededLo.setStatus('current')
tmnxBsxHttpRdStatSizeExceededHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatSizeExceededHi.setStatus('current')
tmnxBsxHttpRdStatHCOutOfResource = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatHCOutOfResource.setStatus('current')
tmnxBsxHttpRdStatOutOfResourceLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatOutOfResourceLo.setStatus('current')
tmnxBsxHttpRdStatOutOfResourceHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatOutOfResourceHi.setStatus('current')
tmnxBsxHttpRdStatHCNotRedirFType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatHCNotRedirFType.setStatus('current')
tmnxBsxHttpRdStatNotRedirFTypeLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatNotRedirFTypeLo.setStatus('current')
tmnxBsxHttpRdStatNotRedirFTypeHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatNotRedirFTypeHi.setStatus('current')
tmnxBsxHttpRdStatHCNotRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatHCNotRedir.setStatus('current')
tmnxBsxHttpRdStatNotRedirLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatNotRedirLo.setStatus('current')
tmnxBsxHttpRdStatNotRedirHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRdStatNotRedirHi.setStatus('current')
tmnxBsxHttpRedirTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5), )
if mibBuilder.loadTexts: tmnxBsxHttpRedirTable.setStatus('current')
tmnxBsxHttpRedirEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirName"))
if mibBuilder.loadTexts: tmnxBsxHttpRedirEntry.setStatus('current')
tmnxBsxHttpRedirName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxHttpRedirName.setStatus('current')
tmnxBsxHttpRedirRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirRowStatus.setStatus('current')
tmnxBsxHttpRedirRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpRedirRowLastCh.setStatus('current')
tmnxBsxHttpRedirEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 4), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirEnabled.setStatus('current')
tmnxBsxHttpRedirDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirDescription.setStatus('current')
tmnxBsxHttpRedirTemplateId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirTemplateId.setStatus('current')
tmnxBsxHttpRedirHttpHost = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 7), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirHttpHost.setStatus('current')
tmnxBsxHttpRedirTcpReset = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 8), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirTcpReset.setStatus('current')
tmnxBsxHttpRedirCaptivePortVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 9), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirCaptivePortVlan.setStatus('current')
tmnxBsxHttpRedirCapHttpsEnbld = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 10), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirCapHttpsEnbld.setStatus('obsolete')
tmnxBsxHttpRedirHttpsRedirEnbld = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 5, 1, 11), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpRedirHttpsRedirEnbld.setStatus('current')
tmnxBsxHttpPcyRdStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6), )
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatTable.setStatus('current')
tmnxBsxHttpPcyRdStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirName"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatEntry.setStatus('current')
tmnxBsxHttpPcyRdStatDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatDiscontTime.setStatus('current')
tmnxBsxHttpPcyRdStatHCRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatHCRedir.setStatus('current')
tmnxBsxHttpPcyRdStatRedirLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatRedirLo.setStatus('current')
tmnxBsxHttpPcyRdStatRedirHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatRedirHi.setStatus('current')
tmnxBsxHttpPcyRdStatHCOutOfRes = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatHCOutOfRes.setStatus('current')
tmnxBsxHttpPcyRdStatOutOfResLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatOutOfResLo.setStatus('current')
tmnxBsxHttpPcyRdStatOutOfResHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatOutOfResHi.setStatus('current')
tmnxBsxHttpPcyRdStatHCNotRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatHCNotRedir.setStatus('current')
tmnxBsxHttpPcyRdStatNotRedirLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatNotRedirLo.setStatus('current')
tmnxBsxHttpPcyRdStatNotRedirHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatNotRedirHi.setStatus('current')
tmnxBsxHttpPcyRdStatTcpResets = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatTcpResets.setStatus('current')
tmnxBsxHttpPcyRdStatConfigError = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 8, 6, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpPcyRdStatConfigError.setStatus('current')
tmnxBsxStaticDataObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9))
tmnxBsxStaticObjScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 1))
tmnxBsxTListTableLastUpdateT = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTListTableLastUpdateT.setStatus('current')
tmnxBsxTListAttribTableLUpdateT = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTListAttribTableLUpdateT.setStatus('current')
tmnxBsxTListTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 2), )
if mibBuilder.loadTexts: tmnxBsxTListTable.setStatus('current')
tmnxBsxTListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTListName"))
if mibBuilder.loadTexts: tmnxBsxTListEntry.setStatus('current')
tmnxBsxTListName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxTListName.setStatus('current')
tmnxBsxTListRowLastUpdateT = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 2, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTListRowLastUpdateT.setStatus('current')
tmnxBsxTListDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 2, 1, 3), TItemDescription()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTListDescription.setStatus('current')
tmnxBsxTListAttribTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 3), )
if mibBuilder.loadTexts: tmnxBsxTListAttribTable.setStatus('current')
tmnxBsxTListAttribEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTListName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTListAttribName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTListAttribSet"))
if mibBuilder.loadTexts: tmnxBsxTListAttribEntry.setStatus('current')
tmnxBsxTListAttribName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 3, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxTListAttribName.setStatus('current')
tmnxBsxTListAttribSet = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 3, 1, 2), Unsigned32())
if mibBuilder.loadTexts: tmnxBsxTListAttribSet.setStatus('current')
tmnxBsxTListAttribRowLastUpdateT = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTListAttribRowLastUpdateT.setStatus('current')
tmnxBsxTListAttribType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 3, 1, 4), TmnxBsxTListAttribType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTListAttribType.setStatus('current')
tmnxBsxTListAttribValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 9, 3, 1, 5), TmnxBsxTListAttribValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTListAttribValue.setStatus('current')
tmnxBsxRedundancyObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10))
tmnxBsxRedundancyObjScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 1))
tmnxBsxAarpTableLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpTableLastChTime.setStatus('current')
tmnxBsxAarpInstTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2), )
if mibBuilder.loadTexts: tmnxBsxAarpInstTable.setStatus('current')
tmnxBsxAarpInstEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstId"))
if mibBuilder.loadTexts: tmnxBsxAarpInstEntry.setStatus('current')
tmnxBsxAarpInstId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 1), TmnxBsxAarpId())
if mibBuilder.loadTexts: tmnxBsxAarpInstId.setStatus('current')
tmnxBsxAarpInstRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstRowStatus.setStatus('current')
tmnxBsxAarpInstLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpInstLastCh.setStatus('current')
tmnxBsxAarpInstDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstDescription.setStatus('current')
tmnxBsxAarpInstPeerIpType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 5), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerIpType.setStatus('current')
tmnxBsxAarpInstPeerIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerIpAddr.setStatus('current')
tmnxBsxAarpInstPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(100)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstPriority.setStatus('current')
tmnxBsxAarpInstAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 8), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstAdminState.setStatus('current')
tmnxBsxAarpInstOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 9), TmnxOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpInstOperState.setStatus('current')
tmnxBsxAarpInstState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 10), TmnxBsxAarpInstState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpInstState.setStatus('current')
tmnxBsxAarpInstOperFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 11), TmnxBsxAarpInstOperFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpInstOperFlags.setStatus('current')
tmnxBsxAarpInstPeerPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 12), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerPriority.setStatus('current')
tmnxBsxAarpInstPeerState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 13), TmnxBsxAarpInstState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerState.setStatus('current')
tmnxBsxAarpInstPeerOperFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 14), TmnxBsxAarpInstOperFlags()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerOperFlags.setStatus('current')
tmnxBsxAarpInstPeerSubRefType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 15), TmnxBsxAaSubscriberType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerSubRefType.setStatus('current')
tmnxBsxAarpInstPeerEPSapPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 16), TmnxPortID().clone(503316480)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerEPSapPortId.setStatus('current')
tmnxBsxAarpInstPeerEPSapEncap = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 17), TmnxEncapVal()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerEPSapEncap.setStatus('current')
tmnxBsxAarpInstPeerEPSapEncType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 18), TmnxPortEncapType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerEPSapEncType.setStatus('current')
tmnxBsxAarpInstPeerEPSdpBindId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 19), SdpBindId().clone(hexValue="0000000000000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstPeerEPSdpBindId.setStatus('current')
tmnxBsxAarpInstMasterSelectMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 2, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("minimizeSwitchovers", 1), ("interChassisEfficiency", 2), ("priorityBasedBalance", 3))).clone('minimizeSwitchovers')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpInstMasterSelectMode.setStatus('current')
tmnxBsxAarpCommandTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 3), )
if mibBuilder.loadTexts: tmnxBsxAarpCommandTable.setStatus('current')
tmnxBsxAarpCommandEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 3, 1), )
tmnxBsxAarpInstEntry.registerAugmentions(("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpCommandEntry"))
tmnxBsxAarpCommandEntry.setIndexNames(*tmnxBsxAarpInstEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxBsxAarpCommandEntry.setStatus('current')
tmnxBsxAarpCommandControl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 3, 1, 1), TmnxBsxAarpCommand().clone('noCmd')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxAarpCommandControl.setStatus('current')
tmnxBsxAarpServPointTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 4), )
if mibBuilder.loadTexts: tmnxBsxAarpServPointTable.setStatus('current')
tmnxBsxAarpServPointEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAarpServPointRole"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAarpServPointType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAarpServPoint"))
if mibBuilder.loadTexts: tmnxBsxAarpServPointEntry.setStatus('current')
tmnxBsxAarpServPointRole = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 4, 1, 1), TmnxBsxAarpServPointRole())
if mibBuilder.loadTexts: tmnxBsxAarpServPointRole.setStatus('current')
tmnxBsxAarpServPointType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 4, 1, 2), TmnxBsxAarpServPointType())
if mibBuilder.loadTexts: tmnxBsxAarpServPointType.setStatus('current')
tmnxBsxAarpServPoint = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 10, 4, 1, 3), TmnxBsxAarpServPoint()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAarpServPoint.setStatus('current')
tmnxBsxHttpEnrichObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11))
tmnxBsxHttpEnrichScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 1))
tmnxBsxHttpEnrichLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichLastChTime.setStatus('current')
tmnxBsxHttpEnrichFieldLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldLastChTime.setStatus('current')
tmnxBsxHttpEnrichTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 2), )
if mibBuilder.loadTexts: tmnxBsxHttpEnrichTable.setStatus('current')
tmnxBsxHttpEnrichEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichName"))
if mibBuilder.loadTexts: tmnxBsxHttpEnrichEntry.setStatus('current')
tmnxBsxHttpEnrichName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxHttpEnrichName.setStatus('current')
tmnxBsxHttpEnrichRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichRowStatus.setStatus('current')
tmnxBsxHttpEnrichRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichRowLastCh.setStatus('current')
tmnxBsxHttpEnrichEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 2, 1, 4), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichEnabled.setStatus('current')
tmnxBsxHttpEnrichDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 2, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichDescription.setStatus('current')
tmnxBsxHttpEnrichFieldTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3), )
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldTable.setStatus('current')
tmnxBsxHttpEnrichFieldEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichName"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichFieldName"))
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldEntry.setStatus('current')
tmnxBsxHttpEnrichFieldName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldName.setStatus('current')
tmnxBsxHttpEnrichFieldRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldRowStatus.setStatus('current')
tmnxBsxHttpEnrichFieldRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldRowLastCh.setStatus('current')
tmnxBsxHttpEnrichFieldHeaderName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3, 1, 4), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 32))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldHeaderName.setStatus('current')
tmnxBsxHttpEnrichFieldAntiSpoof = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3, 1, 5), TmnxEnabledDisabled().clone('disabled')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldAntiSpoof.setStatus('current')
tmnxBsxHttpEnrichFieldEncodeType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3, 1, 6), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("none", 0), ("md5", 1), ("rc4", 2), ("certificate", 3))).clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldEncodeType.setStatus('current')
tmnxBsxHttpEnrichFieldEncodeKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3, 1, 7), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldEncodeKey.setStatus('current')
tmnxBsxHttpEnrichFieldStaticStr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3, 1, 8), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(0, 16))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldStaticStr.setStatus('current')
tmnxBsxHttpEnrichFieldCertProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 3, 1, 9), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichFieldCertProf.setStatus('current')
tmnxBsxHttpEnrichStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4), )
if mibBuilder.loadTexts: tmnxBsxHttpEnrichStatTable.setStatus('current')
tmnxBsxHttpEnrichStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichName"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxHttpEnrichStatEntry.setStatus('current')
tmnxBsxHttpEnrichStatDiscontTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichStatDiscontTime.setStatus('current')
tmnxBsxHttpEnrichHCNumEnriched = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichHCNumEnriched.setStatus('current')
tmnxBsxHttpEnrichNumEnrichedLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichNumEnrichedLo.setStatus('current')
tmnxBsxHttpEnrichNumEnrichedHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichNumEnrichedHi.setStatus('current')
tmnxBsxHttpEnrichHCNumNoResource = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichHCNumNoResource.setStatus('current')
tmnxBsxHttpEnrichNumNoResourceLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichNumNoResourceLo.setStatus('current')
tmnxBsxHttpEnrichNumNoResourceHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichNumNoResourceHi.setStatus('current')
tmnxBsxHttpEnrichHCMissngSubData = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichHCMissngSubData.setStatus('current')
tmnxBsxHttpEnrichMissngSubDataLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichMissngSubDataLo.setStatus('current')
tmnxBsxHttpEnrichMissngSubDataHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichMissngSubDataHi.setStatus('current')
tmnxBsxHttpEnrichHCTplNotEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichHCTplNotEnabled.setStatus('current')
tmnxBsxHttpEnrichTplNotEnabledLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 12), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichTplNotEnabledLo.setStatus('current')
tmnxBsxHttpEnrichTplNotEnabledHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichTplNotEnabledHi.setStatus('current')
tmnxBsxHttpEnrichHCTrafficChar = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichHCTrafficChar.setStatus('current')
tmnxBsxHttpEnrichTrafficCharLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichTrafficCharLo.setStatus('current')
tmnxBsxHttpEnrichTrafficCharHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichTrafficCharHi.setStatus('current')
tmnxBsxHttpEnrichHCExceedMaxPkt = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichHCExceedMaxPkt.setStatus('current')
tmnxBsxHttpEnrichExceedMaxPktLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichExceedMaxPktLo.setStatus('current')
tmnxBsxHttpEnrichExceedMaxPktHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichExceedMaxPktHi.setStatus('current')
tmnxBsxHttpEnrichAntiSpoofMod = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 20), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichAntiSpoofMod.setStatus('current')
tmnxBsxHttpEnrichNoAntiSpfShort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 11, 4, 1, 21), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpEnrichNoAntiSpfShort.setStatus('current')
tmnxBsxRadApObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12))
tmnxBsxRadApScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 1))
tmnxBsxRadApLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApLastChTime.setStatus('current')
tmnxBsxRadApServLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApServLastChTime.setStatus('current')
tmnxBsxRadApTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2), )
if mibBuilder.loadTexts: tmnxBsxRadApTable.setStatus('current')
tmnxBsxRadApEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxRadApName"))
if mibBuilder.loadTexts: tmnxBsxRadApEntry.setStatus('current')
tmnxBsxRadApName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxRadApName.setStatus('current')
tmnxBsxRadApRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApRowStatus.setStatus('current')
tmnxBsxRadApRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApRowLastChange.setStatus('current')
tmnxBsxRadApDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApDescription.setStatus('current')
tmnxBsxRadApServerRetry = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServerRetry.setStatus('current')
tmnxBsxRadApServerTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 90)).clone(5)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServerTimeout.setStatus('current')
tmnxBsxRadApServerVRtrID = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 7), TmnxVRtrIDOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServerVRtrID.setStatus('current')
tmnxBsxRadApServerSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 8), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServerSrcAddrType.setStatus('current')
tmnxBsxRadApServerSrcAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 9), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServerSrcAddr.setStatus('current')
tmnxBsxRadApServerAlgorithm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 10), TmnxSubRadServAlgorithm().clone('direct')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServerAlgorithm.setStatus('current')
tmnxBsxRadApIntrmUpdateInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 11), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(5, 1080), ))).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApIntrmUpdateInterval.setStatus('current')
tmnxBsxRadApSignfcntChangeDelta = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApSignfcntChangeDelta.setStatus('current')
tmnxBsxRadApServTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3), )
if mibBuilder.loadTexts: tmnxBsxRadApServTable.setStatus('current')
tmnxBsxRadApServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxRadApName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServIndex"))
if mibBuilder.loadTexts: tmnxBsxRadApServEntry.setStatus('current')
tmnxBsxRadApServIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 5)))
if mibBuilder.loadTexts: tmnxBsxRadApServIndex.setStatus('current')
tmnxBsxRadApServRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServRowStatus.setStatus('current')
tmnxBsxRadApServRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApServRowLastChange.setStatus('current')
tmnxBsxRadApServAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1, 4), InetAddressType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServAddrType.setStatus('current')
tmnxBsxRadApServAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServAddr.setStatus('current')
tmnxBsxRadApServSecret = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1, 6), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 20), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServSecret.setStatus('current')
tmnxBsxRadApServAcctPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1813)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxRadApServAcctPort.setStatus('current')
tmnxBsxRadApServOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 3, 1, 8), TmnxOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApServOperState.setStatus('current')
tmnxBsxRadApStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 4), )
if mibBuilder.loadTexts: tmnxBsxRadApStatTable.setStatus('current')
tmnxBsxRadApStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 4, 1), )
tmnxBsxRadApEntry.registerAugmentions(("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApStatEntry"))
tmnxBsxRadApStatEntry.setIndexNames(*tmnxBsxRadApEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxBsxRadApStatEntry.setStatus('current')
tmnxBsxRadApTxRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 4, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApTxRequests.setStatus('current')
tmnxBsxRadApRxResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApRxResponses.setStatus('current')
tmnxBsxRadApReqTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApReqTimeouts.setStatus('current')
tmnxBsxRadApSendRetries = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 4, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApSendRetries.setStatus('current')
tmnxBsxRadApSendFail = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 4, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApSendFail.setStatus('current')
tmnxBsxRadApServStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 5), )
if mibBuilder.loadTexts: tmnxBsxRadApServStatTable.setStatus('current')
tmnxBsxRadApServStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 5, 1), )
tmnxBsxRadApServEntry.registerAugmentions(("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServStatEntry"))
tmnxBsxRadApServStatEntry.setIndexNames(*tmnxBsxRadApServEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxBsxRadApServStatEntry.setStatus('current')
tmnxBsxRadApServTxRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 5, 1, 1), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApServTxRequests.setStatus('current')
tmnxBsxRadApServRxResponses = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 5, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApServRxResponses.setStatus('current')
tmnxBsxRadApServReqTimeouts = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 5, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApServReqTimeouts.setStatus('current')
tmnxBsxRadApServReqSendFail = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 12, 5, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxRadApServReqSendFail.setStatus('current')
tmnxBsxSessionFilterObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13))
tmnxBsxSessFltrScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 1))
tmnxBsxSessFltrLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSessFltrLastChTime.setStatus('current')
tmnxBsxSessFltrParamsLastChTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsLastChTime.setStatus('current')
tmnxBsxSessFltrTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 2), )
if mibBuilder.loadTexts: tmnxBsxSessFltrTable.setStatus('current')
tmnxBsxSessFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrName"))
if mibBuilder.loadTexts: tmnxBsxSessFltrEntry.setStatus('current')
tmnxBsxSessFltrName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxSessFltrName.setStatus('current')
tmnxBsxSessFltrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrRowStatus.setStatus('current')
tmnxBsxSessFltrRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSessFltrRowLastChange.setStatus('current')
tmnxBsxSessFltrDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 2, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrDescription.setStatus('current')
tmnxBsxSessFltrDefaultAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 2, 1, 5), TmnxBsxFltrAction().clone('deny')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrDefaultAction.setStatus('current')
tmnxBsxSessFltrDefActEventLog = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 2, 1, 6), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrDefActEventLog.setStatus('current')
tmnxBsxSessFltrParamsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3), )
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsTable.setStatus('current')
tmnxBsxSessFltrParamsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsEntryId"))
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsEntry.setStatus('current')
tmnxBsxSessFltrParamsEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 1), TEntryId())
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsEntryId.setStatus('current')
tmnxBsxSessFltrParamsRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsRowStatus.setStatus('current')
tmnxBsxSessFltrParamsRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsRowLastCh.setStatus('current')
tmnxBsxSessFltrParamsDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsDescription.setStatus('current')
tmnxBsxSessFltrParamsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 5), TmnxBsxSessionFilterAction().clone('deny')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsAction.setStatus('current')
tmnxBsxSessFltrParamsIpProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 6), TIpProtocol().clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsIpProtocol.setStatus('current')
tmnxBsxSessFltrParamsSrcAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 7), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsSrcAddrType.setStatus('current')
tmnxBsxSessFltrParamsSrcAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 8), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsSrcAddress.setStatus('current')
tmnxBsxSessFltrParamsSrcAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 9), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsSrcAddrLen.setStatus('current')
tmnxBsxSessFltrParamsDstAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 10), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsDstAddrType.setStatus('current')
tmnxBsxSessFltrParamsDstAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 11), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsDstAddress.setStatus('current')
tmnxBsxSessFltrParamsDstAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 12), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsDstAddrLen.setStatus('current')
tmnxBsxSessFltrParamsSrcPortLVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 13), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsSrcPortLVal.setStatus('current')
tmnxBsxSessFltrParamsSrcPortHVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 14), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsSrcPortHVal.setStatus('current')
tmnxBsxSessFltrParamsSrcPortOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 15), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsSrcPortOp.setStatus('current')
tmnxBsxSessFltrParamsDstPortLVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 16), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsDstPortLVal.setStatus('current')
tmnxBsxSessFltrParamsDstPortHVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 17), TTcpUdpPort()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsDstPortHVal.setStatus('current')
tmnxBsxSessFltrParamsDstPortOp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 18), TmnxBsxOperator().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsDstPortOp.setStatus('current')
tmnxBsxSessFltrParamsSrcPfxList = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 19), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsSrcPfxList.setStatus('current')
tmnxBsxSessFltrParamsDstPfxList = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 20), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsDstPfxList.setStatus('current')
tmnxBsxSessFltrParamsActEventLog = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 21), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsActEventLog.setStatus('current')
tmnxBsxSessFltrParamsActHttpRedr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 22), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsActHttpRedr.setStatus('current')
tmnxBsxSessFltrParamsDstDnsCache = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 23), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsDstDnsCache.setStatus('current')
tmnxBsxSessFltrParamsSrcPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 26), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsSrcPortList.setStatus('current')
tmnxBsxSessFltrParamsDstPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 3, 1, 27), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSessFltrParamsDstPortList.setStatus('current')
tmnxBsxSessFltrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 4), )
if mibBuilder.loadTexts: tmnxBsxSessFltrStatsTable.setStatus('current')
tmnxBsxSessFltrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsEntryId"))
if mibBuilder.loadTexts: tmnxBsxSessFltrStatsEntry.setStatus('current')
tmnxBsxSessFltrStatsFlows = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 4, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSessFltrStatsFlows.setStatus('current')
tmnxBsxSessFltrStatsFlowsLo = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 4, 1, 2), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSessFltrStatsFlowsLo.setStatus('current')
tmnxBsxSessFltrStatsFlowsHi = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 13, 4, 1, 3), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSessFltrStatsFlowsHi.setStatus('current')
tmnxBsxUrlFilterObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14))
tmnxBsxUrlFilterScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 1))
tmnxBsxUrlFilterLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFilterLastChangeTime.setStatus('current')
tmnxBsxIcapServerLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIcapServerLastChangeTime.setStatus('current')
tmnxBsxUrlFltrUrlListLastCTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrUrlListLastCTime.setStatus('current')
tmnxBsxUrlFltrWsPrfListLastCTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWsPrfListLastCTime.setStatus('current')
tmnxBsxUrlFltrWsCatListLastCTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWsCatListLastCTime.setStatus('current')
tmnxBsxUrlFltrWsClasOvrLastCTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWsClasOvrLastCTime.setStatus('current')
tmnxBsxUrlFilterTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2), )
if mibBuilder.loadTexts: tmnxBsxUrlFilterTable.setStatus('current')
tmnxBsxUrlFilterEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterName"))
if mibBuilder.loadTexts: tmnxBsxUrlFilterEntry.setStatus('current')
tmnxBsxUrlFilterName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxUrlFilterName.setStatus('current')
tmnxBsxUrlFilterRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterRowStatus.setStatus('current')
tmnxBsxUrlFilterRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFilterRowLastChange.setStatus('current')
tmnxBsxUrlFilterAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 4), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterAdminState.setStatus('current')
tmnxBsxUrlFilterDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterDescription.setStatus('current')
tmnxBsxUrlFilterServicePortVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 6), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterServicePortVlan.setStatus('current')
tmnxBsxUrlFilterDefaultAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 7), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("allow", 0), ("blockHttpRedirect", 1), ("blockAll", 2))).clone('blockAll')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterDefaultAction.setStatus('current')
tmnxBsxUrlFilterHttpRedirName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 8), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterHttpRedirName.setStatus('current')
tmnxBsxUrlFilterIcapHttpRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 9), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterIcapHttpRedir.setStatus('current')
tmnxBsxUrlFilterHttpReqFilter = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("all", 1), ("first", 2))).clone('all')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterHttpReqFilter.setStatus('current')
tmnxBsxUrlFilterIcapCustXHeader = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 11), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterIcapCustXHeader.setStatus('current')
tmnxBsxUrlFltrWebServClassifyId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 12), TmnxBsxWebServClassifierId().clone('none')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebServClassifyId.setStatus('current')
tmnxBsxUrlFltrWebServFqdn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 13), TXLNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebServFqdn.setStatus('current')
tmnxBsxUrlFltrWebServDnsAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 14), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebServDnsAddrType.setStatus('current')
tmnxBsxUrlFltrWebServDnsAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 15), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebServDnsAddr.setStatus('current')
tmnxBsxUrlFltrWebServDefaultProf = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 16), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebServDefaultProf.setStatus('current')
tmnxBsxUrlFilterWebServPortVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 17), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterWebServPortVlan.setStatus('current')
tmnxBsxUrlFltrWebServCategSetId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 18), TmnxBsxWebServCategorySetId()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebServCategSetId.setStatus('current')
tmnxBsxUrlFilterIcapDefAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 19), TmnxBsxUrlFilterDefaultAction().clone('blockAll')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterIcapDefAction.setStatus('current')
tmnxBsxUrlFilterIcapDefHttpRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 20), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterIcapDefHttpRedir.setStatus('current')
tmnxBsxUrlFilterIcapHttpRedirObj = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 21), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterIcapHttpRedirObj.setStatus('current')
tmnxBsxUrlFilterWebDefAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 22), TmnxBsxUrlFilterDefaultAction().clone('blockAll')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterWebDefAction.setStatus('current')
tmnxBsxUrlFilterWebDefHttpRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 23), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterWebDefHttpRedir.setStatus('current')
tmnxBsxUrlFilterWebSerHttpRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 24), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterWebSerHttpRedir.setStatus('current')
tmnxBsxUrlFilterUrlAllowList = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 25), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterUrlAllowList.setStatus('current')
tmnxBsxUrlFltrApplyFuncBehavior = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 2, 1, 26), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFltrApplyFuncBehavior.setStatus('current')
tmnxBsxIcapServerTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 3), )
if mibBuilder.loadTexts: tmnxBsxIcapServerTable.setStatus('current')
tmnxBsxIcapServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerAddrType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerAddr"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerPort"))
if mibBuilder.loadTexts: tmnxBsxIcapServerEntry.setStatus('current')
tmnxBsxIcapServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 3, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxBsxIcapServerAddrType.setStatus('current')
tmnxBsxIcapServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 3, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxBsxIcapServerAddr.setStatus('current')
tmnxBsxIcapServerPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)))
if mibBuilder.loadTexts: tmnxBsxIcapServerPort.setStatus('current')
tmnxBsxIcapServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIcapServerRowStatus.setStatus('current')
tmnxBsxIcapServerRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 3, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIcapServerRowLastChange.setStatus('current')
tmnxBsxIcapServerDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 3, 1, 6), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIcapServerDescription.setStatus('current')
tmnxBsxIcapServerAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 3, 1, 7), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxIcapServerAdminState.setStatus('current')
tmnxBsxIcapServerStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 4), )
if mibBuilder.loadTexts: tmnxBsxIcapServerStatsTable.setStatus('current')
tmnxBsxIcapServerStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerAddrType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerAddr"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerPort"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxIcapServerStatsEntry.setStatus('current')
tmnxBsxIcapServerOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 4, 1, 1), TmnxOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIcapServerOperState.setStatus('current')
tmnxBsxIcapServerOperFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 4, 1, 2), Bits().clone(namedValues=NamedValues(("adminDown", 0), ("tcpConnError", 1)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIcapServerOperFlags.setStatus('current')
tmnxBsxIcapServerStatsRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 4, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIcapServerStatsRequests.setStatus('current')
tmnxBsxIcapServerStatsReqErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 4, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIcapServerStatsReqErrors.setStatus('current')
tmnxBsxIcapServerStatsRespAllow = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 4, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIcapServerStatsRespAllow.setStatus('current')
tmnxBsxIcapServerStatsRespBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 4, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIcapServerStatsRespBlock.setStatus('current')
tmnxBsxIcapServerStatsRespRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 4, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIcapServerStatsRespRedir.setStatus('current')
tmnxBsxIcapServerStatsRoundTrip = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 4, 1, 8), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIcapServerStatsRoundTrip.setStatus('current')
tmnxBsxIcapServerStatsReqRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 4, 1, 9), Unsigned32()).setUnits('requests per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIcapServerStatsReqRate.setStatus('current')
tmnxBsxIcapServerStatsConnTotal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 4, 1, 10), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIcapServerStatsConnTotal.setStatus('current')
tmnxBsxIcapServerStatsConnEst = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 4, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIcapServerStatsConnEst.setStatus('current')
tmnxBsxIcapServerStatsConnUtil = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 4, 1, 12), Gauge32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxIcapServerStatsConnUtil.setStatus('current')
tmnxBsxAaIfOperTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 5), )
if mibBuilder.loadTexts: tmnxBsxAaIfOperTable.setStatus('current')
tmnxBsxAaIfOperEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaIfServicePortVlan"))
if mibBuilder.loadTexts: tmnxBsxAaIfOperEntry.setStatus('current')
tmnxBsxAaIfServicePortVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 5, 1, 1), VlanId())
if mibBuilder.loadTexts: tmnxBsxAaIfServicePortVlan.setStatus('current')
tmnxBsxAaIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 5, 1, 2), TNamedItemOrEmpty()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaIfName.setStatus('current')
tmnxBsxAaIfServiceType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 5, 1, 3), ServType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaIfServiceType.setStatus('current')
tmnxBsxAaIfServiceId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 5, 1, 4), TmnxServId()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaIfServiceId.setStatus('current')
tmnxBsxAaIfAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 5, 1, 5), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaIfAddrType.setStatus('current')
tmnxBsxAaIfAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 5, 1, 6), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaIfAddr.setStatus('current')
tmnxBsxAaIfAddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 5, 1, 7), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaIfAddrPrefixLength.setStatus('current')
tmnxBsxAaIfIsaAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 5, 1, 8), InetAddressType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaIfIsaAddrType.setStatus('current')
tmnxBsxAaIfIsaAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 5, 1, 9), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), ))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaIfIsaAddr.setStatus('current')
tmnxBsxAaIfIsaAddrPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 5, 1, 10), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaIfIsaAddrPrefixLength.setStatus('current')
tmnxBsxAaIfAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 5, 1, 11), ServiceAdminStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaIfAdminState.setStatus('current')
tmnxBsxAaIfOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 5, 1, 12), ServiceOperStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxAaIfOperState.setStatus('current')
tmnxBsxUrlFltrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6), )
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsTable.setStatus('current')
tmnxBsxUrlFltrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterName"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsEntry.setStatus('current')
tmnxBsxUrlFltrOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 1), TmnxOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrOperState.setStatus('current')
tmnxBsxUrlFltrOperFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 2), Bits().clone(namedValues=NamedValues(("adminDown", 0), ("noAaIf", 1), ("aaIfDown", 2), ("icapServerDown", 3), ("urlListDown", 4), ("webServiceDown", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrOperFlags.setStatus('current')
tmnxBsxUrlFltrStatsHttpRequests = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsHttpRequests.setStatus('current')
tmnxBsxUrlFltrStatsHttpRespAllow = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsHttpRespAllow.setStatus('current')
tmnxBsxUrlFltrStatsHttpRespRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsHttpRespRedir.setStatus('current')
tmnxBsxUrlFltrStatsHttpRespBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsHttpRespBlock.setStatus('current')
tmnxBsxUrlFltrStatsHttpRespDef = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsHttpRespDef.setStatus('current')
tmnxBsxUrlFltrStatsHttpReqErrors = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsHttpReqErrors.setStatus('current')
tmnxBsxUrlFltrStatsIcapLateResp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsIcapLateResp.setStatus('current')
tmnxBsxUrlFltrStatsIcapLRPktsDsc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsIcapLRPktsDsc.setStatus('current')
tmnxBsxUrlFltrStatsIcapLRBytsDsc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsIcapLRBytsDsc.setStatus('current')
tmnxBsxUrlFltrStatsWebSvLateRsp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsWebSvLateRsp.setStatus('current')
tmnxBsxUrlFltrStatsWebSvLRPktDsc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsWebSvLRPktDsc.setStatus('current')
tmnxBsxUrlFltrStatsWebSvLRBytDsc = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsWebSvLRBytDsc.setStatus('current')
tmnxBsxUrlFltrStatsWebServReqs = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsWebServReqs.setStatus('current')
tmnxBsxUrlFltrStatsWebServReqErr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsWebServReqErr.setStatus('current')
tmnxBsxUrlFltrWebServStatsRndTp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 17), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebServStatsRndTp.setStatus('current')
tmnxBsxUrlFltrWebSvStatsReqRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 18), Unsigned32()).setUnits('requests per second').setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebSvStatsReqRate.setStatus('current')
tmnxBsxUrlFltrWebSvStatsConnTot = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 19), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebSvStatsConnTot.setStatus('current')
tmnxBsxUrlFltrWebSvStatsConnEst = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 20), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebSvStatsConnEst.setStatus('current')
tmnxBsxUrlFltrWebSerMaxCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 21), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebSerMaxCacheSize.setStatus('current')
tmnxBsxUrlFltrWebSvDnsOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 22), TmnxOperState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebSvDnsOperState.setStatus('current')
tmnxBsxUrlFltrWebSvDnsOperFlags = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 23), Bits().clone(namedValues=NamedValues(("notApplicable", 0), ("filterAdminDown", 1), ("noAaIf", 2), ("aaIfDown", 3), ("dnsDown", 4), ("lookUpFailure", 5), ("unreachable", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebSvDnsOperFlags.setStatus('current')
tmnxBsxUrlFltrWebServCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 24), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebServCacheSize.setStatus('current')
tmnxBsxUrlFltrWebSerStatCacheHit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 25), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebSerStatCacheHit.setStatus('current')
tmnxBsxUrlFltrWebSerStatCacheMis = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 26), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebSerStatCacheMis.setStatus('current')
tmnxBsxUrlFltrStatsWebSvRspAllow = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 27), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsWebSvRspAllow.setStatus('current')
tmnxBsxUrlFltrStatsWebSvRspRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 28), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsWebSvRspRedir.setStatus('current')
tmnxBsxUrlFltrStatsWebSvRspBlock = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 29), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsWebSvRspBlock.setStatus('current')
tmnxBsxUrlFltrStatsWebSvDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 30), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsWebSvDefault.setStatus('current')
tmnxBsxUrlFltrStatsAllowListLkup = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 31), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsAllowListLkup.setStatus('current')
tmnxBsxUrlFltrStatsAllowLstMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 32), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsAllowLstMatch.setStatus('current')
tmnxBsxUrlFltrStatsUrlAllow = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 33), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsUrlAllow.setStatus('current')
tmnxBsxUrlFltrStatsUrlBlockRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 34), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsUrlBlockRedir.setStatus('current')
tmnxBsxUrlFltrStatsUrlDefAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 35), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsUrlDefAction.setStatus('current')
tmnxBsxUrlFltrStatsIcapDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 36), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsIcapDefault.setStatus('current')
tmnxBsxUrlFltrStatsWSClassOvrHit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 37), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsWSClassOvrHit.setStatus('current')
tmnxBsxUrlFltrStatsWSClassOvrMis = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 6, 1, 38), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrStatsWSClassOvrMis.setStatus('current')
tmnxBsxUrlFltrUrlListTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 7), )
if mibBuilder.loadTexts: tmnxBsxUrlFltrUrlListTable.setStatus('current')
tmnxBsxUrlFltrUrlListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 7, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrUrlListName"))
if mibBuilder.loadTexts: tmnxBsxUrlFltrUrlListEntry.setStatus('current')
tmnxBsxUrlFltrUrlListName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 7, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxUrlFltrUrlListName.setStatus('current')
tmnxBsxUrlFltrUrlListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFltrUrlListRowStatus.setStatus('current')
tmnxBsxUrlFltrUrlListRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 7, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrUrlListRowLastCh.setStatus('current')
tmnxBsxUrlFilterBlListDefAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 7, 1, 4), TmnxBsxUrlFilterDefaultAction().clone('blockAll')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterBlListDefAction.setStatus('current')
tmnxBsxUrlFilterBlListDefHtRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 7, 1, 5), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterBlListDefHtRedir.setStatus('current')
tmnxBsxUrlFilterBlListHttpRedir = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 7, 1, 6), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlFilterBlListHttpRedir.setStatus('current')
tmnxBsxUrlFltrUrlListStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 8), )
if mibBuilder.loadTexts: tmnxBsxUrlFltrUrlListStatsTable.setStatus('current')
tmnxBsxUrlFltrUrlListStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 8, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrUrlListName"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxUrlFltrUrlListStatsEntry.setStatus('current')
tmnxBsxUrlFltrUrlListStatLkup = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 8, 1, 1), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrUrlListStatLkup.setStatus('current')
tmnxBsxUrlFltrUrlListStatMatch = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 8, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrUrlListStatMatch.setStatus('current')
tmnxBsxUrlFltrUrlListStatDefault = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 14, 8, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlFltrUrlListStatDefault.setStatus('current')
tmnxBsxHttpNotifObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15))
tmnxBsxHttpNotifScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 1))
tmnxBsxHttpNotifLastChangeTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpNotifLastChangeTime.setStatus('current')
tmnxBsxHttpNotifTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 2), )
if mibBuilder.loadTexts: tmnxBsxHttpNotifTable.setStatus('current')
tmnxBsxHttpNotifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifName"))
if mibBuilder.loadTexts: tmnxBsxHttpNotifEntry.setStatus('current')
tmnxBsxHttpNotifName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxHttpNotifName.setStatus('current')
tmnxBsxHttpNotifRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpNotifRowStatus.setStatus('current')
tmnxBsxHttpNotifRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpNotifRowLastChange.setStatus('current')
tmnxBsxHttpNotifAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 2, 1, 4), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpNotifAdminState.setStatus('current')
tmnxBsxHttpNotifDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 2, 1, 5), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpNotifDescription.setStatus('current')
tmnxBsxHttpNotifTemplateId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 2, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpNotifTemplateId.setStatus('current')
tmnxBsxHttpNotifScriptUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 2, 1, 7), SnmpAdminString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpNotifScriptUrl.setStatus('current')
tmnxBsxHttpNotifInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 1440), ))).setUnits('minutes').setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxHttpNotifInterval.setStatus('current')
tmnxBsxHttpNotifStatTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 3), )
if mibBuilder.loadTexts: tmnxBsxHttpNotifStatTable.setStatus('current')
tmnxBsxHttpNotifStatEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifName"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxHttpNotifStatEntry.setStatus('current')
tmnxBsxHttpNotifStatDiscntTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 3, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpNotifStatDiscntTime.setStatus('current')
tmnxBsxHttpNotifStatInserted = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 3, 1, 2), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpNotifStatInserted.setStatus('current')
tmnxBsxHttpNotifStatCritNoMtch = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 3, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpNotifStatCritNoMtch.setStatus('current')
tmnxBsxHttpNotifStatSuccess = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 3, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpNotifStatSuccess.setStatus('current')
tmnxBsxHttpNotifStatFailed = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 15, 3, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxHttpNotifStatFailed.setStatus('current')
tmnxBsxDnsIpCacheObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16))
tmnxBsxDnsIpCacheScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 1))
tmnxBsxDnsIpCacheLastCTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheLastCTime.setStatus('current')
tmnxBsxDnsIpCacheDomainLastCTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheDomainLastCTime.setStatus('current')
tmnxBsxDnsIpCacheServerLastCTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheServerLastCTime.setStatus('current')
tmnxBsxDnsIpCacheProxyLastCTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheProxyLastCTime.setStatus('current')
tmnxBsxDnsIpCacheTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 2), )
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheTable.setStatus('current')
tmnxBsxDnsIpCacheEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheName"))
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheEntry.setStatus('current')
tmnxBsxDnsIpCacheName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheName.setStatus('current')
tmnxBsxDnsIpCacheRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 2, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheRowStatus.setStatus('current')
tmnxBsxDnsIpCacheRowLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 2, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheRowLastChanged.setStatus('current')
tmnxBsxDnsIpCacheSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 2, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(10, 64000)).clone(10)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheSize.setStatus('current')
tmnxBsxDnsIpCacheHighWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(90)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheHighWatermark.setStatus('current')
tmnxBsxDnsIpCacheLowWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(80)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheLowWatermark.setStatus('current')
tmnxBsxDnsIpCacheAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 2, 1, 7), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheAdminState.setStatus('current')
tmnxBsxDnsIpCacheDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 2, 1, 8), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheDescription.setStatus('current')
tmnxBsxDnsIpCacheDomainTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 3), )
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheDomainTable.setStatus('current')
tmnxBsxDnsIpCacheDomainEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheName"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheDomainName"))
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheDomainEntry.setStatus('current')
tmnxBsxDnsIpCacheDomainName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 3, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheDomainName.setStatus('current')
tmnxBsxDnsIpCacheDomainRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 3, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheDomainRowStatus.setStatus('current')
tmnxBsxDnsIpCacheDomainRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheDomainRowLastCh.setStatus('current')
tmnxBsxDnsIpCacheDomainExprStr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 3, 1, 4), TmnxBsxExprSubString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheDomainExprStr.setStatus('current')
tmnxBsxDnsIpCacheServerTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 4), )
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheServerTable.setStatus('current')
tmnxBsxDnsIpCacheServerEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheServerAddrType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheServerAddr"))
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheServerEntry.setStatus('current')
tmnxBsxDnsIpCacheServerAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 4, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheServerAddrType.setStatus('current')
tmnxBsxDnsIpCacheServerAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 4, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheServerAddr.setStatus('current')
tmnxBsxDnsIpCacheServerRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 4, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheServerRowStatus.setStatus('current')
tmnxBsxDnsIpCacheServerRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 4, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheServerRowLastCh.setStatus('current')
tmnxBsxDnsIpCacheServerName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 4, 1, 5), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheServerName.setStatus('current')
tmnxBsxDnsIpCacheProxyTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 5), )
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheProxyTable.setStatus('current')
tmnxBsxDnsIpCacheProxyEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheProxyAddrType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheProxyAddr"))
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheProxyEntry.setStatus('current')
tmnxBsxDnsIpCacheProxyAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 5, 1, 1), InetAddressType())
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheProxyAddrType.setStatus('current')
tmnxBsxDnsIpCacheProxyAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 5, 1, 2), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheProxyAddr.setStatus('current')
tmnxBsxDnsIpCacheProxyRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheProxyRowStatus.setStatus('current')
tmnxBsxDnsIpCacheProxyRowLastCh = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 16, 5, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheProxyRowLastCh.setStatus('current')
tmnxBsxUrlListObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 17))
tmnxBsxUrlListScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 17, 1))
tmnxBsxUrlListLastChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 17, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListLastChangedTime.setStatus('current')
tmnxBsxUrlListTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 17, 2), )
if mibBuilder.loadTexts: tmnxBsxUrlListTable.setStatus('current')
tmnxBsxUrlListEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 17, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGroupIndex"), (1, "TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListName"))
if mibBuilder.loadTexts: tmnxBsxUrlListEntry.setStatus('current')
tmnxBsxUrlListName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 17, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxUrlListName.setStatus('current')
tmnxBsxUrlListRowLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 17, 2, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxUrlListRowLastChanged.setStatus('current')
tmnxBsxUrlListRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 17, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlListRowStatus.setStatus('current')
tmnxBsxUrlListAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 17, 2, 1, 4), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlListAdminState.setStatus('current')
tmnxBsxUrlListDecryptKey = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 17, 2, 1, 5), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 64), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlListDecryptKey.setStatus('current')
tmnxBsxUrlListFileUrl = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 17, 2, 1, 6), TmnxDisplayStringURL().clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlListFileUrl.setStatus('current')
tmnxBsxUrlListUpgrade = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 17, 2, 1, 7), TmnxActionType().clone('notApplicable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlListUpgrade.setStatus('current')
tmnxBsxUrlListDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 17, 2, 1, 8), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlListDescription.setStatus('current')
tmnxBsxUrlListSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 17, 2, 1, 9), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("standard", 1), ("extended", 2))).clone('standard')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlListSize.setStatus('current')
tmnxBsxUrlListHostExpressions = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 17, 2, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxUrlListHostExpressions.setStatus('current')
tmnxBsxGtpObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18))
tmnxBsxGtpScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 1))
tmnxBsxGtpLastChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpLastChangedTime.setStatus('current')
tmnxBsxGtpFltrLastChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrLastChangedTime.setStatus('current')
tmnxBsxGtpFltrMsgLastChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrMsgLastChangedTime.setStatus('current')
tmnxBsxSctpFltrLastChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSctpFltrLastChangedTime.setStatus('current')
tmnxBsxSctpFltrPpidLastChngdTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSctpFltrPpidLastChngdTime.setStatus('current')
tmnxBsxGtpFltrImsiApnLastChgTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 1, 6), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrImsiApnLastChgTime.setStatus('current')
tmnxBsxGtpFltrV2MsgLastChgTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 1, 7), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrV2MsgLastChgTime.setStatus('current')
tmnxBsxGtpTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 2), )
if mibBuilder.loadTexts: tmnxBsxGtpTable.setStatus('current')
tmnxBsxGtpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 2, 1), )
tmnxBsxAaGrpPartEntry.registerAugmentions(("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpEntry"))
tmnxBsxGtpEntry.setIndexNames(*tmnxBsxAaGrpPartEntry.getIndexNames())
if mibBuilder.loadTexts: tmnxBsxGtpEntry.setStatus('current')
tmnxBsxGtpRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 2, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpRowLastChange.setStatus('current')
tmnxBsxGtpAdminState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 2, 1, 2), TmnxAdminState().clone('outOfService')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpAdminState.setStatus('current')
tmnxBsxGtpEvtLog = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 2, 1, 3), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpEvtLog.setStatus('current')
tmnxBsxGtpMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 2, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("filtering", 1), ("untunneling", 2))).clone('filtering')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpMode.setStatus('current')
tmnxBsxGtpcInspection = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 2, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpcInspection.setStatus('current')
tmnxBsxGtpEventLogAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 2, 1, 6), TmnxBsxEventLogAction().clone('deny')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpEventLogAction.setStatus('current')
tmnxBsxGtpFltrTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3), )
if mibBuilder.loadTexts: tmnxBsxGtpFltrTable.setStatus('current')
tmnxBsxGtpFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrName"))
if mibBuilder.loadTexts: tmnxBsxGtpFltrEntry.setStatus('current')
tmnxBsxGtpFltrName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxGtpFltrName.setStatus('current')
tmnxBsxGtpFltrRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrRowLastChange.setStatus('current')
tmnxBsxGtpFltrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrRowStatus.setStatus('current')
tmnxBsxGtpFltrDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrDescription.setStatus('current')
tmnxBsxGtpFltrMaxPayloadLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), )).clone(-1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrMaxPayloadLength.setStatus('current')
tmnxBsxGtpFltrDefaultAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3, 1, 6), TmnxBsxFltrAction().clone('permit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrDefaultAction.setStatus('current')
tmnxBsxGtpFltrEvtLog = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3, 1, 7), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrEvtLog.setStatus('current')
tmnxBsxGtpFltrGtpInGtp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3, 1, 8), TmnxBsxFltrAction().clone('permit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrGtpInGtp.setStatus('current')
tmnxBsxGtpFltrValidateSeqNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3, 1, 9), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrValidateSeqNumber.setStatus('current')
tmnxBsxGtpFltrValidateSrcIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrValidateSrcIpAddr.setStatus('current')
tmnxBsxGtpFltrImsiApnDefAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3, 1, 11), TmnxBsxFltrAction().clone('permit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrImsiApnDefAction.setStatus('current')
tmnxBsxGtpFltrValidateGtpTunnels = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3, 1, 12), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrValidateGtpTunnels.setStatus('current')
tmnxBsxGtpFltrV2MsgDefAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3, 1, 13), TmnxBsxFltrAction().clone('permit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrV2MsgDefAction.setStatus('current')
tmnxBsxGtpFltrEventLogAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3, 1, 14), TmnxBsxEventLogAction().clone('deny')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrEventLogAction.setStatus('current')
tmnxBsxGtpFltrDefTunnelEpLimit = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 3, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)).clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrDefTunnelEpLimit.setStatus('current')
tmnxBsxGtpFltrMsgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 4), )
if mibBuilder.loadTexts: tmnxBsxGtpFltrMsgTable.setStatus('current')
tmnxBsxGtpFltrMsgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrMsgEntryId"))
if mibBuilder.loadTexts: tmnxBsxGtpFltrMsgEntry.setStatus('current')
tmnxBsxGtpFltrMsgEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 4, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: tmnxBsxGtpFltrMsgEntryId.setStatus('current')
tmnxBsxGtpFltrMsgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrMsgValue.setStatus('current')
tmnxBsxGtpFltrMsgRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 4, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrMsgRowLastChange.setStatus('current')
tmnxBsxGtpFltrMsgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 4, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrMsgRowStatus.setStatus('current')
tmnxBsxGtpFltrMsgAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 4, 1, 5), TmnxBsxFltrAction()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrMsgAction.setStatus('current')
tmnxBsxSctpFltrTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 5), )
if mibBuilder.loadTexts: tmnxBsxSctpFltrTable.setStatus('current')
tmnxBsxSctpFltrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrName"))
if mibBuilder.loadTexts: tmnxBsxSctpFltrEntry.setStatus('current')
tmnxBsxSctpFltrName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 5, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxSctpFltrName.setStatus('current')
tmnxBsxSctpFltrRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 5, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSctpFltrRowLastChange.setStatus('current')
tmnxBsxSctpFltrRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 5, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSctpFltrRowStatus.setStatus('current')
tmnxBsxSctpFltrDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 5, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSctpFltrDescription.setStatus('current')
tmnxBsxSctpFltrPpidRangeMin = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 5, 1, 5), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSctpFltrPpidRangeMin.setStatus('current')
tmnxBsxSctpFltrPpidRangeMax = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 5, 1, 6), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSctpFltrPpidRangeMax.setStatus('current')
tmnxBsxSctpFltrDefaultAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 5, 1, 7), TmnxBsxFltrAction().clone('permit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSctpFltrDefaultAction.setStatus('current')
tmnxBsxSctpFltrEvtLog = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 5, 1, 8), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSctpFltrEvtLog.setStatus('current')
tmnxBsxSctpFltrPpidTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 6), )
if mibBuilder.loadTexts: tmnxBsxSctpFltrPpidTable.setStatus('current')
tmnxBsxSctpFltrPpidEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 6, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrPpidEntryId"))
if mibBuilder.loadTexts: tmnxBsxSctpFltrPpidEntry.setStatus('current')
tmnxBsxSctpFltrPpidEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255)))
if mibBuilder.loadTexts: tmnxBsxSctpFltrPpidEntryId.setStatus('current')
tmnxBsxSctpFltrPpidVal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 6, 1, 2), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSctpFltrPpidVal.setStatus('current')
tmnxBsxSctpFltrPpidRowLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 6, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxSctpFltrPpidRowLastChange.setStatus('current')
tmnxBsxSctpFltrPpidRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 6, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSctpFltrPpidRowStatus.setStatus('current')
tmnxBsxSctpFltrPpidValAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 6, 1, 5), TmnxBsxFltrAction()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxSctpFltrPpidValAction.setStatus('current')
tmnxBsxGtpFltrImsiApnTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 7), )
if mibBuilder.loadTexts: tmnxBsxGtpFltrImsiApnTable.setStatus('current')
tmnxBsxGtpFltrImsiApnEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 7, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrImsiApnEntryId"))
if mibBuilder.loadTexts: tmnxBsxGtpFltrImsiApnEntry.setStatus('current')
tmnxBsxGtpFltrImsiApnEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 7, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1031, 2030)))
if mibBuilder.loadTexts: tmnxBsxGtpFltrImsiApnEntryId.setStatus('current')
tmnxBsxGtpFltrImsiApnRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 7, 1, 2), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrImsiApnRowStatus.setStatus('current')
tmnxBsxGtpFltrMatchImsiPrefix = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 7, 1, 3), DisplayString().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(1, 8), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrMatchImsiPrefix.setStatus('current')
tmnxBsxGtpFltrMatchApn = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 7, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 100)).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrMatchApn.setStatus('current')
tmnxBsxGtpFltrMatchSrcGsnAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 7, 1, 5), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(0, 0), ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrMatchSrcGsnAddr.setStatus('current')
tmnxBsxGtpFltrMatchSrcGsnAddrTyp = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 7, 1, 6), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrMatchSrcGsnAddrTyp.setStatus('current')
tmnxBsxGtpFltrMatchSrcGsnAddrLen = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 7, 1, 7), InetAddressPrefixLength().subtype(subtypeSpec=ValueRangeConstraint(0, 128))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrMatchSrcGsnAddrLen.setStatus('current')
tmnxBsxGtpFltrMatchSrcIpPfxList = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 7, 1, 8), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrMatchSrcIpPfxList.setStatus('current')
tmnxBsxGtpFltrImsiApnEntryAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 7, 1, 9), TmnxBsxFltrAction().clone('permit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrImsiApnEntryAction.setStatus('current')
tmnxBsxGtpFilterImsiApnLastChg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 7, 1, 10), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFilterImsiApnLastChg.setStatus('current')
tmnxBsxGtpFltrV2MsgTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 8), )
if mibBuilder.loadTexts: tmnxBsxGtpFltrV2MsgTable.setStatus('current')
tmnxBsxGtpFltrV2MsgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 8, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrV2MsgEntryId"))
if mibBuilder.loadTexts: tmnxBsxGtpFltrV2MsgEntry.setStatus('current')
tmnxBsxGtpFltrV2MsgEntryId = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 8, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(516, 770)))
if mibBuilder.loadTexts: tmnxBsxGtpFltrV2MsgEntryId.setStatus('current')
tmnxBsxGtpFltrV2MsgValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 8, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrV2MsgValue.setStatus('current')
tmnxBsxGtpFltrV2MsgRowLastChg = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 8, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxGtpFltrV2MsgRowLastChg.setStatus('current')
tmnxBsxGtpFltrV2MsgRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 8, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrV2MsgRowStatus.setStatus('current')
tmnxBsxGtpFltrV2MsgAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 18, 8, 1, 5), TmnxBsxFltrAction()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxGtpFltrV2MsgAction.setStatus('current')
tmnxBsxTcpValObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20))
tmnxBsxTcpValScalars = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 1))
tmnxBsxTcpValLastChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValLastChangedTime.setStatus('current')
tmnxBsxTcpValTcaLastChangedTime = MibScalar((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValTcaLastChangedTime.setStatus('current')
tmnxBsxTcpValTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 2), )
if mibBuilder.loadTexts: tmnxBsxTcpValTable.setStatus('current')
tmnxBsxTcpValEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 2, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValName"))
if mibBuilder.loadTexts: tmnxBsxTcpValEntry.setStatus('current')
tmnxBsxTcpValName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 2, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxTcpValName.setStatus('current')
tmnxBsxTcpValRowLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 2, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValRowLastChanged.setStatus('current')
tmnxBsxTcpValRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 2, 1, 3), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTcpValRowStatus.setStatus('current')
tmnxBsxTcpValDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 2, 1, 4), TItemDescription()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTcpValDescription.setStatus('current')
tmnxBsxTcpValEventLog = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 2, 1, 5), TNamedItemOrEmpty()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTcpValEventLog.setStatus('current')
tmnxBsxTcpValEventLogAll = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 2, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTcpValEventLogAll.setStatus('current')
tmnxBsxTcpValStrict = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 2, 1, 7), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTcpValStrict.setStatus('current')
tmnxBsxTcpValTcaTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 3), )
if mibBuilder.loadTexts: tmnxBsxTcpValTcaTable.setStatus('current')
tmnxBsxTcpValTcaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 3, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValTcaName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValTcaWatermarkType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgDirection"))
if mibBuilder.loadTexts: tmnxBsxTcpValTcaEntry.setStatus('current')
tmnxBsxTcpValTcaName = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 3, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxTcpValTcaName.setStatus('current')
tmnxBsxTcpValTcaWatermarkType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 3, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1))).clone(namedValues=NamedValues(("tcpVal", 1))))
if mibBuilder.loadTexts: tmnxBsxTcpValTcaWatermarkType.setStatus('current')
tmnxBsxTcpValTcaRowLastChanged = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 3, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValTcaRowLastChanged.setStatus('current')
tmnxBsxTcpValTcaRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 3, 1, 4), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTcpValTcaRowStatus.setStatus('current')
tmnxBsxTcpValTcaHighWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 3, 1, 5), Unsigned32().clone(4294967295)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTcpValTcaHighWatermark.setStatus('current')
tmnxBsxTcpValTcaLowWatermark = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 3, 1, 6), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: tmnxBsxTcpValTcaLowWatermark.setStatus('current')
tmnxBsxTcpValTcaStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 4), )
if mibBuilder.loadTexts: tmnxBsxTcpValTcaStatsTable.setStatus('current')
tmnxBsxTcpValTcaStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 4, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValTcaName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValTcaWatermarkType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgDirection"))
if mibBuilder.loadTexts: tmnxBsxTcpValTcaStatsEntry.setStatus('current')
tmnxBsxTcpValTcaStatsLastRaised = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 4, 1, 1), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValTcaStatsLastRaised.setStatus('current')
tmnxBsxTcpValTcaStatsLastCleard = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 4, 1, 2), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValTcaStatsLastCleard.setStatus('current')
tmnxBsxTcpValTcaStatsTcaState = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 4, 1, 3), TmnxBsxTcaState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValTcaStatsTcaState.setStatus('current')
tmnxBsxTcpValTcaStatsTcaTrigType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 4, 1, 4), TmnxBsxTcaTriggerType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValTcaStatsTcaTrigType.setStatus('current')
tmnxBsxTcpValStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 5), )
if mibBuilder.loadTexts: tmnxBsxTcpValStatsTable.setStatus('current')
tmnxBsxTcpValStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 5, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValName"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValStatsDirection"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValStatsUnits"), (0, "TIMETRA-CHASSIS-MIB", "tmnxChassisIndex"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxCardSlotEsaId"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxMdaSlotEsaVmId"))
if mibBuilder.loadTexts: tmnxBsxTcpValStatsEntry.setStatus('current')
tmnxBsxTcpValStatsDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 5, 1, 1), TmnxBsxDirection())
if mibBuilder.loadTexts: tmnxBsxTcpValStatsDirection.setStatus('current')
tmnxBsxTcpValStatsUnits = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("octets", 1), ("packets", 2))))
if mibBuilder.loadTexts: tmnxBsxTcpValStatsUnits.setStatus('current')
tmnxBsxTcpValStatsAllowed = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 5, 1, 3), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValStatsAllowed.setStatus('current')
tmnxBsxTcpValStatsDropBadFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 5, 1, 4), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValStatsDropBadFlag.setStatus('current')
tmnxBsxTcpValStatsDropBadOption = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 5, 1, 5), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValStatsDropBadOption.setStatus('current')
tmnxBsxTcpValStatsDropBadSEQ = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 5, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValStatsDropBadSEQ.setStatus('current')
tmnxBsxTcpValStatsDropBadACK = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 5, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValStatsDropBadACK.setStatus('current')
tmnxBsxTcpValStatsDropNoEstment = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 5, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValStatsDropNoEstment.setStatus('current')
tmnxBsxTcpValStatsDropAlreadyEst = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 5, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValStatsDropAlreadyEst.setStatus('current')
tmnxBsxTcpValStatsDropAsymmetric = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 5, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValStatsDropAsymmetric.setStatus('current')
tmnxBsxTcpValStatsDropAfterRST = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 5, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValStatsDropAfterRST.setStatus('current')
tmnxBsxTcpValStatsDropFragmented = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 5, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValStatsDropFragmented.setStatus('current')
tmnxBsxTcpValStatsDiscntTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 20, 5, 1, 13), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxTcpValStatsDiscntTime.setStatus('current')
tmnxBsxEsmMacObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 21))
tmnxBsxEsmMacSubSumTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 21, 1), )
if mibBuilder.loadTexts: tmnxBsxEsmMacSubSumTable.setStatus('current')
tmnxBsxEsmMacSubSumEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 21, 1, 1), ).setIndexNames((0, "TIMETRA-BSX-NG-MIB", "tmnxBsxEsmMacSubscriber"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxEsmMacIpAddrType"), (0, "TIMETRA-BSX-NG-MIB", "tmnxBsxEsmMacIpAddr"))
if mibBuilder.loadTexts: tmnxBsxEsmMacSubSumEntry.setStatus('current')
tmnxBsxEsmMacSubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 21, 1, 1, 1), TNamedItem())
if mibBuilder.loadTexts: tmnxBsxEsmMacSubscriber.setStatus('current')
tmnxBsxEsmMacIpAddrType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 21, 1, 1, 2), InetAddressType())
if mibBuilder.loadTexts: tmnxBsxEsmMacIpAddrType.setStatus('current')
tmnxBsxEsmMacIpAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 21, 1, 1, 3), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: tmnxBsxEsmMacIpAddr.setStatus('current')
tmnxBsxEsmMacSubSumUpdateTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 21, 1, 1, 4), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxEsmMacSubSumUpdateTime.setStatus('current')
tmnxBsxEsmMacSubSumMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 21, 1, 1, 5), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxEsmMacSubSumMacAddress.setStatus('current')
tmnxBsxEsmMacSubSumEsmSubscriber = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 21, 1, 1, 6), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxEsmMacSubSumEsmSubscriber.setStatus('current')
tmnxBsxEsmMacSubSumAppProfNm = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 3, 1, 2, 63, 21, 1, 1, 7), TNamedItem()).setMaxAccess("readonly")
if mibBuilder.loadTexts: tmnxBsxEsmMacSubSumAppProfNm.setStatus('current')
tmnxBsxConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63))
tmnxBsxCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1))
tmnxBsxCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxCompliance = tmnxBsxCompliance.setStatus('obsolete')
tmnxBsxComplianceV7v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxComplianceV7v0 = tmnxBsxComplianceV7v0.setStatus('obsolete')
tmnxBsxComplianceV8v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupMG3v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMobileGatewayGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxComplianceV8v0 = tmnxBsxComplianceV8v0.setStatus('obsolete')
tmnxBsxComplianceV9v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMobileGatewayGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStaticObjGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxComplianceV9v0 = tmnxBsxComplianceV9v0.setStatus('obsolete')
tmnxBsxComplianceV10v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApNotificationGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMobileGatewayGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStaticObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRedundancyObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichStatObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitSeenIpGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadiusAccountingObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApStatObjGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxComplianceV10v0 = tmnxBsxComplianceV10v0.setStatus('obsolete')
tmnxBsxComplianceV11v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 6)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV11v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyAqpExtObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyTodObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV11v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApNotificationGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMobileGatewayGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStaticObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRedundancyObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichStatObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMgBillingExclusionsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMgTetherDetectGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitSeenIpGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadiusAccountingObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApStatObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRedundancyEnhObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadiusAcctObjGroupV11v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessionFilterObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyTimeStampExtObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterStatsObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrAntiSpfObjGrpV11v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnAntiSpfStObGrpV11v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrEncObjGrpV11v0"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxComplianceV11v0 = tmnxBsxComplianceV11v0.setStatus('obsolete')
tmnxBsxComplianceV12v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 7)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV11v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyObjGrp12v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyTodObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatsGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV7v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV8v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV11v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV12v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApNotificationGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroupV9v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitGroupV10v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMobileGatewayGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStaticObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRedundancyObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichStatObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMgBillingExclusionsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMgTetherDetectGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitSeenIpGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadiusAccountingObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApStatObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRedundancyEnhObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadiusAcctObjGroupV11v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessionFilterObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyTimeStampExtObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterStatsObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterObjGrpV12v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrAntiSpfObjGrpV11v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnAntiSpfStObGrpV11v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrEncObjGrpV11v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIpPrefixListObjGrpV12v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrStStrObjGrpV12v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafficStatsObjGrpV12v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirObjGrpV12v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUsageMonObjGrpV12v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxLwObjGrpV12v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxMdaGroupV12v0"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxComplianceV12v0 = tmnxBsxComplianceV12v0.setStatus('current')
tmnxBsxComplianceV13v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 8)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheGroupV13v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListGroupV13v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV13v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicyObjGrp13v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafficStatsObjGrpV13v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroupV13v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpGroupV13v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirObjGrpV13v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifObjGrpV13v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsa2ObjGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxXHeaderObjGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxComplianceV13v0 = tmnxBsxComplianceV13v0.setStatus('current')
tmnxBsxComplianceV14v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 9)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxStflFwEnhacementsObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEventLogSyslogObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyDiamObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListExtendedGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpsCaptiveRedirObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpMssObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirectExportGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotificationGroupV14v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyObjsGroupV14v0"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpUntunnelingObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrapPerfObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValObjGrp"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxComplianceV14v0 = tmnxBsxComplianceV14v0.setStatus('current')
tmnxBsxComplianceV15v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 10)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsx15v0ObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDEMV15v0ObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEsmMacV15v0ObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterV15v0ObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPortListV15v0ObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDEMCngParamsV15v0ObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPortListRefsV15v0ObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpOvdObjGrp"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxComplianceV15v0 = tmnxBsxComplianceV15v0.setStatus('current')
tmnxBsxComplianceV16v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 11)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheProxy16v0ObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCertProfileObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCertProfileNotifyObjsGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCertProfileNotifyGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSubCongDetObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSubCongRenamedObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpsRedirHttpsRdrObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatHttpsRedirObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOverloadSubQuarantineGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxLateIcapBlockObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusDirectionObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTetheringDetectionObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOverloadSubQuarNotifyGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxShallowInspectionGrp"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxComplianceV16v0 = tmnxBsxComplianceV16v0.setStatus('current')
tmnxBsxComplianceV17v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 12)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowAttrObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPartitionObsoleteGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaVmTrafDistribByIpGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowConfigFieldsGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTetherStateObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTetherDetectObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebServiceGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowAttrObsoleteGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatefulFirwallObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebServNotifGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsTrafficStatsObjGrp"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxComplianceV17v0 = tmnxBsxComplianceV17v0.setStatus('current')
tmnxBsxComplianceV20v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 1, 13)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListEnhancementObjGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterEnhancementGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdFieldEncryptObjGrp"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxComplianceV20v0 = tmnxBsxComplianceV20v0.setStatus('current')
tmnxBsxGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2))
tmnxBsxMdaGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFcLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpMdaLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFailToMode"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubPool"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubResvCbs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubSlpPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubQuePolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubSchPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubPool"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubResvCbs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubSlpPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubQuePolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubSchPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpIngressPool"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpIngressResvCbs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpIngressSlpPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpIngressQuePolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFcRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFcRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaActivityState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaActivityChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaRole"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpActivityChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsInPChipErs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDiscCongIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDiscCongIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsToMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsToMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDisCongMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDisCongMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDiscErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDiscErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsPolicyByps"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsPolicyByps"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsInspected"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsInspected"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDiscPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDiscPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsInMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsInMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsFromMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsFromMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsOutPChipEr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDisCongOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDisCongOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowsCurrent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowSetupRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsDiverted"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsCurrent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusTrafficRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsInPChipErs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDiscCongIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDiscCongIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsToMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsToMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDisCongMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDisCongMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDiscErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDiscErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsPolicyByps"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsPolicyByps"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsInspected"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsInspected"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDiscPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDiscPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsInMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsInMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsFromMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsFromMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsOutPChipEr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDisCongOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDisCongOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQFwdInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQFwdOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQFwdInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQFwdOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDroInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDroOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDroInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDroOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCFwdInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCFwdOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCFwdInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCFwdOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCDroInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCDroOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCDroInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCDroOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQFwdInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQFwdOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQFwdInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQFwdOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDroInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDroOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDroInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDroOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCFwdInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCFwdOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCFwdInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCFwdOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCDroInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCDroOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCDroInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCDroOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaEsmSubscribers"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaSapSubscribers"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumMdaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumMdaMdaNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumAppProfName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumLngDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumActFlwsFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumActFlwsToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCLngDurFlws"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMdaGroup = tmnxBsxMdaGroup.setStatus('obsolete')
tmnxBsxPolicyGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxProtDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocol"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocolOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterFlowSetupDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNumOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPort"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortFpp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoDefValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDivert"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerGranularity"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminPIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminCIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerMBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerPIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplicationOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroupOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpTrafficDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSubscriberOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscpOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDrop"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBwLimitPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowRatePolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowCountPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminOwner"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminControlApply"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUpgrade"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxVersion"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsConflicts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrPortId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrEncapValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkFc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkPriority"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpInProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpOutProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSource"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSourceAllIncl"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlConfigOwner"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlApply"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxPolicyGroup = tmnxBsxPolicyGroup.setStatus('obsolete')
tmnxBsxStatsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgCollStats"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubLngDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubActFlwsFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubActFlwsToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubHCLngDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyLngDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyActFlwsFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyActFlwsToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyHCLngDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubCfgRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubSdyRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaLngDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaActFlwsFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaActFlwsToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaNumSubscribers"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaHCLngDurFlws"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxStatsGroup = tmnxBsxStatsGroup.setStatus('current')
tmnxBsxNotifyObjsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActionStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotifyObjsGroup = tmnxBsxNotifyObjsGroup.setStatus('current')
tmnxBsxNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFailureV2"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFailureClearV2"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpNonRedundantV2"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpNonRedundantClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpSwitchover"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFlowFull"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFlowFullClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaSubLoadBalance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotificationGroup = tmnxBsxNotificationGroup.setStatus('current')
tmnxBsxMdaGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 6))
tmnxBsxMdaGroupV7v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 6, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFcLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpMdaLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFailToMode"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubPool"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubResvCbs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubSlpPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubQuePolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubSchPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubPool"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubResvCbs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubSlpPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubQuePolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubSchPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFcRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFcRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaActivityState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaActivityChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaRole"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpActivityChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsInPChipErs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDiscCongIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDiscCongIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsToMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsToMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDisCongMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDisCongMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDiscErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDiscErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsPolicyByps"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsPolicyByps"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsInspected"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsInspected"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDiscPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDiscPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsInMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsInMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsFromMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsFromMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsOutPChipEr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsDisCongOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsDisCongOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowsCurrent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowSetupRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsDiverted"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsCurrent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusTrafficRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsInPChipErs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDiscCongIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDiscCongIn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsToMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsToMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDisCongMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDisCongMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDiscErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDiscErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsPolicyByps"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsPolicyByps"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsInspected"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsInspected"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDiscPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDiscPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsInMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsInMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsFromMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsFromMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsOutPChipEr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsDisCongOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsDisCongOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCOctsOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktsOut"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQFwdInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQFwdOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQFwdInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQFwdOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDroInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDroOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDroInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQDroOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCFwdInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCFwdOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCFwdInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCFwdOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCDroInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCDroOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCDroInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusIngQHCDroOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQFwdInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQFwdOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQFwdInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQFwdOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDroInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDroOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDroInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQDroOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCFwdInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCFwdOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCFwdInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCFwdOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCDroInPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCDroOutPPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCDroInPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusEgrQHCDroOutPOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaEsmSubscribers"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaSapSubscribers"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumMdaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumMdaMdaNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumAppProfName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumLngDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumActFlwsFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumActFlwsToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumHCLngDurFlws"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMdaGroupV7v0 = tmnxBsxMdaGroupV7v0.setStatus('current')
tmnxBsxMdaGroupV8v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 6, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpPartitions"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpCapCostLowThres"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpCapCostHighThres"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpLoadBalanceStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpUnassignedEsmSubs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpUnassignedSapSubs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpUnassignedSpkSubs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpAaSubScale"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpOverloadCutThru"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaSpokeSdpSubscribers"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaCapacityCost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaStatsResourceCount"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowsAverage"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowsPeak"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowSetupRateAvg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowSetupRatePk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsDivertedAvg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsDivertedPk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsAverage"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsPeak"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusTrafficRateAvg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusTrafficRatePeak"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaLoadBalUnSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubMdaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubMdaMdaNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAppProfName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubHasOverrides"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMdaGroupV8v0 = tmnxBsxMdaGroupV8v0.setStatus('current')
tmnxBsxMdaGroupV9v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 6, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPacketRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPacketRateAvg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPacketRatePeak"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowResInUse"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransitIpSubs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransitIpAddrs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransitSubs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransPrefEntries"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubWaSBfHiWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubWaSBfLoWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubWaSBfHiWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubWaSBfLoWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubTransPrefPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpTransPrefV4NmEntr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaLoadBalUnSubTransit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartXOnlineHost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartHttpMatchAllReq"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktSzIncPk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncPkLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncPkHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktSzDecPk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecPkLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecPkHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktSzIncOc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncOcLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncOcHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktSzDecOc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecOcLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecOcHi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMdaGroupV9v0 = tmnxBsxMdaGroupV9v0.setStatus('obsolete')
tmnxBsxMdaGroupV10v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 6, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPacketRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPacketRateAvg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPacketRatePeak"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowResInUse"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransitIpSubs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransitIpAddrs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransitSubs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubWaSBfHiWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubWaSBfLoWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubWaSBfHiWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubWaSBfLoWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubTransPrefPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpTransPrefV4NmEntr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaLoadBalUnSubTransit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartXOnlineHost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartHttpMatchAllReq"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartAaSubRemote"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktSzIncPk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncPkLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncPkHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktSzDecPk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecPkLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecPkHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktSzIncOc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncOcLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncOcHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCPktSzDecOc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecOcLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecOcHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpTransPrefV6NmEntr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpTransPrefV6RmEntr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransPrefV4Entr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransPrefV6Entr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransPrefV6RemEntr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMdaGroupV10v0 = tmnxBsxMdaGroupV10v0.setStatus('current')
tmnxBsxMdaGroupMG3v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 6, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartXOnlineHost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartHttpMatchAllReq"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMdaGroupMG3v0 = tmnxBsxMdaGroupMG3v0.setStatus('obsolete')
tmnxBsxMdaGroupV11v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 6, 6)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCSeenIpReqSent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSeenIpReqSentLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSeenIpReqSentHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCSeenIpReqDrop"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSeenIpReqDropLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSeenIpReqDropHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCSubsCreated"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsCreatedLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsCreatedHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCSubsDeleted"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsDeletedLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsDeletedHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusHCSubsModified"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsModifiedLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsModifiedHi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMdaGroupV11v0 = tmnxBsxMdaGroupV11v0.setStatus('current')
tmnxBsxObsoleteGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 7))
tmnxBsxObsoleteGroupV7v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 7, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpIngressPool"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpIngressResvCbs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpIngressSlpPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpIngressQuePolicy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxObsoleteGroupV7v0 = tmnxBsxObsoleteGroupV7v0.setStatus('current')
tmnxBsxObsoleteGroupV8v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 7, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminOwner"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminControlApply"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxObsoleteGroupV8v0 = tmnxBsxObsoleteGroupV8v0.setStatus('current')
tmnxBsxObsoleteGroupsV9v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 7, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsConflicts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSubscriberOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrPortId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrEncapValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSpokeSdpSubscr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSpokeSdpSubscrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpUnassignedTIpSubs"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxObsoleteGroupsV9v0 = tmnxBsxObsoleteGroupsV9v0.setStatus('current')
tmnxBsxObsoleteGroupV10v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 7, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransPrefEntries"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpAdminState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxObsoleteGroupV10v0 = tmnxBsxObsoleteGroupV10v0.setStatus('current')
tmnxBsxObsoleteGroupV12v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 7, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubCutThru"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubscriberOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubscriberType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroupOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplicationOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBwLimitPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpChargeGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpChargeGrpOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDrop"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscpOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowCountPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowRatePolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpHttpEnrichName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpHttpErrRedirName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpHttpNotif"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpHttpRedirFlowType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpHttpRedirName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpIpProtocolNumOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSource"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSourceAllIncl"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpOutOfOrderFrags"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpInProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpOutProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkFc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkPriority"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSessionFilter"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpTrafficDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpUrlFilter"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpLastChTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxObsoleteGroupV12v0 = tmnxBsxObsoleteGroupV12v0.setStatus('current')
tmnxBsxObsoleteGroupV13v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 7, 6)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgAggrStats"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolResExStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxObsoleteGroupV13v0 = tmnxBsxObsoleteGroupV13v0.setStatus('current')
tmnxBsxPolicyGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 8))
tmnxBsxPolicyGroupV8v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 8, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxProtDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtParentName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocol"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocolOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterFlowSetupDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNumOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortFpp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortLow"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortHigh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoDefValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDivert"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCapacityCost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerGranularity"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminPIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminCIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerMBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerPIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplicationOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroupOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpTrafficDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSubscriberOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscpOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDrop"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBwLimitPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowRatePolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowCountPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUpgrade"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxVersion"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsConflicts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrPortId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrEncapValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSapSubscrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSpokeSdpSubscr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSpokeSdpSubscrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkFc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkPriority"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpInProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpOutProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSource"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSourceAllIncl"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlConfigOwner"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlApply"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprOffset"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAsoValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAsoValDerivedFrom"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerAqpEntryId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolResExStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxPolicyGroupV8v0 = tmnxBsxPolicyGroupV8v0.setStatus('obsolete')
tmnxBsxPolicyGroupV9v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 8, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxProtDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtParentName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocol"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocolOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterFlowSetupDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNumOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortFpp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortLow"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortHigh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoDefValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDivert"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCapacityCost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerGranularity"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminPIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminCIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerMBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerPIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplicationOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroupOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpTrafficDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscpOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDrop"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBwLimitPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowRatePolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowCountPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUpgrade"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxVersion"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkFc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkPriority"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpInProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpOutProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSource"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSourceAllIncl"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlConfigOwner"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlApply"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprOffset"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAsoValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAsoValDerivedFrom"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerAqpEntryId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolResExStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubscriberType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubscriberOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowSetupHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowSetupLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPacketRateHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPacketRateLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxBitRateHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxBitRateLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsHCFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsFlowsLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsFlowsHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsHCConflicts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsConflictsLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsConflictsHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpHttpErrRedirName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxPolicyGroupV9v0 = tmnxBsxPolicyGroupV9v0.setStatus('obsolete')
tmnxBsxPolicyGroupV10v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 8, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxProtDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtParentName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtObsolete"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocol"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocolOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterFlowSetupDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNumOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortFpp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortLow"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortHigh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoDefValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDivert"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCapacityCost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerGranularity"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminPIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminCIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerMBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerPIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpApplicationOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAppGroupOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpTrafficDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDscpOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDrop"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBwLimitPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowRatePolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowCountPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUpgrade"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxVersion"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSrcPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpDstPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkFc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkPriority"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpInProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRemarkDscpOutProfile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSource"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMirrorSourceAllIncl"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlConfigOwner"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlApply"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprOffset"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAsoValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAsoValDerivedFrom"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerAqpEntryId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolResExStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubscriberType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubscriberOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowSetupHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowSetupLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPacketRateHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPacketRateLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxBitRateHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxBitRateLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsHCFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsFlowsLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsFlowsHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsHCConflicts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsConflictsLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsConflictsHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpHttpErrRedirName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxPolicyGroupV10v0 = tmnxBsxPolicyGroupV10v0.setStatus('obsolete')
tmnxBsxPolicyTodObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 8, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdAdminCIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdAdminPIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdCBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdDayList"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdEndDay"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdEndHour"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdEndMinute"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdMBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdStartDay"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdStartHour"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOvrdStartMinute"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerOperTodOverride"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxPolicyTodObjGrp = tmnxBsxPolicyTodObjGrp.setStatus('current')
tmnxBsxPolicyAqpExtObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 8, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpChargeGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpChargeGrpOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpIpProtocolNumOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpLastChTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxPolicyAqpExtObjGrp = tmnxBsxPolicyAqpExtObjGrp.setStatus('obsolete')
tmnxBsxPolicyTimeStampExtObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 8, 6)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgRowLastCh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxPolicyTimeStampExtObjGrp = tmnxBsxPolicyTimeStampExtObjGrp.setStatus('current')
tmnxBsxNotificationGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 10))
tmnxBsxNotificationGroupV8v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 10, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpCapCostThres"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpCapCostThresClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscribersUnassigned"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolResExceeded"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolResExceededClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotificationGroupV8v0 = tmnxBsxNotificationGroupV8v0.setStatus('current')
tmnxBsxNotificationGroupV7v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 10, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubscriberAcctDataLoss"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotificationGroupV7v0 = tmnxBsxNotificationGroupV7v0.setStatus('current')
tmnxBsxNotificationGroupV9v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 10, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpBitRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpBitRateClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFlowSetup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFlowSetupClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpPacketRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpPacketRateClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPolAaSubCreated"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPolAaSubDeleted"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPolRadCoAAudit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPolRadCoAError"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPolRadDiscError"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPolDhcpAddWarning"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPolDhcpDelWarning"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFmSbWaSBufOvld"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFmSbWaSBufOvldClr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSbWaSBufOvld"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSbWaSBufOvldClr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpOvrldCutthru"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpOvrldCutthruClr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPersistenceWarn"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotificationGroupV9v0 = tmnxBsxNotificationGroupV9v0.setStatus('current')
tmnxBsxNotificationGroupV10v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 10, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstOperStateChanged"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstStateChanged"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotificationGroupV10v0 = tmnxBsxNotificationGroupV10v0.setStatus('current')
tmnxBsxRadApNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 10, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApFailure"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServOperStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxRadApNotificationGroup = tmnxBsxRadApNotificationGroup.setStatus('current')
tmnxBsxNotificationGroupV11v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 10, 6)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxMobileSubModifyFailure"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApIntrmUpdateSkipped"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpUrlParamLimitExceeded"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterOperStateChange"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotificationGroupV11v0 = tmnxBsxNotificationGroupV11v0.setStatus('current')
tmnxBsxNotificationGroupV12v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 10, 7)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxSubModifyFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotificationGroupV12v0 = tmnxBsxNotificationGroupV12v0.setStatus('current')
tmnxBsxNotificationGroupV13v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 10, 8)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheFull"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheFullClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListUpdate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListFailure"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaTimFileProcFailure"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotificationGroupV13v0 = tmnxBsxNotificationGroupV13v0.setStatus('current')
tmnxBsxNotificationGroupV14v0 = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 10, 9)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaThreshCrossed"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaThreshCrossedClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatPolcrTcaThreshCrossed"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatPolcrTcaThreshCrClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatFtrTcaThreshCrossed"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatFtrTcaThreshCrClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatFtrEnTcaThreshCrossed"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatFtrEnTcaThreshCrClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPolDiamGxError"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDatapathCpuUsage"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDatapathCpuUsageClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValTcaCrossed"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValTcaCrossedClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotificationGroupV14v0 = tmnxBsxNotificationGroupV14v0.setStatus('current')
tmnxBsxCflowdGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 11))
tmnxBsxCflowdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 11, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfExpLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdVolRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdTemplateRetransmit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollVersion"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfFlowRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfExpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfExpRowLastChnge"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusRecReported"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusRecDropped"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusPktsSent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusFlowsNoRes"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusActFlowsCurr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusRecRateCurr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusPktRateCurr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusHCRecReported"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusHCRecDropped"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusHCPktsSent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusHCFlowsNoRes"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollStatDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollStatRecSent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdCollStatHCRecSent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatRecReport"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatHCRecReport"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatRecDropped"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatHCRecDropped"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatFlowsNoRes"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatHCFlowsNoRes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxCflowdGroup = tmnxBsxCflowdGroup.setStatus('current')
tmnxBsxCflowdGroupV9v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 11, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusHCUSupSSRCSt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusUSupSSRCStLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdStatusUSupSSRCStHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatHCUSupSSRCSt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatUSupSSRCStLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpStatUSupSSRCStHi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxCflowdGroupV9v0 = tmnxBsxCflowdGroupV9v0.setStatus('current')
tmnxBsxCflowdGroupV10v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 11, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfFlowRate2"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdPerfExpRateNum"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxCflowdGroupV10v0 = tmnxBsxCflowdGroupV10v0.setStatus('current')
tmnxBsxCflowdDirectExportGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 11, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirectExpLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirExpAddrLastChTim"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirectExportVlan"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirectExpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirectExpRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirectExpDescrption"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirectExpVersion"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirExpAddrRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirExpAddrRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirExpAddrAdmnState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirExpAddrOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirExpStatDscntTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdDirExpStatRecSent"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxCflowdDirectExportGroup = tmnxBsxCflowdDirectExportGroup.setStatus('current')
tmnxBsxOvrdGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 12))
tmnxBsxOvrdGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 12, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdAaSubLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdAaSubCharLastChTm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdAaSubRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdAaSubRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdAaSubCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdAaSubCharRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxOvrdAaSubCharValName"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxOvrdGroup = tmnxBsxOvrdGroup.setStatus('current')
tmnxBsxNotifyObjsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 13))
tmnxBsxNotifyObjsGroupV7v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 13, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaSubscriberType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaSubscriberName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaSubAcctLossReason"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotifyObjsGroupV7v0 = tmnxBsxNotifyObjsGroupV7v0.setStatus('current')
tmnxBsxNotifyObjsGroupV8v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 13, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotifyObjsGroupV8v0 = tmnxBsxNotifyObjsGroupV8v0.setStatus('current')
tmnxBsxNotifyObjsGroupV9v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 13, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyRadiusCoAAuditState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotifyObjsGroupV9v0 = tmnxBsxNotifyObjsGroupV9v0.setStatus('current')
tmnxBsxNotifyObjsGroupV13v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 13, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifySubFailedAction"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotifyObjsGroupV13v0 = tmnxBsxNotifyObjsGroupV13v0.setStatus('current')
tmnxBsxNotifyObjsGroupV14v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 13, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaPolicerName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgFilterType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgFilterName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgFltrWmarkType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaFtrEnCfgEntryId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcpValTcaName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcpValTcaWmarkType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxNotifyObjsGroupV14v0 = tmnxBsxNotifyObjsGroupV14v0.setStatus('current')
tmnxBsxTransitGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 14))
tmnxBsxTransitGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 14, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcySubLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcyAddrLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyDesc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyDefAppProf"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicySubIdPlcy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyRadius"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyRadAuthPlc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyDhcp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcySubRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcySubRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcySubAppProfNm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcySubRefCount"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcyAddrRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcyAddrRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransIpPlcyAddrSubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpSumParentSubType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpSumParentSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpSumAppProfNm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpSumIpOriginMask"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpSumUpdateTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPlcyLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSubLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntryLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyDesc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSubRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSubRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSubIsRemote"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSubAppProfNm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSubRefCount"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntryRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntryRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntrySubAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntrySubAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntrySubAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntryNetAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntryNetAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntryNetAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefEntrySubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumSubAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumSubAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumSubAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumNetAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumNetAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumNetAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumUpdateTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumParentSubType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumParentSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefSumAppProfNm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicySubsCount"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyIPv4EntCnt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicySubsCount"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyEntCount"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyIPv4EntCnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxTransitGroup = tmnxBsxTransitGroup.setStatus('current')
tmnxBsxTransitGroupV10v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 14, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyIPv6PfxLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyIPv6EntCnt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransPrefPolicyIPv6EntCnt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxTransitGroupV10v0 = tmnxBsxTransitGroupV10v0.setStatus('current')
tmnxBsxTransitSeenIpGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 14, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicySeenIp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyAutoCreate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicySeenIpRad"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerEPSapPortId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerEPSapEncap"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerEPSapEncType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerEPSdpBindId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyAutoInact"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxTransitSeenIpGroup = tmnxBsxTransitSeenIpGroup.setStatus('current')
tmnxBsxStatsGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 15))
tmnxBsxStatsGroupV9v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 15, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAppFilterHCFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAppFilterFlowsLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAppFilterFlowsHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAppFilterFlowHCOctC"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAppFilterFlowOctCLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAppFilterFlowOctCHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgMaxThruStats"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatIsaAaCfgLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatIsaAaCfgCollStats"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatIsaAaCfgPolicy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxStatsGroupV9v0 = tmnxBsxStatsGroupV9v0.setStatus('current')
tmnxBsxMobileGatewayGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 16))
tmnxBsxMobileGatewayGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 16, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAaWap1xLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaWap1xRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaWap1xAdminState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMobileGatewayGroup = tmnxBsxMobileGatewayGroup.setStatus('current')
tmnxBsxMgBillingExclusionsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 16, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgExTcpRetrans"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMgBillingExclusionsGroup = tmnxBsxMgBillingExclusionsGroup.setStatus('current')
tmnxBsxMgTetherDetectGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 16, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxTetherLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTetherRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTetherAdminState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMgTetherDetectGroup = tmnxBsxMgTetherDetectGroup.setStatus('current')
tmnxBsxHttpRedirGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 17))
tmnxBsxHttpRedirErrGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 17, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrCodeLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrEnabled"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrTemplateId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrHttpHost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrParticipantId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrCodeRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrCodeRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirErrorCodeMsgSize"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatHCRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatRedirLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatRedirHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatHCSizeExceeded"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatSizeExceededLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatSizeExceededHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatHCOutOfResource"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatOutOfResourceLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatOutOfResourceHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatHCNotRedirFType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatNotRedirFTypeLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatNotRedirFTypeHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatHCNotRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatNotRedirLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRdStatNotRedirHi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpRedirErrGroup = tmnxBsxHttpRedirErrGroup.setStatus('current')
tmnxBsxHttpRedirGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 17, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirEnabled"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirTemplateId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirHttpHost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpHttpRedirName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpHttpRedirFlowType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatHCRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatRedirLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatRedirHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatHCOutOfRes"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatOutOfResLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatOutOfResHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatHCNotRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatNotRedirLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatNotRedirHi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpRedirGroup = tmnxBsxHttpRedirGroup.setStatus('current')
tmnxBsxStaticObjGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 18))
tmnxBsxStaticObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 18, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxTListTableLastUpdateT"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTListAttribTableLUpdateT"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTListRowLastUpdateT"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTListDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTListAttribRowLastUpdateT"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTListAttribType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTListAttribValue"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxStaticObjGroup = tmnxBsxStaticObjGroup.setStatus('current')
tmnxBsxRedundancyObjGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 19))
tmnxBsxRedundancyObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 19, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpTableLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerIpType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerIpAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPriority"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstOperFlags"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerPriority"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerOperFlags"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstPeerSubRefType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpCommandControl"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpServPoint"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAarpId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxRedundancyObjGroup = tmnxBsxRedundancyObjGroup.setStatus('current')
tmnxBsxRedundancyEnhObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 19, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstMasterSelectMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxRedundancyEnhObjGroup = tmnxBsxRedundancyEnhObjGroup.setStatus('current')
tmnxBsxHttpEnrichObjGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 20))
tmnxBsxHttpEnrichObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 20, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichFieldLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichEnabled"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichFieldRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichFieldRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichFieldHeaderName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpHttpEnrichName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpHttpEnrichMaxPkt"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpEnrichObjGroup = tmnxBsxHttpEnrichObjGroup.setStatus('current')
tmnxBsxHttpEnrichStatObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 20, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichStatDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichHCNumEnriched"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichNumEnrichedLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichNumEnrichedHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichHCNumNoResource"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichNumNoResourceLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichNumNoResourceHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichHCMissngSubData"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichMissngSubDataLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichMissngSubDataHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichHCTplNotEnabled"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichTplNotEnabledLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichTplNotEnabledHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichHCTrafficChar"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichTrafficCharLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichTrafficCharHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichHCExceedMaxPkt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichExceedMaxPktLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichExceedMaxPktHi"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpEnrichStatObjGroup = tmnxBsxHttpEnrichStatObjGroup.setStatus('current')
tmnxBsxRadiusAccountingGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 21))
tmnxBsxRadiusAccountingObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 21, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAppChargeGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpChargeGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxChargeGrpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxChargeGrpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxChargeGrpExportId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxChargeGrpLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxChargeGrpRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPlcyCfgLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPlcyDefChargeGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPlcyRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgRadiusPlcy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaSubCfgExportMethod"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxRadiusAccountingObjGroup = tmnxBsxRadiusAccountingObjGroup.setStatus('current')
tmnxBsxRadApObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 21, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServerRetry"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServerTimeout"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServerVRtrID"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServerSrcAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServerSrcAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServerAlgorithm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApIntrmUpdateInterval"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApSignfcntChangeDelta"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServSecret"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServAcctPort"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServOperState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxRadApObjGroup = tmnxBsxRadApObjGroup.setStatus('current')
tmnxBsxRadApStatObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 21, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApTxRequests"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApRxResponses"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApReqTimeouts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApSendRetries"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApSendFail"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServTxRequests"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServRxResponses"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServReqTimeouts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServReqSendFail"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxRadApStatObjGroup = tmnxBsxRadApStatObjGroup.setStatus('current')
tmnxBsxRadiusAcctObjGroupV11v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 21, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpExportId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppExportId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppLastChTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxRadiusAcctObjGroupV11v0 = tmnxBsxRadiusAcctObjGroupV11v0.setStatus('current')
tmnxBsxSessionFilterGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 22))
tmnxBsxSessionFilterObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 22, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrDefaultAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsIpProtocol"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrStatsFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrStatsFlowsLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrStatsFlowsHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpSessionFilter"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpOutOfOrderFrags"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpAaSubCutThru"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsSrcAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsSrcAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsSrcAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsDstAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsDstAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsDstAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsSrcPortLVal"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsSrcPortHVal"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsSrcPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsDstPortLVal"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsDstPortHVal"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsDstPortOp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxSessionFilterObjGrp = tmnxBsxSessionFilterObjGrp.setStatus('current')
tmnxBsxUrlFilterGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 23))
tmnxBsxUrlFilterObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 23, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpUrlFilter"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterDefaultAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterServicePortVlan"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterHttpRedirName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterIcapHttpRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerAdminState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxUrlFilterObjGrp = tmnxBsxUrlFilterObjGrp.setStatus('current')
tmnxBsxUrlFilterStatsObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 23, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerOperFlags"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerStatsRequests"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerStatsReqErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerStatsRespAllow"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerStatsRespBlock"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerStatsRespRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerStatsRoundTrip"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerStatsReqRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerStatsConnTotal"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerStatsConnEst"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIcapServerStatsConnUtil"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaIfName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaIfServiceType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaIfServiceId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaIfAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaIfAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaIfAddrPrefixLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaIfIsaAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaIfIsaAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaIfIsaAddrPrefixLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaIfAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaIfOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrOperFlags"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsHttpRequests"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsHttpRespAllow"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsHttpRespRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsHttpRespBlock"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsHttpRespDef"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsHttpReqErrors"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsIcapLateResp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxUrlFilterStatsObjGrp = tmnxBsxUrlFilterStatsObjGrp.setStatus('current')
tmnxBsxHttpNotifGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 24))
tmnxBsxHttpNotifObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 24, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpHttpNotif"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifLastChangeTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifScriptUrl"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifTemplateId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifInterval"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifStatDiscntTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifStatInserted"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifStatCritNoMtch"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubHttpNotifLastTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubHttpUrlParam"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpNotifObjGrp = tmnxBsxHttpNotifObjGrp.setStatus('current')
tmnxBsxGroupsV11v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 25))
tmnxBsxHttpEnrAntiSpfObjGrpV11v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 25, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichFieldAntiSpoof"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpEnrAntiSpfObjGrpV11v0 = tmnxBsxHttpEnrAntiSpfObjGrpV11v0.setStatus('current')
tmnxBsxHttpEnAntiSpfStObGrpV11v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 25, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichAntiSpoofMod"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichNoAntiSpfShort"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpEnAntiSpfStObGrpV11v0 = tmnxBsxHttpEnAntiSpfStObGrpV11v0.setStatus('current')
tmnxBsxHttpEnrEncObjGrpV11v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 25, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichFieldEncodeType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichFieldEncodeKey"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpEnrEncObjGrpV11v0 = tmnxBsxHttpEnrEncObjGrpV11v0.setStatus('current')
tmnxBsxGroupsV12v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 26))
tmnxBsxPolicyObjGrp12v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 26, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAsoValDerivedFrom"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubAsoValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolResExStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerAqpEntryId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubPolicerName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlApply"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlConfigOwner"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdminCtrlLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterExprType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterFlowSetupDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterHttpMatchAllReq"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterIpProtocolNumOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocol"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterProtocolOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortFpp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortHigh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortLow"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppGrpStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCapacityCost"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfCharValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfDivert"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppStorageType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpCharRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsConflictsHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsConflictsLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsFlowsHi"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsFlowsLo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsHCConflicts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpStatsHCFlows"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoDefValName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxBitRateHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxBitRateLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprOffset"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCustProtRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowFullLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowSetupHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowSetupLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPacketRateHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPacketRateLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminCIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerAdminPIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerGranularity"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerMBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerPIRAdaptation"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtObsolete"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxProtParentName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUpgrade"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxVersion"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBaseRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBaseDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBaseAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBaseRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpBaseLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchApplication"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchApplicationOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchAppGroup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchAppGroupOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchTrafficDir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchDscp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchDscpOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchSrcAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchSrcAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchSrcAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchSrcAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchSrcPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchSrcPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchSrcPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchDstAddressType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchDstAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchDstAddressLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchDstAddressOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchDstPortOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchDstPortLowValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchDstPortHighValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchAaSubscriberType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchAaSubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchAaSubscriberOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchChargeGrp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchChargeGrpOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchIpProtocolNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchIpProtocolNumOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActionLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActDrop"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActBwLimitPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActFlowRatePolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActFlowCountPolicer"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActRemarkFc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActRemarkPriority"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActRemarkDscpInProf"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActRemarkDscpOutProf"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActMirrorSource"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActMirrorSourceAllIncl"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActHttpErrRedirName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActHttpRedirName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActHttpRedirFlowType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActHttpEnrichName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActSessionFilter"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActUrlFilter"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActHttpNotif"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoPersistId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAsoValPersistId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxPolicyObjGrp12v0 = tmnxBsxPolicyObjGrp12v0.setStatus('current')
tmnxBsxIpPrefixListObjGrpV12v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 26, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPfxList"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPrefixListDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPrefixListRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPrefixListRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPrefixListLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPrefixRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPrefixName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPrefixLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsDstPfxList"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsSrcPfxList"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEventLogLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEventLogRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEventLogRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEventLogBufferType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEventLogMaxEntries"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEventLogAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsActEventLog"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrDefActEventLog"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchSrcPfxList"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchDstPfxList"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActOverloadDrop"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActErrorDrop"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActFragDrop"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActEvtLogOverloadDrop"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActEvtLogErrorDrop"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActEvtLogFragDrop"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxIpPrefixListObjGrpV12v0 = tmnxBsxIpPrefixListObjGrpV12v0.setStatus('current')
tmnxBsxHttpEnrStStrObjGrpV12v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 26, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichFieldStaticStr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpEnrStStrObjGrpV12v0 = tmnxBsxHttpEnrStStrObjGrpV12v0.setStatus('current')
tmnxBsxTrafficStatsObjGrpV12v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 26, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatOctsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatPktsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatFlwsAdmFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatOctsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatPktsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatFlwsDnyFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatOctsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatPktsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatFlwsAdmToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatOctsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatPktsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatFlwsDnyToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatTermFlwDur"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatTermFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatShrtDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatMedDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatLngDurFlws"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatActFlwsFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTrafStatActFlwsToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPartAcctCfgLastChTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPartAcctCfgRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPartAcctCfgCollStats"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPartAcctCfgPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPartAcctCfgTrafStats"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPartAcctCfgTetherStats"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxTrafficStatsObjGrpV12v0 = tmnxBsxTrafficStatsObjGrpV12v0.setStatus('current')
tmnxBsxHttpRedirObjGrpV12v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 26, 6)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirTcpReset"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatTcpResets"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpRedirObjGrpV12v0 = tmnxBsxHttpRedirObjGrpV12v0.setStatus('current')
tmnxBsxUsageMonObjGrpV12v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 26, 7)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubUMOperStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubUMToSubGrantStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubUMFmSubGrantStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubUMBothGrantStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubUMToSubGrantCredit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubUMFmSubGrantCredit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubUMBothGrantCredit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubUMToSubUsedCredit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubUMFmSubUsedCredit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubUMBothUsedCredit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgUMStats"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxUsageMonObjGrpV12v0 = tmnxBsxUsageMonObjGrpV12v0.setStatus('current')
tmnxBsxUrlFilterObjGrpV12v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 26, 9)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterHttpReqFilter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxUrlFilterObjGrpV12v0 = tmnxBsxUrlFilterObjGrpV12v0.setStatus('current')
tmnxBsxLwObjGrpV12v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 26, 10)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpWlanGwGrpId"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxLwObjGrpV12v0 = tmnxBsxLwObjGrpV12v0.setStatus('current')
tmnxBsxMdaGroupV12v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 26, 11)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpTransPrefV4RmEntr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaTransPrefV4RemEntr"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxMdaGroupV12v0 = tmnxBsxMdaGroupV12v0.setStatus('current')
tmnxBsxGroupsV13v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 27))
tmnxBsxDnsIpCacheGroupV13v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 27, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerDnsIpCache"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActDnsIpCache"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheLastCTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheDomainLastCTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheServerLastCTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheRowLastChanged"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheSize"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheDomainExprStr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheDomainRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheDomainRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheServerRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheServerRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheServerName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheStatDnsResp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheStatDomMtch"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheStatDomSerMtch"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheStatAlarmClear"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheStatEntrAdd"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheStatEntrRmvd"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheStatFullCnt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheStatHitCnt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheStatMissCnt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheStatDiscntTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheDescription"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxDnsIpCacheGroupV13v0 = tmnxBsxDnsIpCacheGroupV13v0.setStatus('current')
tmnxBsxUrlListGroupV13v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 27, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrUrlListLastCTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrUrlListRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrUrlListRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListLastChangedTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListRowLastChanged"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListDecryptKey"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListFileUrl"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListUpgrade"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusOperFlags"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusNumEntries"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusUpgAttemptTm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusUpgSuccessTm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusUpgErrorLine"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusUpgErrReason"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusUpgErrDetail"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusUpgLineSkipd"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusUrlDeployed"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusUrlAttempted"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusIsCfgUrlDpld"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxUrlListGroupV13v0 = tmnxBsxUrlListGroupV13v0.setStatus('current')
tmnxBsxPolicyObjGrp13v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 27, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAppProfSubSuppressible"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxChargeGrpNotifyStartStop"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxPolicyObjGrp13v0 = tmnxBsxPolicyObjGrp13v0.setStatus('current')
tmnxBsxTrafficStatsObjGrpV13v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 27, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxStatAaAcctCfgAggrExpMeth"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterNetworkAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterNetworkAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterNetworkAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterNetworkAddrOp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterNetworkPfxList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxTrafficStatsObjGrpV13v0 = tmnxBsxTrafficStatsObjGrpV13v0.setStatus('current')
tmnxBsxGtpGroupV13v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 27, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpLastChangedTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrLastChangedTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrMsgLastChangedTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrLastChangedTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrPpidLastChngdTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpEvtLog"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerGtpFlowCountLmt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrMaxPayloadLength"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrDefaultAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrMsgValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrMsgRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrMsgRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrMsgAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrEvtLog"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrPpidRangeMin"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrPpidRangeMax"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrDefaultAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrEvtLog"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrPpidVal"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrPpidRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrPpidRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrPpidValAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartAqpInitialLookup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActGtpFilter"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActSctpFilter"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActFlowRatePlcrEvtLog"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActFlowCountPlcrEvtLog"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsDiscntTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsPkPermittedFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsPkPermittedToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsPkPrmtNoFltrFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsPkPrmtNoFltrToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsPkDndUdpLenFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsPkDndUdpLenToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsPkDndGtpLenFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsPkDndGtpLenToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsPkDndGtpVerFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsPkDndGtpVerToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsPkDndFlPlcrFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsPkDndFlPlcrToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsPkDndGtpFltrFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsPkDndGtpFltrToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsPkDndPlcyOthrFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpStatsPkDndPlcyOthrToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrStatsDiscntTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrStatsPkPermitted"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrStatsPkDndPayldLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrStatsPkDndMsgType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrStatsPkDndMandHdr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrStatsPkDndExtHdr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrStatsPkDndInfoElem"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrStatsDiscntTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrStatsPkPermitted"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrStatsPkDndMalfd"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrStatsPkDndPpidOOR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSctpFltrStatsPkDndPpidVal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxGtpGroupV13v0 = tmnxBsxGtpGroupV13v0.setStatus('current')
tmnxBsxHttpRedirObjGrpV13v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 27, 6)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirCaptivePortVlan"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsActHttpRedr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsDstDnsCache"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpPcyRdStatConfigError"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpRedirObjGrpV13v0 = tmnxBsxHttpRedirObjGrpV13v0.setStatus('current')
tmnxBsxHttpNotifObjGrpV13v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 27, 7)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifStatSuccess"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpNotifStatFailed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpNotifObjGrpV13v0 = tmnxBsxHttpNotifObjGrpV13v0.setStatus('current')
tmnxBsxIsa2ObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 27, 8)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpMinIsaGeneration"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxIsa2ObjGroup = tmnxBsxIsa2ObjGroup.setStatus('current')
tmnxBsxXHeaderObjGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 27, 9)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterIcapCustXHeader"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActUrlFiltrXHeaderChar"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxXHeaderObjGroup = tmnxBsxXHeaderObjGroup.setStatus('current')
tmnxBsxGroupsV14v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 28))
tmnxBsxStflFwEnhacementsObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 28, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAdmitDenyAcctTableLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdmitDenyAcctRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdmitDenyAcctPolicy"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdmitDenyAcctCollStats"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdmitDenyAcctSctpFtrStats"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdmitDenyAcctGtpFtrStats"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdmitDenyAcctSessFtrStats"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdmitDenyAcctPolcrStats"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdmitDenyAcctPolcrResrcs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgTableLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgHiWmark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaCfgLoWmark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaPolcrCfgTableLstCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaPolcrCfgRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaPolcrCfgRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaPolcrCfgHiWmark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaPolcrCfgLoWmark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaFtrCfgTableLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaFtrCfgRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaFtrCfgRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaFtrCfgHiWmark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaFtrCfgLoWmark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaFtrEnCfgTableLstCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaFtrEnCfgRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaFtrEnCfgRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaFtrEnCfgHiWmark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatTcaFtrEnCfgLoWmark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcaStatsTimeLastRaised"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcaStatsTimeLastCleared"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcaStatsTcaState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcaStatsTcaTrigType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcaPolcrStatsTmLastRaised"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcaPolcrStatsTmLastCleard"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcaPolcrStatsTcaState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcaPolcrStatsTcaTrigType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcaFtrStatsTimeLastRaised"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcaFtrStatsTimeLastCleard"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcaFtrStatsTcaState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcaFtrStatsTcaTrigType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcaFtrEnStatsTmLastRaised"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcaFtrEnStatsTmLastCleard"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcaFtrEnStatsTcaState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcaFtrEnStatsTcaTrigType"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxStflFwEnhacementsObjGrp = tmnxBsxStflFwEnhacementsObjGrp.setStatus('current')
tmnxBsxEventLogSyslogObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 28, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxEventLogSyslogAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEventLogSyslogAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEventLogSyslogPort"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEventLogSyslogDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEventLogSyslogVlan"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEventLogSyslogFacility"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEventLogSyslogSeverity"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSyslogStatsDiscntTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSyslogStatsEventsSent"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSyslogStatsEventsFailed"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxEventLogSyslogObjGrp = tmnxBsxEventLogSyslogObjGrp.setStatus('current')
tmnxBsxTransitIpPolicyDiamObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 28, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyDiamAppPlc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTransitIpPolicyDiameter"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxTransitIpPolicyDiamObjGrp = tmnxBsxTransitIpPolicyDiamObjGrp.setStatus('current')
tmnxBsxUrlListExtendedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 28, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListSize"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusNumChars"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusUpgInProgres"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxUrlListExtendedGroup = tmnxBsxUrlListExtendedGroup.setStatus('current')
tmnxBsxHttpsCaptiveRedirObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 28, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirCapHttpsEnbld"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpsCaptiveRedirObjGrp = tmnxBsxHttpsCaptiveRedirObjGrp.setStatus('current')
tmnxBsxTcpMssObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 28, 6)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActTcpMaxSegSize"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxTcpMssObjGrp = tmnxBsxTcpMssObjGrp.setStatus('current')
tmnxBsxGtpUntunnelingObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 28, 7)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpMode"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxGtpUntunnelingObjGrp = tmnxBsxGtpUntunnelingObjGrp.setStatus('current')
tmnxBsxTrapPerfObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 28, 9)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxDatapathCpuHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDatapathCpuLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowResMax"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowResAvg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowResPeak"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowResState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowResRsdCount"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowResRaisdTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowSetupState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowSetupRsdCnt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlowSetupRsdTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusBitRateState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusBitRateRsdCount"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusBitRateRsdTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktRateState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktRateRsdCount"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktRateRaisdTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusDatapathCpu"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusDatapathCpuAvg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusDatapathCpuPeak"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusDatapathCpuState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusDatapathCpuRsdCt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusDatapathCpuRsdTm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusMgmtCpu"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusMgmtCpuAvg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusMgmtCpuPeak"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusWaSBfFmSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusWaSBfFmSubState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusWaSBfFmSubRsdCnt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusWaSBfFmSubRsdTm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusWaSBfToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusWaSBfToSubState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusWaSBfToSubRsdCnt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusWaSBfToSubRsdTm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlwResCtThruOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusFlwResCtThruPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOvrldCtThruOcts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOvrldCtThruPkts"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOvrldCtThruState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOvrldCtThruRsdCt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOvrldCtThruRsdTm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxTrapPerfObjGrp = tmnxBsxTrapPerfObjGrp.setStatus('current')
tmnxBsxTcpValObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 28, 10)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValLastChangedTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValRowLastChanged"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValEventLog"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValEventLogAll"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValStrict"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpActTcpValidate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValTcaLastChangedTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValTcaRowLastChanged"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValTcaRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValTcaHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValTcaLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAdmitDenyAcctTcpValStats"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValTcaStatsLastRaised"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValTcaStatsLastCleard"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValTcaStatsTcaState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValTcaStatsTcaTrigType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValStatsAllowed"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValStatsDropBadFlag"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValStatsDropBadOption"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValStatsDropBadSEQ"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValStatsDropBadACK"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValStatsDropNoEstment"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValStatsDropAlreadyEst"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValStatsDropAsymmetric"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValStatsDropAfterRST"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValStatsDropFragmented"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTcpValStatsDiscntTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxTcpValObjGrp = tmnxBsxTcpValObjGrp.setStatus('current')
tmnxBsxGroupsV15v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 29))
tmnxBsx15v0ObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 29, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubCircuitId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubRemoteId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubMacAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSapPortId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSapEncapVal"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsx15v0ObjGrp = tmnxBsx15v0ObjGrp.setStatus('current')
tmnxBsxDEMV15v0ObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 29, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerRatePercentage"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAnlRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAnlRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAnlSource"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAnlSourceLevel"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAnlRttThreshold"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAnlRttThresholdTolerance"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxDEMV15v0ObjGrp = tmnxBsxDEMV15v0ObjGrp.setStatus('current')
tmnxBsxEsmMacV15v0ObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 29, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpUnassEsmMacSubs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaEsmMacSubscribers"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEsmMacSubSumUpdateTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEsmMacSubSumMacAddress"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEsmMacSubSumEsmSubscriber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxEsmMacSubSumAppProfNm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxEsmMacV15v0ObjGrp = tmnxBsxEsmMacV15v0ObjGrp.setStatus('current')
tmnxBsxAppFilterV15v0ObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 29, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterHttpPort"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterHttpPortOp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxAppFilterV15v0ObjGrp = tmnxBsxAppFilterV15v0ObjGrp.setStatus('current')
tmnxBsxPortListV15v0ObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 29, 6)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxPortListRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPortListRowLastChange"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPortListDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPortLow"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPortHigh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPortRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterServerPortList"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAppFilterHttpPortList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxPortListV15v0ObjGrp = tmnxBsxPortListV15v0ObjGrp.setStatus('current')
tmnxBsxDEMCngParamsV15v0ObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 29, 8)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCongestedAnlPIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCongestedAnlCIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCongestedAnlMBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCongestedAnlCBS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxDEMCngParamsV15v0ObjGrp = tmnxBsxDEMCngParamsV15v0ObjGrp.setStatus('current')
tmnxBsxPortListRefsV15v0ObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 29, 9)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchSrcPortList"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchDstPortList"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsSrcPortList"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSessFltrParamsDstPortList"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxPortListRefsV15v0ObjGrp = tmnxBsxPortListRefsV15v0ObjGrp.setStatus('current')
tmnxBsxCflowdExpOvdObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 29, 10)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpOvdMode"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdExpOvdPrefix"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxCflowdExpOvdObjGrp = tmnxBsxCflowdExpOvdObjGrp.setStatus('current')
tmnxBsxGroupsV16v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30))
tmnxBsxDnsIpCacheProxy16v0ObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheProxyRowLastCh"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheProxyRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheStatPrxyMtchCnt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheProxyLastCTime"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxDnsIpCacheProxy16v0ObjGrp = tmnxBsxDnsIpCacheProxy16v0ObjGrp.setStatus('current')
tmnxBsxHttpEnrichObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpEnrichFieldCertProf"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpEnrichObjGrp = tmnxBsxHttpEnrichObjGrp.setStatus('current')
tmnxBsxCertProfileObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxCertProfileRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCertProfileLastChgd"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCertProfileAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCertProfileOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCertProfileOperFlags"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCertProfileCertFile"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCertProfileDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCertProfileReferenceCount"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxCertProfileObjGrp = tmnxBsxCertProfileObjGrp.setStatus('current')
tmnxBsxCertProfileNotifyObjsGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyCertProfileName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyCertProfOperState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxCertProfileNotifyObjsGrp = tmnxBsxCertProfileNotifyObjsGrp.setStatus('current')
tmnxBsxCertProfileNotifyGrp = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 6)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxCertProfileOperStateChngd"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxCertProfileNotifyGrp = tmnxBsxCertProfileNotifyGrp.setStatus('current')
tmnxBsxSubCongDetObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 8)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxSubCongDetectRowLastChg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSubRttThreshold"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSubRttThresholdTolerance"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSubCongDetectAdminState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCongestedPIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCongestedCIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCongestedMBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCongestedCBS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxSubCongDetObjGrp = tmnxBsxSubCongDetObjGrp.setStatus('current')
tmnxBsxDEMObsoletedObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 9)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCongestedAnlPIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCongestedAnlCIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCongestedAnlMBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCongestedAnlCBS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxDEMObsoletedObjGrp = tmnxBsxDEMObsoletedObjGrp.setStatus('current')
tmnxBsxSubCongRenamedObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 10)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCongestedPIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCongestedCIR"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCongestedMBS"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPolicerCongestedCBS"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxSubCongRenamedObjGrp = tmnxBsxSubCongRenamedObjGrp.setStatus('current')
tmnxBsxHttpsRedirObsoletedObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 11)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirCapHttpsEnbld"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpsRedirObsoletedObjGrp = tmnxBsxHttpsRedirObsoletedObjGrp.setStatus('current')
tmnxBsxHttpsRedirHttpsRdrObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 12)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxHttpRedirHttpsRedirEnbld"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxHttpsRedirHttpsRdrObjGrp = tmnxBsxHttpsRedirHttpsRdrObjGrp.setStatus('current')
tmnxBsxGrpStatHttpsRedirObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 13)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsGenHttpRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsGenHttpRedir"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxGrpStatHttpsRedirObjGrp = tmnxBsxGrpStatHttpsRedirObjGrp.setStatus('current')
tmnxBsxOverloadSubQuarantineGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 15)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpOvrldSubQuarAdmin"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubQuarantined"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusSubsQuarantined"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxOverloadSubQuarantineGrp = tmnxBsxOverloadSubQuarantineGrp.setStatus('current')
tmnxBsxLateIcapBlockObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 16)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsIcapLRPktsDsc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsIcapLRBytsDsc"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxLateIcapBlockObjGrp = tmnxBsxLateIcapBlockObjGrp.setStatus('current')
tmnxBsxGrpStatusDirectionObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 17)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsInToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsInFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsInToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsInFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktDisCngInToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktDisCngInFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctDisCngInToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctDisCngInFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktInPChpErToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktInPChpErFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsToMdaToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsToMdaFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsInMdaToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsInMdaFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPkDisCngMdaToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPkDisCngMdaFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktDiscErrToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktDiscErrFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktDiscPlcyToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktDiscPlcyFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOcDisCngMdaToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOcDisCngMdaFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctDiscErrToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctDiscErrFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctDiscPlcyToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctDiscPlcyFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncPkToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncPkFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecPkToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecPkFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncOcToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzIncOcFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecOcToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktSzDecOcFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktPlcyBypsToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktPlcyBypsFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctPlcyBypsToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctPlcyBypsFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPkGenHttpRdToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPkGenHttpRdFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOcGenHttpRdToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOcGenHttpRdFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsFromMdaToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsFromMdaFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsFromMdaToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsFromMdaFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPkDisConOutToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPkDisConOutFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOcDisConOutToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOcDisConOutFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktOutPChErToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktOutPChErFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsOutToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktsOutFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsOutToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsOutFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktCutThrough"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktCutThrouToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusPktCutThrouFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctCutThrough"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctCutThrouToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctCutThrouFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsToMdaToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsToMdaFrSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsInMdaToSub"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpStatusOctsInMdaFrSub"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxGrpStatusDirectionObjGrp = tmnxBsxGrpStatusDirectionObjGrp.setStatus('current')
tmnxBsxTetheringDetectionObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 20)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxPlcyDefTetherChargeGrp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxTetheringDetectionObjGrp = tmnxBsxTetheringDetectionObjGrp.setStatus('current')
tmnxBsxOverloadSubQuarNotifyGrp = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 21)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxSubQuarantined"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxSubQuarantinedClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxOverloadSubQuarNotifyGrp = tmnxBsxOverloadSubQuarNotifyGrp.setStatus('current')
tmnxBsxShallowInspectionGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 30, 23)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAaGrpPartShallowInspect"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxShallowInspectionGrp = tmnxBsxShallowInspectionGrp.setStatus('current')
tmnxBsxGroupsV17v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 31))
tmnxBsxFlowAttrObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 31, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowAttrRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowAttrRowLstChg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowAttrConf"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpFlowAttrOperator"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatFlowAttrConfBinName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowAttrStatsDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatFlowAttrOctsFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatFlowAttrPktsFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatFlowAttrFlwsFmSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatFlowAttrOctsToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatFlowAttrPktsToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxStatFlowAttrFlwsToSb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFlowAttrRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFlowAttrRowLastCh"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxFlowAttrObjGrp = tmnxBsxFlowAttrObjGrp.setStatus('current')
tmnxBsxPartitionObsoleteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 31, 6)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpPartitions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxPartitionObsoleteGroup = tmnxBsxPartitionObsoleteGroup.setStatus('current')
tmnxBsxIsaAaVmTrafDistribByIpGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 31, 7)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpVmTrafficDistByIp"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxIsaAaVmTrafDistribByIpGrp = tmnxBsxIsaAaVmTrafDistribByIpGrp.setStatus('current')
tmnxBsxCflowConfigFieldsGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 31, 10)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdRecTmplAdmin"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdRecTmplFldsSelType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdRecTmplRowLstChg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdRecFldRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdRecFieldName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdRecFieldDescr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdRecFieldSize"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdRecFieldId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdRecFieldEnterprise"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdRecFldRowLstChg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdTemplateLastChTim"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdTmplFieldLastChTim"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxCflowConfigFieldsGroup = tmnxBsxCflowConfigFieldsGroup.setStatus('current')
tmnxBsxTetherStateObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 31, 11)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAqpMatchAaSubTetherState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubSumTetherState"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxTetherStateObjGrp = tmnxBsxTetherStateObjGrp.setStatus('current')
tmnxBsxTetherDetectObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 31, 12)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxTetherSingleDevRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTetherSingleDeviceExpTTL"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxTetherDetectObjGrp = tmnxBsxTetherDetectObjGrp.setStatus('current')
tmnxBsxUrlFltrWebServiceGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 31, 13)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxWebServCategoryName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxWebServCategRowLastChg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxWebServCategDescr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebServClassifyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebServFqdn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebServDnsAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebServDnsAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebServDefaultProf"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterWebServPortVlan"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebServCategSetId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltWebSerProfRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltWebSerProfDescr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltWebSerProfRoLstChg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltWebServCategRowSt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltWebServCategName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltWebSerCategRoLstChg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWsPrfListLastCTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWsCatListLastCTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsWebSvLateRsp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsWebSvLRPktDsc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsWebSvLRBytDsc"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsWebServReqs"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsWebServReqErr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebServStatsRndTp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebSvStatsReqRate"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebSvStatsConnTot"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebSvStatsConnEst"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebSerMaxCacheSize"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebSvDnsOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebSvDnsOperFlags"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpSRWebServCachSize"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxWebUrlClassifierDescr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxWebUrlCategSetRowLastChg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebServCacheSize"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebSerStatCacheHit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebSerStatCacheMis"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxUrlFltrWebServiceGroup = tmnxBsxUrlFltrWebServiceGroup.setStatus('current')
tmnxBsxFlowAttrObsoleteGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 31, 15)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFlowAttributes"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxFlowAttrObsoleteGroup = tmnxBsxFlowAttrObsoleteGroup.setStatus('current')
tmnxBsxGtpStatefulFirwallObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 31, 16)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpGtpTunnelDb"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpcInspection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrGtpInGtp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrValidateSeqNumber"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrValidateSrcIpAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrImsiApnDefAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrValidateGtpTunnels"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrImsiApnRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrMatchImsiPrefix"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrMatchApn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrMatchSrcGsnAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrMatchSrcGsnAddrTyp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrMatchSrcGsnAddrLen"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrMatchSrcIpPfxList"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrImsiApnEntryAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrImsiApnLastChgTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrV2MsgLastChgTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrV2MsgDefAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrV2MsgValue"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrV2MsgRowLastChg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrV2MsgRowStatus"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrV2MsgAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFilterImsiApnLastChg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrStatsPkDndV2MsgTyp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrStatsPkDndImsiApn"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrStatsPkDndInvSeqNo"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrStatsPkDndInvTeid"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrStatsPkDndInvSubIp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrStatsPkDndGtpInGtp"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrStatsPkDndMandIE"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrStatsPkDndTunDbRes"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpEventLogAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrEventLogAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaSRGtpTunDbSize"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGrpMdaSRGtpTunDbUtil"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrDefTunnelEpLimit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxGtpFltrStatsPkDndTunEpLmt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpVmTrafficDistTeid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxGtpStatefulFirwallObjGrp = tmnxBsxGtpStatefulFirwallObjGrp.setStatus('current')
tmnxBsxUrlFltrWebServNotifGrp = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 31, 17)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebServOprStateChg"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxUrlFltrWebServNotifGrp = tmnxBsxUrlFltrWebServNotifGrp.setStatus('current')
tmnxBsxIsaAaVmTrafDistribTeidGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 31, 20)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpVmTrafficDistTeid"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxIsaAaVmTrafDistribTeidGrp = tmnxBsxIsaAaVmTrafDistribTeidGrp.setStatus('obsolete')
tmnxBsxTlsTrafficStatsObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 31, 22)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatDiscontTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicOctsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicOctsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicPktsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicPktsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicFlwsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicFlwsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicEsniOctsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicEsniOctsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicEsniPktsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicEsniPktsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicEsniFlwsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicEsniFlwsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicExistOctsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicExistOctsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicExistPktsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicExistPktsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicExistFlwsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicExistFlwsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicUnknwnOctsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicUnknwnOctsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicUnknwnPktsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicUnknwnPktsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicUnknwnFlwsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatQuicUnknwnFlwsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls10OctsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls10OctsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls10PktsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls10PktsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls10FlwsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls10FlwsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls11OctsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls11OctsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls11PktsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls11PktsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls11FlwsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls11FlwsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls12OctsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls12OctsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls12PktsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls12PktsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls12FlwsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls12FlwsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls13OctsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls13OctsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls13PktsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls13PktsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls13FlwsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls13FlwsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls13EsniOctsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls13EsniOctsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls13EsniPktsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls13EsniPktsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls13EsniFlwsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTls13EsniFlwsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTlsExistOctsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTlsExistOctsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTlsExistPktsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTlsExistPktsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTlsExistFlwsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTlsExistFlwsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTlsUnknownOctsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTlsUnknownOctsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTlsUnknownPktsAdm"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTlsUnknownPktsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTlsUnknownFlwsDny"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxTlsStatTlsUnknownFlwsAdm"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxTlsTrafficStatsObjGrp = tmnxBsxTlsTrafficStatsObjGrp.setStatus('current')
tmnxBsxGroupsV20v0 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 32))
tmnxBsxUrlListEnhancementObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 32, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListHostExpressions"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxUrlListEnhancementObjGrp = tmnxBsxUrlListEnhancementObjGrp.setStatus('current')
tmnxBsxUrlFilterEnhancementGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 32, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterIcapDefAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterIcapDefHttpRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterIcapHttpRedirObj"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterWebDefAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterWebDefHttpRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterWebSerHttpRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterUrlAllowList"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrApplyFuncBehavior"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterBlListDefAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterBlListDefHtRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFilterBlListHttpRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListRegExprNumEntries"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrUrlListStatLkup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrUrlListStatMatch"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrUrlListStatDefault"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsWebSvRspAllow"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsWebSvRspRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsWebSvRspBlock"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsWebSvDefault"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsAllowListLkup"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsAllowLstMatch"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsUrlAllow"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsUrlBlockRedir"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsUrlDefAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsIcapDefault"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltWSClassOvrdRowSt"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltWSClassOvrdUrlExpr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltWSClassOvrdUrlCateg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltWSClassOvrdLstChg"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsWSClassOvrHit"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrStatsWSClassOvrMis"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWsClasOvrLastCTime"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltWSClassOvrdCategNam"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxUrlFilterEnhancementGrp = tmnxBsxUrlFilterEnhancementGrp.setStatus('current')
tmnxBsxCflowdFieldEncryptObjGrp = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 3, 1, 1, 63, 2, 32, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdAes128EncrptKey"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxCflowdAes256EncrptKey"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    tmnxBsxCflowdFieldEncryptObjGrp = tmnxBsxCflowdFieldEncryptObjGrp.setStatus('current')
tmnxBsxNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63))
tmnxBsxNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0))
tmnxBsxIsaAaGrpNonRedundantClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 1)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpNonRedundantClear.setStatus('current')
tmnxBsxIsaAaGrpSwitchover = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 2)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpSwitchover.setStatus('current')
tmnxBsxIsaAaGrpFlowFull = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 3)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFlowFull.setStatus('current')
tmnxBsxIsaAaGrpFlowFullClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 4)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFlowFullClear.setStatus('current')
tmnxBsxIsaAaGrpFailureV2 = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 5)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFailureV2.setStatus('current')
tmnxBsxIsaAaGrpFailureClearV2 = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 6)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFailureClearV2.setStatus('current')
tmnxBsxIsaAaGrpNonRedundantV2 = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 7)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpNonRedundantV2.setStatus('current')
tmnxBsxIsaAaSubLoadBalance = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 8)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActionStatus"))
if mibBuilder.loadTexts: tmnxBsxIsaAaSubLoadBalance.setStatus('current')
tmnxBsxIsaAaGrpCapCostThres = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 9)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpCapCostHighThres"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpCapCostThres.setStatus('current')
tmnxBsxIsaAaGrpCapCostThresClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 10)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpCapCostLowThres"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpCapCostThresClear.setStatus('current')
tmnxBsxAaSubscribersUnassigned = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 11)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"))
if mibBuilder.loadTexts: tmnxBsxAaSubscribersUnassigned.setStatus('current')
tmnxBsxAaSubscriberAcctDataLoss = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 12)).setObjects(("TIMETRA-LOG-MIB", "tmnxLogFileIdLogId"), ("TIMETRA-LOG-MIB", "tmnxLogNotifyApInterval"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaSubscriberType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaSubscriberName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaSubAcctLossReason"))
if mibBuilder.loadTexts: tmnxBsxAaSubscriberAcctDataLoss.setStatus('current')
tmnxBsxAaSubPolResExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 13)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"))
if mibBuilder.loadTexts: tmnxBsxAaSubPolResExceeded.setStatus('current')
tmnxBsxAaSubPolResExceededClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 14)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"))
if mibBuilder.loadTexts: tmnxBsxAaSubPolResExceededClear.setStatus('current')
tmnxBsxIsaAaGrpFlowSetup = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 15)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowSetupHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFlowSetup.setStatus('current')
tmnxBsxIsaAaGrpFlowSetupClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 16)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxFlowSetupLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFlowSetupClear.setStatus('current')
tmnxBsxIsaAaGrpPacketRate = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 17)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPacketRateHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpPacketRate.setStatus('current')
tmnxBsxIsaAaGrpPacketRateClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 18)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxPacketRateLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpPacketRateClear.setStatus('current')
tmnxBsxIsaAaGrpBitRate = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 19)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxBitRateHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpBitRate.setStatus('current')
tmnxBsxIsaAaGrpBitRateClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 20)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxBitRateLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpBitRateClear.setStatus('current')
tmnxBsxTransIpPolAaSubCreated = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 21)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaSubscriberName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpAaSubScale"))
if mibBuilder.loadTexts: tmnxBsxTransIpPolAaSubCreated.setStatus('current')
tmnxBsxTransIpPolAaSubDeleted = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 22)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaSubscriberName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxTransIpPolAaSubDeleted.setStatus('current')
tmnxBsxTransIpPolRadCoAAudit = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 23)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyRadiusCoAAuditState"))
if mibBuilder.loadTexts: tmnxBsxTransIpPolRadCoAAudit.setStatus('current')
tmnxBsxTransIpPolRadCoAError = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 24)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxTransIpPolRadCoAError.setStatus('current')
tmnxBsxTransIpPolRadDiscError = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 25)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxTransIpPolRadDiscError.setStatus('current')
tmnxBsxTransIpPolDhcpAddWarning = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 26)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxTransIpPolDhcpAddWarning.setStatus('current')
tmnxBsxTransIpPolDhcpDelWarning = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 27)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxTransIpPolDhcpDelWarning.setStatus('current')
tmnxBsxIsaAaGrpFmSbWaSBufOvld = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 28)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubWaSBfHiWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFmSbWaSBufOvld.setStatus('current')
tmnxBsxIsaAaGrpFmSbWaSBufOvldClr = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 29)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpFromSubWaSBfLoWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpFmSbWaSBufOvldClr.setStatus('current')
tmnxBsxIsaAaGrpToSbWaSBufOvld = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 30)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubWaSBfHiWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSbWaSBufOvld.setStatus('current')
tmnxBsxIsaAaGrpToSbWaSBufOvldClr = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 31)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxIsaAaGrpToSubWaSBfLoWmk"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpToSbWaSBufOvldClr.setStatus('current')
tmnxBsxIsaAaGrpOvrldCutthru = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 32)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpOvrldCutthru.setStatus('current')
tmnxBsxIsaAaGrpOvrldCutthruClr = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 33)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxIsaAaGrpOvrldCutthruClr.setStatus('current')
tmnxBsxTransitIpPersistenceWarn = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 34)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxTransitIpPersistenceWarn.setStatus('current')
tmnxBsxAarpInstOperStateChanged = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 35)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstOperFlags"))
if mibBuilder.loadTexts: tmnxBsxAarpInstOperStateChanged.setStatus('current')
tmnxBsxAarpInstStateChanged = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 36)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxAarpInstOperFlags"))
if mibBuilder.loadTexts: tmnxBsxAarpInstStateChanged.setStatus('current')
tmnxBsxRadApFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 37)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApDescription"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxRadApFailure.setStatus('current')
tmnxBsxRadApServOperStateChange = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 38)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServAddrType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServAddr"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApServOperState"))
if mibBuilder.loadTexts: tmnxBsxRadApServOperStateChange.setStatus('current')
tmnxBsxMobileSubModifyFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 39)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxMobileSubModifyFailure.setStatus('current')
tmnxBsxRadApIntrmUpdateSkipped = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 40)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxRadApIntrmUpdateInterval"))
if mibBuilder.loadTexts: tmnxBsxRadApIntrmUpdateSkipped.setStatus('current')
tmnxBsxHttpUrlParamLimitExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 41)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxHttpUrlParamLimitExceeded.setStatus('current')
tmnxBsxUrlFilterOperStateChange = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 42)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrOperFlags"))
if mibBuilder.loadTexts: tmnxBsxUrlFilterOperStateChange.setStatus('current')
tmnxBsxSubModifyFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 43)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifySubFailedAction"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxSubModifyFailure.setStatus('current')
tmnxBsxDnsIpCacheFull = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 44)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheSize"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheFull.setStatus('current')
tmnxBsxDnsIpCacheFullClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 45)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDnsIpCacheSize"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxDnsIpCacheFullClear.setStatus('current')
tmnxBsxUrlListUpdate = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 46)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusNumEntries"))
if mibBuilder.loadTexts: tmnxBsxUrlListUpdate.setStatus('current')
tmnxBsxUrlListFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 47)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlListStatusOperFlags"))
if mibBuilder.loadTexts: tmnxBsxUrlListFailure.setStatus('current')
tmnxBsxIsaAaTimFileProcFailure = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 48)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxIsaAaTimFileProcFailure.setStatus('current')
tmnxBsxStatTcaThreshCrossed = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 49)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxStatTcaThreshCrossed.setStatus('current')
tmnxBsxStatTcaThreshCrossedClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 50)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxStatTcaThreshCrossedClear.setStatus('current')
tmnxBsxStatPolcrTcaThreshCrossed = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 51)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaPolicerName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxStatPolcrTcaThreshCrossed.setStatus('current')
tmnxBsxStatPolcrTcaThreshCrClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 52)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaPolicerName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxStatPolcrTcaThreshCrClear.setStatus('current')
tmnxBsxStatFtrTcaThreshCrossed = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 53)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgFilterType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgFilterName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgFltrWmarkType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxStatFtrTcaThreshCrossed.setStatus('current')
tmnxBsxStatFtrTcaThreshCrClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 54)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgFilterType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgFilterName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgFltrWmarkType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxStatFtrTcaThreshCrClear.setStatus('current')
tmnxBsxStatFtrEnTcaThreshCrossed = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 55)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgFilterType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgFilterName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaFtrEnCfgEntryId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxStatFtrEnTcaThreshCrossed.setStatus('current')
tmnxBsxStatFtrEnTcaThreshCrClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 56)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgFilterType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgFilterName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaFtrEnCfgEntryId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxStatFtrEnTcaThreshCrClear.setStatus('current')
tmnxBsxTransIpPolDiamGxError = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 57)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTransitIpPolicyId"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxTransIpPolDiamGxError.setStatus('current')
tmnxBsxDatapathCpuUsage = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 58)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDatapathCpuHighWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxDatapathCpuUsage.setStatus('current')
tmnxBsxDatapathCpuUsageClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 59)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyActiveMda"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxDatapathCpuLowWatermark"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaSlotNum"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaMdaNum"))
if mibBuilder.loadTexts: tmnxBsxDatapathCpuUsageClear.setStatus('current')
tmnxBsxTcpValTcaCrossed = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 60)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcpValTcaName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcpValTcaWmarkType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxTcpValTcaCrossed.setStatus('current')
tmnxBsxTcpValTcaCrossedClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 61)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyAaGrpPartIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcpValTcaName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcpValTcaWmarkType"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyTcaCfgDirection"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxTcpValTcaCrossedClear.setStatus('current')
tmnxBsxCertProfileOperStateChngd = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 62)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyIsaAaGroupIndex"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyCertProfileName"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyCertProfOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxNotifyReason"))
if mibBuilder.loadTexts: tmnxBsxCertProfileOperStateChngd.setStatus('current')
tmnxBsxSubQuarantined = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 63)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubQuarantined"))
if mibBuilder.loadTexts: tmnxBsxSubQuarantined.setStatus('current')
tmnxBsxSubQuarantinedClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 64)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxAaSubQuarantined"))
if mibBuilder.loadTexts: tmnxBsxSubQuarantinedClear.setStatus('current')
tmnxBsxUrlFltrWebServOprStateChg = NotificationType((1, 3, 6, 1, 4, 1, 6527, 3, 1, 3, 63, 0, 65)).setObjects(("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebSvDnsOperState"), ("TIMETRA-BSX-NG-MIB", "tmnxBsxUrlFltrWebSvDnsOperFlags"))
if mibBuilder.loadTexts: tmnxBsxUrlFltrWebServOprStateChg.setStatus('current')
mibBuilder.exportSymbols("TIMETRA-BSX-NG-MIB", tmnxBsxSubRttThreshold=tmnxBsxSubRttThreshold, tmnxBsxSubQuarantinedClear=tmnxBsxSubQuarantinedClear, tmnxBsxAqpStatsHCFlows=tmnxBsxAqpStatsHCFlows, tmnxBsxUrlFltrStatsIcapLRPktsDsc=tmnxBsxUrlFltrStatsIcapLRPktsDsc, tmnxBsxGroupsV14v0=tmnxBsxGroupsV14v0, TmnxBsxWebServClassifierIdKey=TmnxBsxWebServClassifierIdKey, tmnxBsxGrpStatusPktsOutToSub=tmnxBsxGrpStatusPktsOutToSub, tmnxBsxSessFltrParamsDstDnsCache=tmnxBsxSessFltrParamsDstDnsCache, tmnxBsxSctpFltrPpidRowStatus=tmnxBsxSctpFltrPpidRowStatus, tmnxBsxRadApServRowStatus=tmnxBsxRadApServRowStatus, tmnxBsxStatTcaPolcrCfgRowLastCh=tmnxBsxStatTcaPolcrCfgRowLastCh, tmnxBsxAqpAaSubscriber=tmnxBsxAqpAaSubscriber, tmnxBsxStatAaFlwsDnyFmSb=tmnxBsxStatAaFlwsDnyFmSb, tmnxBsxIsaAaGrpFmSbWaSBufOvldClr=tmnxBsxIsaAaGrpFmSbWaSBufOvldClr, tmnxBsxStatTcaCfgFilterWmarkType=tmnxBsxStatTcaCfgFilterWmarkType, tmnxBsxStaticObjGroups=tmnxBsxStaticObjGroups, tmnxBsxGrpStatusSubsModifiedHi=tmnxBsxGrpStatusSubsModifiedHi, tmnxBsxAaSubPolicerEntry=tmnxBsxAaSubPolicerEntry, tmnxBsxStatAaActFlwsToSb=tmnxBsxStatAaActFlwsToSb, tmnxBsxStatAaSubSdyPktsDnyToSb=tmnxBsxStatAaSubSdyPktsDnyToSb, tmnxBsxGroupsV16v0=tmnxBsxGroupsV16v0, tmnxBsxUrlFltrStatsIcapDefault=tmnxBsxUrlFltrStatsIcapDefault, TmnxBsxAaSubscriberType=TmnxBsxAaSubscriberType, tmnxBsxIsaAaGrpUnassignedEsmSubs=tmnxBsxIsaAaGrpUnassignedEsmSubs, tmnxBsxAqpTable=tmnxBsxAqpTable, tmnxBsxAqpActHttpEnrichName=tmnxBsxAqpActHttpEnrichName, tmnxBsxCflowdGroup=tmnxBsxCflowdGroup, tmnxBsxAqpMatchRowLastChange=tmnxBsxAqpMatchRowLastChange, tmnxBsxUrlFilterScalars=tmnxBsxUrlFilterScalars, tmnxBsxUrlFilterUrlAllowList=tmnxBsxUrlFilterUrlAllowList, tmnxBsxDnsIpCacheAdminState=tmnxBsxDnsIpCacheAdminState, tmnxBsxSyslogStatsEventsFailed=tmnxBsxSyslogStatsEventsFailed, tmnxBsxTransitIpPolicyDhcp=tmnxBsxTransitIpPolicyDhcp, tmnxBsxAarpInstState=tmnxBsxAarpInstState, tmnxBsxStatAaSubSdyPktsDnyFmSb=tmnxBsxStatAaSubSdyPktsDnyFmSb, tmnxBsxStatAaHCTermFlws=tmnxBsxStatAaHCTermFlws, TmnxBsxWebServCategorySetId=TmnxBsxWebServCategorySetId, tmnxBsxRadApIntrmUpdateInterval=tmnxBsxRadApIntrmUpdateInterval, tmnxBsxIcapServerOperFlags=tmnxBsxIcapServerOperFlags, tmnxBsxGrpStatusPktOutPChErToSub=tmnxBsxGrpStatusPktOutPChErToSub, tmnxBsxCertProfileLastChgd=tmnxBsxCertProfileLastChgd, tmnxBsxAqpSrcPortLowValue=tmnxBsxAqpSrcPortLowValue, tmnxBsxGtpFltrStatsTable=tmnxBsxGtpFltrStatsTable, tmnxBsxCflowdPerfMeasType=tmnxBsxCflowdPerfMeasType, tmnxBsxIsaAaGrpRowStatus=tmnxBsxIsaAaGrpRowStatus, tmnxBsxPrefixListTable=tmnxBsxPrefixListTable, tmnxBsx15v0ObjGrp=tmnxBsx15v0ObjGrp, tmnxBsxDnsIpCacheProxyAddrType=tmnxBsxDnsIpCacheProxyAddrType, tmnxBsxDnsIpCacheFullClear=tmnxBsxDnsIpCacheFullClear, tmnxBsxAqpAaSubCutThru=tmnxBsxAqpAaSubCutThru, tmnxBsxHttpEnrichLastChTime=tmnxBsxHttpEnrichLastChTime, tmnxBsxGrpStatusSeenIpReqSentLo=tmnxBsxGrpStatusSeenIpReqSentLo, tmnxBsxHttpEnrichNumNoResourceHi=tmnxBsxHttpEnrichNumNoResourceHi, tmnxBsxStatsAccounting=tmnxBsxStatsAccounting, tmnxBsxStatAaSubPktsDnyFmSb=tmnxBsxStatAaSubPktsDnyFmSb, tmnxBsxTransIpPolDhcpDelWarning=tmnxBsxTransIpPolDhcpDelWarning, tmnxBsxGtpFltrValidateSeqNumber=tmnxBsxGtpFltrValidateSeqNumber, tmnxBsxGrpStatusFlowsCurrent=tmnxBsxGrpStatusFlowsCurrent, tmnxBsxHttpRdStatNotRedirHi=tmnxBsxHttpRdStatNotRedirHi, tmnxBsxCflowdStatusHCUSupSSRCSt=tmnxBsxCflowdStatusHCUSupSSRCSt, tmnxBsxHttpPcyRdStatRedirLo=tmnxBsxHttpPcyRdStatRedirLo, tmnxBsxStatAaPktsAdmFmSb=tmnxBsxStatAaPktsAdmFmSb, tmnxBsxAarpInstAdminState=tmnxBsxAarpInstAdminState, tmnxBsxTlsStatTls10FlwsAdm=tmnxBsxTlsStatTls10FlwsAdm, tmnxBsxTlsTrafficStatsObjGrp=tmnxBsxTlsTrafficStatsObjGrp, tmnxBsxGrpStatusDatapathCpuRsdTm=tmnxBsxGrpStatusDatapathCpuRsdTm, tmnxBsxRedundancyEnhObjGroup=tmnxBsxRedundancyEnhObjGroup, tmnxBsxGrpStatusSubsDiverted=tmnxBsxGrpStatusSubsDiverted, tmnxBsxGrpStatusWaSBfFmSubRsdCnt=tmnxBsxGrpStatusWaSBfFmSubRsdCnt, tmnxBsxGtpFltrStatsPkDndV2MsgTyp=tmnxBsxGtpFltrStatsPkDndV2MsgTyp, tmnxBsxTlsStatTls10OctsDny=tmnxBsxTlsStatTls10OctsDny, tmnxBsxGtpFltrDefTunnelEpLimit=tmnxBsxGtpFltrDefTunnelEpLimit, tmnxBsxStaticObjGroup=tmnxBsxStaticObjGroup, tmnxBsxStatAaSubHCOctsAdmToSb=tmnxBsxStatAaSubHCOctsAdmToSb, tmnxBsxCompliance=tmnxBsxCompliance, tmnxBsxAqpAppGroup=tmnxBsxAqpAppGroup, tmnxBsxCflowdStatusTable=tmnxBsxCflowdStatusTable, TmnxBsxExprSubStringType=TmnxBsxExprSubStringType, tmnxBsxAaSubPolResExTable=tmnxBsxAaSubPolResExTable, tmnxBsxGroupsV20v0=tmnxBsxGroupsV20v0, tmnxBsxAqpMatchDstPortList=tmnxBsxAqpMatchDstPortList, tmnxBsxGrpStatusSubsDivertedAvg=tmnxBsxGrpStatusSubsDivertedAvg, tmnxBsxAaIfIsaAddr=tmnxBsxAaIfIsaAddr, tmnxBsxHttpRedirErrCodeRowStatus=tmnxBsxHttpRedirErrCodeRowStatus, tmnxBsxStatAaAppFilterFlowOctCLo=tmnxBsxStatAaAppFilterFlowOctCLo, tmnxBsxAaGrpPartAqpInitialLookup=tmnxBsxAaGrpPartAqpInitialLookup, tmnxBsxStatAaNumSubscribers=tmnxBsxStatAaNumSubscribers, tmnxBsxAppProfCharLastChTime=tmnxBsxAppProfCharLastChTime, tmnxBsxAsoValEntry=tmnxBsxAsoValEntry, tmnxBsxNotifyObjsGroupV13v0=tmnxBsxNotifyObjsGroupV13v0, tmnxBsxGrpStatusWaSBfToSubRsdCnt=tmnxBsxGrpStatusWaSBfToSubRsdCnt, tmnxBsxStatAaSubSdyMedDurFlws=tmnxBsxStatAaSubSdyMedDurFlws, tmnxBsxDnsIpCacheStatEntrRmvd=tmnxBsxDnsIpCacheStatEntrRmvd, tmnxBsxAaIfAddrType=tmnxBsxAaIfAddrType, tmnxBsxGtpFltrStatsPkPermitted=tmnxBsxGtpFltrStatsPkPermitted, tmnxBsxAnlSource=tmnxBsxAnlSource, tmnxBsxAaSubSumHCLngDurFlws=tmnxBsxAaSubSumHCLngDurFlws, tmnxBsxHttpPcyRdStatHCNotRedir=tmnxBsxHttpPcyRdStatHCNotRedir, tmnxBsxCflowdVolRate=tmnxBsxCflowdVolRate, tmnxBsxCflowdExpRowLastChange=tmnxBsxCflowdExpRowLastChange, tmnxBsxAppCfgTable=tmnxBsxAppCfgTable, tmnxBsxCflowdCollRowLastChange=tmnxBsxCflowdCollRowLastChange, tmnxBsxAarpInstEntry=tmnxBsxAarpInstEntry, tmnxBsxGrpStatusFlowResPeak=tmnxBsxGrpStatusFlowResPeak, tmnxBsxDnsIpCacheStatPrxyMtchCnt=tmnxBsxDnsIpCacheStatPrxyMtchCnt, tmnxBsxHttpRdStatNotRedirFTypeLo=tmnxBsxHttpRdStatNotRedirFTypeLo, tmnxBsxAppFilterPolicyVersion=tmnxBsxAppFilterPolicyVersion, tmnxBsxGtpFltrMatchSrcGsnAddrLen=tmnxBsxGtpFltrMatchSrcGsnAddrLen, tmnxBsxPortListRefsV15v0ObjGrp=tmnxBsxPortListRefsV15v0ObjGrp, tmnxBsxHttpEnrichScalars=tmnxBsxHttpEnrichScalars, tmnxBsxUrlFilterObjs=tmnxBsxUrlFilterObjs, tmnxBsxStatFtrEnTcaThreshCrossed=tmnxBsxStatFtrEnTcaThreshCrossed, tmnxBsxGrpStatusFlowSetupState=tmnxBsxGrpStatusFlowSetupState, tmnxBsxEventLogSyslogDescription=tmnxBsxEventLogSyslogDescription, tmnxBsxTransitIpPolicyId=tmnxBsxTransitIpPolicyId, TmnxBsxExprSubString=TmnxBsxExprSubString, tmnxBsxPortListRowStatus=tmnxBsxPortListRowStatus, tmnxBsxCflowdExpOvdMode=tmnxBsxCflowdExpOvdMode, tmnxBsxHttpEnrichNumEnrichedHi=tmnxBsxHttpEnrichNumEnrichedHi, tmnxBsxHttpEnrichObjGroup=tmnxBsxHttpEnrichObjGroup, tmnxBsxEventLogSyslogPort=tmnxBsxEventLogSyslogPort, tmnxBsxGrpStatusPktSzIncPkHi=tmnxBsxGrpStatusPktSzIncPkHi, tmnxBsxGrpStatusPkDisConOutFrSub=tmnxBsxGrpStatusPkDisConOutFrSub, tmnxBsxAqpFlowAttrTable=tmnxBsxAqpFlowAttrTable, tmnxBsxHttpRedirErrLastChTime=tmnxBsxHttpRedirErrLastChTime, tmnxBsxRadApRowStatus=tmnxBsxRadApRowStatus, tmnxBsxPolicerRowStatus=tmnxBsxPolicerRowStatus, tmnxBsxPolicyGroupV10v0=tmnxBsxPolicyGroupV10v0, tmnxBsxRadApServStatTable=tmnxBsxRadApServStatTable, tmnxBsxMdaGroupV8v0=tmnxBsxMdaGroupV8v0, tmnxBsxTListAttribTableLUpdateT=tmnxBsxTListAttribTableLUpdateT, tmnxBsxAaSubSumHCFlwsDnyFmSb=tmnxBsxAaSubSumHCFlwsDnyFmSb, tmnxBsxIcapServerStatsEntry=tmnxBsxIcapServerStatsEntry, tmnxBsxRadApServIndex=tmnxBsxRadApServIndex, tmnxBsxStatTcaCfgDirection=tmnxBsxStatTcaCfgDirection, tmnxBsxStatAaMedDurFlws=tmnxBsxStatAaMedDurFlws, tmnxBsxSessFltrParamsSrcAddrType=tmnxBsxSessFltrParamsSrcAddrType, tmnxBsxTlsStatQuicUnknwnPktsDny=tmnxBsxTlsStatQuicUnknwnPktsDny, tmnxBsxAaIfOperTable=tmnxBsxAaIfOperTable, TmnxBsxAnlSource=TmnxBsxAnlSource, tmnxBsxTcaFtrEnStatsEntry=tmnxBsxTcaFtrEnStatsEntry, tmnxBsxStatAaAppFilterFlowHCOctC=tmnxBsxStatAaAppFilterFlowHCOctC, tmnxBsxTcaStatsTimeLastRaised=tmnxBsxTcaStatsTimeLastRaised, tmnxBsxAaSubStatsInterval=tmnxBsxAaSubStatsInterval, tmnxBsxUrlFilterWebSerHttpRedir=tmnxBsxUrlFilterWebSerHttpRedir, tmnxBsxGrpStatusPktInPChpErToSub=tmnxBsxGrpStatusPktInPChpErToSub, tmnxBsxAppName=tmnxBsxAppName, tmnxBsxTransPrefPolicyIPv4EntCnt=tmnxBsxTransPrefPolicyIPv4EntCnt, tmnxBsxIsaAaGrpLoadBalanceStatus=tmnxBsxIsaAaGrpLoadBalanceStatus, tmnxBsxAppFilterNetworkAddrLen=tmnxBsxAppFilterNetworkAddrLen, tmnxBsxStatTcaFtrCfgRowLastCh=tmnxBsxStatTcaFtrCfgRowLastCh, tmnxBsxFlowSetupLowWatermark=tmnxBsxFlowSetupLowWatermark, tmnxBsxDnsIpCacheStatEntry=tmnxBsxDnsIpCacheStatEntry, tmnxBsxAaSubSumHCMedDurFlws=tmnxBsxAaSubSumHCMedDurFlws, tmnxBsxAqpActUrlFilter=tmnxBsxAqpActUrlFilter, tmnxBsxAppFilterIpProtocolNum=tmnxBsxAppFilterIpProtocolNum, tmnxBsxGrpStatusOctDiscErrFrSub=tmnxBsxGrpStatusOctDiscErrFrSub, tmnxBsxGrpStatusPktCutThrouToSub=tmnxBsxGrpStatusPktCutThrouToSub, tmnxBsxCustProtExprRowStatus=tmnxBsxCustProtExprRowStatus, tmnxBsxPolicyObjGrp12v0=tmnxBsxPolicyObjGrp12v0, tmnxBsxGrpStatusOctsFromMda=tmnxBsxGrpStatusOctsFromMda, tmnxBsxGrpStatusHCPktsDiscPolicy=tmnxBsxGrpStatusHCPktsDiscPolicy, tmnxBsxPolicerOvrdRowLastChange=tmnxBsxPolicerOvrdRowLastChange, tmnxBsxUrlListStatusUpgAttemptTm=tmnxBsxUrlListStatusUpgAttemptTm, tmnxBsxGtpStatsPkDndGtpVerToSb=tmnxBsxGtpStatsPkDndGtpVerToSb, tmnxBsxOvrdObjs=tmnxBsxOvrdObjs, tmnxBsxAaSubSumOctsDnyToSb=tmnxBsxAaSubSumOctsDnyToSb, tmnxBsxTransPrefSumSubAddrType=tmnxBsxTransPrefSumSubAddrType, tmnxBsxStatAaSubSdyHCOctsAdmFmSb=tmnxBsxStatAaSubSdyHCOctsAdmFmSb, tmnxBsxTlsStatTls13OctsAdm=tmnxBsxTlsStatTls13OctsAdm, tmnxBsxStatAaOctsDnyToSb=tmnxBsxStatAaOctsDnyToSb, tmnxBsxGtpFltrMsgEntry=tmnxBsxGtpFltrMsgEntry, tmnxBsxStatTcaPolcrCfgEntry=tmnxBsxStatTcaPolcrCfgEntry, tmnxBsxNotificationGroupV10v0=tmnxBsxNotificationGroupV10v0, tmnxBsxHttpEnrichStatEntry=tmnxBsxHttpEnrichStatEntry, tmnxBsxGrpStatusEgrQFwdInPPkts=tmnxBsxGrpStatusEgrQFwdInPPkts, tmnxBsxProtEntry=tmnxBsxProtEntry, tmnxBsxMdaGroupV7v0=tmnxBsxMdaGroupV7v0, tmnxBsxAqpMatchSrcAddressOp=tmnxBsxAqpMatchSrcAddressOp, tmnxBsxTrafStatShrtDurFlws=tmnxBsxTrafStatShrtDurFlws, tmnxBsxAaSubTransPrefPolicyId=tmnxBsxAaSubTransPrefPolicyId, tmnxBsxGrpMdaEsmSubscribers=tmnxBsxGrpMdaEsmSubscribers, tmnxBsxAppFilterDescription=tmnxBsxAppFilterDescription, tmnxBsxAppProfSubSuppressible=tmnxBsxAppProfSubSuppressible, tmnxBsxStatAaSubHCPktsDnyFmSb=tmnxBsxStatAaSubHCPktsDnyFmSb, tmnxBsxDnsIpCacheStatHitCnt=tmnxBsxDnsIpCacheStatHitCnt, tmnxBsxSyslogStatsEntry=tmnxBsxSyslogStatsEntry, tmnxBsxTcpValEntry=tmnxBsxTcpValEntry, tmnxBsxGrpStatusPktsInToSub=tmnxBsxGrpStatusPktsInToSub, tmnxBsxStatPolcrTcaThreshCrossed=tmnxBsxStatPolcrTcaThreshCrossed, tmnxBsxGrpStatusFlowSetupRatePk=tmnxBsxGrpStatusFlowSetupRatePk, tmnxBsxRadApServRxResponses=tmnxBsxRadApServRxResponses, tmnxBsxTransPrefSubRowStatus=tmnxBsxTransPrefSubRowStatus, tmnxBsxComplianceV9v0=tmnxBsxComplianceV9v0, tmnxBsxCflowdExpStatHCUSupSSRCSt=tmnxBsxCflowdExpStatHCUSupSSRCSt, tmnxBsxAqpSrcPortOp=tmnxBsxAqpSrcPortOp, tmnxBsxAqpBwLimitPolicer=tmnxBsxAqpBwLimitPolicer, tmnxBsxRadApServTable=tmnxBsxRadApServTable, tmnxBsxCflowdRecTmplRowLstChg=tmnxBsxCflowdRecTmplRowLstChg, tmnxBsxCflowdCollOperState=tmnxBsxCflowdCollOperState, tmnxBsxTransPrefPlcyLastChTime=tmnxBsxTransPrefPlcyLastChTime, tmnxBsxHttpEnrichHCMissngSubData=tmnxBsxHttpEnrichHCMissngSubData, tmnxBsxAqpIpProtocolNumOp=tmnxBsxAqpIpProtocolNumOp, tmnxBsxGrpStatusHCOctsToMda=tmnxBsxGrpStatusHCOctsToMda, tmnxBsxAppFilterServerAddrLen=tmnxBsxAppFilterServerAddrLen, tmnxBsxUrlListUpdate=tmnxBsxUrlListUpdate, tmnxBsxUrlFltrStatsAllowLstMatch=tmnxBsxUrlFltrStatsAllowLstMatch, tmnxBsxAarpInstPeerOperFlags=tmnxBsxAarpInstPeerOperFlags, tmnxBsxPolicyObjGrp13v0=tmnxBsxPolicyObjGrp13v0, tmnxBsxGtpFltrEntry=tmnxBsxGtpFltrEntry, tmnxBsxTcpValStatsUnits=tmnxBsxTcpValStatsUnits, tmnxBsxTlsStatTls11OctsDny=tmnxBsxTlsStatTls11OctsDny, tmnxBsxUrlFltrWsCatListLastCTime=tmnxBsxUrlFltrWsCatListLastCTime, tmnxBsxAaSubSumTetherState=tmnxBsxAaSubSumTetherState, tmnxBsxCflowdExpStatFlowsNoRes=tmnxBsxCflowdExpStatFlowsNoRes, tmnxBsxOvrdAaSubRowLastCh=tmnxBsxOvrdAaSubRowLastCh, tmnxBsxStatAaSubSdyShrtDurFlws=tmnxBsxStatAaSubSdyShrtDurFlws, tmnxBsxGrpStatusPktSzIncOcLo=tmnxBsxGrpStatusPktSzIncOcLo, tmnxBsxRedundancyObjGroups=tmnxBsxRedundancyObjGroups, TmnxBsxAqpHttpRedirFlowType=TmnxBsxAqpHttpRedirFlowType, tmnxBsxStatAaSubSdyPktsAdmToSb=tmnxBsxStatAaSubSdyPktsAdmToSb, tmnxBsxGrpStatusFlowResMax=tmnxBsxGrpStatusFlowResMax, tmnxBsxGrpStatusPktsToMdaToSub=tmnxBsxGrpStatusPktsToMdaToSub, tmnxBsxTlsStatQuicExistFlwsAdm=tmnxBsxTlsStatQuicExistFlwsAdm, tmnxBsxAaIfServicePortVlan=tmnxBsxAaIfServicePortVlan, tmnxBsxPolicerDescription=tmnxBsxPolicerDescription, tmnxBsxGtpFltrImsiApnLastChgTime=tmnxBsxGtpFltrImsiApnLastChgTime, tmnxBsxTransitIpPolicyRadius=tmnxBsxTransitIpPolicyRadius, tmnxBsxHttpPcyRdStatEntry=tmnxBsxHttpPcyRdStatEntry, tmnxBsxAqpMatchIpProtocolNum=tmnxBsxAqpMatchIpProtocolNum, tmnxBsxUrlListHostExpressions=tmnxBsxUrlListHostExpressions, tmnxBsxGrpStatusOctPlcyBypsToSub=tmnxBsxGrpStatusOctPlcyBypsToSub, tmnxBsxSctpFltrStatsPkDndPpidOOR=tmnxBsxSctpFltrStatsPkDndPpidOOR, tmnxBsxPolicyGroupV9v0=tmnxBsxPolicyGroupV9v0, tmnxBsxNotifyTcaCfgFilterName=tmnxBsxNotifyTcaCfgFilterName, tmnxBsxGrpStatusFlows=tmnxBsxGrpStatusFlows, tmnxBsxStatAaSubCfgRowStatus=tmnxBsxStatAaSubCfgRowStatus, tmnxBsxGrpMdaTransPrefV6RemEntr=tmnxBsxGrpMdaTransPrefV6RemEntr, tmnxBsxAsoTable=tmnxBsxAsoTable, tmnxBsxStatAaSubTermFlws=tmnxBsxStatAaSubTermFlws, tmnxBsxAarpCommandTable=tmnxBsxAarpCommandTable, tmnxBsxStatAaPktsDnyToSb=tmnxBsxStatAaPktsDnyToSb, tmnxBsxHttpEnrichDescription=tmnxBsxHttpEnrichDescription, tmnxBsxHttpPcyRdStatRedirHi=tmnxBsxHttpPcyRdStatRedirHi, tmnxBsxTcpValTcaName=tmnxBsxTcpValTcaName, tmnxBsxHttpPcyRdStatNotRedirHi=tmnxBsxHttpPcyRdStatNotRedirHi, tmnxBsxWebUrlCategorySetId=tmnxBsxWebUrlCategorySetId, tmnxBsxAqpUrlFilter=tmnxBsxAqpUrlFilter, tmnxBsxGrpStatusHCFlows=tmnxBsxGrpStatusHCFlows, tmnxBsxStatAaSubHCPktsDnyToSb=tmnxBsxStatAaSubHCPktsDnyToSb, tmnxBsxStatAaHCPktsAdmFmSb=tmnxBsxStatAaHCPktsAdmFmSb, tmnxBsxStatAaSubHCMedDurFlws=tmnxBsxStatAaSubHCMedDurFlws, tmnxBsxCflowdTemplateLastChTim=tmnxBsxCflowdTemplateLastChTim, tmnxBsxAqpDstPortOp=tmnxBsxAqpDstPortOp)
mibBuilder.exportSymbols("TIMETRA-BSX-NG-MIB", tmnxBsxDnsIpCacheDomainLastCTime=tmnxBsxDnsIpCacheDomainLastCTime, tmnxBsxTcpValTcaRowStatus=tmnxBsxTcpValTcaRowStatus, tmnxBsxIsaAaGrpTable=tmnxBsxIsaAaGrpTable, tmnxBsxGrpStatusEgrQDroInPPkts=tmnxBsxGrpStatusEgrQDroInPPkts, tmnxBsxStatTcaCfgFilterName=tmnxBsxStatTcaCfgFilterName, tmnxBsxAdmitDenyAcctGtpFtrStats=tmnxBsxAdmitDenyAcctGtpFtrStats, tmnxBsxCflowdGroupV9v0=tmnxBsxCflowdGroupV9v0, tmnxBsxIsaAaGrpUnassignedSpkSubs=tmnxBsxIsaAaGrpUnassignedSpkSubs, tmnxBsxTransitIpPolicySubEntry=tmnxBsxTransitIpPolicySubEntry, tmnxBsxIsaAaGrpFlowAttributes=tmnxBsxIsaAaGrpFlowAttributes, tmnxBsxCflowdCollStatEntry=tmnxBsxCflowdCollStatEntry, tmnxBsxTlsStatQuicExistPktsDny=tmnxBsxTlsStatQuicExistPktsDny, tmnxBsxHttpRdStatEntry=tmnxBsxHttpRdStatEntry, tmnxBsxUrlFilterOperStateChange=tmnxBsxUrlFilterOperStateChange, tmnxBsxAqpBasePolicyVersion=tmnxBsxAqpBasePolicyVersion, tmnxBsxBitRateHighWatermark=tmnxBsxBitRateHighWatermark, tmnxBsxGtpFltrStatsPkDndMandIE=tmnxBsxGtpFltrStatsPkDndMandIE, tmnxBsxAaSubUMBothUsedCredit=tmnxBsxAaSubUMBothUsedCredit, tmnxBsxGrpStatusTrafficRateAvg=tmnxBsxGrpStatusTrafficRateAvg, tmnxBsxNotifyReason=tmnxBsxNotifyReason, tmnxBsxCflowdFieldEncryptObjGrp=tmnxBsxCflowdFieldEncryptObjGrp, tmnxBsxIsaAaGrpUnassignedTIpSubs=tmnxBsxIsaAaGrpUnassignedTIpSubs, tmnxBsxTrafficStatsObjGrpV13v0=tmnxBsxTrafficStatsObjGrpV13v0, tmnxBsxGrpStatusHCSubsDeleted=tmnxBsxGrpStatusHCSubsDeleted, tmnxBsxUrlFltrWebSvDnsOperState=tmnxBsxUrlFltrWebSvDnsOperState, tmnxBsxStflFwEnhacementsObjGrp=tmnxBsxStflFwEnhacementsObjGrp, tmnxBsxGrpStatusOctPlcyBypsFrSub=tmnxBsxGrpStatusOctPlcyBypsFrSub, tmnxBsxHttpEnrichFieldAntiSpoof=tmnxBsxHttpEnrichFieldAntiSpoof, tmnxBsxWebServCategoryId=tmnxBsxWebServCategoryId, tmnxBsxStatAaSubFlwsAdmFmSb=tmnxBsxStatAaSubFlwsAdmFmSb, tmnxBsxAqpDstPortHighValue=tmnxBsxAqpDstPortHighValue, tmnxBsxGrpStatusWaSBfFmSub=tmnxBsxGrpStatusWaSBfFmSub, tmnxBsxAaGrpPartXOnlineHost=tmnxBsxAaGrpPartXOnlineHost, tmnxBsxCflowdCollTable=tmnxBsxCflowdCollTable, tmnxBsxAqpMatchDstPortHighValue=tmnxBsxAqpMatchDstPortHighValue, tmnxBsxRadApTxRequests=tmnxBsxRadApTxRequests, TmnxBsxProtocolDirection=TmnxBsxProtocolDirection, tmnxBsxStatAaSubHCFlwsDnyFmSb=tmnxBsxStatAaSubHCFlwsDnyFmSb, tmnxBsxTetherTable=tmnxBsxTetherTable, TmnxBsxWebServiceCategoryIdKey=TmnxBsxWebServiceCategoryIdKey, tmnxBsxAppFilterHttpPortOp=tmnxBsxAppFilterHttpPortOp, tmnxBsxSessFltrParamsActEventLog=tmnxBsxSessFltrParamsActEventLog, tmnxBsxTcpValRowLastChanged=tmnxBsxTcpValRowLastChanged, tmnxBsxGrpStatusHCPktsOutPChipEr=tmnxBsxGrpStatusHCPktsOutPChipEr, tmnxBsxAaSubSumMedDurFlws=tmnxBsxAaSubSumMedDurFlws, tmnxBsxStatAaOctsDnyFmSb=tmnxBsxStatAaOctsDnyFmSb, tmnxBsxGrpStatusPkGenHttpRdToSub=tmnxBsxGrpStatusPkGenHttpRdToSub, tmnxBsxUrlListName=tmnxBsxUrlListName, tmnxBsxUrlFilterIcapDefHttpRedir=tmnxBsxUrlFilterIcapDefHttpRedir, tmnxBsxTlsStatQuicEsniPktsAdm=tmnxBsxTlsStatQuicEsniPktsAdm, tmnxBsxGtpFltrV2MsgRowLastChg=tmnxBsxGtpFltrV2MsgRowLastChg, tmnxBsxHttpEnrichTrafficCharHi=tmnxBsxHttpEnrichTrafficCharHi, tmnxBsxCflowdDirectExportGroup=tmnxBsxCflowdDirectExportGroup, tmnxBsxDnsIpCacheProxyTable=tmnxBsxDnsIpCacheProxyTable, tmnxBsxTetherDetectObjGrp=tmnxBsxTetherDetectObjGrp, tmnxBsxGrpStatusEgrQIndex=tmnxBsxGrpStatusEgrQIndex, tmnxBsxGrpStatusHCSeenIpReqDrop=tmnxBsxGrpStatusHCSeenIpReqDrop, tmnxBsxTlsStatTls13EsniFlwsDny=tmnxBsxTlsStatTls13EsniFlwsDny, tmnxBsxHttpNotifAdminState=tmnxBsxHttpNotifAdminState, tmnxBsxAqpSrcAddressOp=tmnxBsxAqpSrcAddressOp, tmnxBsxSubRttThresholdTolerance=tmnxBsxSubRttThresholdTolerance, tmnxBsxAppRowStatus=tmnxBsxAppRowStatus, tmnxBsxStatTcaCfgTable=tmnxBsxStatTcaCfgTable, tmnxBsxIsaAaGrpAaSubScale=tmnxBsxIsaAaGrpAaSubScale, tmnxBsxStatAaSubSdyLastChTime=tmnxBsxStatAaSubSdyLastChTime, tmnxBsxSubQuarantined=tmnxBsxSubQuarantined, tmnxBsxUrlFltrStatsWebSvDefault=tmnxBsxUrlFltrStatsWebSvDefault, tmnxBsxGrpStatusEgrQHCDroInPPkts=tmnxBsxGrpStatusEgrQHCDroInPPkts, tmnxBsxPolicerOvrdStartHour=tmnxBsxPolicerOvrdStartHour, tmnxBsxHttpRdStatSizeExceededLo=tmnxBsxHttpRdStatSizeExceededLo, tmnxBsxHttpEnrichMissngSubDataHi=tmnxBsxHttpEnrichMissngSubDataHi, TmnxBsxFirstPacketPolicy=TmnxBsxFirstPacketPolicy, tmnxBsxWebServCategorySetId=tmnxBsxWebServCategorySetId, tmnxBsxGrpStatusWaSBfToSub=tmnxBsxGrpStatusWaSBfToSub, tmnxBsxHttpRedirErrRowStatus=tmnxBsxHttpRedirErrRowStatus, tmnxBsxHttpEnrichNumNoResourceLo=tmnxBsxHttpEnrichNumNoResourceLo, tmnxBsxGtpStatsPkDndPlcyOthrToSb=tmnxBsxGtpStatsPkDndPlcyOthrToSb, tmnxBsxTransPrefEntrySubAddr=tmnxBsxTransPrefEntrySubAddr, tmnxBsxStatAaHCFlwsAdmFmSb=tmnxBsxStatAaHCFlwsAdmFmSb, tmnxBsxGrpStatusIngQHCFwdOutPOcts=tmnxBsxGrpStatusIngQHCFwdOutPOcts, tmnxBsxCustProtExprIndex=tmnxBsxCustProtExprIndex, tmnxBsxStatAaSubHCOctsDnyToSb=tmnxBsxStatAaSubHCOctsDnyToSb, tmnxBsxSubCongDetectEntry=tmnxBsxSubCongDetectEntry, tmnxBsxCflowdTable=tmnxBsxCflowdTable, tmnxBsxDatapathCpuLowWatermark=tmnxBsxDatapathCpuLowWatermark, tmnxBsxGrpStatusPktSzDecPkHi=tmnxBsxGrpStatusPktSzDecPkHi, tmnxBsxGtpEvtLog=tmnxBsxGtpEvtLog, tmnxBsxIsaAaGrpPartitions=tmnxBsxIsaAaGrpPartitions, tmnxBsxGrpStatusPktsInMda=tmnxBsxGrpStatusPktsInMda, tmnxBsxPolicerOperTodOverride=tmnxBsxPolicerOperTodOverride, tmnxBsxTransIpPlcySubAppProfNm=tmnxBsxTransIpPlcySubAppProfNm, tmnxBsxTransPrefSumNetAddr=tmnxBsxTransPrefSumNetAddr, tmnxBsxIsaAaVmTrafDistribTeidGrp=tmnxBsxIsaAaVmTrafDistribTeidGrp, tmnxBsxAaSubSumActFlwsFmSb=tmnxBsxAaSubSumActFlwsFmSb, tmnxBsxRadApServerRetry=tmnxBsxRadApServerRetry, tmnxBsxUrlFltrUrlListStatsEntry=tmnxBsxUrlFltrUrlListStatsEntry, tmnxBsxAqpActFlowCountPolicer=tmnxBsxAqpActFlowCountPolicer, tmnxBsxAqpMatchAaSubscriber=tmnxBsxAqpMatchAaSubscriber, tmnxBsxStatAaSubSdyFlwsDnyToSb=tmnxBsxStatAaSubSdyFlwsDnyToSb, tmnxBsxHttpRedirErrTable=tmnxBsxHttpRedirErrTable, tmnxBsxPolicerRatePercentage=tmnxBsxPolicerRatePercentage, tmnxBsxStatAaSubHCLngDurFlws=tmnxBsxStatAaSubHCLngDurFlws, tmnxBsxStatFlowAttrOctsFmSb=tmnxBsxStatFlowAttrOctsFmSb, tmnxBsxTcpValStatsAllowed=tmnxBsxTcpValStatsAllowed, tmnxBsxIcapServerStatsConnTotal=tmnxBsxIcapServerStatsConnTotal, tmnxBsxIsaAaGrpTransPrefV4RmEntr=tmnxBsxIsaAaGrpTransPrefV4RmEntr, tmnxBsxAqpSapSubscrEncapValue=tmnxBsxAqpSapSubscrEncapValue, tmnxBsxAarpInstPeerEPSdpBindId=tmnxBsxAarpInstPeerEPSdpBindId, tmnxBsxAppGrpPolicyVersion=tmnxBsxAppGrpPolicyVersion, tmnxBsxPrefixLength=tmnxBsxPrefixLength, tmnxBsxPolicerTable=tmnxBsxPolicerTable, TmnxBsxAarpServPoint=TmnxBsxAarpServPoint, tmnxBsxStatAaHCPktsAdmToSb=tmnxBsxStatAaHCPktsAdmToSb, tmnxBsxHttpEnrichStatObjGroup=tmnxBsxHttpEnrichStatObjGroup, tmnxBsxGrpStatusHCPktsToMda=tmnxBsxGrpStatusHCPktsToMda, tmnxBsxAqpActTcpValidate=tmnxBsxAqpActTcpValidate, tmnxBsxGtpFltrStatsPkDndInfoElem=tmnxBsxGtpFltrStatsPkDndInfoElem, tmnxBsxGtpFltrStatsEntry=tmnxBsxGtpFltrStatsEntry, tmnxBsxStatAaAcctCfgRowLastCh=tmnxBsxStatAaAcctCfgRowLastCh, tmnxBsxTransPrefEntrySubAddrLen=tmnxBsxTransPrefEntrySubAddrLen, tmnxBsxAqpChargeGrpOp=tmnxBsxAqpChargeGrpOp, tmnxBsxPrefixTable=tmnxBsxPrefixTable, tmnxBsxComplianceV20v0=tmnxBsxComplianceV20v0, tmnxBsxUrlFltrUrlListStatDefault=tmnxBsxUrlFltrUrlListStatDefault, tmnxBsxCflowdExpStatUSupSSRCStHi=tmnxBsxCflowdExpStatUSupSSRCStHi, tmnxBsxCflowdTmplFieldLastChTim=tmnxBsxCflowdTmplFieldLastChTim, tmnxBsxGrpStatusPktSzDecPkLo=tmnxBsxGrpStatusPktSzDecPkLo, tmnxBsxTransPrefSumParentSubType=tmnxBsxTransPrefSumParentSubType, tmnxBsxHttpRedirObjs=tmnxBsxHttpRedirObjs, tmnxBsxTcpValTcaStatsTcaState=tmnxBsxTcpValTcaStatsTcaState, tmnxBsxDatapathCpuHighWatermark=tmnxBsxDatapathCpuHighWatermark, tmnxBsxGroupsV15v0=tmnxBsxGroupsV15v0, tmnxBsxTransitIpPolicyAddrTable=tmnxBsxTransitIpPolicyAddrTable, tmnxBsxUrlFltWebSerCategRoLstChg=tmnxBsxUrlFltWebSerCategRoLstChg, tmnxBsxPacketRateLowWatermark=tmnxBsxPacketRateLowWatermark, tmnxBsxAqpSubscriberOp=tmnxBsxAqpSubscriberOp, tmnxBsxHttpRdStatHCRedir=tmnxBsxHttpRdStatHCRedir, tmnxBsxTlsStatQuicExistPktsAdm=tmnxBsxTlsStatQuicExistPktsAdm, tmnxBsxGrpStatusPktsToMda=tmnxBsxGrpStatusPktsToMda, tmnxBsxAqpMatchDstAddressOp=tmnxBsxAqpMatchDstAddressOp, tmnxBsxUrlFltWSClassOvrdLstChg=tmnxBsxUrlFltWSClassOvrdLstChg, tmnxBsxChargeGrpDescription=tmnxBsxChargeGrpDescription, tmnxBsxAqpEntry=tmnxBsxAqpEntry, tmnxBsxUrlFltrStatsHttpRequests=tmnxBsxUrlFltrStatsHttpRequests, tmnxBsxGrpStatusEgrQEntry=tmnxBsxGrpStatusEgrQEntry, tmnxBsxEsmMacIpAddrType=tmnxBsxEsmMacIpAddrType, tmnxBsxIsaAaGrpToSbWaSBufOvld=tmnxBsxIsaAaGrpToSbWaSBufOvld, tmnxBsxGrpStatusIngQHCDroInPPkts=tmnxBsxGrpStatusIngQHCDroInPPkts, tmnxBsxRadApServReqSendFail=tmnxBsxRadApServReqSendFail, tmnxBsxCflowdCollRowStatus=tmnxBsxCflowdCollRowStatus, tmnxBsxCustProtAdminState=tmnxBsxCustProtAdminState, tmnxBsxAarpCommandEntry=tmnxBsxAarpCommandEntry, tmnxBsxSessFltrDescription=tmnxBsxSessFltrDescription, tmnxBsxRedundancyObjs=tmnxBsxRedundancyObjs, tmnxBsxNotifyObjsGroups=tmnxBsxNotifyObjsGroups, tmnxBsxGrpStatusDirectionObjGrp=tmnxBsxGrpStatusDirectionObjGrp, tmnxBsxGrpStatusOctCutThrouToSub=tmnxBsxGrpStatusOctCutThrouToSub, tmnxBsxStaticObjScalars=tmnxBsxStaticObjScalars, tmnxBsxCflowdExpStatRecDropped=tmnxBsxCflowdExpStatRecDropped, tmnxBsxAqpDstAddress=tmnxBsxAqpDstAddress, tmnxBsxGrpStatusOctsInMda=tmnxBsxGrpStatusOctsInMda, tmnxBsxAppFilterServerPortOp=tmnxBsxAppFilterServerPortOp, tmnxBsxPrefixLastChTime=tmnxBsxPrefixLastChTime, tmnxBsxAqpActRemarkDscpOutProf=tmnxBsxAqpActRemarkDscpOutProf, tmnxBsxCflowdPerfLastChangeTime=tmnxBsxCflowdPerfLastChangeTime, tmnxBsxDnsIpCacheProxy16v0ObjGrp=tmnxBsxDnsIpCacheProxy16v0ObjGrp, tmnxBsxUrlFilterBlListDefAction=tmnxBsxUrlFilterBlListDefAction, tmnxBsxAaSubSumHCTermFlwDur=tmnxBsxAaSubSumHCTermFlwDur, tmnxBsxChargeGrpNotifyStartStop=tmnxBsxChargeGrpNotifyStartStop, tmnxBsxAqpStatsConflictsLo=tmnxBsxAqpStatsConflictsLo, tmnxBsxSessFltrStatsEntry=tmnxBsxSessFltrStatsEntry, tmnxBsxDnsIpCacheGroupV13v0=tmnxBsxDnsIpCacheGroupV13v0, tmnxBsxGrpStatusOctDisCngInToSub=tmnxBsxGrpStatusOctDisCngInToSub, tmnxBsxAqpCharRowLastChange=tmnxBsxAqpCharRowLastChange, tmnxBsxAdminLastChangeTime=tmnxBsxAdminLastChangeTime, tmnxBsxAaSubSumOctsAdmToSb=tmnxBsxAaSubSumOctsAdmToSb, tmnxBsxFlowSetupHighWatermark=tmnxBsxFlowSetupHighWatermark, tmnxBsxTlsStatQuicUnknwnOctsAdm=tmnxBsxTlsStatQuicUnknwnOctsAdm, tmnxBsxGrpStatusOcGenHttpRdFrSub=tmnxBsxGrpStatusOcGenHttpRdFrSub, tmnxBsxStatTcaFtrCfgRowStatus=tmnxBsxStatTcaFtrCfgRowStatus, tmnxBsxCflowdCollAddressType=tmnxBsxCflowdCollAddressType, tmnxBsxAaSubCircuitId=tmnxBsxAaSubCircuitId, tmnxBsxRadApServerVRtrID=tmnxBsxRadApServerVRtrID, tmnxBsxCflowdExpTable=tmnxBsxCflowdExpTable, tmnxBsxOvrdAaSubCharRowStatus=tmnxBsxOvrdAaSubCharRowStatus, tmnxBsxStatAaSubOctsAdmFmSb=tmnxBsxStatAaSubOctsAdmFmSb, tmnxBsxAqpMatchAaSubTetherState=tmnxBsxAqpMatchAaSubTetherState, tmnxBsxAqpActFragDrop=tmnxBsxAqpActFragDrop, tmnxBsxNotificationGroupV13v0=tmnxBsxNotificationGroupV13v0, tmnxBsxCustProtEntryId=tmnxBsxCustProtEntryId, tmnxBsxStatAaHCMedDurFlws=tmnxBsxStatAaHCMedDurFlws, tmnxBsxGrpStatusHCPktsDisCongMda=tmnxBsxGrpStatusHCPktsDisCongMda, tmnxBsxStatAaPktsAdmToSb=tmnxBsxStatAaPktsAdmToSb, tmnxBsxAdminCtrlTable=tmnxBsxAdminCtrlTable, tmnxBsxAqpSpokeSdpSubscr=tmnxBsxAqpSpokeSdpSubscr, tmnxBsxGrpStatusPktsInFrSub=tmnxBsxGrpStatusPktsInFrSub, tmnxBsxTListDescription=tmnxBsxTListDescription, tmnxBsxSctpFltrPpidEntry=tmnxBsxSctpFltrPpidEntry, tmnxBsxTetheringDetectionObjGrp=tmnxBsxTetheringDetectionObjGrp, tmnxBsxStatAaSubFlwsDnyFmSb=tmnxBsxStatAaSubFlwsDnyFmSb, tmnxBsxTListAttribTable=tmnxBsxTListAttribTable, tmnxBsxAaIfAddr=tmnxBsxAaIfAddr, tmnxBsxAaSubSumTermFlws=tmnxBsxAaSubSumTermFlws, tmnxBsxOvrdAaSubCharTable=tmnxBsxOvrdAaSubCharTable, tmnxBsxStatIsaAaCfgTable=tmnxBsxStatIsaAaCfgTable, tmnxBsxGtpFltrGtpInGtp=tmnxBsxGtpFltrGtpInGtp, tmnxBsxDnsIpCacheStatAlarmClear=tmnxBsxDnsIpCacheStatAlarmClear, tmnxBsxUrlFltrWebServFqdn=tmnxBsxUrlFltrWebServFqdn, tmnxBsxTransPrefSumSubAddr=tmnxBsxTransPrefSumSubAddr, tmnxBsxUrlListStatusIsCfgUrlDpld=tmnxBsxUrlListStatusIsCfgUrlDpld, tmnxBsxTransitIpPolicyAutoInact=tmnxBsxTransitIpPolicyAutoInact, tmnxBsxAppProfCharCharName=tmnxBsxAppProfCharCharName, tmnxBsxAqpHttpNotif=tmnxBsxAqpHttpNotif, tmnxBsxAaSubSumHCPktsAdmToSb=tmnxBsxAaSubSumHCPktsAdmToSb, tmnxBsxDnsIpCacheServerAddrType=tmnxBsxDnsIpCacheServerAddrType, tmnxBsxAaSubRemoteId=tmnxBsxAaSubRemoteId, tmnxBsxAdmitDenyAcctRowLastCh=tmnxBsxAdmitDenyAcctRowLastCh, tmnxBsxGroups=tmnxBsxGroups, tmnxBsxGtpFltrStatsPkDndInvSeqNo=tmnxBsxGtpFltrStatsPkDndInvSeqNo, tmnxBsxGtpFltrImsiApnRowStatus=tmnxBsxGtpFltrImsiApnRowStatus, tmnxBsxCflowdDirExpAddrRowLastCh=tmnxBsxCflowdDirExpAddrRowLastCh, tmnxBsxAaGrpPartHttpMatchAllReq=tmnxBsxAaGrpPartHttpMatchAllReq, tmnxBsxPortListEntry=tmnxBsxPortListEntry, tmnxBsxTcpValStatsDropAsymmetric=tmnxBsxTcpValStatsDropAsymmetric, TmnxBsxTListAttribType=TmnxBsxTListAttribType, tmnxBsxGrpStatusPktDiscErrToSub=tmnxBsxGrpStatusPktDiscErrToSub, tmnxBsxOvrdGroup=tmnxBsxOvrdGroup, tmnxBsxGrpStatusHCPktsInPChipErs=tmnxBsxGrpStatusHCPktsInPChipErs, tmnxBsxStatTcaCfgEntry=tmnxBsxStatTcaCfgEntry, tmnxBsxTcpValStatsDropFragmented=tmnxBsxTcpValStatsDropFragmented, tmnxBsxUrlListUpgrade=tmnxBsxUrlListUpgrade, tmnxBsxCflowdExpStatEntry=tmnxBsxCflowdExpStatEntry, tmnxBsxGrpStatusHCOctsOut=tmnxBsxGrpStatusHCOctsOut, tmnxBsxSctpFltrLastChangedTime=tmnxBsxSctpFltrLastChangedTime, tmnxBsxGrpMdaSRGtpTunDbUtil=tmnxBsxGrpMdaSRGtpTunDbUtil, tmnxBsxSctpFltrStatsPkDndPpidVal=tmnxBsxSctpFltrStatsPkDndPpidVal, TmnxBsxWebServClassifierId=TmnxBsxWebServClassifierId, tmnxBsxIsaAaGrpFailToMode=tmnxBsxIsaAaGrpFailToMode, tmnxBsxCflowdObjs=tmnxBsxCflowdObjs, tmnxBsxRadApServRowLastChange=tmnxBsxRadApServRowLastChange, tmnxBsxAppProfDivert=tmnxBsxAppProfDivert, tmnxBsxGrpStatusPktRateRaisdTime=tmnxBsxGrpStatusPktRateRaisdTime, tmnxBsxGrpStatusPkDisCngMdaFrSub=tmnxBsxGrpStatusPkDisCngMdaFrSub, tmnxBsxUrlFltrStatsHttpRespBlock=tmnxBsxUrlFltrStatsHttpRespBlock, tmnxBsxIsaAaGrpVmTrafficDistByIp=tmnxBsxIsaAaGrpVmTrafficDistByIp, tmnxBsxUrlFltrWebServNotifGrp=tmnxBsxUrlFltrWebServNotifGrp, tmnxBsxAppRowLastCh=tmnxBsxAppRowLastCh, tmnxBsxTListEntry=tmnxBsxTListEntry, tmnxBsxTransPrefEntryRowLastCh=tmnxBsxTransPrefEntryRowLastCh, tmnxBsxCflowdRecTmplEntry=tmnxBsxCflowdRecTmplEntry, tmnxBsxGrpMdaTransPrefV6Entr=tmnxBsxGrpMdaTransPrefV6Entr, tmnxBsxGrpStatusPktDiscPlcyToSub=tmnxBsxGrpStatusPktDiscPlcyToSub, tmnxBsxDEMV15v0ObjGrp=tmnxBsxDEMV15v0ObjGrp, tmnxBsxUrlFltrWebServCategory=tmnxBsxUrlFltrWebServCategory)
mibBuilder.exportSymbols("TIMETRA-BSX-NG-MIB", tmnxBsxChargeGrpLastChTime=tmnxBsxChargeGrpLastChTime, tmnxBsxIsaAaGrpOperState=tmnxBsxIsaAaGrpOperState, tmnxBsxAqpActUrlFiltrXHeaderChar=tmnxBsxAqpActUrlFiltrXHeaderChar, tmnxBsxTransPrefPolicyEntry=tmnxBsxTransPrefPolicyEntry, tmnxBsxTransPrefSumSubAddrLen=tmnxBsxTransPrefSumSubAddrLen, tmnxBsxAppProfLastChTime=tmnxBsxAppProfLastChTime, tmnxBsxGrpStatusOctsInspected=tmnxBsxGrpStatusOctsInspected, tmnxBsxIsaAaGrpSRWebServCachSize=tmnxBsxIsaAaGrpSRWebServCachSize, tmnxBsxPolicerMBS=tmnxBsxPolicerMBS, tmnxBsxPolicerCongestedCBS=tmnxBsxPolicerCongestedCBS, tmnxBsxIsaAaGrpOvrldCutthruClr=tmnxBsxIsaAaGrpOvrldCutthruClr, tmnxBsxGrpStatusTrafficRatePeak=tmnxBsxGrpStatusTrafficRatePeak, tmnxBsxPolicerLastChTime=tmnxBsxPolicerLastChTime, TmnxBsxGranularity=TmnxBsxGranularity, tmnxBsxEventLogSyslogAddr=tmnxBsxEventLogSyslogAddr, tmnxBsxIcapServerStatsReqRate=tmnxBsxIcapServerStatsReqRate, tmnxBsxAppFilterServerPort=tmnxBsxAppFilterServerPort, tmnxBsxCflowdCollPort=tmnxBsxCflowdCollPort, tmnxBsxGrpStatusIngQDroOutPOcts=tmnxBsxGrpStatusIngQDroOutPOcts, tmnxBsxTlsStatTls13OctsDny=tmnxBsxTlsStatTls13OctsDny, tmnxBsxHttpRedirErrEnabled=tmnxBsxHttpRedirErrEnabled, tmnxBsxAaSubUMFmSubGrantCredit=tmnxBsxAaSubUMFmSubGrantCredit, tmnxBsxTransitIpSumUpdateTime=tmnxBsxTransitIpSumUpdateTime, tmnxBsxIsaLoadBalUnSubTable=tmnxBsxIsaLoadBalUnSubTable, tmnxBsxStatAaSubOctsDnyToSb=tmnxBsxStatAaSubOctsDnyToSb, tmnxBsxCflowdExpStatUSupSSRCStLo=tmnxBsxCflowdExpStatUSupSSRCStLo, tmnxBsxCflowdCollStatRecSent=tmnxBsxCflowdCollStatRecSent, tmnxBsxMdaSlotEsaVmId=tmnxBsxMdaSlotEsaVmId, tmnxBsxAaSubPolicerAqpEntryId=tmnxBsxAaSubPolicerAqpEntryId, tmnxBsxGrpStatusIngQFwdOutPOcts=tmnxBsxGrpStatusIngQFwdOutPOcts, tmnxBsxGrpStatusEgrQHCFwdInPPkts=tmnxBsxGrpStatusEgrQHCFwdInPPkts, tmnxBsxSessFltrParamsTable=tmnxBsxSessFltrParamsTable, tmnxBsxGroupsV11v0=tmnxBsxGroupsV11v0, tmnxBsxAaSubSumHCShrtDurFlws=tmnxBsxAaSubSumHCShrtDurFlws, tmnxBsxStatAaAcctCfgCollStats=tmnxBsxStatAaAcctCfgCollStats, tmnxBsxDnsIpCacheStatDiscntTime=tmnxBsxDnsIpCacheStatDiscntTime, tmnxBsxCflowdStatusHCFlowsNoRes=tmnxBsxCflowdStatusHCFlowsNoRes, tmnxBsxAdminCtrlEntry=tmnxBsxAdminCtrlEntry, tmnxBsxPolicerOvrdMBS=tmnxBsxPolicerOvrdMBS, tmnxBsxAaIfName=tmnxBsxAaIfName, tmnxBsxTListAttribEntry=tmnxBsxTListAttribEntry, tmnxBsxAsoValRowStatus=tmnxBsxAsoValRowStatus, tmnxBsxPartAcctCfgPolicy=tmnxBsxPartAcctCfgPolicy, tmnxBsxPolicerOvrdIndex=tmnxBsxPolicerOvrdIndex, tmnxBsxEsmMacSubSumMacAddress=tmnxBsxEsmMacSubSumMacAddress, tmnxBsxTlsStatQuicUnknwnOctsDny=tmnxBsxTlsStatQuicUnknwnOctsDny, tmnxBsxOverloadSubQuarNotifyGrp=tmnxBsxOverloadSubQuarNotifyGrp, tmnxBsxAqpMatchSrcPortList=tmnxBsxAqpMatchSrcPortList, TmnxBsxAaSubStatsInterval=TmnxBsxAaSubStatsInterval, tmnxBsxAnlRowStatus=tmnxBsxAnlRowStatus, tmnxBsxIsaAaGrpFailureV2=tmnxBsxIsaAaGrpFailureV2, tmnxBsxPartAcctCfgLastChTime=tmnxBsxPartAcctCfgLastChTime, TmnxBsxDirection=TmnxBsxDirection, tmnxBsxAdmitDenyAcctCollStats=tmnxBsxAdmitDenyAcctCollStats, tmnxBsxIsaLoadBalUnSub=tmnxBsxIsaLoadBalUnSub, tmnxBsxIsaAaGrpTransPrefV6RmEntr=tmnxBsxIsaAaGrpTransPrefV6RmEntr, TmnxBsxFailToMode=TmnxBsxFailToMode, tmnxBsxStatAaSubFlwsAdmToSb=tmnxBsxStatAaSubFlwsAdmToSb, tmnxBsxGrpStatusOctCutThrouFrSub=tmnxBsxGrpStatusOctCutThrouFrSub, tmnxBsxComplianceV12v0=tmnxBsxComplianceV12v0, tmnxBsxGrpStatusPktOutPChErFrSub=tmnxBsxGrpStatusPktOutPChErFrSub, tmnxBsxAppDescription=tmnxBsxAppDescription, tmnxBsxUrlListObjs=tmnxBsxUrlListObjs, tmnxBsxSessFltrTable=tmnxBsxSessFltrTable, TmnxBsxAaSubTetherState=TmnxBsxAaSubTetherState, tmnxBsxAqpAppGroupOp=tmnxBsxAqpAppGroupOp, tmnxBsxTransitIpPersistenceWarn=tmnxBsxTransitIpPersistenceWarn, tmnxBsxCflowdDirExpAddrOperState=tmnxBsxCflowdDirExpAddrOperState, tmnxBsxPolicerOvrdTable=tmnxBsxPolicerOvrdTable, tmnxBsxPortLow=tmnxBsxPortLow, tmnxBsxHttpEnrichFieldEntry=tmnxBsxHttpEnrichFieldEntry, tmnxBsxGtpFltrStatsPkDndMandHdr=tmnxBsxGtpFltrStatsPkDndMandHdr, tmnxBsxAppCfgEntry=tmnxBsxAppCfgEntry, tmnxBsxAsoValLastChTime=tmnxBsxAsoValLastChTime, tmnxBsxAqpActFlowCountPlcrEvtLog=tmnxBsxAqpActFlowCountPlcrEvtLog, tmnxBsxDnsIpCacheScalars=tmnxBsxDnsIpCacheScalars, tmnxBsxAppFilterServerPortLow=tmnxBsxAppFilterServerPortLow, tmnxBsxGrpStatusOcGenHttpRdToSub=tmnxBsxGrpStatusOcGenHttpRdToSub, tmnxBsxStatFlowAttrFlwsToSb=tmnxBsxStatFlowAttrFlwsToSb, tmnxBsxTlsStatQuicFlwsDny=tmnxBsxTlsStatQuicFlwsDny, tmnxBsxGrpStatusPktSzDecOcHi=tmnxBsxGrpStatusPktSzDecOcHi, tmnxBsxAaSubSumDiscontTime=tmnxBsxAaSubSumDiscontTime, tmnxBsxAppFilterRowLastChange=tmnxBsxAppFilterRowLastChange, PYSNMP_MODULE_ID=tmnxBsxNgMIBModule, tmnxBsxStatFtrTcaThreshCrossed=tmnxBsxStatFtrTcaThreshCrossed, tmnxBsxAppFilterServerPortHigh=tmnxBsxAppFilterServerPortHigh, tmnxBsxGrpStatusTrafficRate=tmnxBsxGrpStatusTrafficRate, tmnxBsxAsoPolicyVersion=tmnxBsxAsoPolicyVersion, tmnxBsxGrpStatusHCOctsIn=tmnxBsxGrpStatusHCOctsIn, tmnxBsxHttpRdStatHCSizeExceeded=tmnxBsxHttpRdStatHCSizeExceeded, tmnxBsxUrlListStatusUpgErrorLine=tmnxBsxUrlListStatusUpgErrorLine, tmnxBsxGtpFltrMatchSrcGsnAddrTyp=tmnxBsxGtpFltrMatchSrcGsnAddrTyp, tmnxBsxCertProfileOperStateChngd=tmnxBsxCertProfileOperStateChngd, tmnxBsxAqpMatchAppGroupOp=tmnxBsxAqpMatchAppGroupOp, tmnxBsxAqpFlowAttrConf=tmnxBsxAqpFlowAttrConf, tmnxBsxPolicerOvrdEndHour=tmnxBsxPolicerOvrdEndHour, tmnxBsxSubCongDetectTable=tmnxBsxSubCongDetectTable, tmnxBsxGrpStatusEgrQHCFwdOutPOcts=tmnxBsxGrpStatusEgrQHCFwdOutPOcts, tmnxBsxTcpValEventLogAll=tmnxBsxTcpValEventLogAll, tmnxBsxGrpStatusOctsInToSub=tmnxBsxGrpStatusOctsInToSub, tmnxBsxGrpMdaTransPrefV4RemEntr=tmnxBsxGrpMdaTransPrefV4RemEntr, tmnxBsxIsaAaGrpCapCostThresClear=tmnxBsxIsaAaGrpCapCostThresClear, tmnxBsxGrpMdaSharedResEntry=tmnxBsxGrpMdaSharedResEntry, tmnxBsxGrpStatusMgmtCpuAvg=tmnxBsxGrpStatusMgmtCpuAvg, tmnxBsxUrlFltrWsPrfListLastCTime=tmnxBsxUrlFltrWsPrfListLastCTime, tmnxBsxGrpMdaTable=tmnxBsxGrpMdaTable, tmnxBsxGtpFltrV2MsgAction=tmnxBsxGtpFltrV2MsgAction, tmnxBsxTListAttribType=tmnxBsxTListAttribType, tmnxBsxAaSubSumHCFlwsDnyToSb=tmnxBsxAaSubSumHCFlwsDnyToSb, tmnxBsxStatAaSubSdyHCPktsAdmFmSb=tmnxBsxStatAaSubSdyHCPktsAdmFmSb, tmnxBsxSessFltrParamsDstPfxList=tmnxBsxSessFltrParamsDstPfxList, tmnxBsxTransIpPlcyAddrRowLastCh=tmnxBsxTransIpPlcyAddrRowLastCh, tmnxBsxIsaAaGrpFlowSetup=tmnxBsxIsaAaGrpFlowSetup, tmnxBsxCflowdGroupV10v0=tmnxBsxCflowdGroupV10v0, tmnxBsxDnsIpCacheStatMissCnt=tmnxBsxDnsIpCacheStatMissCnt, tmnxBsxComplianceV11v0=tmnxBsxComplianceV11v0, tmnxBsxPortListTable=tmnxBsxPortListTable, tmnxBsxTcaPolcrStatsTcaState=tmnxBsxTcaPolcrStatsTcaState, tmnxBsxCflowdStatusDiscontTime=tmnxBsxCflowdStatusDiscontTime, tmnxBsxTlsStatTls13EsniFlwsAdm=tmnxBsxTlsStatTls13EsniFlwsAdm, tmnxBsxTransitIpPolicyEntry=tmnxBsxTransitIpPolicyEntry, tmnxBsxNotifications=tmnxBsxNotifications, tmnxBsxGrpStatusPktSzIncPkToSub=tmnxBsxGrpStatusPktSzIncPkToSub, tmnxBsxHttpNotifStatDiscntTime=tmnxBsxHttpNotifStatDiscntTime, tmnxBsxStatFtrEnTcaThreshCrClear=tmnxBsxStatFtrEnTcaThreshCrClear, tmnxBsxGrpStatusPacketRateAvg=tmnxBsxGrpStatusPacketRateAvg, tmnxBsxStatAaAppFilterFlowsHi=tmnxBsxStatAaAppFilterFlowsHi, tmnxBsxAarpServPointEntry=tmnxBsxAarpServPointEntry, tmnxBsxAqpActGtpFilter=tmnxBsxAqpActGtpFilter, TmnxBsxAaSubPolicerResStatus=TmnxBsxAaSubPolicerResStatus, tmnxBsxStatTcaFtrEnCfgTableLstCh=tmnxBsxStatTcaFtrEnCfgTableLstCh, tmnxBsxUrlFltrUrlListTable=tmnxBsxUrlFltrUrlListTable, tmnxBsxGrpStatusWaSBfFmSubState=tmnxBsxGrpStatusWaSBfFmSubState, tmnxBsxAppFilterIpProtocolNumOp=tmnxBsxAppFilterIpProtocolNumOp, tmnxBsxUrlFltWebSerCategoryTable=tmnxBsxUrlFltWebSerCategoryTable, tmnxBsxCflowdPerfFlowRate2=tmnxBsxCflowdPerfFlowRate2, tmnxBsxAqpOutOfOrderFrags=tmnxBsxAqpOutOfOrderFrags, tmnxBsxAaSubUsageMonEntry=tmnxBsxAaSubUsageMonEntry, tmnxBsxGrpStatusDiscontTime=tmnxBsxGrpStatusDiscontTime, tmnxBsxIcapServerStatsConnUtil=tmnxBsxIcapServerStatsConnUtil, tmnxBsxGrpStatusFlowResState=tmnxBsxGrpStatusFlowResState, tmnxBsxGrpStatusOctDiscPlcyFrSub=tmnxBsxGrpStatusOctDiscPlcyFrSub, tmnxBsxOvrdAaSubCharLastChTm=tmnxBsxOvrdAaSubCharLastChTm, tmnxBsxCustProtExprOperator=tmnxBsxCustProtExprOperator, tmnxBsxIcapServerStatsRoundTrip=tmnxBsxIcapServerStatsRoundTrip, tmnxBsxUrlFltrStatsIcapLateResp=tmnxBsxUrlFltrStatsIcapLateResp, tmnxBsxNotifyObjsGroupV8v0=tmnxBsxNotifyObjsGroupV8v0, tmnxBsxAaGrpPartIndex=tmnxBsxAaGrpPartIndex, tmnxBsxDnsIpCacheProxyRowLastCh=tmnxBsxDnsIpCacheProxyRowLastCh, tmnxBsxAppFilterApplication=tmnxBsxAppFilterApplication, tmnxBsxStatAaSubFlwsDnyToSb=tmnxBsxStatAaSubFlwsDnyToSb, tmnxBsxMdaGroupMG3v0=tmnxBsxMdaGroupMG3v0, TmnxBsxFltrAction=TmnxBsxFltrAction, tmnxBsxAqpActMirrorSource=tmnxBsxAqpActMirrorSource, tmnxBsxUrlListFileUrl=tmnxBsxUrlListFileUrl, tmnxBsxCertProfileObjGrp=tmnxBsxCertProfileObjGrp, tmnxBsxNotifyAaSubscriberName=tmnxBsxNotifyAaSubscriberName, tmnxBsxUrlListStatusUrlAttempted=tmnxBsxUrlListStatusUrlAttempted, tmnxBsxUrlFltrStatsUrlDefAction=tmnxBsxUrlFltrStatsUrlDefAction, tmnxBsxNotifyAaSubscriberType=tmnxBsxNotifyAaSubscriberType, tmnxBsxAaSubUMFmSubGrantStatus=tmnxBsxAaSubUMFmSubGrantStatus, tmnxBsxTransIpPolAaSubCreated=tmnxBsxTransIpPolAaSubCreated, tmnxBsxCflowdPerfExpRowLastChnge=tmnxBsxCflowdPerfExpRowLastChnge, tmnxBsxTrafStatFlwsDnyToSb=tmnxBsxTrafStatFlwsDnyToSb, tmnxBsxTransitObjs=tmnxBsxTransitObjs, tmnxBsxStatAaSubLngDurFlws=tmnxBsxStatAaSubLngDurFlws, tmnxBsxIsaAaGrpCapCostLowThres=tmnxBsxIsaAaGrpCapCostLowThres, tmnxBsxWebServCategDescr=tmnxBsxWebServCategDescr, TmnxBsxUrlListFlags=TmnxBsxUrlListFlags, tmnxBsxUrlFltrWebServProfile=tmnxBsxUrlFltrWebServProfile, tmnxBsxIsaAaGrpMdaLastChangeTime=tmnxBsxIsaAaGrpMdaLastChangeTime, tmnxBsxHttpRedirHttpsRedirEnbld=tmnxBsxHttpRedirHttpsRedirEnbld, tmnxBsxTransitIpPolicySubIdPlcy=tmnxBsxTransitIpPolicySubIdPlcy, tmnxBsxTcpValTcaCrossed=tmnxBsxTcpValTcaCrossed, tmnxBsxPrefixListRowStatus=tmnxBsxPrefixListRowStatus, tmnxBsxNotifObjs=tmnxBsxNotifObjs, tmnxBsxCflowdRecTmplTable=tmnxBsxCflowdRecTmplTable, tmnxBsxHttpEnrichTrafficCharLo=tmnxBsxHttpEnrichTrafficCharLo, tmnxBsxGrpMdaSapSubscribers=tmnxBsxGrpMdaSapSubscribers, tmnxBsxTlsStatTls13PktsAdm=tmnxBsxTlsStatTls13PktsAdm, tmnxBsxCertProfileTable=tmnxBsxCertProfileTable, tmnxBsxCustProtEntry=tmnxBsxCustProtEntry, tmnxBsxGtpScalars=tmnxBsxGtpScalars, tmnxBsxTransitIpPolicyDiamObjGrp=tmnxBsxTransitIpPolicyDiamObjGrp, tmnxBsxDnsIpCacheServerAddr=tmnxBsxDnsIpCacheServerAddr, tmnxBsxAarpInstPeerState=tmnxBsxAarpInstPeerState, tmnxBsxTlsStatTls12PktsAdm=tmnxBsxTlsStatTls12PktsAdm, tmnxBsxEventLogName=tmnxBsxEventLogName, tmnxBsxPolicyGroup=tmnxBsxPolicyGroup, tmnxBsxHttpPcyRdStatHCOutOfRes=tmnxBsxHttpPcyRdStatHCOutOfRes, tmnxBsxIcapServerDescription=tmnxBsxIcapServerDescription, tmnxBsxGrpStatusIngQHCFwdInPOcts=tmnxBsxGrpStatusIngQHCFwdInPOcts, tmnxBsxAqpActFlowRatePlcrEvtLog=tmnxBsxAqpActFlowRatePlcrEvtLog, tmnxBsxCflowdDirectExpRowStatus=tmnxBsxCflowdDirectExpRowStatus, tmnxBsxUrlFltrWSClassOvrdTable=tmnxBsxUrlFltrWSClassOvrdTable, tmnxBsxAppFilterEntryId=tmnxBsxAppFilterEntryId, tmnxBsxStatAaSubHCPktsAdmToSb=tmnxBsxStatAaSubHCPktsAdmToSb, tmnxBsxTlsStatTls13EsniPktsDny=tmnxBsxTlsStatTls13EsniPktsDny, tmnxBsxGrpStatusEgrQDiscontTime=tmnxBsxGrpStatusEgrQDiscontTime, tmnxBsxCustProtExprOffset=tmnxBsxCustProtExprOffset, tmnxBsxNotifyObjsGroup=tmnxBsxNotifyObjsGroup, tmnxBsxPartAcctCfgRowLastCh=tmnxBsxPartAcctCfgRowLastCh, tmnxBsxRadApDescription=tmnxBsxRadApDescription, tmnxBsxGrpStatusPktsFromMdaToSub=tmnxBsxGrpStatusPktsFromMdaToSub, tmnxBsxStatAaSubHCFlwsDnyToSb=tmnxBsxStatAaSubHCFlwsDnyToSb, tmnxBsxAppProfRowLastChange=tmnxBsxAppProfRowLastChange, tmnxBsxTlsStatDiscontTime=tmnxBsxTlsStatDiscontTime, tmnxBsxSessFltrParamsEntry=tmnxBsxSessFltrParamsEntry, tmnxBsxAaSubUMToSubGrantCredit=tmnxBsxAaSubUMToSubGrantCredit, tmnxBsxTlsStatTls12FlwsDny=tmnxBsxTlsStatTls12FlwsDny, tmnxBsxIsaAaGrpToSubQuePolicy=tmnxBsxIsaAaGrpToSubQuePolicy, tmnxBsxNotifyRadiusCoAAuditState=tmnxBsxNotifyRadiusCoAAuditState, tmnxBsxGrpStatusMgmtCpu=tmnxBsxGrpStatusMgmtCpu, tmnxBsxGrpStatusPktSzDecOcToSub=tmnxBsxGrpStatusPktSzDecOcToSub, tmnxBsxTetherSingleDevRowStatus=tmnxBsxTetherSingleDevRowStatus, tmnxBsxGrpStatusSubsQuarantined=tmnxBsxGrpStatusSubsQuarantined, tmnxBsxUrlFltrStatsUrlAllow=tmnxBsxUrlFltrStatsUrlAllow, tmnxBsxGrpStatusOvrldCtThruRsdTm=tmnxBsxGrpStatusOvrldCtThruRsdTm, tmnxBsxGrpStatusFlwResCtThruPkts=tmnxBsxGrpStatusFlwResCtThruPkts, tmnxBsxAaIfServiceId=tmnxBsxAaIfServiceId, tmnxBsxAqpMatchSrcAddressLength=tmnxBsxAqpMatchSrcAddressLength, tmnxBsxPolicerCongestedMBS=tmnxBsxPolicerCongestedMBS, tmnxBsxStatAaSubSdyOctsDnyFmSb=tmnxBsxStatAaSubSdyOctsDnyFmSb, tmnxBsxGroupsV12v0=tmnxBsxGroupsV12v0, tmnxBsxIsaAaGrpFromSubSchPolicy=tmnxBsxIsaAaGrpFromSubSchPolicy, tmnxBsxIsaAaGrpToSbWaSBufOvldClr=tmnxBsxIsaAaGrpToSbWaSBufOvldClr, tmnxBsxTransitIpPolicySubTable=tmnxBsxTransitIpPolicySubTable, tmnxBsxTcpValStatsDropNoEstment=tmnxBsxTcpValStatsDropNoEstment, tmnxBsxAarpInstPeerPriority=tmnxBsxAarpInstPeerPriority, tmnxBsxGrpStatusHCPktsIn=tmnxBsxGrpStatusHCPktsIn, tmnxBsxSctpFltrStatsEntry=tmnxBsxSctpFltrStatsEntry, tmnxBsxIsaAaTimFileProcFailure=tmnxBsxIsaAaTimFileProcFailure, tmnxBsxEsmMacSubSumEntry=tmnxBsxEsmMacSubSumEntry, tmnxBsxTransIpPlcyAddrSubscriber=tmnxBsxTransIpPlcyAddrSubscriber, tmnxBsxAaSubSumPktsAdmToSb=tmnxBsxAaSubSumPktsAdmToSb, tmnxBsxTcpValTcaStatsTcaTrigType=tmnxBsxTcpValTcaStatsTcaTrigType, tmnxBsxHttpRedirErrCodeLastCh=tmnxBsxHttpRedirErrCodeLastCh, tmnxBsxSessFltrScalars=tmnxBsxSessFltrScalars, tmnxBsxSessFltrParamsRowStatus=tmnxBsxSessFltrParamsRowStatus, tmnxBsxGrpStatusOcDisConOutToSub=tmnxBsxGrpStatusOcDisConOutToSub, tmnxBsxUrlFltrStatsWSClassOvrMis=tmnxBsxUrlFltrStatsWSClassOvrMis, TmnxBsxTListAttribValue=TmnxBsxTListAttribValue, tmnxBsxSctpFltrStatsPkDndMalfd=tmnxBsxSctpFltrStatsPkDndMalfd, tmnxBsxGrpStatusOctsDiscPolicy=tmnxBsxGrpStatusOctsDiscPolicy, tmnxBsxGrpStatusPktSzDecPkToSub=tmnxBsxGrpStatusPktSzDecPkToSub, tmnxBsxGrpStatusOvrldCtThruPkts=tmnxBsxGrpStatusOvrldCtThruPkts, TmnxBsxAaSubRemoteId=TmnxBsxAaSubRemoteId, tmnxBsxPolicerEntry=tmnxBsxPolicerEntry, tmnxBsxSessFltrRowStatus=tmnxBsxSessFltrRowStatus, tmnxBsxCertProfileAdminState=tmnxBsxCertProfileAdminState, tmnxBsxStatTcaFtrCfgLoWmark=tmnxBsxStatTcaFtrCfgLoWmark, tmnxBsxStatAaSubPktsAdmFmSb=tmnxBsxStatAaSubPktsAdmFmSb, tmnxBsxSctpFltrPpidVal=tmnxBsxSctpFltrPpidVal, tmnxBsxCflowdDirectExportVlan=tmnxBsxCflowdDirectExportVlan)
mibBuilder.exportSymbols("TIMETRA-BSX-NG-MIB", tmnxBsxTlsStatTls13FlwsAdm=tmnxBsxTlsStatTls13FlwsAdm, tmnxBsxGtpStatsPkDndGtpFltrToSb=tmnxBsxGtpStatsPkDndGtpFltrToSb, tmnxBsxRadApServAddr=tmnxBsxRadApServAddr, tmnxBsxIsaAaGrpEntry=tmnxBsxIsaAaGrpEntry, tmnxBsxAqpApplication=tmnxBsxAqpApplication, tmnxBsxComplianceV16v0=tmnxBsxComplianceV16v0, tmnxBsxStatAaSubSdyHCLngDurFlws=tmnxBsxStatAaSubSdyHCLngDurFlws, tmnxBsxAppProfCharRowStatus=tmnxBsxAppProfCharRowStatus, tmnxBsxStatTcaFtrCfgTable=tmnxBsxStatTcaFtrCfgTable, tmnxBsxDnsIpCacheObjs=tmnxBsxDnsIpCacheObjs, tmnxBsxUrlListAdminState=tmnxBsxUrlListAdminState, tmnxBsxSctpFltrRowStatus=tmnxBsxSctpFltrRowStatus, tmnxBsxHttpNotifStatSuccess=tmnxBsxHttpNotifStatSuccess, tmnxBsxAqpActFlowRatePolicer=tmnxBsxAqpActFlowRatePolicer, tmnxBsxHttpPcyRdStatNotRedirLo=tmnxBsxHttpPcyRdStatNotRedirLo, tmnxBsxAppProfCharPolicyVersion=tmnxBsxAppProfCharPolicyVersion, tmnxBsxGrpStatusDatapathCpu=tmnxBsxGrpStatusDatapathCpu, tmnxBsxAppFilterServerPfxList=tmnxBsxAppFilterServerPfxList, tmnxBsxAppGrpExportId=tmnxBsxAppGrpExportId, tmnxBsxIsaAaGrpFlowFull=tmnxBsxIsaAaGrpFlowFull, tmnxBsxIsaAaGrpWlanGwGrpId=tmnxBsxIsaAaGrpWlanGwGrpId, tmnxBsxStatTcaCfgLoWmark=tmnxBsxStatTcaCfgLoWmark, tmnxBsxTlsStatTls12OctsAdm=tmnxBsxTlsStatTls12OctsAdm, tmnxBsxDnsIpCacheDomainTable=tmnxBsxDnsIpCacheDomainTable, tmnxBsxStatAaAppFilterFlowsLo=tmnxBsxStatAaAppFilterFlowsLo, tmnxBsxCflowdCollVersion=tmnxBsxCflowdCollVersion, tmnxBsxTcpValStatsDirection=tmnxBsxTcpValStatsDirection, tmnxBsxStatAaActFlwsFmSb=tmnxBsxStatAaActFlwsFmSb, tmnxBsxAsoValPolicyVersion=tmnxBsxAsoValPolicyVersion, tmnxBsxStatTcaFtrEnCfgLoWmark=tmnxBsxStatTcaFtrEnCfgLoWmark, tmnxBsxGrpStatusOctDiscErrToSub=tmnxBsxGrpStatusOctDiscErrToSub, tmnxBsxUrlFltWSClassOvrdUrlCateg=tmnxBsxUrlFltWSClassOvrdUrlCateg, tmnxBsxMdaGroups=tmnxBsxMdaGroups, tmnxBsxMdaGroup=tmnxBsxMdaGroup, tmnxBsxGrpStatusPktsOutPChipEr=tmnxBsxGrpStatusPktsOutPChipEr, tmnxBsxGrpStatusWaSBfFmSubRsdTm=tmnxBsxGrpStatusWaSBfFmSubRsdTm, tmnxBsxAqpRemarkDscpInProfile=tmnxBsxAqpRemarkDscpInProfile, tmnxBsxComplianceV8v0=tmnxBsxComplianceV8v0, tmnxBsxTrafStatOctsDnyFmSb=tmnxBsxTrafStatOctsDnyFmSb, tmnxBsxStatTcaCfgRowLastCh=tmnxBsxStatTcaCfgRowLastCh, tmnxBsxGrpStatusPktsIn=tmnxBsxGrpStatusPktsIn, tmnxBsxGtpStatsPkPermittedToSb=tmnxBsxGtpStatsPkPermittedToSb, tmnxBsxTransitIpPolicyTable=tmnxBsxTransitIpPolicyTable, tmnxBsxCflowdEntry=tmnxBsxCflowdEntry, tmnxBsxPortListName=tmnxBsxPortListName, tmnxBsxTransitIpPolicySeenIpRad=tmnxBsxTransitIpPolicySeenIpRad, tmnxBsxTlsStatTls12PktsDny=tmnxBsxTlsStatTls12PktsDny, tmnxBsxHttpRedirLastCh=tmnxBsxHttpRedirLastCh, tmnxBsxSessFltrParamsDstAddrType=tmnxBsxSessFltrParamsDstAddrType, tmnxBsxEventLogSyslogObjGrp=tmnxBsxEventLogSyslogObjGrp, tmnxBsxPlcyPolicyVersion=tmnxBsxPlcyPolicyVersion, tmnxBsxUrlFltWebSerProfRowStatus=tmnxBsxUrlFltWebSerProfRowStatus, tmnxBsxAarpInstOperStateChanged=tmnxBsxAarpInstOperStateChanged, tmnxBsxIsaAaGrpOvrldCutthru=tmnxBsxIsaAaGrpOvrldCutthru, tmnxBsxTransIpPlcySubLastChTime=tmnxBsxTransIpPlcySubLastChTime, tmnxBsxHttpRedirErrCodeTable=tmnxBsxHttpRedirErrCodeTable, tmnxBsxAsoValTable=tmnxBsxAsoValTable, tmnxBsxProtTable=tmnxBsxProtTable, tmnxBsxSctpFltrDefaultAction=tmnxBsxSctpFltrDefaultAction, tmnxBsxGroupsV17v0=tmnxBsxGroupsV17v0, tmnxBsxUrlFltrWebServStatsRndTp=tmnxBsxUrlFltrWebServStatsRndTp, tmnxBsxGtpFltrImsiApnEntry=tmnxBsxGtpFltrImsiApnEntry, tmnxBsxGtpFltrValidateSrcIpAddr=tmnxBsxGtpFltrValidateSrcIpAddr, tmnxBsxGrpStatusFlowSetupRsdCnt=tmnxBsxGrpStatusFlowSetupRsdCnt, tmnxBsxEventLogLastChTime=tmnxBsxEventLogLastChTime, tmnxBsxHttpNotifEntry=tmnxBsxHttpNotifEntry, tmnxBsxAaSubSumActFlwsToSb=tmnxBsxAaSubSumActFlwsToSb, tmnxBsxGrpStatusHCOctsDisCongOut=tmnxBsxGrpStatusHCOctsDisCongOut, tmnxBsxStatTcaFtrEnCfgRowLastCh=tmnxBsxStatTcaFtrEnCfgRowLastCh, tmnxBsxHttpRedirTcpReset=tmnxBsxHttpRedirTcpReset, tmnxBsxPlcyDefChargeGrp=tmnxBsxPlcyDefChargeGrp, tmnxBsxAaSubSumAppProfName=tmnxBsxAaSubSumAppProfName, tmnxBsxStatAaSubActFlwsToSb=tmnxBsxStatAaSubActFlwsToSb, tmnxBsxCflowdStatusPktRateCurr=tmnxBsxCflowdStatusPktRateCurr, tmnxBsxTrafStatOctsDnyToSb=tmnxBsxTrafStatOctsDnyToSb, tmnxBsxGrpStatusIngQHCDroInPOcts=tmnxBsxGrpStatusIngQHCDroInPOcts, tmnxBsxAqpActSessionFilter=tmnxBsxAqpActSessionFilter, tmnxBsxEsmMacSubSumTable=tmnxBsxEsmMacSubSumTable, tmnxBsxComplianceV7v0=tmnxBsxComplianceV7v0, tmnxBsxGrpStatusOctDiscPlcyToSub=tmnxBsxGrpStatusOctDiscPlcyToSub, tmnxBsxWebUrlCategorySetTable=tmnxBsxWebUrlCategorySetTable, tmnxBsxPolicyScalars=tmnxBsxPolicyScalars, tmnxBsxStatAaAcctLastChTime=tmnxBsxStatAaAcctLastChTime, tmnxBsxAqpActDrop=tmnxBsxAqpActDrop, tmnxBsxOvrdAaSubCharEntry=tmnxBsxOvrdAaSubCharEntry, tmnxBsxAaIfOperState=tmnxBsxAaIfOperState, tmnxBsxStatAaSubSdyHCOctsAdmToSb=tmnxBsxStatAaSubSdyHCOctsAdmToSb, tmnxBsxGtpStatsEntry=tmnxBsxGtpStatsEntry, tmnxBsxIsaAaGrpFlowFullClear=tmnxBsxIsaAaGrpFlowFullClear, tmnxBsxAaSubPolResExceededClear=tmnxBsxAaSubPolResExceededClear, tmnxBsxIcapServerAdminState=tmnxBsxIcapServerAdminState, tmnxBsxAaSubAppProfName=tmnxBsxAaSubAppProfName, TmnxBsxUmGrantStatus=TmnxBsxUmGrantStatus, tmnxBsxTlsStatTls11FlwsAdm=tmnxBsxTlsStatTls11FlwsAdm, tmnxBsxHttpNotifTable=tmnxBsxHttpNotifTable, tmnxBsxTransPrefPolicyRowStatus=tmnxBsxTransPrefPolicyRowStatus, tmnxBsxSctpFltrPpidEntryId=tmnxBsxSctpFltrPpidEntryId, tmnxBsxAnlRttThreshold=tmnxBsxAnlRttThreshold, tmnxBsxAqpMatchEntry=tmnxBsxAqpMatchEntry, tmnxBsxGrpStatusSeenIpReqDropHi=tmnxBsxGrpStatusSeenIpReqDropHi, tmnxBsxGroupsV13v0=tmnxBsxGroupsV13v0, tmnxBsxPrefixAddr=tmnxBsxPrefixAddr, tmnxBsxUrlFltrStatsWebSvRspAllow=tmnxBsxUrlFltrStatsWebSvRspAllow, tmnxBsxAaSubSumShrtDurFlws=tmnxBsxAaSubSumShrtDurFlws, tmnxBsxUrlFilterRowLastChange=tmnxBsxUrlFilterRowLastChange, tmnxBsxCertProfileName=tmnxBsxCertProfileName, tmnxBsxUrlFltrWsClasOvrLastCTime=tmnxBsxUrlFltrWsClasOvrLastCTime, tmnxBsxHttpEnrichFieldCertProf=tmnxBsxHttpEnrichFieldCertProf, tmnxBsxStatAaSubSdyFlwsDnyFmSb=tmnxBsxStatAaSubSdyFlwsDnyFmSb, tmnxBsxGrpStatusPktDisCngInToSub=tmnxBsxGrpStatusPktDisCngInToSub, tmnxBsxIsaAaGrpSwitchover=tmnxBsxIsaAaGrpSwitchover, tmnxBsxUrlFltrStatsWebSvLateRsp=tmnxBsxUrlFltrStatsWebSvLateRsp, TmnxBsxOperator=TmnxBsxOperator, tmnxBsxGrpStatusPktsInMdaFrSub=tmnxBsxGrpStatusPktsInMdaFrSub, tmnxBsxIsaAaGrpUnassEsmMacSubs=tmnxBsxIsaAaGrpUnassEsmMacSubs, tmnxBsxAaSubPolicerIndex=tmnxBsxAaSubPolicerIndex, tmnxBsxIsaAaGrpPacketRateClear=tmnxBsxIsaAaGrpPacketRateClear, tmnxBsxTransitGroup=tmnxBsxTransitGroup, tmnxBsxAdmitDenyAcctTcpValStats=tmnxBsxAdmitDenyAcctTcpValStats, tmnxBsxGrpStatusFlowResRsdCount=tmnxBsxGrpStatusFlowResRsdCount, tmnxBsxAarpServPoint=tmnxBsxAarpServPoint, tmnxBsxCflowdRecTmplFldsSelType=tmnxBsxCflowdRecTmplFldsSelType, tmnxBsxAppProfCharValName=tmnxBsxAppProfCharValName, tmnxBsxUrlFilterWebServPortVlan=tmnxBsxUrlFilterWebServPortVlan, tmnxBsxIcapServerEntry=tmnxBsxIcapServerEntry, tmnxBsxUrlFltrUrlListName=tmnxBsxUrlFltrUrlListName, tmnxBsxAarpInstPeerEPSapEncap=tmnxBsxAarpInstPeerEPSapEncap, tmnxBsxTcpValDescription=tmnxBsxTcpValDescription, tmnxBsxUrlFltrStatsTable=tmnxBsxUrlFltrStatsTable, tmnxBsxTcpValTcaCrossedClear=tmnxBsxTcpValTcaCrossedClear, tmnxBsxCustProtIpProtocolNum=tmnxBsxCustProtIpProtocolNum, tmnxBsxAaSubSumHCOctsAdmFmSb=tmnxBsxAaSubSumHCOctsAdmFmSb, tmnxBsxGrpStatusOctsInMdaToSub=tmnxBsxGrpStatusOctsInMdaToSub, tmnxBsxTrafStatFlwsDnyFmSb=tmnxBsxTrafStatFlwsDnyFmSb, tmnxBsxUrlFilterEnhancementGrp=tmnxBsxUrlFilterEnhancementGrp, tmnxBsxTransIpPlcyAddrLastChTime=tmnxBsxTransIpPlcyAddrLastChTime, tmnxBsxAaSubSumHCOctsDnyFmSb=tmnxBsxAaSubSumHCOctsDnyFmSb, tmnxBsxTlsStatQuicPktsDny=tmnxBsxTlsStatQuicPktsDny, tmnxBsxDnsIpCacheRowStatus=tmnxBsxDnsIpCacheRowStatus, tmnxBsxAqpActHttpRedirName=tmnxBsxAqpActHttpRedirName, tmnxBsxComplianceV17v0=tmnxBsxComplianceV17v0, tmnxBsxAqpDstAddressLength=tmnxBsxAqpDstAddressLength, tmnxBsxRedundancyObjGroup=tmnxBsxRedundancyObjGroup, tmnxBsxUrlFilterIcapHttpRedir=tmnxBsxUrlFilterIcapHttpRedir, tmnxBsxAqpEntryId=tmnxBsxAqpEntryId, tmnxBsxRadApName=tmnxBsxRadApName, tmnxBsxGtpStatsPkDndGtpLenToSb=tmnxBsxGtpStatsPkDndGtpLenToSb, tmnxBsxObsoleteGroupV8v0=tmnxBsxObsoleteGroupV8v0, tmnxBsxAaSubUMToSubUsedCredit=tmnxBsxAaSubUMToSubUsedCredit, tmnxBsxUrlListLastChangedTime=tmnxBsxUrlListLastChangedTime, tmnxBsxCflowdPerfExpLastChTime=tmnxBsxCflowdPerfExpLastChTime, tmnxBsxHttpEnrichFieldEncodeType=tmnxBsxHttpEnrichFieldEncodeType, tmnxBsxDnsIpCacheSize=tmnxBsxDnsIpCacheSize, tmnxBsxGtpStatsPkDndUdpLenFmSb=tmnxBsxGtpStatsPkDndUdpLenFmSb, tmnxBsxGrpStatusPktSzDecOcFrSub=tmnxBsxGrpStatusPktSzDecOcFrSub, tmnxBsxAaSubPolicerType=tmnxBsxAaSubPolicerType, tmnxBsxEsmMacSubscriber=tmnxBsxEsmMacSubscriber, tmnxBsxStatAaHCFlwsDnyFmSb=tmnxBsxStatAaHCFlwsDnyFmSb, tmnxBsxTetherAdminState=tmnxBsxTetherAdminState, tmnxBsxIcapServerStatsTable=tmnxBsxIcapServerStatsTable, tmnxBsxAdmitDenyAcctSctpFtrStats=tmnxBsxAdmitDenyAcctSctpFtrStats, TmnxBsxEventLogAction=TmnxBsxEventLogAction, tmnxBsxTrafStatOctsAdmToSb=tmnxBsxTrafStatOctsAdmToSb, tmnxBsxGrpStatusIngQHCDroOutPOcts=tmnxBsxGrpStatusIngQHCDroOutPOcts, tmnxBsxAaSubHttpNotifLastTime=tmnxBsxAaSubHttpNotifLastTime, tmnxBsxStatFlowAttrPktsToSb=tmnxBsxStatFlowAttrPktsToSb, tmnxBsxDnsIpCacheServerName=tmnxBsxDnsIpCacheServerName, tmnxBsxHttpNotifStatFailed=tmnxBsxHttpNotifStatFailed, tmnxBsxAaSubSumMdaSlotNum=tmnxBsxAaSubSumMdaSlotNum, tmnxBsxTlsStatQuicExistFlwsDny=tmnxBsxTlsStatQuicExistFlwsDny, tmnxBsxGrpStatusEgrQHCDroOutPOcts=tmnxBsxGrpStatusEgrQHCDroOutPOcts, tmnxBsxTlsStatQuicEsniPktsDny=tmnxBsxTlsStatQuicEsniPktsDny, tmnxBsxAqpStatsFlows=tmnxBsxAqpStatsFlows, tmnxBsxTListTable=tmnxBsxTListTable, tmnxBsxSctpFltrDescription=tmnxBsxSctpFltrDescription, tmnxBsxUrlListScalars=tmnxBsxUrlListScalars, TmnxBsxStatIsaAaCfgType=TmnxBsxStatIsaAaCfgType, tmnxBsxTransPrefPolicyIPv6EntCnt=tmnxBsxTransPrefPolicyIPv6EntCnt, tmnxBsxTcaFtrEnStatsTcaState=tmnxBsxTcaFtrEnStatsTcaState, tmnxBsxCflowdDirExpAddrTable=tmnxBsxCflowdDirExpAddrTable, tmnxBsxWebServiceCategoryEntry=tmnxBsxWebServiceCategoryEntry, tmnxBsxHttpRedirErrGroup=tmnxBsxHttpRedirErrGroup, tmnxBsxHttpPcyRdStatConfigError=tmnxBsxHttpPcyRdStatConfigError, tmnxBsxCflowdExpLastChangeTime=tmnxBsxCflowdExpLastChangeTime, TmnxBsxHttpEnrichRATType=TmnxBsxHttpEnrichRATType, tmnxBsxAqpHttpEnrichName=tmnxBsxAqpHttpEnrichName, tmnxBsxRadApTable=tmnxBsxRadApTable, tmnxBsxAqpIpProtocolNum=tmnxBsxAqpIpProtocolNum, tmnxBsxStatAaSubSdyTable=tmnxBsxStatAaSubSdyTable, tmnxBsxSctpFltrPpidLastChngdTime=tmnxBsxSctpFltrPpidLastChngdTime, tmnxBsxAppFilterExprEntry=tmnxBsxAppFilterExprEntry, tmnxBsxTransPrefPolicyId=tmnxBsxTransPrefPolicyId, tmnxBsxTrapPerfObjGrp=tmnxBsxTrapPerfObjGrp, tmnxBsxGrpStatusHCPktsInMda=tmnxBsxGrpStatusHCPktsInMda, tmnxBsxGrpMdaRowLastChange=tmnxBsxGrpMdaRowLastChange, tmnxBsxPolicerCIRAdaptation=tmnxBsxPolicerCIRAdaptation, tmnxBsxPolicerOvrdAdminPIR=tmnxBsxPolicerOvrdAdminPIR, tmnxBsxAdminOwner=tmnxBsxAdminOwner, tmnxBsxAqpCharOperator=tmnxBsxAqpCharOperator, tmnxBsxAdmitDenyAcctTable=tmnxBsxAdmitDenyAcctTable, tmnxBsxOvrdAaSubLastChTime=tmnxBsxOvrdAaSubLastChTime, tmnxBsxSessFltrParamsSrcPortHVal=tmnxBsxSessFltrParamsSrcPortHVal, tmnxBsxSessFltrParamsRowLastCh=tmnxBsxSessFltrParamsRowLastCh, tmnxBsxRadApServStatEntry=tmnxBsxRadApServStatEntry, tmnxBsxStatAaFlwsDnyToSb=tmnxBsxStatAaFlwsDnyToSb, tmnxBsxAdminCtrlApply=tmnxBsxAdminCtrlApply, tmnxBsxObsoleteGroupV7v0=tmnxBsxObsoleteGroupV7v0, tmnxBsxIsaAaGrpFcTable=tmnxBsxIsaAaGrpFcTable, tmnxBsxDnsIpCacheServerTable=tmnxBsxDnsIpCacheServerTable, tmnxBsxSctpFltrPpidRangeMax=tmnxBsxSctpFltrPpidRangeMax, tmnxBsxGrpStatusSubsDivertedPk=tmnxBsxGrpStatusSubsDivertedPk, tmnxBsxUrlFilterWebDefAction=tmnxBsxUrlFilterWebDefAction, tmnxBsxHttpNotifStatEntry=tmnxBsxHttpNotifStatEntry, tmnxBsxTcpValObjs=tmnxBsxTcpValObjs, tmnxBsxAaWap1xTable=tmnxBsxAaWap1xTable, tmnxBsxGrpStatusHCPktSzIncOc=tmnxBsxGrpStatusHCPktSzIncOc, tmnxBsxGrpStatusBitRateRsdCount=tmnxBsxGrpStatusBitRateRsdCount, tmnxBsxGtpFltrImsiApnTable=tmnxBsxGtpFltrImsiApnTable, tmnxBsxTlsStatTlsExistFlwsDny=tmnxBsxTlsStatTlsExistFlwsDny, tmnxBsxGtpStatsPkDndGtpVerFmSb=tmnxBsxGtpStatsPkDndGtpVerFmSb, tmnxBsxIsaAaGrpFcRowStatus=tmnxBsxIsaAaGrpFcRowStatus, tmnxBsxGrpStatusOctsOut=tmnxBsxGrpStatusOctsOut, tmnxBsxUrlListFailure=tmnxBsxUrlListFailure, tmnxBsxRadApServOperState=tmnxBsxRadApServOperState, tmnxBsxGrpStatHttpsRedirObjGrp=tmnxBsxGrpStatHttpsRedirObjGrp, tmnxBsxGrpStatusSubsCreatedHi=tmnxBsxGrpStatusSubsCreatedHi, tmnxBsxUrlFilterServicePortVlan=tmnxBsxUrlFilterServicePortVlan, tmnxBsxUrlFilterEntry=tmnxBsxUrlFilterEntry, tmnxBsxSessFltrParamsAction=tmnxBsxSessFltrParamsAction, tmnxBsxGrpStatusHCPktsFromMda=tmnxBsxGrpStatusHCPktsFromMda, tmnxBsxAaGrpPartRowLastChange=tmnxBsxAaGrpPartRowLastChange, tmnxBsxTrafStatDiscontTime=tmnxBsxTrafStatDiscontTime, tmnxBsxObjs=tmnxBsxObjs, tmnxBsxAqpChargeGrp=tmnxBsxAqpChargeGrp, tmnxBsxAaSubSumFlwsAdmFmSb=tmnxBsxAaSubSumFlwsAdmFmSb, tmnxBsxGtpStatsPkDndPlcyOthrFmSb=tmnxBsxGtpStatsPkDndPlcyOthrFmSb, tmnxBsxAaSubAsoValName=tmnxBsxAaSubAsoValName, tmnxBsxAqpHttpRedirFlowType=tmnxBsxAqpHttpRedirFlowType, tmnxBsxAqpMatchDscpOp=tmnxBsxAqpMatchDscpOp, tmnxBsxUrlFltrWebServDefaultProf=tmnxBsxUrlFltrWebServDefaultProf, tmnxBsxHttpRedirErrCodeRowLastCh=tmnxBsxHttpRedirErrCodeRowLastCh, tmnxBsxPartitionObsoleteGroup=tmnxBsxPartitionObsoleteGroup, tmnxBsxNotifyIsaSlotNum=tmnxBsxNotifyIsaSlotNum, tmnxBsxRadApSendRetries=tmnxBsxRadApSendRetries, TmnxBsxPolicerAction=TmnxBsxPolicerAction, TmnxBsxAarpServPointRole=TmnxBsxAarpServPointRole, tmnxBsxTrafStatPktsDnyFmSb=tmnxBsxTrafStatPktsDnyFmSb, tmnxBsxAppProfDescription=tmnxBsxAppProfDescription, tmnxBsxRadApStatObjGroup=tmnxBsxRadApStatObjGroup, tmnxBsxGtpFltrV2MsgDefAction=tmnxBsxGtpFltrV2MsgDefAction, tmnxBsxStatAaSubHCFlwsAdmFmSb=tmnxBsxStatAaSubHCFlwsAdmFmSb, tmnxBsxHttpNotifGroups=tmnxBsxHttpNotifGroups, tmnxBsxUrlFilterDefaultAction=tmnxBsxUrlFilterDefaultAction, tmnxBsxTlsStatQuicUnknwnFlwsAdm=tmnxBsxTlsStatQuicUnknwnFlwsAdm)
mibBuilder.exportSymbols("TIMETRA-BSX-NG-MIB", tmnxBsxStatFtrTcaThreshCrClear=tmnxBsxStatFtrTcaThreshCrClear, tmnxBsxIsaAaGroupIndex=tmnxBsxIsaAaGroupIndex, tmnxBsxTetherSingleDeviceTable=tmnxBsxTetherSingleDeviceTable, tmnxBsxHttpRedirErrorCodeMsgSize=tmnxBsxHttpRedirErrorCodeMsgSize, tmnxBsxAppFilterExprIndex=tmnxBsxAppFilterExprIndex, tmnxBsxGtpStatsPkDndUdpLenToSb=tmnxBsxGtpStatsPkDndUdpLenToSb, tmnxBsxPolicerCongestedPIR=tmnxBsxPolicerCongestedPIR, tmnxBsxPolicerCBS=tmnxBsxPolicerCBS, tmnxBsxGtpFltrStatsPkDndPayldLen=tmnxBsxGtpFltrStatsPkDndPayldLen, tmnxBsxCflowdRecTmplAdmin=tmnxBsxCflowdRecTmplAdmin, tmnxBsxHttpEnrichAntiSpoofMod=tmnxBsxHttpEnrichAntiSpoofMod, tmnxBsxTlsStatTls13EsniOctsAdm=tmnxBsxTlsStatTls13EsniOctsAdm, tmnxBsxAqpActionEntry=tmnxBsxAqpActionEntry, tmnxBsxAqpDescription=tmnxBsxAqpDescription, tmnxBsxHttpEnrichHCNumEnriched=tmnxBsxHttpEnrichHCNumEnriched, tmnxBsxTrafStatEntry=tmnxBsxTrafStatEntry, tmnxBsxAppFilterExprStr=tmnxBsxAppFilterExprStr, tmnxBsxGtpStatefulFirwallObjGrp=tmnxBsxGtpStatefulFirwallObjGrp, tmnxBsxCflowdExpEntry=tmnxBsxCflowdExpEntry, tmnxBsxGrpStatusEgrQDroOutPOcts=tmnxBsxGrpStatusEgrQDroOutPOcts, tmnxBsxPolicerOvrdLastChTime=tmnxBsxPolicerOvrdLastChTime, tmnxBsxAqpFlowAttrRowStatus=tmnxBsxAqpFlowAttrRowStatus, tmnxBsxFlowFullLowWatermark=tmnxBsxFlowFullLowWatermark, tmnxBsxStatAaSubSdyCfgEntry=tmnxBsxStatAaSubSdyCfgEntry, tmnxBsxPolicerRowLastChange=tmnxBsxPolicerRowLastChange, tmnxBsxHttpNotifLastChangeTime=tmnxBsxHttpNotifLastChangeTime, tmnxBsxAqpActRowLastChange=tmnxBsxAqpActRowLastChange, tmnxBsxAqpActEvtLogOverloadDrop=tmnxBsxAqpActEvtLogOverloadDrop, tmnxBsxIsaAaGrpFromSubPool=tmnxBsxIsaAaGrpFromSubPool, tmnxBsxComplianceV15v0=tmnxBsxComplianceV15v0, tmnxBsxGrpStatusPktDiscErrFrSub=tmnxBsxGrpStatusPktDiscErrFrSub, tmnxBsxAaSubPolResExStatus=tmnxBsxAaSubPolResExStatus, tmnxBsxIcapServerOperState=tmnxBsxIcapServerOperState, tmnxBsxAaSubSumHCTermFlws=tmnxBsxAaSubSumHCTermFlws, tmnxBsxDnsIpCacheProxyAddr=tmnxBsxDnsIpCacheProxyAddr, tmnxBsxUrlListRowLastChanged=tmnxBsxUrlListRowLastChanged, tmnxBsxTransPrefEntryId=tmnxBsxTransPrefEntryId, tmnxBsxMgBillingExclusionsGroup=tmnxBsxMgBillingExclusionsGroup, tmnxBsxGrpStatusOvrldCtThruOcts=tmnxBsxGrpStatusOvrldCtThruOcts, TmnxBsxCflowdExpType=TmnxBsxCflowdExpType, tmnxBsxStatAaSubHCShrtDurFlws=tmnxBsxStatAaSubHCShrtDurFlws, tmnxBsxTransitIpSumParentSub=tmnxBsxTransitIpSumParentSub, tmnxBsxGrpStatusPacketRatePeak=tmnxBsxGrpStatusPacketRatePeak, tmnxBsxIsaAaGrpIngressQuePolicy=tmnxBsxIsaAaGrpIngressQuePolicy, tmnxBsxUrlFltrStatsHttpRespRedir=tmnxBsxUrlFltrStatsHttpRespRedir, tmnxBsxHttpPcyRdStatTable=tmnxBsxHttpPcyRdStatTable, tmnxBsxNotifyTcaCfgFilterType=tmnxBsxNotifyTcaCfgFilterType, tmnxBsxDnsIpCacheDescription=tmnxBsxDnsIpCacheDescription, tmnxBsxHttpRdStatHCNotRedirFType=tmnxBsxHttpRdStatHCNotRedirFType, TmnxBsxPolicyVersion=TmnxBsxPolicyVersion, tmnxBsxSessFltrStatsFlowsHi=tmnxBsxSessFltrStatsFlowsHi, tmnxBsxWebUrlClassifier=tmnxBsxWebUrlClassifier, tmnxBsxGtpTable=tmnxBsxGtpTable, tmnxBsxChargeGrpExportId=tmnxBsxChargeGrpExportId, tmnxBsxPolicerOvrdAdminCIR=tmnxBsxPolicerOvrdAdminCIR, tmnxBsxSessFltrParamsSrcPfxList=tmnxBsxSessFltrParamsSrcPfxList, tmnxBsxDnsIpCacheDomainRowLastCh=tmnxBsxDnsIpCacheDomainRowLastCh, tmnxBsxPortListDescription=tmnxBsxPortListDescription, tmnxBsxAppFilterNetworkAddrType=tmnxBsxAppFilterNetworkAddrType, tmnxBsxDnsIpCacheDomainExprStr=tmnxBsxDnsIpCacheDomainExprStr, tmnxBsxTransitIpPolicyRowLastCh=tmnxBsxTransitIpPolicyRowLastCh, tmnxBsxOvrdAaSubCharRowLastCh=tmnxBsxOvrdAaSubCharRowLastCh, tmnxBsxCertProfileNotifyObjsGrp=tmnxBsxCertProfileNotifyObjsGrp, tmnxBsxTrafStatTermFlwDur=tmnxBsxTrafStatTermFlwDur, tmnxBsxStatTcaFtrEnCfgRowStatus=tmnxBsxStatTcaFtrEnCfgRowStatus, tmnxBsxGrpStatusOctsDisCongMda=tmnxBsxGrpStatusOctsDisCongMda, tmnxBsxStatAaSubHCFlwsAdmToSb=tmnxBsxStatAaSubHCFlwsAdmToSb, tmnxBsxTcpValStatsDropBadOption=tmnxBsxTcpValStatsDropBadOption, tmnxBsxAqpAaSubscriberOp=tmnxBsxAqpAaSubscriberOp, tmnxBsxAdmitDenyAcctPolcrStats=tmnxBsxAdmitDenyAcctPolcrStats, tmnxBsxUrlFilterBlListHttpRedir=tmnxBsxUrlFilterBlListHttpRedir, tmnxBsxGtpFltrStatsPkDndTunDbRes=tmnxBsxGtpFltrStatsPkDndTunDbRes, tmnxBsxStatAaSubHCOctsAdmFmSb=tmnxBsxStatAaSubHCOctsAdmFmSb, tmnxBsxRadApSignfcntChangeDelta=tmnxBsxRadApSignfcntChangeDelta, tmnxBsxTlsStatTlsUnknownPktsDny=tmnxBsxTlsStatTlsUnknownPktsDny, tmnxBsxHttpRedirScalars=tmnxBsxHttpRedirScalars, tmnxBsxOvrdAaSubCharValName=tmnxBsxOvrdAaSubCharValName, tmnxBsxGrpMdaEntry=tmnxBsxGrpMdaEntry, tmnxBsxSessFltrParamsActHttpRedr=tmnxBsxSessFltrParamsActHttpRedr, tmnxBsxGrpMdaCapacityCost=tmnxBsxGrpMdaCapacityCost, tmnxBsxGrpStatusSubsCurrent=tmnxBsxGrpStatusSubsCurrent, tmnxBsxUrlFltWebSerCategoryEntry=tmnxBsxUrlFltWebSerCategoryEntry, tmnxBsxAppProfTable=tmnxBsxAppProfTable, tmnxBsxCflowdScalars=tmnxBsxCflowdScalars, tmnxBsxStatAaOctsAdmFmSb=tmnxBsxStatAaOctsAdmFmSb, tmnxBsxGrpStatusPktsGenHttpRedir=tmnxBsxGrpStatusPktsGenHttpRedir, tmnxBsxStatAaSubCfgTable=tmnxBsxStatAaSubCfgTable, tmnxBsxAqpActHttpErrRedirName=tmnxBsxAqpActHttpErrRedirName, tmnxBsxIcapServerStatsRespBlock=tmnxBsxIcapServerStatsRespBlock, tmnxBsxUrlFilterBlListDefHtRedir=tmnxBsxUrlFilterBlListDefHtRedir, tmnxBsxUrlFltrWebServCacheSize=tmnxBsxUrlFltrWebServCacheSize, tmnxBsxAaSubSumFlwsDnyToSb=tmnxBsxAaSubSumFlwsDnyToSb, tmnxBsxAsoValRowLastChange=tmnxBsxAsoValRowLastChange, tmnxBsxCflowdCollAdminState=tmnxBsxCflowdCollAdminState, tmnxBsxSctpFltrName=tmnxBsxSctpFltrName, tmnxBsxRadApEntry=tmnxBsxRadApEntry, tmnxBsxCflowdPerfRowLastChange=tmnxBsxCflowdPerfRowLastChange, tmnxBsxTrafStatOctsAdmFmSb=tmnxBsxTrafStatOctsAdmFmSb, tmnxBsxAaSubSumOctsAdmFmSb=tmnxBsxAaSubSumOctsAdmFmSb, tmnxBsxTransPrefPolicyDesc=tmnxBsxTransPrefPolicyDesc, tmnxBsxUrlListStatusUpgErrReason=tmnxBsxUrlListStatusUpgErrReason, tmnxBsxIsaAaGrpToSubSchPolicy=tmnxBsxIsaAaGrpToSubSchPolicy, tmnxBsxAaSubscriberAcctDataLoss=tmnxBsxAaSubscriberAcctDataLoss, tmnxBsxAarpServPointRole=tmnxBsxAarpServPointRole, tmnxBsxDnsIpCacheEntry=tmnxBsxDnsIpCacheEntry, tmnxBsxTransPrefEntrySubAddrType=tmnxBsxTransPrefEntrySubAddrType, tmnxBsxSessFltrParamsDstAddrLen=tmnxBsxSessFltrParamsDstAddrLen, tmnxBsxUrlFilterName=tmnxBsxUrlFilterName, tmnxBsxAaSubSumTermFlwDur=tmnxBsxAaSubSumTermFlwDur, tmnxBsxGtpFilterImsiApnLastChg=tmnxBsxGtpFilterImsiApnLastChg, tmnxBsxIsaAaGrpBitRate=tmnxBsxIsaAaGrpBitRate, tmnxBsxPolicerOvrdEndDay=tmnxBsxPolicerOvrdEndDay, tmnxBsxUrlFltrWebServProfTable=tmnxBsxUrlFltrWebServProfTable, tmnxBsxGrpStatusBitRateRsdTime=tmnxBsxGrpStatusBitRateRsdTime, tmnxBsxTListRowLastUpdateT=tmnxBsxTListRowLastUpdateT, tmnxBsxDnsIpCacheProxyEntry=tmnxBsxDnsIpCacheProxyEntry, tmnxBsxStatAaSubPktsDnyToSb=tmnxBsxStatAaSubPktsDnyToSb, tmnxBsxIsaLoadBalUnSubEntry=tmnxBsxIsaLoadBalUnSubEntry, tmnxBsxUrlFltrStatsUrlBlockRedir=tmnxBsxUrlFltrStatsUrlBlockRedir, tmnxBsxGrpStatusPktDiscPlcyFrSub=tmnxBsxGrpStatusPktDiscPlcyFrSub, tmnxBsxAaSubAarpId=tmnxBsxAaSubAarpId, tmnxBsxEventLogSyslogSeverity=tmnxBsxEventLogSyslogSeverity, tmnxBsxDnsIpCacheStatDomMtch=tmnxBsxDnsIpCacheStatDomMtch, tmnxBsxStaticDataObjs=tmnxBsxStaticDataObjs, tmnxBsxCflowdRecFldRowStatus=tmnxBsxCflowdRecFldRowStatus, tmnxBsxTlsStatTls13EsniPktsAdm=tmnxBsxTlsStatTls13EsniPktsAdm, tmnxBsxGtpFltrMsgRowStatus=tmnxBsxGtpFltrMsgRowStatus, tmnxBsxCflowdRecFieldEntry=tmnxBsxCflowdRecFieldEntry, tmnxBsxTransitIpPolicyIPv6EntCnt=tmnxBsxTransitIpPolicyIPv6EntCnt, tmnxBsxIsaAaGrpLastChangeTime=tmnxBsxIsaAaGrpLastChangeTime, tmnxBsxStatAaSubSdyHCPktsDnyToSb=tmnxBsxStatAaSubSdyHCPktsDnyToSb, tmnxBsxIsaAaGrpBitRateClear=tmnxBsxIsaAaGrpBitRateClear, tmnxBsxDnsIpCacheServerRowLastCh=tmnxBsxDnsIpCacheServerRowLastCh, tmnxBsxUrlFltrWebSvDnsOperFlags=tmnxBsxUrlFltrWebSvDnsOperFlags, tmnxBsxAaIfServiceType=tmnxBsxAaIfServiceType, tmnxBsxAqpDstAddressOp=tmnxBsxAqpDstAddressOp, tmnxBsxCustProtPolicyVersion=tmnxBsxCustProtPolicyVersion, tmnxBsxAnlSourceLevel=tmnxBsxAnlSourceLevel, tmnxBsxTListTableLastUpdateT=tmnxBsxTListTableLastUpdateT, tmnxBsxRadApLastChTime=tmnxBsxRadApLastChTime, tmnxBsxGrpStatusIngQDiscontTime=tmnxBsxGrpStatusIngQDiscontTime, tmnxBsxGrpMdaTransitSubs=tmnxBsxGrpMdaTransitSubs, tmnxBsxUrlListRowStatus=tmnxBsxUrlListRowStatus, tmnxBsxStatAaSubDiscontTime=tmnxBsxStatAaSubDiscontTime, tmnxBsxHttpRedirErrHttpHost=tmnxBsxHttpRedirErrHttpHost, tmnxBsxAaIfIsaAddrPrefixLength=tmnxBsxAaIfIsaAddrPrefixLength, tmnxBsxAppExportId=tmnxBsxAppExportId, tmnxBsxAqpActTcpMaxSegSize=tmnxBsxAqpActTcpMaxSegSize, tmnxBsxUrlFltrStatsWebSvLRPktDsc=tmnxBsxUrlFltrStatsWebSvLRPktDsc, tmnxBsxStatAaHCLngDurFlws=tmnxBsxStatAaHCLngDurFlws, tmnxBsxHttpsRedirObsoletedObjGrp=tmnxBsxHttpsRedirObsoletedObjGrp, tmnxBsxPartAcctCfgEntry=tmnxBsxPartAcctCfgEntry, tmnxBsxSubCongRenamedObjGrp=tmnxBsxSubCongRenamedObjGrp, tmnxBsxGrpStatusHCPktsDiscCongIn=tmnxBsxGrpStatusHCPktsDiscCongIn, tmnxBsxPortEntry=tmnxBsxPortEntry, tmnxBsxAarpInstId=tmnxBsxAarpInstId, tmnxBsxHttpRdStatRedirLo=tmnxBsxHttpRdStatRedirLo, tmnxBsxGrpStatusHCOctsDiscPolicy=tmnxBsxGrpStatusHCOctsDiscPolicy, tmnxBsxAaSubMdaMdaNum=tmnxBsxAaSubMdaMdaNum, tmnxBsxAnlRowLastChange=tmnxBsxAnlRowLastChange, tmnxBsxTlsTrafficStatsTable=tmnxBsxTlsTrafficStatsTable, tmnxBsxTransPrefTable=tmnxBsxTransPrefTable, TmnxBsxWebServiceCategoryId=TmnxBsxWebServiceCategoryId, tmnxBsxMobileSubModifyFailure=tmnxBsxMobileSubModifyFailure, tmnxBsxPolicerPIRAdaptation=tmnxBsxPolicerPIRAdaptation, tmnxBsxSctpFltrTable=tmnxBsxSctpFltrTable, tmnxBsxIsaAaGrpIngressPool=tmnxBsxIsaAaGrpIngressPool, tmnxBsxAqpBaseTable=tmnxBsxAqpBaseTable, tmnxBsxAdminCtrlConfigOwner=tmnxBsxAdminCtrlConfigOwner, tmnxBsxAppFilterServerDnsIpCache=tmnxBsxAppFilterServerDnsIpCache, tmnxBsxTlsStatTls13FlwsDny=tmnxBsxTlsStatTls13FlwsDny, tmnxBsxHttpRdStatNotRedirFTypeHi=tmnxBsxHttpRdStatNotRedirFTypeHi, tmnxBsxXHeaderObjGroup=tmnxBsxXHeaderObjGroup, tmnxBsxGtpFltrDefaultAction=tmnxBsxGtpFltrDefaultAction, tmnxBsxIsaAaGrpFromSubSlpPolicy=tmnxBsxIsaAaGrpFromSubSlpPolicy, tmnxBsxTcpValName=tmnxBsxTcpValName, tmnxBsxGtpFltrStatsPkDndInvTeid=tmnxBsxGtpFltrStatsPkDndInvTeid, tmnxBsxStatAaSubSdyLngDurFlws=tmnxBsxStatAaSubSdyLngDurFlws, tmnxBsxComplianceV13v0=tmnxBsxComplianceV13v0, tmnxBsxAqpMatchDstAddressType=tmnxBsxAqpMatchDstAddressType, tmnxBsxTransPrefEntryNetAddrType=tmnxBsxTransPrefEntryNetAddrType, tmnxBsxMgTetherDetectGroup=tmnxBsxMgTetherDetectGroup, tmnxBsxCflowConfigFieldsGroup=tmnxBsxCflowConfigFieldsGroup, tmnxBsxGtpStatsDiscntTime=tmnxBsxGtpStatsDiscntTime, tmnxBsxStatTcaFtrCfgEntry=tmnxBsxStatTcaFtrCfgEntry, tmnxBsxGrpStatusEgrQHCDroInPOcts=tmnxBsxGrpStatusEgrQHCDroInPOcts, tmnxBsxGtpFltrStatsPkDndTunEpLmt=tmnxBsxGtpFltrStatsPkDndTunEpLmt, tmnxBsxIsaAaGrpToSubWaSBfLoWmk=tmnxBsxIsaAaGrpToSubWaSBfLoWmk, tmnxBsxAdmitDenyAcctPolicy=tmnxBsxAdmitDenyAcctPolicy, tmnxBsxGrpStatusFlowSetupRsdTime=tmnxBsxGrpStatusFlowSetupRsdTime, tmnxBsxCflowdCollDescription=tmnxBsxCflowdCollDescription, tmnxBsxIsaAaGrpFcLastChangeTime=tmnxBsxIsaAaGrpFcLastChangeTime, tmnxBsxCflowdDirExpStatTable=tmnxBsxCflowdDirExpStatTable, tmnxBsxTrafStatPktsAdmFmSb=tmnxBsxTrafStatPktsAdmFmSb, tmnxBsxGtpStatsPkDndFlPlcrToSb=tmnxBsxGtpStatsPkDndFlPlcrToSb, tmnxBsxCflowdExpOvdPrefix=tmnxBsxCflowdExpOvdPrefix, tmnxBsxSessFltrParamsEntryId=tmnxBsxSessFltrParamsEntryId, tmnxBsxChargeGrpRowLastCh=tmnxBsxChargeGrpRowLastCh, tmnxBsxIcapServerStatsConnEst=tmnxBsxIcapServerStatsConnEst, tmnxBsxGrpMdaSRGtpTunDbSize=tmnxBsxGrpMdaSRGtpTunDbSize, tmnxBsxStatsGroup=tmnxBsxStatsGroup, tmnxBsxCflowdPerfExpRateNum=tmnxBsxCflowdPerfExpRateNum, tmnxBsxTcaFtrEnStatsTable=tmnxBsxTcaFtrEnStatsTable, tmnxBsxStatTcaFtrEnCfgTable=tmnxBsxStatTcaFtrEnCfgTable, tmnxBsxDnsIpCacheServerRowStatus=tmnxBsxDnsIpCacheServerRowStatus, tmnxBsxUrlFltWebServCategRowSt=tmnxBsxUrlFltWebServCategRowSt, tmnxBsxAsoPersistId=tmnxBsxAsoPersistId, tmnxBsxSessFltrDefActEventLog=tmnxBsxSessFltrDefActEventLog, tmnxBsxCflowdExpStatDiscontTime=tmnxBsxCflowdExpStatDiscontTime, tmnxBsxGrpStatusPktSzIncOcToSub=tmnxBsxGrpStatusPktSzIncOcToSub, tmnxBsxGrpStatusPktsPolicyByps=tmnxBsxGrpStatusPktsPolicyByps, tmnxBsxIsaAaGrpMinIsaGeneration=tmnxBsxIsaAaGrpMinIsaGeneration, tmnxBsxGrpStatusHCPktsInspected=tmnxBsxGrpStatusHCPktsInspected, tmnxBsxDEMCngParamsV15v0ObjGrp=tmnxBsxDEMCngParamsV15v0ObjGrp, tmnxBsxUrlFilterObjGrp=tmnxBsxUrlFilterObjGrp, tmnxBsxTransitIpPolicyRadAuthPlc=tmnxBsxTransitIpPolicyRadAuthPlc, tmnxBsxAqpStatsConflicts=tmnxBsxAqpStatsConflicts, tmnxBsxAaSubQuarantined=tmnxBsxAaSubQuarantined, tmnxBsxNotifyTcaCfgType=tmnxBsxNotifyTcaCfgType, tmnxBsxUrlFilterDescription=tmnxBsxUrlFilterDescription, tmnxBsxAqpActionTable=tmnxBsxAqpActionTable, TmnxBsxUrlFilterDefaultAction=TmnxBsxUrlFilterDefaultAction, tmnxBsxUrlFltrUrlListLastCTime=tmnxBsxUrlFltrUrlListLastCTime, tmnxBsxStatAaAcctCfgRadiusPlcy=tmnxBsxStatAaAcctCfgRadiusPlcy, tmnxBsxTlsStatQuicOctsDny=tmnxBsxTlsStatQuicOctsDny, tmnxBsxPrefixListName=tmnxBsxPrefixListName, tmnxBsxAsoValCharName=tmnxBsxAsoValCharName, tmnxBsxStatAaSubSdyHCOctsDnyFmSb=tmnxBsxStatAaSubSdyHCOctsDnyFmSb, tmnxBsxGtpStatsPkDndGtpLenFmSb=tmnxBsxGtpStatsPkDndGtpLenFmSb, tmnxBsxSessFltrParamsDstPortList=tmnxBsxSessFltrParamsDstPortList, tmnxBsxGrpStatusPktsFromMdaFrSub=tmnxBsxGrpStatusPktsFromMdaFrSub, TmnxBsxCflowdFieldSelType=TmnxBsxCflowdFieldSelType, tmnxBsxSubCongDetObjGrp=tmnxBsxSubCongDetObjGrp, tmnxBsxAqpMatchDstAddress=tmnxBsxAqpMatchDstAddress, tmnxBsxAppGrpLastChTime=tmnxBsxAppGrpLastChTime, tmnxBsxAqpSapSubscrPortId=tmnxBsxAqpSapSubscrPortId, tmnxBsxStatTcaThreshCrossedClear=tmnxBsxStatTcaThreshCrossedClear, tmnxBsxTcpValStatsDiscntTime=tmnxBsxTcpValStatsDiscntTime, tmnxBsxGrpStatusPkDisConOutToSub=tmnxBsxGrpStatusPkDisConOutToSub, tmnxBsxNotifyCertProfOperState=tmnxBsxNotifyCertProfOperState, tmnxBsxPortTable=tmnxBsxPortTable, tmnxBsxPolicerOvrdRowStatus=tmnxBsxPolicerOvrdRowStatus, tmnxBsxGtpFltrMsgEntryId=tmnxBsxGtpFltrMsgEntryId, TmnxBsxFullyQualDomainName=TmnxBsxFullyQualDomainName, tmnxBsxAqpMatchDstAddressLength=tmnxBsxAqpMatchDstAddressLength, tmnxBsxAppGrpRowLastCh=tmnxBsxAppGrpRowLastCh, tmnxBsxTcaPolcrStatsEntry=tmnxBsxTcaPolcrStatsEntry, tmnxBsxAppFilterHttpPortList=tmnxBsxAppFilterHttpPortList, tmnxBsxTransPrefSumNetAddrLen=tmnxBsxTransPrefSumNetAddrLen, tmnxBsxIsaAaGrpFmSbWaSBufOvld=tmnxBsxIsaAaGrpFmSbWaSBufOvld, tmnxBsxAppAppGroup=tmnxBsxAppAppGroup, tmnxBsxTcaFtrStatsTimeLastCleard=tmnxBsxTcaFtrStatsTimeLastCleard, tmnxBsxCflowdDirectExpIndex=tmnxBsxCflowdDirectExpIndex, tmnxBsxUrlListStatusOperFlags=tmnxBsxUrlListStatusOperFlags)
mibBuilder.exportSymbols("TIMETRA-BSX-NG-MIB", tmnxBsxAaSubSumFlwsDnyFmSb=tmnxBsxAaSubSumFlwsDnyFmSb, tmnxBsxAqpActHttpRedirFlowType=tmnxBsxAqpActHttpRedirFlowType, tmnxBsxMdaGroupV11v0=tmnxBsxMdaGroupV11v0, tmnxBsxMdaGroupV12v0=tmnxBsxMdaGroupV12v0, tmnxBsxGrpStatusFlowResInUse=tmnxBsxGrpStatusFlowResInUse, tmnxBsxHttpNotifStatCritNoMtch=tmnxBsxHttpNotifStatCritNoMtch, tmnxBsxSessFltrParamsSrcAddrLen=tmnxBsxSessFltrParamsSrcAddrLen, tmnxBsxAqpMatchTable=tmnxBsxAqpMatchTable, tmnxBsxFlowAttrStatsDiscontTime=tmnxBsxFlowAttrStatsDiscontTime, tmnxBsxGrpStatusFlowResRaisdTime=tmnxBsxGrpStatusFlowResRaisdTime, tmnxBsxAqpAdminState=tmnxBsxAqpAdminState, tmnxBsxHttpRdStatNotRedirLo=tmnxBsxHttpRdStatNotRedirLo, tmnxBsxEventLogSyslogFacility=tmnxBsxEventLogSyslogFacility, tmnxBsxSessFltrName=tmnxBsxSessFltrName, tmnxBsxNotificationGroups=tmnxBsxNotificationGroups, tmnxBsxUrlFilterHttpReqFilter=tmnxBsxUrlFilterHttpReqFilter, tmnxBsxPolicerCongestedAnlCBS=tmnxBsxPolicerCongestedAnlCBS, tmnxBsxTcaStatsTcaTrigType=tmnxBsxTcaStatsTcaTrigType, tmnxBsxEventLogBufferType=tmnxBsxEventLogBufferType, tmnxBsxTcpValLastChangedTime=tmnxBsxTcpValLastChangedTime, tmnxBsxAppFilterHttpMatchAllReq=tmnxBsxAppFilterHttpMatchAllReq, tmnxBsxTlsStatTls13PktsDny=tmnxBsxTlsStatTls13PktsDny, tmnxBsxSubCongDetectAdminState=tmnxBsxSubCongDetectAdminState, tmnxBsxStatFlowAttrFlwsFmSb=tmnxBsxStatFlowAttrFlwsFmSb, tmnxBsxAqpActRemarkFc=tmnxBsxAqpActRemarkFc, tmnxBsxAppFilterFlowSetupDir=tmnxBsxAppFilterFlowSetupDir, tmnxBsxStatAaAppFilterFlowOctCHi=tmnxBsxStatAaAppFilterFlowOctCHi, tmnxBsxAppFilterExprTable=tmnxBsxAppFilterExprTable, tmnxBsxCflowdStatusRecRateCurr=tmnxBsxCflowdStatusRecRateCurr, tmnxBsxGrpStatusIngQHCDroOutPPkts=tmnxBsxGrpStatusIngQHCDroOutPPkts, tmnxBsxAppFilterNetworkPfxList=tmnxBsxAppFilterNetworkPfxList, tmnxBsxTcpValObjGrp=tmnxBsxTcpValObjGrp, tmnxBsxHttpRedirErrTemplateId=tmnxBsxHttpRedirErrTemplateId, tmnxBsxEsmMacIpAddr=tmnxBsxEsmMacIpAddr, tmnxBsxStatAaSubOctsAdmToSb=tmnxBsxStatAaSubOctsAdmToSb, tmnxBsxGrpStatusHCPktsDisCongOut=tmnxBsxGrpStatusHCPktsDisCongOut, tmnxBsxNotifySubFailedAction=tmnxBsxNotifySubFailedAction, tmnxBsxAaSubSumLngDurFlws=tmnxBsxAaSubSumLngDurFlws, tmnxBsxTcpValTable=tmnxBsxTcpValTable, tmnxBsxStatAaHCOctsDnyToSb=tmnxBsxStatAaHCOctsDnyToSb, tmnxBsxTrafStatPktsDnyToSb=tmnxBsxTrafStatPktsDnyToSb, tmnxBsxStatTcaPolcrCfgTable=tmnxBsxStatTcaPolcrCfgTable, tmnxBsxNotificationGroupV8v0=tmnxBsxNotificationGroupV8v0, tmnxBsxAppFilterExprType=tmnxBsxAppFilterExprType, tmnxBsxTransitIpPolicyAddr=tmnxBsxTransitIpPolicyAddr, tmnxBsxAppProfCharEntry=tmnxBsxAppProfCharEntry, tmnxBsxGrpStatusPktPlcyBypsToSub=tmnxBsxGrpStatusPktPlcyBypsToSub, tmnxBsxCflowdDirectExpLastChTime=tmnxBsxCflowdDirectExpLastChTime, tmnxBsxRadApStatEntry=tmnxBsxRadApStatEntry, tmnxBsxGrpStatusEgrQHCFwdOutPPkts=tmnxBsxGrpStatusEgrQHCFwdOutPPkts, tmnxBsxSessFltrParamsSrcPortLVal=tmnxBsxSessFltrParamsSrcPortLVal, tmnxBsxStatAaSubSdyHCTermFlws=tmnxBsxStatAaSubSdyHCTermFlws, tmnxBsxAaWap1xLastChangeTime=tmnxBsxAaWap1xLastChangeTime, tmnxBsxPolicerType=tmnxBsxPolicerType, tmnxBsxTransPrefSubLastChTime=tmnxBsxTransPrefSubLastChTime, tmnxBsxCflowdRecFieldEnterprise=tmnxBsxCflowdRecFieldEnterprise, tmnxBsxAaGrpPartRowStatus=tmnxBsxAaGrpPartRowStatus, tmnxBsxTransPrefSubIsRemote=tmnxBsxTransPrefSubIsRemote, tmnxBsxCflowdCollStatDiscontTime=tmnxBsxCflowdCollStatDiscontTime, tmnxBsxHttpRdStatOutOfResourceHi=tmnxBsxHttpRdStatOutOfResourceHi, tmnxBsxUrlListStatusTable=tmnxBsxUrlListStatusTable, tmnxBsxTcaPolcrStatsTmLastCleard=tmnxBsxTcaPolcrStatsTmLastCleard, tmnxBsxMobileGatewayGroups=tmnxBsxMobileGatewayGroups, tmnxBsxCertProfileEntry=tmnxBsxCertProfileEntry, tmnxBsxCustProtExprTable=tmnxBsxCustProtExprTable, tmnxBsxStatAaSubSdyHCTermFlwDur=tmnxBsxStatAaSubSdyHCTermFlwDur, tmnxBsxStatAaAcctCfgMaxThruStats=tmnxBsxStatAaAcctCfgMaxThruStats, tmnxBsxTransPrefSumNetAddrType=tmnxBsxTransPrefSumNetAddrType, tmnxBsxHttpNotifRowLastChange=tmnxBsxHttpNotifRowLastChange, tmnxBsxHttpRedirObjGrpV12v0=tmnxBsxHttpRedirObjGrpV12v0, tmnxBsxAaSubUMToSubGrantStatus=tmnxBsxAaSubUMToSubGrantStatus, tmnxBsxAaIfOperEntry=tmnxBsxAaIfOperEntry, tmnxBsxAarpInstRowStatus=tmnxBsxAarpInstRowStatus, tmnxBsxTetherStateObjGrp=tmnxBsxTetherStateObjGrp, tmnxBsxPolicerOvrdAdminState=tmnxBsxPolicerOvrdAdminState, tmnxBsxTlsStatTlsUnknownFlwsDny=tmnxBsxTlsStatTlsUnknownFlwsDny, tmnxBsxTrafStatIpProtocol=tmnxBsxTrafStatIpProtocol, tmnxBsxTransitIpPolicyRowStatus=tmnxBsxTransitIpPolicyRowStatus, tmnxBsxRadApServerAlgorithm=tmnxBsxRadApServerAlgorithm, tmnxBsxStatAaSubHCPktsAdmFmSb=tmnxBsxStatAaSubHCPktsAdmFmSb, tmnxBsxTransitIpPolicyAddrType=tmnxBsxTransitIpPolicyAddrType, tmnxBsxGrpStatusHCOctsDiscCongIn=tmnxBsxGrpStatusHCOctsDiscCongIn, tmnxBsxAppFilterServerAddrOp=tmnxBsxAppFilterServerAddrOp, tmnxBsxGrpStatusEgrQFwdOutPPkts=tmnxBsxGrpStatusEgrQFwdOutPPkts, tmnxBsxHttpEnrichFieldHeaderName=tmnxBsxHttpEnrichFieldHeaderName, tmnxBsxAqpSrcPortHighValue=tmnxBsxAqpSrcPortHighValue, tmnxBsxAaSubSumHCPktsDnyToSb=tmnxBsxAaSubSumHCPktsDnyToSb, tmnxBsxTcpValEventLog=tmnxBsxTcpValEventLog, tmnxBsxSessFltrParamsDstPortOp=tmnxBsxSessFltrParamsDstPortOp, tmnxBsxStatAaHCTermFlwDur=tmnxBsxStatAaHCTermFlwDur, tmnxBsxAqpBaseRowLastChange=tmnxBsxAqpBaseRowLastChange, tmnxBsxTcaFtrStatsTimeLastRaised=tmnxBsxTcaFtrStatsTimeLastRaised, tmnxBsxCflowdRecFieldSize=tmnxBsxCflowdRecFieldSize, tmnxBsxEsmMacSubSumAppProfNm=tmnxBsxEsmMacSubSumAppProfNm, tmnxBsxPrefixName=tmnxBsxPrefixName, tmnxBsxAqpMatchApplication=tmnxBsxAqpMatchApplication, tmnxBsxHttpRdStatOutOfResourceLo=tmnxBsxHttpRdStatOutOfResourceLo, tmnxBsxHttpEnrichEnabled=tmnxBsxHttpEnrichEnabled, tmnxBsxAaSubSumFlwsAdmToSb=tmnxBsxAaSubSumFlwsAdmToSb, tmnxBsxTrafStatActFlwsFmSb=tmnxBsxTrafStatActFlwsFmSb, tmnxBsxTListAttribValue=tmnxBsxTListAttribValue, tmnxBsxAarpInstPeerIpType=tmnxBsxAarpInstPeerIpType, tmnxBsxStatAaSubSdyDiscontTime=tmnxBsxStatAaSubSdyDiscontTime, tmnxBsxIsaAaTim=tmnxBsxIsaAaTim, tmnxBsxRadApIntrmUpdateSkipped=tmnxBsxRadApIntrmUpdateSkipped, tmnxBsxCflowdDirExpAddrAdmnState=tmnxBsxCflowdDirExpAddrAdmnState, tmnxBsxUrlFltrWebSerMaxCacheSize=tmnxBsxUrlFltrWebSerMaxCacheSize, tmnxBsxGrpStatusOctsGenHttpRedir=tmnxBsxGrpStatusOctsGenHttpRedir, tmnxBsxGrpStatusOctsInFrSub=tmnxBsxGrpStatusOctsInFrSub, tmnxBsxTransPrefEntryLastChTime=tmnxBsxTransPrefEntryLastChTime, tmnxBsxTlsStatTls10FlwsDny=tmnxBsxTlsStatTls10FlwsDny, tmnxBsxHttpRdStatTable=tmnxBsxHttpRdStatTable, tmnxBsxSubModifyFailure=tmnxBsxSubModifyFailure, tmnxBsxUrlFltrOperState=tmnxBsxUrlFltrOperState, tmnxBsxAqpMatchDstPfxList=tmnxBsxAqpMatchDstPfxList, tmnxBsxHttpRdStatDiscontTime=tmnxBsxHttpRdStatDiscontTime, tmnxBsxGtpFltrStatsPkDndImsiApn=tmnxBsxGtpFltrStatsPkDndImsiApn, tmnxBsxHttpNotifDescription=tmnxBsxHttpNotifDescription, tmnxBsxGtpFltrMsgTable=tmnxBsxGtpFltrMsgTable, tmnxBsxOvrdAaSubEntry=tmnxBsxOvrdAaSubEntry, tmnxBsxStatAaSubLastChTime=tmnxBsxStatAaSubLastChTime, tmnxBsxTransitIpPolicyLastChTime=tmnxBsxTransitIpPolicyLastChTime, tmnxBsxPartAcctCfgCollStats=tmnxBsxPartAcctCfgCollStats, tmnxBsxAppFilterNetworkAddr=tmnxBsxAppFilterNetworkAddr, tmnxBsxHttpUrlParamLimitExceeded=tmnxBsxHttpUrlParamLimitExceeded, tmnxBsxStatIsaAaCfgCollStats=tmnxBsxStatIsaAaCfgCollStats, tmnxBsxStatAaSubSdyHCFlwsAdmToSb=tmnxBsxStatAaSubSdyHCFlwsAdmToSb, TmnxBsxStatAaAcctCfgType=TmnxBsxStatAaAcctCfgType, tmnxBsxUrlFltrStatsWebServReqs=tmnxBsxUrlFltrStatsWebServReqs, tmnxBsxAnlRttThresholdTolerance=tmnxBsxAnlRttThresholdTolerance, tmnxBsxCflowdCollEntry=tmnxBsxCflowdCollEntry, tmnxBsxAsoRowLastChange=tmnxBsxAsoRowLastChange, tmnxBsxNotificationGroupV9v0=tmnxBsxNotificationGroupV9v0, tmnxBsxAqpMatchSrcAddressType=tmnxBsxAqpMatchSrcAddressType, tmnxBsxAqpMatchChargeGrp=tmnxBsxAqpMatchChargeGrp, tmnxBsxCflowdGroups=tmnxBsxCflowdGroups, tmnxBsxStatAaHCPktsDnyToSb=tmnxBsxStatAaHCPktsDnyToSb, tmnxBsxUrlFilterLastChangeTime=tmnxBsxUrlFilterLastChangeTime, tmnxBsxTListName=tmnxBsxTListName, tmnxBsxGrpStatusEgrQTable=tmnxBsxGrpStatusEgrQTable, tmnxBsxIcapServerRowLastChange=tmnxBsxIcapServerRowLastChange, tmnxBsxHttpPcyRdStatOutOfResLo=tmnxBsxHttpPcyRdStatOutOfResLo, tmnxBsxDnsIpCacheName=tmnxBsxDnsIpCacheName, tmnxBsxAaGrpPartAaSubRemote=tmnxBsxAaGrpPartAaSubRemote, tmnxBsxRadApServAcctPort=tmnxBsxRadApServAcctPort, tmnxBsxAppFilterProtocol=tmnxBsxAppFilterProtocol, tmnxBsxAqpMatchDstPortLowValue=tmnxBsxAqpMatchDstPortLowValue, tmnxBsxHttpEnrStStrObjGrpV12v0=tmnxBsxHttpEnrStStrObjGrpV12v0, tmnxBsxIsaAaGrpToSubWaSBfHiWmk=tmnxBsxIsaAaGrpToSubWaSBfHiWmk, tmnxBsxInfo=tmnxBsxInfo, tmnxBsxTcpValStatsDropBadACK=tmnxBsxTcpValStatsDropBadACK, tmnxBsxGrpStatusHCSubsCreated=tmnxBsxGrpStatusHCSubsCreated, tmnxBsxHttpEnrichFieldLastChTime=tmnxBsxHttpEnrichFieldLastChTime, tmnxBsxPolicerCongestedAnlCIR=tmnxBsxPolicerCongestedAnlCIR, tmnxBsxSctpFltrRowLastChange=tmnxBsxSctpFltrRowLastChange, tmnxBsxPrefixRowStatus=tmnxBsxPrefixRowStatus, tmnxBsxAqpStatsFlowsHi=tmnxBsxAqpStatsFlowsHi, tmnxBsxPrefixListDescription=tmnxBsxPrefixListDescription, tmnxBsxStatTcaPolcrCfgHiWmark=tmnxBsxStatTcaPolcrCfgHiWmark, tmnxBsxTransIpPlcySubRowStatus=tmnxBsxTransIpPlcySubRowStatus, tmnxBsxGtpFltrLastChangedTime=tmnxBsxGtpFltrLastChangedTime, tmnxBsxUsageMonObjGrpV12v0=tmnxBsxUsageMonObjGrpV12v0, tmnxBsxWebServCategoryName=tmnxBsxWebServCategoryName, tmnxBsxGrpStatusPktsDisCongOut=tmnxBsxGrpStatusPktsDisCongOut, TmnxBsxMdaActivityState=TmnxBsxMdaActivityState, tmnxBsxStatAaSubSdyPktsAdmFmSb=tmnxBsxStatAaSubSdyPktsAdmFmSb, tmnxBsxPolicyGroupV8v0=tmnxBsxPolicyGroupV8v0, tmnxBsxFlowAttrObsoleteGroup=tmnxBsxFlowAttrObsoleteGroup, tmnxBsxTlsStatTlsExistPktsAdm=tmnxBsxTlsStatTlsExistPktsAdm, tmnxBsxUrlFltrWebServDnsAddrType=tmnxBsxUrlFltrWebServDnsAddrType, TmnxBsxSessionFilterAction=TmnxBsxSessionFilterAction, tmnxBsxStatAaSubHCOctsDnyFmSb=tmnxBsxStatAaSubHCOctsDnyFmSb, tmnxBsxTransitIpPolicyDesc=tmnxBsxTransitIpPolicyDesc, tmnxBsxTcpValStatsDropAlreadyEst=tmnxBsxTcpValStatsDropAlreadyEst, tmnxBsxAaGrpPartShallowInspect=tmnxBsxAaGrpPartShallowInspect, tmnxBsxGrpStatusHCSubsModified=tmnxBsxGrpStatusHCSubsModified, tmnxBsxStatTcaPolcrCfgTableLstCh=tmnxBsxStatTcaPolcrCfgTableLstCh, tmnxBsxObsoleteGroupV12v0=tmnxBsxObsoleteGroupV12v0, tmnxBsxStatAaHCFlwsDnyToSb=tmnxBsxStatAaHCFlwsDnyToSb, tmnxBsxAqpRemarkFc=tmnxBsxAqpRemarkFc, tmnxBsxGtpFltrV2MsgEntry=tmnxBsxGtpFltrV2MsgEntry, tmnxBsxIsaAaGrpFailureClearV2=tmnxBsxIsaAaGrpFailureClearV2, tmnxBsxUrlFltWSClassOvrdRowSt=tmnxBsxUrlFltWSClassOvrdRowSt, tmnxBsxStatAaSubCfgEntry=tmnxBsxStatAaSubCfgEntry, tmnxBsxCflowdPerfFlowRate=tmnxBsxCflowdPerfFlowRate, tmnxBsxRadApServerTimeout=tmnxBsxRadApServerTimeout, tmnxBsxHttpEnrichName=tmnxBsxHttpEnrichName, tmnxBsxHttpsRedirHttpsRdrObjGrp=tmnxBsxHttpsRedirHttpsRdrObjGrp, TmnxBsxCustProtExprSubString=TmnxBsxCustProtExprSubString, tmnxBsxIsaAaGrpCapCostHighThres=tmnxBsxIsaAaGrpCapCostHighThres, tmnxBsxGrpStatusPktsToMdaFrSub=tmnxBsxGrpStatusPktsToMdaFrSub, tmnxBsxUrlFltrStatsWebSvRspRedir=tmnxBsxUrlFltrStatsWebSvRspRedir, tmnxBsxStatAaSubHCTermFlws=tmnxBsxStatAaSubHCTermFlws, tmnxBsxTlsStatTls11PktsDny=tmnxBsxTlsStatTls11PktsDny, tmnxBsxHttpRedirGroup=tmnxBsxHttpRedirGroup, tmnxBsxGrpStatusFlwResCtThruOcts=tmnxBsxGrpStatusFlwResCtThruOcts, tmnxBsxGrpStatusIngQDroOutPPkts=tmnxBsxGrpStatusIngQDroOutPPkts, tmnxBsxStatAaShrtDurFlws=tmnxBsxStatAaShrtDurFlws, tmnxBsxTransPrefPolicySubsCount=tmnxBsxTransPrefPolicySubsCount, tmnxBsxGrpStatusOctsToMda=tmnxBsxGrpStatusOctsToMda, tmnxBsxTransPrefSubRowLastCh=tmnxBsxTransPrefSubRowLastCh, tmnxBsxAqpCharTable=tmnxBsxAqpCharTable, tmnxBsxGrpStatusSubsAverage=tmnxBsxGrpStatusSubsAverage, tmnxBsxGrpStatusOcDisConOutFrSub=tmnxBsxGrpStatusOcDisConOutFrSub, tmnxBsxEventLogRowLastChange=tmnxBsxEventLogRowLastChange, tmnxBsxNotifyAaSubAcctLossReason=tmnxBsxNotifyAaSubAcctLossReason, tmnxBsxAdminCtrlLastChTime=tmnxBsxAdminCtrlLastChTime, tmnxBsxIcapServerLastChangeTime=tmnxBsxIcapServerLastChangeTime, tmnxBsxStatsGroupV9v0=tmnxBsxStatsGroupV9v0, tmnxBsxUrlFilterGroups=tmnxBsxUrlFilterGroups, tmnxBsxAdmitDenyAcctPolcrResrcs=tmnxBsxAdmitDenyAcctPolcrResrcs, tmnxBsxCflowdDirectExpEntry=tmnxBsxCflowdDirectExpEntry, tmnxBsxHttpRedirGroups=tmnxBsxHttpRedirGroups, TmnxBsxTcaTriggerType=TmnxBsxTcaTriggerType, tmnxBsxGrpStatusHCPktSzDecOc=tmnxBsxGrpStatusHCPktSzDecOc, tmnxBsxAppFilterExprRowStatus=tmnxBsxAppFilterExprRowStatus, tmnxBsxStatAaPktsDnyFmSb=tmnxBsxStatAaPktsDnyFmSb, tmnxBsxStatAaAcctCfgAdminState=tmnxBsxStatAaAcctCfgAdminState, tmnxBsxSessFltrStatsFlows=tmnxBsxSessFltrStatsFlows, tmnxBsxUrlFltrStatsIcapLRBytsDsc=tmnxBsxUrlFltrStatsIcapLRBytsDsc, tmnxBsxTrafStatMedDurFlws=tmnxBsxTrafStatMedDurFlws, tmnxBsxAppGrpStorageType=tmnxBsxAppGrpStorageType, tmnxBsxTcpValRowStatus=tmnxBsxTcpValRowStatus, tmnxBsxAppFilterAdminState=tmnxBsxAppFilterAdminState, tmnxBsxAqpSapSubscrOp=tmnxBsxAqpSapSubscrOp, tmnxBsxPolicerGranularity=tmnxBsxPolicerGranularity, tmnxBsxAaSubHasOverrides=tmnxBsxAaSubHasOverrides, tmnxBsxHttpNotifScalars=tmnxBsxHttpNotifScalars, tmnxBsxTlsStatQuicFlwsAdm=tmnxBsxTlsStatQuicFlwsAdm, tmnxBsxGrpStatusIngQHCFwdInPPkts=tmnxBsxGrpStatusIngQHCFwdInPPkts, tmnxBsxUrlFltrWebServiceGroup=tmnxBsxUrlFltrWebServiceGroup, tmnxBsxWebServiceCategoryTable=tmnxBsxWebServiceCategoryTable, tmnxBsxIsaAaGrpFlowAttrTable=tmnxBsxIsaAaGrpFlowAttrTable, tmnxBsxPlcyRowLastCh=tmnxBsxPlcyRowLastCh, tmnxBsxProtAdminState=tmnxBsxProtAdminState, tmnxBsxTransitIpPolicySubsCount=tmnxBsxTransitIpPolicySubsCount, tmnxBsxHttpRedirErrCode=tmnxBsxHttpRedirErrCode, tmnxBsxUrlFilterIcapHttpRedirObj=tmnxBsxUrlFilterIcapHttpRedirObj, tmnxBsxAaSubHttpUrlParam=tmnxBsxAaSubHttpUrlParam, tmnxBsxPolicerCongestedCIR=tmnxBsxPolicerCongestedCIR, tmnxBsxLwObjGrpV12v0=tmnxBsxLwObjGrpV12v0, tmnxBsxStatAaSubEntry=tmnxBsxStatAaSubEntry, tmnxBsxIpPrefixListObjGrpV12v0=tmnxBsxIpPrefixListObjGrpV12v0, tmnxBsxNotificationGroupV11v0=tmnxBsxNotificationGroupV11v0, tmnxBsxUrlFltrWSClassOvrdEntryId=tmnxBsxUrlFltrWSClassOvrdEntryId, tmnxBsxGrpStatusPktsInMdaToSub=tmnxBsxGrpStatusPktsInMdaToSub, tmnxBsxGrpStatusIngQFwdInPOcts=tmnxBsxGrpStatusIngQFwdInPOcts, tmnxBsxDnsIpCacheStatFullCnt=tmnxBsxDnsIpCacheStatFullCnt, tmnxBsxCflowdRowLastChange=tmnxBsxCflowdRowLastChange, tmnxBsxStatsFlowAttrTable=tmnxBsxStatsFlowAttrTable, tmnxBsxIcapServerStatsReqErrors=tmnxBsxIcapServerStatsReqErrors, tmnxBsxTrafStatTermFlws=tmnxBsxTrafStatTermFlws, TmnxBsxIsaAaGroupIndex=TmnxBsxIsaAaGroupIndex, tmnxBsxGrpStatusPktInPChpErFrSub=tmnxBsxGrpStatusPktInPChpErFrSub)
mibBuilder.exportSymbols("TIMETRA-BSX-NG-MIB", tmnxBsxAaSubPolicerName=tmnxBsxAaSubPolicerName, tmnxBsxTcaStatsTable=tmnxBsxTcaStatsTable, tmnxBsxAaSubUMOperStatus=tmnxBsxAaSubUMOperStatus, tmnxBsxTcpValStatsDropBadSEQ=tmnxBsxTcpValStatsDropBadSEQ, tmnxBsxStatAaHCPktsDnyFmSb=tmnxBsxStatAaHCPktsDnyFmSb, tmnxBsxIsaAaGrpFromSubResvCbs=tmnxBsxIsaAaGrpFromSubResvCbs, tmnxBsxAqpMatchAaSubscriberOp=tmnxBsxAqpMatchAaSubscriberOp, tmnxBsxGtpFltrMsgValue=tmnxBsxGtpFltrMsgValue, tmnxBsxGrpStatusPktPlcyBypsFrSub=tmnxBsxGrpStatusPktPlcyBypsFrSub, tmnxBsxSessionFilterGroups=tmnxBsxSessionFilterGroups, tmnxBsxTransPrefSumUpdateTime=tmnxBsxTransPrefSumUpdateTime, tmnxBsxStatAaAcctCfgUMStats=tmnxBsxStatAaAcctCfgUMStats, tmnxBsxGrpStatusFlowsPeak=tmnxBsxGrpStatusFlowsPeak, tmnxBsxAarpTableLastChTime=tmnxBsxAarpTableLastChTime, tmnxBsxAqpBaseAdminState=tmnxBsxAqpBaseAdminState, tmnxBsxNotifyObjsGroupV9v0=tmnxBsxNotifyObjsGroupV9v0, tmnxBsxIsaAaGrpFlowAttrEntry=tmnxBsxIsaAaGrpFlowAttrEntry, tmnxBsxUrlFltrWebSvStatsConnEst=tmnxBsxUrlFltrWebSvStatsConnEst, tmnxBsxOvrdAaSubTable=tmnxBsxOvrdAaSubTable, tmnxBsxGtpFltrV2MsgEntryId=tmnxBsxGtpFltrV2MsgEntryId, tmnxBsxIsaAaGrpPacketRate=tmnxBsxIsaAaGrpPacketRate, tmnxBsxAqpCharRowStatus=tmnxBsxAqpCharRowStatus, tmnxBsxTransitIpPolicyAddrEntry=tmnxBsxTransitIpPolicyAddrEntry, tmnxBsxAarpInstTable=tmnxBsxAarpInstTable, tmnxBsxCustProtExprDirection=tmnxBsxCustProtExprDirection, tmnxBsxGrpStatusDatapathCpuRsdCt=tmnxBsxGrpStatusDatapathCpuRsdCt, tmnxBsxHttpRedirEnabled=tmnxBsxHttpRedirEnabled, tmnxBsxPartAcctCfgTable=tmnxBsxPartAcctCfgTable, tmnxBsxAqpLastChTime=tmnxBsxAqpLastChTime, tmnxBsxGrpStatusPktCutThrough=tmnxBsxGrpStatusPktCutThrough, tmnxBsxAqpBaseEntry=tmnxBsxAqpBaseEntry, tmnxBsxGtpFltrImsiApnEntryAction=tmnxBsxGtpFltrImsiApnEntryAction, tmnxBsxHttpEnrichTplNotEnabledLo=tmnxBsxHttpEnrichTplNotEnabledLo, tmnxBsxStatAaSubOctsDnyFmSb=tmnxBsxStatAaSubOctsDnyFmSb, tmnxBsxCflowdStatusEntry=tmnxBsxCflowdStatusEntry, tmnxBsxAarpCommandControl=tmnxBsxAarpCommandControl, tmnxBsxIsaAaGrpOverloadCutThru=tmnxBsxIsaAaGrpOverloadCutThru, tmnxBsxUrlListEntry=tmnxBsxUrlListEntry, tmnxBsxAaSubEntry=tmnxBsxAaSubEntry, tmnxBsxChargeGrpCfgEntry=tmnxBsxChargeGrpCfgEntry, tmnxBsxStatAaAcctCfgTable=tmnxBsxStatAaAcctCfgTable, tmnxBsxStatAaAppFilterEntry=tmnxBsxStatAaAppFilterEntry, tmnxBsxStatAaTermFlws=tmnxBsxStatAaTermFlws, tmnxBsxIsaAaGrpFromSubQuePolicy=tmnxBsxIsaAaGrpFromSubQuePolicy, tmnxBsxGrpStatusOctsToMdaFrSub=tmnxBsxGrpStatusOctsToMdaFrSub, tmnxBsxHttpRdStatHCOutOfResource=tmnxBsxHttpRdStatHCOutOfResource, tmnxBsxAppFilterExprLastChTime=tmnxBsxAppFilterExprLastChTime, tmnxBsxRadApServSecret=tmnxBsxRadApServSecret, tmnxBsxGrpStatusEgrQDirection=tmnxBsxGrpStatusEgrQDirection, tmnxBsxAqpMatchDstPortOp=tmnxBsxAqpMatchDstPortOp, tmnxBsxUrlListStatusNumChars=tmnxBsxUrlListStatusNumChars, tmnxBsxAppFilterNetworkAddrOp=tmnxBsxAppFilterNetworkAddrOp, tmnxBsxPolicerAction=tmnxBsxPolicerAction, tmnxBsxGtpFltrMatchSrcIpPfxList=tmnxBsxGtpFltrMatchSrcIpPfxList, tmnxBsxStatAaEntry=tmnxBsxStatAaEntry, tmnxBsxCflowdDirectExpTable=tmnxBsxCflowdDirectExpTable, tmnxBsxGtpFltrStatsPkDndInvSubIp=tmnxBsxGtpFltrStatsPkDndInvSubIp, tmnxBsxDnsIpCacheTable=tmnxBsxDnsIpCacheTable, tmnxBsxCflowdRecField=tmnxBsxCflowdRecField, tmnxBsxTlsStatQuicExistOctsDny=tmnxBsxTlsStatQuicExistOctsDny, tmnxBsxUrlFltrUrlListRowStatus=tmnxBsxUrlFltrUrlListRowStatus, tmnxBsxStatAaTermFlwDur=tmnxBsxStatAaTermFlwDur, TmnxBsxBurstSize=TmnxBsxBurstSize, tmnxBsxGrpMdaTransitIpAddrs=tmnxBsxGrpMdaTransitIpAddrs, tmnxBsxCflowdExpStatTable=tmnxBsxCflowdExpStatTable, tmnxBsxTlsStatQuicEsniFlwsAdm=tmnxBsxTlsStatQuicEsniFlwsAdm, tmnxBsxAsoLastChTime=tmnxBsxAsoLastChTime, tmnxBsxGtpStatsTable=tmnxBsxGtpStatsTable, tmnxBsxTlsStatTlsExistFlwsAdm=tmnxBsxTlsStatTlsExistFlwsAdm, tmnxBsxDnsIpCacheHighWatermark=tmnxBsxDnsIpCacheHighWatermark, tmnxBsxNotifyPrefix=tmnxBsxNotifyPrefix, tmnxBsxPolicyObjs=tmnxBsxPolicyObjs, tmnxBsxIcapServerTable=tmnxBsxIcapServerTable, tmnxBsxRedundancyObjScalars=tmnxBsxRedundancyObjScalars, tmnxBsxAppFilterTable=tmnxBsxAppFilterTable, tmnxBsxGtpFltrEventLogAction=tmnxBsxGtpFltrEventLogAction, tmnxBsxGrpStatusHCPktsPolicyByps=tmnxBsxGrpStatusHCPktsPolicyByps, tmnxBsxAdmitDenyAcctTableLastCh=tmnxBsxAdmitDenyAcctTableLastCh, tmnxBsxFlowAttrObjGrp=tmnxBsxFlowAttrObjGrp, tmnxBsxGrpMdaActivityState=tmnxBsxGrpMdaActivityState, tmnxBsxAdminControl=tmnxBsxAdminControl, tmnxBsxStatAaSubSdyActFlwsToSb=tmnxBsxStatAaSubSdyActFlwsToSb, tmnxBsxCflowdDirExpAddrRowStatus=tmnxBsxCflowdDirExpAddrRowStatus, tmnxBsxAqpMatchSrcAddress=tmnxBsxAqpMatchSrcAddress, tmnxBsxUrlFltrWebServProfEntry=tmnxBsxUrlFltrWebServProfEntry, tmnxBsxGtpFltrName=tmnxBsxGtpFltrName, tmnxBsxAarpInstMasterSelectMode=tmnxBsxAarpInstMasterSelectMode, TmnxBsxAarpServPointType=TmnxBsxAarpServPointType, tmnxBsxRadApObjGroup=tmnxBsxRadApObjGroup, tmnxBsxAsoRowStatus=tmnxBsxAsoRowStatus, tmnxBsxUrlFltrStatsWSClassOvrHit=tmnxBsxUrlFltrStatsWSClassOvrHit, tmnxBsxAqpActOverloadDrop=tmnxBsxAqpActOverloadDrop, tmnxBsxHttpEnrichObjs=tmnxBsxHttpEnrichObjs, tmnxBsxPortListV15v0ObjGrp=tmnxBsxPortListV15v0ObjGrp, tmnxBsxDnsIpCacheDomainEntry=tmnxBsxDnsIpCacheDomainEntry, tmnxBsxGrpStatusSeenIpReqSentHi=tmnxBsxGrpStatusSeenIpReqSentHi, tmnxBsxDEMObsoletedObjGrp=tmnxBsxDEMObsoletedObjGrp, tmnxBsxCflowdTemplateRetransmit=tmnxBsxCflowdTemplateRetransmit, tmnxBsxStatTcaCfgRowStatus=tmnxBsxStatTcaCfgRowStatus, tmnxBsxRadiusAccountingObjGroup=tmnxBsxRadiusAccountingObjGroup, tmnxBsxChargeGrpName=tmnxBsxChargeGrpName, tmnxBsxAqpStatsTable=tmnxBsxAqpStatsTable, tmnxBsxAqpDscp=tmnxBsxAqpDscp, tmnxBsxGrpStatusEgrQFwdInPOcts=tmnxBsxGrpStatusEgrQFwdInPOcts, tmnxBsxDnsIpCacheServerEntry=tmnxBsxDnsIpCacheServerEntry, tmnxBsxGtpGroupV13v0=tmnxBsxGtpGroupV13v0, tmnxBsxAqpMatchIpProtocolNumOp=tmnxBsxAqpMatchIpProtocolNumOp, tmnxBsxStatAaSubSdyHCPktsAdmToSb=tmnxBsxStatAaSubSdyHCPktsAdmToSb, tmnxBsxAppProfCapacityCost=tmnxBsxAppProfCapacityCost, tmnxBsxStatAaSubSdyHCShrtDurFlws=tmnxBsxStatAaSubSdyHCShrtDurFlws, tmnxBsxGrpStatusIngQDroInPPkts=tmnxBsxGrpStatusIngQDroInPPkts, tmnxBsxTrafStatActFlwsToSb=tmnxBsxTrafStatActFlwsToSb, tmnxBsxConformance=tmnxBsxConformance, tmnxBsxTransIpPolRadDiscError=tmnxBsxTransIpPolRadDiscError, tmnxBsxAqpSrcAddressLength=tmnxBsxAqpSrcAddressLength, tmnxBsxCustProtDescription=tmnxBsxCustProtDescription, tmnxBsxTlsStatTls11OctsAdm=tmnxBsxTlsStatTls11OctsAdm, tmnxBsxTlsStatQuicExistOctsAdm=tmnxBsxTlsStatQuicExistOctsAdm, tmnxBsxTransitIpPolicySubscriber=tmnxBsxTransitIpPolicySubscriber, tmnxBsxGtpFltrStatsPkDndExtHdr=tmnxBsxGtpFltrStatsPkDndExtHdr, tmnxBsxTrafStatIpFamily=tmnxBsxTrafStatIpFamily, tmnxBsxAaSubUMBothGrantCredit=tmnxBsxAaSubUMBothGrantCredit, tmnxBsxCompliances=tmnxBsxCompliances, tmnxBsxGrpStatusHCOctsInMda=tmnxBsxGrpStatusHCOctsInMda, tmnxBsxRadApServReqTimeouts=tmnxBsxRadApServReqTimeouts, tmnxBsxUrlFilterStatsObjGrp=tmnxBsxUrlFilterStatsObjGrp, tmnxBsxUrlFltWebSerProfRoLstChg=tmnxBsxUrlFltWebSerProfRoLstChg, tmnxBsxUrlFltrStatsHttpReqErrors=tmnxBsxUrlFltrStatsHttpReqErrors, tmnxBsxTcpValTcaStatsLastCleard=tmnxBsxTcpValTcaStatsLastCleard, tmnxBsxGrpStatusPktRateRsdCount=tmnxBsxGrpStatusPktRateRsdCount, tmnxBsxGrpStatusOvrldCtThruState=tmnxBsxGrpStatusOvrldCtThruState, tmnxBsxGtpFltrEvtLog=tmnxBsxGtpFltrEvtLog, tmnxBsxStatAaSubSdyFlwsAdmToSb=tmnxBsxStatAaSubSdyFlwsAdmToSb, tmnxBsxTcpValScalars=tmnxBsxTcpValScalars, TmnxBsxPolicerType=TmnxBsxPolicerType, tmnxBsxUrlFltrOperFlags=tmnxBsxUrlFltrOperFlags, tmnxBsxTrafStatPktsAdmToSb=tmnxBsxTrafStatPktsAdmToSb, tmnxBsxNotifyTcaCfgFltrWmarkType=tmnxBsxNotifyTcaCfgFltrWmarkType, tmnxBsxCflowdDirectExpDescrption=tmnxBsxCflowdDirectExpDescrption, tmnxBsxAdminControlApply=tmnxBsxAdminControlApply, tmnxBsxAqpAaSubscriberType=tmnxBsxAqpAaSubscriberType, tmnxBsxGtpFltrMatchApn=tmnxBsxGtpFltrMatchApn, TmnxBsxAaSubCircuitId=TmnxBsxAaSubCircuitId, tmnxBsxAqpMatchSrcPortLowValue=tmnxBsxAqpMatchSrcPortLowValue, tmnxBsxCustProtExprRowLastChange=tmnxBsxCustProtExprRowLastChange, tmnxBsxStatAaAppFilterHCFlows=tmnxBsxStatAaAppFilterHCFlows, tmnxBsxSessFltrParamsLastChTime=tmnxBsxSessFltrParamsLastChTime, tmnxBsxStatTcaFtrEnCfgEntryId=tmnxBsxStatTcaFtrEnCfgEntryId, tmnxBsxGtpFltrMatchImsiPrefix=tmnxBsxGtpFltrMatchImsiPrefix, tmnxBsxTcpValTcaTable=tmnxBsxTcpValTcaTable, tmnxBsxGrpMdaTransPrefV4Entr=tmnxBsxGrpMdaTransPrefV4Entr, tmnxBsxGtpFltrValidateGtpTunnels=tmnxBsxGtpFltrValidateGtpTunnels, tmnxBsxTransIpPolRadCoAAudit=tmnxBsxTransIpPolRadCoAAudit, tmnxBsxDnsIpCacheDomainName=tmnxBsxDnsIpCacheDomainName, tmnxBsxIcapServerAddr=tmnxBsxIcapServerAddr, tmnxBsxGrpStatusHCOctsDisCongMda=tmnxBsxGrpStatusHCOctsDisCongMda, tmnxBsxPolicerOvrdStartMinute=tmnxBsxPolicerOvrdStartMinute, tmnxBsxIsaAaGrpGtpTunnelDb=tmnxBsxIsaAaGrpGtpTunnelDb, tmnxBsxStatAaSubShrtDurFlws=tmnxBsxStatAaSubShrtDurFlws, tmnxBsxAppProfCharTable=tmnxBsxAppProfCharTable, tmnxBsxGtpFltrMsgAction=tmnxBsxGtpFltrMsgAction, tmnxBsxCertProfileReferenceCount=tmnxBsxCertProfileReferenceCount, tmnxBsxStatIsaAaCfgPolicy=tmnxBsxStatIsaAaCfgPolicy, tmnxBsxIsaAaGrpIngressResvCbs=tmnxBsxIsaAaGrpIngressResvCbs, tmnxBsxCflowdExpOvdObjGrp=tmnxBsxCflowdExpOvdObjGrp, tmnxBsxPartAcctCfgTrafStats=tmnxBsxPartAcctCfgTrafStats, tmnxBsxPacketRateHighWatermark=tmnxBsxPacketRateHighWatermark, tmnxBsxTcpValStatsTable=tmnxBsxTcpValStatsTable, tmnxBsxStatAaSubSdyOctsAdmToSb=tmnxBsxStatAaSubSdyOctsAdmToSb, tmnxBsxPolicerOvrdDescription=tmnxBsxPolicerOvrdDescription, tmnxBsxCflowdStatusPktsSent=tmnxBsxCflowdStatusPktsSent, tmnxBsxCflowdStatusRecDropped=tmnxBsxCflowdStatusRecDropped, tmnxBsxTetherEntry=tmnxBsxTetherEntry, tmnxBsxGrpStatusOctsToMdaToSub=tmnxBsxGrpStatusOctsToMdaToSub, tmnxBsxCflowdExpAdminState=tmnxBsxCflowdExpAdminState, tmnxBsxUrlListSize=tmnxBsxUrlListSize, tmnxBsxAaSubPolicerTable=tmnxBsxAaSubPolicerTable, tmnxBsxAqpMatchChargeGrpOp=tmnxBsxAqpMatchChargeGrpOp, tmnxBsxPolicyGroups=tmnxBsxPolicyGroups, tmnxBsxPolicerAdminPIR=tmnxBsxPolicerAdminPIR, tmnxBsxUrlFltrWebSvStatsReqRate=tmnxBsxUrlFltrWebSvStatsReqRate, tmnxBsxDnsIpCacheStatDnsResp=tmnxBsxDnsIpCacheStatDnsResp, tmnxBsxMdaObjs=tmnxBsxMdaObjs, tmnxBsxCflowdPerfExpRowStatus=tmnxBsxCflowdPerfExpRowStatus, tmnxBsxAaSubSumOctsDnyFmSb=tmnxBsxAaSubSumOctsDnyFmSb, tmnxBsxSessionFilterObjGrp=tmnxBsxSessionFilterObjGrp, tmnxBsxTrafficStatsObjGrpV12v0=tmnxBsxTrafficStatsObjGrpV12v0, tmnxBsxIsaAaGrpFlowAttrRowLastCh=tmnxBsxIsaAaGrpFlowAttrRowLastCh, TmnxBsxAaSubAsoValDerivedFrom=TmnxBsxAaSubAsoValDerivedFrom, tmnxBsxStatTcaFtrEnCfgEntry=tmnxBsxStatTcaFtrEnCfgEntry, tmnxBsxIsaAaGrpCapCostThres=tmnxBsxIsaAaGrpCapCostThres, tmnxBsxGtpFltrMsgRowLastChange=tmnxBsxGtpFltrMsgRowLastChange, tmnxBsxHttpNotifScriptUrl=tmnxBsxHttpNotifScriptUrl, tmnxBsxTlsStatTlsUnknownOctsDny=tmnxBsxTlsStatTlsUnknownOctsDny, tmnxBsxGrpStatusPkDisCngMdaToSub=tmnxBsxGrpStatusPkDisCngMdaToSub, tmnxBsxGrpStatusOctsFromMdaFrSub=tmnxBsxGrpStatusOctsFromMdaFrSub, tmnxBsxIsaAaGrpToSubPool=tmnxBsxIsaAaGrpToSubPool, tmnxBsxGrpStatusPktsFromMda=tmnxBsxGrpStatusPktsFromMda, tmnxBsxNotifyTcpValTcaWmarkType=tmnxBsxNotifyTcpValTcaWmarkType, tmnxBsxAarpInstPriority=tmnxBsxAarpInstPriority, tmnxBsxStatAaAcctCfgAggrStats=tmnxBsxStatAaAcctCfgAggrStats, tmnxBsxTlsStatTls10OctsAdm=tmnxBsxTlsStatTls10OctsAdm, tmnxBsxWebUrlCategSetRowLastChg=tmnxBsxWebUrlCategSetRowLastChg, tmnxBsxHttpNotifStatInserted=tmnxBsxHttpNotifStatInserted, tmnxBsxRadApRxResponses=tmnxBsxRadApRxResponses, tmnxBsxIsaAaGrpFromSubWaSBfHiWmk=tmnxBsxIsaAaGrpFromSubWaSBfHiWmk, tmnxBsxProtParentName=tmnxBsxProtParentName, tmnxBsxGrpStatusFlowsAverage=tmnxBsxGrpStatusFlowsAverage, tmnxBsxCflowdExpType=tmnxBsxCflowdExpType, tmnxBsxCflowdDirectExpRowLastCh=tmnxBsxCflowdDirectExpRowLastCh, tmnxBsxGrpStatusOctsDiscCongIn=tmnxBsxGrpStatusOctsDiscCongIn, tmnxBsxHttpNotifStatTable=tmnxBsxHttpNotifStatTable, tmnxBsxPolicerOvrdStartDay=tmnxBsxPolicerOvrdStartDay, tmnxBsxGrpStatusPktRateState=tmnxBsxGrpStatusPktRateState, tmnxBsxAppChargeGrp=tmnxBsxAppChargeGrp, tmnxBsxTransitIpSumAppProfNm=tmnxBsxTransitIpSumAppProfNm, tmnxBsxHttpEnrichRowStatus=tmnxBsxHttpEnrichRowStatus, tmnxBsxGrpStatusIngQHCFwdOutPPkts=tmnxBsxGrpStatusIngQHCFwdOutPPkts, tmnxBsxAaSubSumHCOctsAdmToSb=tmnxBsxAaSubSumHCOctsAdmToSb, tmnxBsxAqpMatchLastChTime=tmnxBsxAqpMatchLastChTime, tmnxBsxUrlFilterAdminState=tmnxBsxUrlFilterAdminState, tmnxBsxNgMIBModule=tmnxBsxNgMIBModule, tmnxBsxTcpValStatsEntry=tmnxBsxTcpValStatsEntry, tmnxBsxGrpStatusBitRateState=tmnxBsxGrpStatusBitRateState, tmnxBsxHttpEnrichNoAntiSpfShort=tmnxBsxHttpEnrichNoAntiSpfShort, tmnxBsxGtpFltrMaxPayloadLength=tmnxBsxGtpFltrMaxPayloadLength, tmnxBsxStatAaSubSdyTermFlwDur=tmnxBsxStatAaSubSdyTermFlwDur, tmnxBsxAqpStatsHCConflicts=tmnxBsxAqpStatsHCConflicts, tmnxBsxProtDescription=tmnxBsxProtDescription, tmnxBsxCflowdExpStatRecReport=tmnxBsxCflowdExpStatRecReport, tmnxBsxPolicyTodObjGrp=tmnxBsxPolicyTodObjGrp, tmnxBsxHttpEnrichExceedMaxPktHi=tmnxBsxHttpEnrichExceedMaxPktHi, tmnxBsxTcaStatsTimeLastCleared=tmnxBsxTcaStatsTimeLastCleared, tmnxBsxUrlFltrWebServOprStateChg=tmnxBsxUrlFltrWebServOprStateChg, tmnxBsxAqpDstPortLowValue=tmnxBsxAqpDstPortLowValue, tmnxBsxAaSubscriber=tmnxBsxAaSubscriber, tmnxBsxCflowdDirExpAddrAddress=tmnxBsxCflowdDirExpAddrAddress, tmnxBsxTcpValTcaStatsEntry=tmnxBsxTcpValTcaStatsEntry, tmnxBsxGrpStatusHCOctsInspected=tmnxBsxGrpStatusHCOctsInspected, tmnxBsxUrlFltrUrlListStatsTable=tmnxBsxUrlFltrUrlListStatsTable, tmnxBsxTransIpPolDhcpAddWarning=tmnxBsxTransIpPolDhcpAddWarning, tmnxBsxStatAaDiscontTime=tmnxBsxStatAaDiscontTime, tmnxBsxIsaAaGrpNonRedundantClear=tmnxBsxIsaAaGrpNonRedundantClear, tmnxBsxSctpFltrEvtLog=tmnxBsxSctpFltrEvtLog, tmnxBsxObsoleteGroupV10v0=tmnxBsxObsoleteGroupV10v0, tmnxBsxIsa2ObjGroup=tmnxBsxIsa2ObjGroup, tmnxBsxSessFltrParamsSrcAddress=tmnxBsxSessFltrParamsSrcAddress, tmnxBsxGtpFltrStatsDiscntTime=tmnxBsxGtpFltrStatsDiscntTime, tmnxBsxGrpStatusDatapathCpuPeak=tmnxBsxGrpStatusDatapathCpuPeak, tmnxBsxAaIfAdminState=tmnxBsxAaIfAdminState, tmnxBsxTransitGroupV10v0=tmnxBsxTransitGroupV10v0, tmnxBsxGrpStatusSubsCreatedLo=tmnxBsxGrpStatusSubsCreatedLo, tmnxBsxTcpValTcaStatsTable=tmnxBsxTcpValTcaStatsTable, tmnxBsxAaSubSumTable=tmnxBsxAaSubSumTable)
mibBuilder.exportSymbols("TIMETRA-BSX-NG-MIB", tmnxBsxGtpStatsPkDndGtpFltrFmSb=tmnxBsxGtpStatsPkDndGtpFltrFmSb, tmnxBsxDnsIpCacheStatEntrAdd=tmnxBsxDnsIpCacheStatEntrAdd, TmnxBsxAaGrpPartIndex=TmnxBsxAaGrpPartIndex, tmnxBsxGtpStatsPkPrmtNoFltrFmSb=tmnxBsxGtpStatsPkPrmtNoFltrFmSb, tmnxBsxRadApServerSrcAddr=tmnxBsxRadApServerSrcAddr, tmnxBsxHttpRedirDescription=tmnxBsxHttpRedirDescription, tmnxBsxGrpStatusHCPktsOut=tmnxBsxGrpStatusHCPktsOut, tmnxBsxCflowdRecFieldDescr=tmnxBsxCflowdRecFieldDescr, tmnxBsxHttpRedirCapHttpsEnbld=tmnxBsxHttpRedirCapHttpsEnbld, tmnxBsxTransPrefSumParentSub=tmnxBsxTransPrefSumParentSub, tmnxBsxCflowdCollStatHCRecSent=tmnxBsxCflowdCollStatHCRecSent, tmnxBsxGrpStatusEgrQHCFwdInPOcts=tmnxBsxGrpStatusEgrQHCFwdInPOcts, tmnxBsxTransPrefEntrySubscriber=tmnxBsxTransPrefEntrySubscriber, tmnxBsxHttpPcyRdStatDiscontTime=tmnxBsxHttpPcyRdStatDiscontTime, tmnxBsxAqpPolicyVersion=tmnxBsxAqpPolicyVersion, tmnxBsxNotifyTcaPolicerName=tmnxBsxNotifyTcaPolicerName, tmnxBsxVersion=tmnxBsxVersion, tmnxBsxPortHigh=tmnxBsxPortHigh, tmnxBsxCertProfileRowStatus=tmnxBsxCertProfileRowStatus, tmnxBsxCflowdDirExpStatDscntTime=tmnxBsxCflowdDirExpStatDscntTime, tmnxBsxUrlFltrStatsHttpRespAllow=tmnxBsxUrlFltrStatsHttpRespAllow, tmnxBsxAppProfCharProfName=tmnxBsxAppProfCharProfName, tmnxBsxStatAaSubSdyTermFlws=tmnxBsxStatAaSubSdyTermFlws, tmnxBsxHttpRedirErrRowLastCh=tmnxBsxHttpRedirErrRowLastCh, tmnxBsxCflowdExpStatHCRecReport=tmnxBsxCflowdExpStatHCRecReport, tmnxBsxHttpNotifName=tmnxBsxHttpNotifName, tmnxBsxCflowdLastChangeTime=tmnxBsxCflowdLastChangeTime, tmnxBsxCflowdPerfExpEntry=tmnxBsxCflowdPerfExpEntry, tmnxBsxHttpRdStatRedirHi=tmnxBsxHttpRdStatRedirHi, tmnxBsxStatAaAcctCfgEntry=tmnxBsxStatAaAcctCfgEntry, tmnxBsxTlsStatQuicOctsAdm=tmnxBsxTlsStatQuicOctsAdm, tmnxBsxStatAaSubSdyHCMedDurFlws=tmnxBsxStatAaSubSdyHCMedDurFlws, tmnxBsxPrefixListRowLastChange=tmnxBsxPrefixListRowLastChange, tmnxBsxCflowdCollLastChangeTime=tmnxBsxCflowdCollLastChangeTime, tmnxBsxEsmMacV15v0ObjGrp=tmnxBsxEsmMacV15v0ObjGrp, tmnxBsxGrpStatusOctsInMdaFrSub=tmnxBsxGrpStatusOctsInMdaFrSub, tmnxBsxAppPolicyVersion=tmnxBsxAppPolicyVersion, tmnxBsxTcpValTcaHighWatermark=tmnxBsxTcpValTcaHighWatermark, tmnxBsxNotifyActiveMda=tmnxBsxNotifyActiveMda, tmnxBsxTcpValTcaLastChangedTime=tmnxBsxTcpValTcaLastChangedTime, tmnxBsxFlowFullHighWatermark=tmnxBsxFlowFullHighWatermark, tmnxBsxGrpStatusHCOctsDiscErrors=tmnxBsxGrpStatusHCOctsDiscErrors, tmnxBsxAppGrpDescription=tmnxBsxAppGrpDescription, tmnxBsxStatAaAcctCfgPolicy=tmnxBsxStatAaAcctCfgPolicy, tmnxBsxIsaAaGrpToSubSlpPolicy=tmnxBsxIsaAaGrpToSubSlpPolicy, tmnxBsxBitRateLowWatermark=tmnxBsxBitRateLowWatermark, tmnxBsxAppFilterServerPortFpp=tmnxBsxAppFilterServerPortFpp, tmnxBsxTcpValStatsDropBadFlag=tmnxBsxTcpValStatsDropBadFlag, tmnxBsxUrlFltrStatsWebSvRspBlock=tmnxBsxUrlFltrStatsWebSvRspBlock, tmnxBsxStatAaName=tmnxBsxStatAaName, tmnxBsxGrpStatusSeenIpReqDropLo=tmnxBsxGrpStatusSeenIpReqDropLo, tmnxBsxAqpMirrorSourceAllIncl=tmnxBsxAqpMirrorSourceAllIncl, tmnxBsxAqpStatsEntry=tmnxBsxAqpStatsEntry, tmnxBsxTransitIpSumIpOriginMask=tmnxBsxTransitIpSumIpOriginMask, tmnxBsxGtpFltrV2MsgLastChgTime=tmnxBsxGtpFltrV2MsgLastChgTime, tmnxBsxAqpMatchSrcPortOp=tmnxBsxAqpMatchSrcPortOp, tmnxBsxAqpFlowAttr=tmnxBsxAqpFlowAttr, tmnxBsxHttpNotifTemplateId=tmnxBsxHttpNotifTemplateId, tmnxBsxSessFltrParamsDstPortLVal=tmnxBsxSessFltrParamsDstPortLVal, tmnxBsxGrpStatusInQIndex=tmnxBsxGrpStatusInQIndex, tmnxBsxCertProfileNotifyGrp=tmnxBsxCertProfileNotifyGrp, tmnxBsxHttpRedirHttpHost=tmnxBsxHttpRedirHttpHost, tmnxBsxDatapathCpuUsage=tmnxBsxDatapathCpuUsage, tmnxBsxSyslogStatsTable=tmnxBsxSyslogStatsTable, tmnxBsxGrpStatusHCPktsDiscErrors=tmnxBsxGrpStatusHCPktsDiscErrors, tmnxBsxAaGrpPartEntry=tmnxBsxAaGrpPartEntry, tmnxBsxRadApObjs=tmnxBsxRadApObjs, tmnxBsxPrefixType=tmnxBsxPrefixType, tmnxBsxDnsIpCacheServerLastCTime=tmnxBsxDnsIpCacheServerLastCTime, tmnxBsxTcpMssObjGrp=tmnxBsxTcpMssObjGrp, tmnxBsxSessFltrRowLastChange=tmnxBsxSessFltrRowLastChange, tmnxBsxNotificationGroupV12v0=tmnxBsxNotificationGroupV12v0, tmnxBsxAqpFlowCountPolicer=tmnxBsxAqpFlowCountPolicer, tmnxBsxGtpFltrV2MsgValue=tmnxBsxGtpFltrV2MsgValue, tmnxBsxAqpActionLastChTime=tmnxBsxAqpActionLastChTime, tmnxBsxStatAaSubPktsAdmToSb=tmnxBsxStatAaSubPktsAdmToSb, tmnxBsxUrlFltrWebServCategSetId=tmnxBsxUrlFltrWebServCategSetId, tmnxBsxAaGrpPartDescription=tmnxBsxAaGrpPartDescription, tmnxBsxPortRowStatus=tmnxBsxPortRowStatus, tmnxBsxAqpActDnsIpCache=tmnxBsxAqpActDnsIpCache, tmnxBsxGtpStatsPkDndFlPlcrFmSb=tmnxBsxGtpStatsPkDndFlPlcrFmSb, tmnxBsxWebServCategRowLastChg=tmnxBsxWebServCategRowLastChg, tmnxBsxTransitIpSumTable=tmnxBsxTransitIpSumTable, tmnxBsxCflowdDirExpAddrType=tmnxBsxCflowdDirExpAddrType, tmnxBsxHttpRedirErrEntry=tmnxBsxHttpRedirErrEntry, tmnxBsxAaGrpPartLastChangeTime=tmnxBsxAaGrpPartLastChangeTime, tmnxBsxAqpActEvtLogFragDrop=tmnxBsxAqpActEvtLogFragDrop, tmnxBsxGtpFltrStatsPkDndGtpInGtp=tmnxBsxGtpFltrStatsPkDndGtpInGtp, tmnxBsxPartAcctCfgTetherStats=tmnxBsxPartAcctCfgTetherStats, tmnxBsxRadiusAcctObjGroupV11v0=tmnxBsxRadiusAcctObjGroupV11v0, tmnxBsxSessFltrEntry=tmnxBsxSessFltrEntry, tmnxBsxAaSubPolResExceeded=tmnxBsxAaSubPolResExceeded, tmnxBsxGtpFltrDescription=tmnxBsxGtpFltrDescription, tmnxBsxCflowdAes128EncrptKey=tmnxBsxCflowdAes128EncrptKey, tmnxBsxAqpStatsConflictsHi=tmnxBsxAqpStatsConflictsHi, tmnxBsxPolicerCongestedAnlMBS=tmnxBsxPolicerCongestedAnlMBS, tmnxBsxSessFltrParamsSrcPortList=tmnxBsxSessFltrParamsSrcPortList, tmnxBsxCflowdAes256EncrptKey=tmnxBsxCflowdAes256EncrptKey, tmnxBsxProtName=tmnxBsxProtName, tmnxBsxChargeGrpPolicyVersion=tmnxBsxChargeGrpPolicyVersion, tmnxBsxGrpMdaSharedResTable=tmnxBsxGrpMdaSharedResTable, tmnxBsxTetherLastChangeTime=tmnxBsxTetherLastChangeTime, tmnxBsxUrlFltrStatsHttpRespDef=tmnxBsxUrlFltrStatsHttpRespDef, tmnxBsxGrpStatusSubsPeak=tmnxBsxGrpStatusSubsPeak, tmnxBsxPolicerOvrdEntry=tmnxBsxPolicerOvrdEntry, tmnxBsxGrpMdaTransitIpSubs=tmnxBsxGrpMdaTransitIpSubs, tmnxBsxAppFilterLastChTime=tmnxBsxAppFilterLastChTime, tmnxBsxTransitIpPolicyDefAppProf=tmnxBsxTransitIpPolicyDefAppProf, tmnxBsxSctpFltrEntry=tmnxBsxSctpFltrEntry, tmnxBsxAarpServPointTable=tmnxBsxAarpServPointTable, tmnxBsxUpgrade=tmnxBsxUpgrade, tmnxBsxHttpRedirEntry=tmnxBsxHttpRedirEntry, tmnxBsxAqpFlowAttrRowLstChg=tmnxBsxAqpFlowAttrRowLstChg, tmnxBsxTransPrefPolicyRowLastCh=tmnxBsxTransPrefPolicyRowLastCh, tmnxBsxStatPolcrTcaThreshCrClear=tmnxBsxStatPolcrTcaThreshCrClear, tmnxBsxSessFltrParamsSrcPortOp=tmnxBsxSessFltrParamsSrcPortOp, tmnxBsxProtRowLastChange=tmnxBsxProtRowLastChange, tmnxBsxStatTcaCfgTableLastCh=tmnxBsxStatTcaCfgTableLastCh, tmnxBsxTlsStatTlsUnknownOctsAdm=tmnxBsxTlsStatTlsUnknownOctsAdm, tmnxBsxAppFilterServerAddr=tmnxBsxAppFilterServerAddr, tmnxBsxAqpDrop=tmnxBsxAqpDrop, tmnxBsxUrlListStatusUpgSuccessTm=tmnxBsxUrlListStatusUpgSuccessTm, tmnxBsxIcapServerAddrType=tmnxBsxIcapServerAddrType, tmnxBsxTListAttribSet=tmnxBsxTListAttribSet, tmnxBsxChargeGrpRowStatus=tmnxBsxChargeGrpRowStatus, tmnxBsxGrpStatusDatapathCpuState=tmnxBsxGrpStatusDatapathCpuState, tmnxBsxTListAttribRowLastUpdateT=tmnxBsxTListAttribRowLastUpdateT, tmnxBsxNotifyTcpValTcaName=tmnxBsxNotifyTcpValTcaName, tmnxBsxGrpStatusHCPktSzIncPk=tmnxBsxGrpStatusHCPktSzIncPk, tmnxBsxAarpServPointType=tmnxBsxAarpServPointType, tmnxBsxDatapathCpuUsageClear=tmnxBsxDatapathCpuUsageClear, tmnxBsxGtpAdminState=tmnxBsxGtpAdminState, tmnxBsxDnsIpCacheLowWatermark=tmnxBsxDnsIpCacheLowWatermark, tmnxBsxPolicerAdminCIR=tmnxBsxPolicerAdminCIR, tmnxBsxStatAaSubSdyEntry=tmnxBsxStatAaSubSdyEntry, tmnxBsxHttpRedirObjGrpV13v0=tmnxBsxHttpRedirObjGrpV13v0, TmnxBsxExprSubStringIndex=TmnxBsxExprSubStringIndex, tmnxBsxHttpEnrichTable=tmnxBsxHttpEnrichTable, tmnxBsxMdaGroupV10v0=tmnxBsxMdaGroupV10v0, tmnxBsxIsaAaGrpTransPrefV4NmEntr=tmnxBsxIsaAaGrpTransPrefV4NmEntr, tmnxBsxNotifyTcaFtrEnCfgEntryId=tmnxBsxNotifyTcaFtrEnCfgEntryId, tmnxBsxStatAaAcctCfgAggrExpMeth=tmnxBsxStatAaAcctCfgAggrExpMeth, tmnxBsxCustProtTable=tmnxBsxCustProtTable, tmnxBsxAaSubAsoValTable=tmnxBsxAaSubAsoValTable, tmnxBsxEventLogSyslogVlan=tmnxBsxEventLogSyslogVlan, tmnxBsxMobileGatewayGroup=tmnxBsxMobileGatewayGroup, tmnxBsxAqpCharEntry=tmnxBsxAqpCharEntry, tmnxBsxStatAaAppFilterTable=tmnxBsxStatAaAppFilterTable, tmnxBsxNotifyAaGrpPartIndex=tmnxBsxNotifyAaGrpPartIndex, tmnxBsxHttpRedirErrParticipantId=tmnxBsxHttpRedirErrParticipantId, tmnxBsxGrpStatusOctDisCngInFrSub=tmnxBsxGrpStatusOctDisCngInFrSub, tmnxBsxLateIcapBlockObjGrp=tmnxBsxLateIcapBlockObjGrp, tmnxBsxRadApServAddrType=tmnxBsxRadApServAddrType, TmnxBsxHundredthsOfPercent=TmnxBsxHundredthsOfPercent, tmnxBsxAqpStatsFlowsLo=tmnxBsxAqpStatsFlowsLo, tmnxBsxTransitIpSumEntry=tmnxBsxTransitIpSumEntry, tmnxBsxGrpStatusWaSBfToSubRsdTm=tmnxBsxGrpStatusWaSBfToSubRsdTm, tmnxBsxSyslogStatsDiscntTime=tmnxBsxSyslogStatsDiscntTime, tmnxBsxWebUrlClassifierDescr=tmnxBsxWebUrlClassifierDescr, tmnxBsxRadApSendFail=tmnxBsxRadApSendFail, tmnxBsxSessFltrStatsTable=tmnxBsxSessFltrStatsTable, tmnxBsxSctpFltrStatsTable=tmnxBsxSctpFltrStatsTable, tmnxBsxPlcyDefTetherChargeGrp=tmnxBsxPlcyDefTetherChargeGrp, tmnxBsxPrefixListEntry=tmnxBsxPrefixListEntry, tmnxBsxSessFltrStatsFlowsLo=tmnxBsxSessFltrStatsFlowsLo, tmnxBsxHttpRdStatSizeExceededHi=tmnxBsxHttpRdStatSizeExceededHi, tmnxBsxAqpMatchSrcPfxList=tmnxBsxAqpMatchSrcPfxList, tmnxBsxCflowdDirExpAddrLastChTim=tmnxBsxCflowdDirExpAddrLastChTim, tmnxBsxCflowdDirExpAddrEntry=tmnxBsxCflowdDirExpAddrEntry, tmnxBsxGrpStatusOctsDiscErrors=tmnxBsxGrpStatusOctsDiscErrors, tmnxBsxGrpStatusOctCutThrough=tmnxBsxGrpStatusOctCutThrough, tmnxBsxStatAaSubCfgExportMethod=tmnxBsxStatAaSubCfgExportMethod, tmnxBsxDnsIpCacheRowLastChanged=tmnxBsxDnsIpCacheRowLastChanged, tmnxBsxGrpStatusMgmtCpuPeak=tmnxBsxGrpStatusMgmtCpuPeak, tmnxBsxGrpStatusDatapathCpuAvg=tmnxBsxGrpStatusDatapathCpuAvg, tmnxBsxTrafStatLngDurFlws=tmnxBsxTrafStatLngDurFlws, tmnxBsxUrlFltrUrlListEntry=tmnxBsxUrlFltrUrlListEntry, tmnxBsxTransIpPlcySubRefCount=tmnxBsxTransIpPlcySubRefCount, tmnxBsxHttpEnrichObjGroups=tmnxBsxHttpEnrichObjGroups, tmnxBsxPortListRowLastChange=tmnxBsxPortListRowLastChange, tmnxBsxHttpEnrichObjGrp=tmnxBsxHttpEnrichObjGrp, tmnxBsxTcaFtrEnStatsTmLastRaised=tmnxBsxTcaFtrEnStatsTmLastRaised, tmnxBsxGtpEntry=tmnxBsxGtpEntry, tmnxBsxSessFltrDefaultAction=tmnxBsxSessFltrDefaultAction, tmnxBsxGrpStatusOctsPolicyByps=tmnxBsxGrpStatusOctsPolicyByps, tmnxBsxAqpActRemarkPriority=tmnxBsxAqpActRemarkPriority, tmnxBsxDnsIpCacheLastCTime=tmnxBsxDnsIpCacheLastCTime, tmnxBsxStatAaAcctCfgExTcpRetrans=tmnxBsxStatAaAcctCfgExTcpRetrans, tmnxBsxHttpRedirTable=tmnxBsxHttpRedirTable, tmnxBsxSctpFltrPpidRowLastChange=tmnxBsxSctpFltrPpidRowLastChange, tmnxBsxIcapServerStatsRequests=tmnxBsxIcapServerStatsRequests, tmnxBsxTcaFtrEnStatsTmLastCleard=tmnxBsxTcaFtrEnStatsTmLastCleard, tmnxBsxAqpRowStatus=tmnxBsxAqpRowStatus, tmnxBsxUrlListDescription=tmnxBsxUrlListDescription, tmnxBsxGrpStatusPktsDiscCongIn=tmnxBsxGrpStatusPktsDiscCongIn, tmnxBsxCustProtRowLastChange=tmnxBsxCustProtRowLastChange, tmnxBsxTcpValStatsDropAfterRST=tmnxBsxTcpValStatsDropAfterRST, tmnxBsxAaIfIsaAddrType=tmnxBsxAaIfIsaAddrType, tmnxBsxRadiusAccountingGroups=tmnxBsxRadiusAccountingGroups, tmnxBsxAaSubSapEncapVal=tmnxBsxAaSubSapEncapVal, tmnxBsxSctpFltrStatsDiscntTime=tmnxBsxSctpFltrStatsDiscntTime, tmnxBsxGrpStatusWaSBfToSubState=tmnxBsxGrpStatusWaSBfToSubState, TmnxBsxAarpInstOperFlags=TmnxBsxAarpInstOperFlags, tmnxBsxGrpMdaSpokeSdpSubscribers=tmnxBsxGrpMdaSpokeSdpSubscribers, tmnxBsxTetherSingleDeviceExpTTL=tmnxBsxTetherSingleDeviceExpTTL, tmnxBsxUrlFltWSClassOvrdUrlExpr=tmnxBsxUrlFltWSClassOvrdUrlExpr, tmnxBsxGrpStatusHCOctsFromMda=tmnxBsxGrpStatusHCOctsFromMda, tmnxBsxAqpApplicationOp=tmnxBsxAqpApplicationOp, tmnxBsxTcaPolcrStatsTcaTrigType=tmnxBsxTcaPolcrStatsTcaTrigType, tmnxBsxHttpRedirCaptivePortVlan=tmnxBsxHttpRedirCaptivePortVlan, tmnxBsxSctpFltrPpidValAction=tmnxBsxSctpFltrPpidValAction, tmnxBsxTcpValTcaWatermarkType=tmnxBsxTcpValTcaWatermarkType, tmnxBsxGrpStatusIngQEntry=tmnxBsxGrpStatusIngQEntry, tmnxBsxStatTcaCfgType=tmnxBsxStatTcaCfgType, tmnxBsxHttpRedirName=tmnxBsxHttpRedirName, tmnxBsxAarpInstPeerIpAddr=tmnxBsxAarpInstPeerIpAddr, tmnxBsxRadApServerSrcAddrType=tmnxBsxRadApServerSrcAddrType, tmnxBsxUrlFilterRowStatus=tmnxBsxUrlFilterRowStatus, tmnxBsxHttpRedirTemplateId=tmnxBsxHttpRedirTemplateId, tmnxBsxStatAaHCShrtDurFlws=tmnxBsxStatAaHCShrtDurFlws, tmnxBsxOvrdAaSubRowStatus=tmnxBsxOvrdAaSubRowStatus, tmnxBsxEventLogMaxEntries=tmnxBsxEventLogMaxEntries, tmnxBsxTransPrefEntry=tmnxBsxTransPrefEntry, tmnxBsxStatAaSubSdyOctsAdmFmSb=tmnxBsxStatAaSubSdyOctsAdmFmSb, tmnxBsxTlsStatQuicEsniFlwsDny=tmnxBsxTlsStatQuicEsniFlwsDny, tmnxBsxDnsIpCacheStatDomSerMtch=tmnxBsxDnsIpCacheStatDomSerMtch, TmnxBsxCflowdRecTemplate=TmnxBsxCflowdRecTemplate, tmnxBsxAqpRemarkDscpOutProfile=tmnxBsxAqpRemarkDscpOutProfile, tmnxBsxIsaAaGrpNonRedundantV2=tmnxBsxIsaAaGrpNonRedundantV2, tmnxBsxGrpStatusPkGenHttpRdFrSub=tmnxBsxGrpStatusPkGenHttpRdFrSub, tmnxBsxEventLogTable=tmnxBsxEventLogTable, tmnxBsxFlowAttrConfBin=tmnxBsxFlowAttrConfBin, tmnxBsxAqpActEvtLogErrorDrop=tmnxBsxAqpActEvtLogErrorDrop, tmnxBsxAaSubTable=tmnxBsxAaSubTable, tmnxBsxAaSubSumPktsDnyToSb=tmnxBsxAaSubSumPktsDnyToSb, tmnxBsxGrpStatusIngQFwdOutPPkts=tmnxBsxGrpStatusIngQFwdOutPPkts, tmnxBsxTransIpPlcySubRowLastCh=tmnxBsxTransIpPlcySubRowLastCh, tmnxBsxStatFlowAttrOctsToSb=tmnxBsxStatFlowAttrOctsToSb, tmnxBsxHttpEnAntiSpfStObGrpV11v0=tmnxBsxHttpEnAntiSpfStObGrpV11v0, tmnxBsxCflowdStatusUSupSSRCStHi=tmnxBsxCflowdStatusUSupSSRCStHi, tmnxBsxStatAaHCFlwsAdmToSb=tmnxBsxStatAaHCFlwsAdmToSb, tmnxBsxDnsIpCacheProxyLastCTime=tmnxBsxDnsIpCacheProxyLastCTime, tmnxBsxSubCongDetectRowLastChg=tmnxBsxSubCongDetectRowLastChg, tmnxBsxTlsStatTls12FlwsAdm=tmnxBsxTlsStatTls12FlwsAdm, tmnxBsxStatFlowAttrConfBinName=tmnxBsxStatFlowAttrConfBinName, tmnxBsxUrlListRegExprNumEntries=tmnxBsxUrlListRegExprNumEntries, tmnxBsxCflowdStatusRecReported=tmnxBsxCflowdStatusRecReported, tmnxBsxGrpStatusPktsOutFrSub=tmnxBsxGrpStatusPktsOutFrSub, tmnxBsxTransPrefEntryNetAddrLen=tmnxBsxTransPrefEntryNetAddrLen, tmnxBsxAqpMatchApplicationOp=tmnxBsxAqpMatchApplicationOp, tmnxBsxSessionFilterObjs=tmnxBsxSessionFilterObjs, tmnxBsxGtpFltrImsiApnDefAction=tmnxBsxGtpFltrImsiApnDefAction, tmnxBsxIcapServerPort=tmnxBsxIcapServerPort, tmnxBsxTransitIpPolicyIPv6PfxLen=tmnxBsxTransitIpPolicyIPv6PfxLen)
mibBuilder.exportSymbols("TIMETRA-BSX-NG-MIB", TmnxBsxTransitSubOrigin=TmnxBsxTransitSubOrigin, tmnxBsxGrpStatusOctsOutFrSub=tmnxBsxGrpStatusOctsOutFrSub, tmnxBsxAsoValPersistId=tmnxBsxAsoValPersistId, tmnxBsxUrlListStatusUrlDeployed=tmnxBsxUrlListStatusUrlDeployed, tmnxBsxIcapServerStatsRespAllow=tmnxBsxIcapServerStatsRespAllow, tmnxBsxTransitGroups=tmnxBsxTransitGroups, tmnxBsxUrlFltrWebServDnsAddr=tmnxBsxUrlFltrWebServDnsAddr, tmnxBsxAqpActSctpFilter=tmnxBsxAqpActSctpFilter, tmnxBsxStatAaSubSdyHCFlwsAdmFmSb=tmnxBsxStatAaSubSdyHCFlwsAdmFmSb, tmnxBsxTransPrefPolicyEntCount=tmnxBsxTransPrefPolicyEntCount, tmnxBsxAaWap1xEntry=tmnxBsxAaWap1xEntry, tmnxBsxUrlFltrApplyFuncBehavior=tmnxBsxUrlFltrApplyFuncBehavior, tmnxBsxGtpFltrMatchSrcGsnAddr=tmnxBsxGtpFltrMatchSrcGsnAddr, tmnxBsxUrlListExtendedGroup=tmnxBsxUrlListExtendedGroup, tmnxBsxHttpEnrichFieldName=tmnxBsxHttpEnrichFieldName, tmnxBsxAaSubUsageMonTable=tmnxBsxAaSubUsageMonTable, tmnxBsxStatTcaCfgFilterType=tmnxBsxStatTcaCfgFilterType, tmnxBsxUrlFltrUrlListRowLastCh=tmnxBsxUrlFltrUrlListRowLastCh, tmnxBsxRadApNotificationGroup=tmnxBsxRadApNotificationGroup, tmnxBsxGrpStatusIngQFwdInPPkts=tmnxBsxGrpStatusIngQFwdInPPkts, tmnxBsxAppFilterServerPortList=tmnxBsxAppFilterServerPortList, tmnxBsxCflowdRecFieldId=tmnxBsxCflowdRecFieldId, tmnxBsxIsaAaGrpToSubResvCbs=tmnxBsxIsaAaGrpToSubResvCbs, tmnxBsxStatTcaPolcrCfgRowStatus=tmnxBsxStatTcaPolcrCfgRowStatus, tmnxBsxStatTcaCfgHiWmark=tmnxBsxStatTcaCfgHiWmark, tmnxBsxPolicerGtpFlowCountLmt=tmnxBsxPolicerGtpFlowCountLmt, tmnxBsxAppProfEntry=tmnxBsxAppProfEntry, tmnxBsxAqpMatchDscp=tmnxBsxAqpMatchDscp, tmnxBsxCflowdStatusUSupSSRCStLo=tmnxBsxCflowdStatusUSupSSRCStLo, tmnxBsxHttpEnrAntiSpfObjGrpV11v0=tmnxBsxHttpEnrAntiSpfObjGrpV11v0, tmnxBsxAaSubMacAddr=tmnxBsxAaSubMacAddr, tmnxBsxTransPrefSubEntry=tmnxBsxTransPrefSubEntry, tmnxBsxAsoValValName=tmnxBsxAsoValValName, tmnxBsxSctpFltrStatsPkPermitted=tmnxBsxSctpFltrStatsPkPermitted, tmnxBsxUrlFilterTable=tmnxBsxUrlFilterTable, tmnxBsxCustProtExprEntry=tmnxBsxCustProtExprEntry, tmnxBsxComplianceV14v0=tmnxBsxComplianceV14v0, tmnxBsxAarpInstPeerEPSapEncType=tmnxBsxAarpInstPeerEPSapEncType, tmnxBsxStatsObjs=tmnxBsxStatsObjs, tmnxBsxGrpStatusPktsDiscPolicy=tmnxBsxGrpStatusPktsDiscPolicy, tmnxBsxHttpEnrichHCTrafficChar=tmnxBsxHttpEnrichHCTrafficChar, tmnxBsxAaSubSumHCPktsDnyFmSb=tmnxBsxAaSubSumHCPktsDnyFmSb, tmnxBsxAaSubSumHCPktsAdmFmSb=tmnxBsxAaSubSumHCPktsAdmFmSb, tmnxBsxAdmitDenyAcctSessFtrStats=tmnxBsxAdmitDenyAcctSessFtrStats, tmnxBsxTlsStatQuicPktsAdm=tmnxBsxTlsStatQuicPktsAdm, tmnxBsxAaSubTransitIpPolicyId=tmnxBsxAaSubTransitIpPolicyId, tmnxBsxPolicerCongestedAnlPIR=tmnxBsxPolicerCongestedAnlPIR, tmnxBsxAaSubSapPortId=tmnxBsxAaSubSapPortId, tmnxBsxStatAaSubHCTermFlwDur=tmnxBsxStatAaSubHCTermFlwDur, tmnxBsxAqpFlowRatePolicer=tmnxBsxAqpFlowRatePolicer, tmnxBsxCflowdExpStatHCRecDropped=tmnxBsxCflowdExpStatHCRecDropped, tmnxBsxGrpStatusOvrldCtThruRsdCt=tmnxBsxGrpStatusOvrldCtThruRsdCt, tmnxBsxAppGrpAdminState=tmnxBsxAppGrpAdminState, TmnxBsxWebServCategorySetIdKey=TmnxBsxWebServCategorySetIdKey, tmnxBsxAqpBaseDescription=tmnxBsxAqpBaseDescription, tmnxBsxTransPrefSubscriber=tmnxBsxTransPrefSubscriber, tmnxBsxSessFltrParamsDescription=tmnxBsxSessFltrParamsDescription, tmnxBsxAaSubPolResExEntry=tmnxBsxAaSubPolResExEntry, tmnxBsxIsaAaGrpFlowSetupClear=tmnxBsxIsaAaGrpFlowSetupClear, tmnxBsxAaSubPolicerDirection=tmnxBsxAaSubPolicerDirection, TmnxBsxTcaState=TmnxBsxTcaState, tmnxBsxTransitIpPolicyAutoCreate=tmnxBsxTransitIpPolicyAutoCreate, tmnxBsxChargeGrpCfgTable=tmnxBsxChargeGrpCfgTable, tmnxBsxCflowdDirExpStatRecSent=tmnxBsxCflowdDirExpStatRecSent, tmnxBsxNotifyIsaAaGroupIndex=tmnxBsxNotifyIsaAaGroupIndex, tmnxBsxAarpInstPeerSubRefType=tmnxBsxAarpInstPeerSubRefType, tmnxBsxCustProtRowStatus=tmnxBsxCustProtRowStatus, tmnxBsxTlsStatTls10PktsDny=tmnxBsxTlsStatTls10PktsDny, tmnxBsxTcaFtrStatsTable=tmnxBsxTcaFtrStatsTable, tmnxBsxIsaAaGrpTransPrefV6NmEntr=tmnxBsxIsaAaGrpTransPrefV6NmEntr, tmnxBsxTransPrefPolicyTable=tmnxBsxTransPrefPolicyTable, tmnxBsxWebUrlCategorySetEntry=tmnxBsxWebUrlCategorySetEntry, tmnxBsxHttpNotifObjGrp=tmnxBsxHttpNotifObjGrp, tmnxBsxRadApRowLastChange=tmnxBsxRadApRowLastChange, tmnxBsxStatAaSubSdyOctsDnyToSb=tmnxBsxStatAaSubSdyOctsDnyToSb, tmnxBsxUrlListStatusUpgLineSkipd=tmnxBsxUrlListStatusUpgLineSkipd, tmnxBsxGtpFltrRowLastChange=tmnxBsxGtpFltrRowLastChange, tmnxBsxStatIsaAaCfgLastChTime=tmnxBsxStatIsaAaCfgLastChTime, tmnxBsxUrlFltrStatsWebSvLRBytDsc=tmnxBsxUrlFltrStatsWebSvLRBytDsc, tmnxBsxGrpStatusPktSzDecPkFrSub=tmnxBsxGrpStatusPktSzDecPkFrSub, tmnxBsxAppFilterExprOperator=tmnxBsxAppFilterExprOperator, tmnxBsxPlcyCfgTable=tmnxBsxPlcyCfgTable, tmnxBsxIsaAaSubLoadBalance=tmnxBsxIsaAaSubLoadBalance, tmnxBsxPolicerOvrdCBS=tmnxBsxPolicerOvrdCBS, tmnxBsxTetherRowLastChange=tmnxBsxTetherRowLastChange, tmnxBsxTlsStatTls11PktsAdm=tmnxBsxTlsStatTls11PktsAdm, tmnxBsxComplianceV10v0=tmnxBsxComplianceV10v0, tmnxBsxPolicerOvrdDayList=tmnxBsxPolicerOvrdDayList, tmnxBsxTlsStatQuicUnknwnPktsAdm=tmnxBsxTlsStatQuicUnknwnPktsAdm, tmnxBsxGtpcInspection=tmnxBsxGtpcInspection, tmnxBsxCustProtExprLastChTime=tmnxBsxCustProtExprLastChTime, tmnxBsxNotificationGroupV14v0=tmnxBsxNotificationGroupV14v0, tmnxBsxCustProtLastChTime=tmnxBsxCustProtLastChTime, tmnxBsxHttpEnrichStatTable=tmnxBsxHttpEnrichStatTable, tmnxBsxTlsTrafficStatsEntry=tmnxBsxTlsTrafficStatsEntry, tmnxBsxTransitIpPolicyDiameter=tmnxBsxTransitIpPolicyDiameter, tmnxBsxRadApFailure=tmnxBsxRadApFailure, tmnxBsxEventLogEntry=tmnxBsxEventLogEntry, tmnxBsxAaSubUMBothGrantStatus=tmnxBsxAaSubUMBothGrantStatus, tmnxBsxCflowdStatusHCRecDropped=tmnxBsxCflowdStatusHCRecDropped, tmnxBsxGtpLastChangedTime=tmnxBsxGtpLastChangedTime, tmnxBsxCflowdStatusActFlowsCurr=tmnxBsxCflowdStatusActFlowsCurr, TmnxBsxCflowdExpOvdMode=TmnxBsxCflowdExpOvdMode, tmnxBsxStatTcaFtrCfgTableLastCh=tmnxBsxStatTcaFtrCfgTableLastCh, tmnxBsxHttpNotifObjs=tmnxBsxHttpNotifObjs, tmnxBsxShallowInspectionGrp=tmnxBsxShallowInspectionGrp, tmnxBsxGrpStatusHCOctsPolicyByps=tmnxBsxGrpStatusHCOctsPolicyByps, tmnxBsxUrlFltrStatsAllowListLkup=tmnxBsxUrlFltrStatsAllowListLkup, tmnxBsxHttpEnrichTplNotEnabledHi=tmnxBsxHttpEnrichTplNotEnabledHi, tmnxBsxAqpSessionFilter=tmnxBsxAqpSessionFilter, tmnxBsxAnlTable=tmnxBsxAnlTable, tmnxBsxCflowdPerfTable=tmnxBsxCflowdPerfTable, tmnxBsxGrpStatusIngQTable=tmnxBsxGrpStatusIngQTable, tmnxBsxUrlFltWebServCategName=tmnxBsxUrlFltWebServCategName, tmnxBsxNotifyIsaMdaNum=tmnxBsxNotifyIsaMdaNum, tmnxBsxAppGrpCfgTable=tmnxBsxAppGrpCfgTable, tmnxBsxGrpStatusPktsOut=tmnxBsxGrpStatusPktsOut, tmnxBsxCflowdCollStatTable=tmnxBsxCflowdCollStatTable, tmnxBsxHttpEnrichHCTplNotEnabled=tmnxBsxHttpEnrichHCTplNotEnabled, tmnxBsxHttpEnrichFieldTable=tmnxBsxHttpEnrichFieldTable, tmnxBsxAqpActErrorDrop=tmnxBsxAqpActErrorDrop, tmnxBsxAaSubUMFmSubUsedCredit=tmnxBsxAaSubUMFmSubUsedCredit, tmnxBsxTlsStatTlsUnknownPktsAdm=tmnxBsxTlsStatTlsUnknownPktsAdm, tmnxBsxTransitScalars=tmnxBsxTransitScalars, tmnxBsxIsaAaGrpFcRowLastChange=tmnxBsxIsaAaGrpFcRowLastChange, tmnxBsxHttpRedirErrName=tmnxBsxHttpRedirErrName, tmnxBsxGrpStatusOcDisCngMdaFrSub=tmnxBsxGrpStatusOcDisCngMdaFrSub, tmnxBsxHttpRedirRowStatus=tmnxBsxHttpRedirRowStatus, tmnxBsxGtpFltrV2MsgTable=tmnxBsxGtpFltrV2MsgTable, tmnxBsxIsaAaGrpOvrldSubQuarAdmin=tmnxBsxIsaAaGrpOvrldSubQuarAdmin, tmnxBsxAppProfName=tmnxBsxAppProfName, tmnxBsxStatAaType=tmnxBsxStatAaType, tmnxBsxAaSubAsoValDerivedFrom=tmnxBsxAaSubAsoValDerivedFrom, tmnxBsxAqpSpokeSdpSubscrOp=tmnxBsxAqpSpokeSdpSubscrOp, tmnxBsxTcpValTcaEntry=tmnxBsxTcpValTcaEntry, TmnxBsxAaSubscriber=TmnxBsxAaSubscriber, tmnxBsxTcaPolcrStatsTmLastRaised=tmnxBsxTcaPolcrStatsTmLastRaised, tmnxBsxGrpStatusPktsInspected=tmnxBsxGrpStatusPktsInspected, tmnxBsxSessFltrParamsIpProtocol=tmnxBsxSessFltrParamsIpProtocol, tmnxBsxCflowdPerfExpTable=tmnxBsxCflowdPerfExpTable, tmnxBsxTcaFtrStatsEntry=tmnxBsxTcaFtrStatsEntry, tmnxBsxPlcyCfgLastChTime=tmnxBsxPlcyCfgLastChTime, tmnxBsxHttpEnrichExceedMaxPktLo=tmnxBsxHttpEnrichExceedMaxPktLo, tmnxBsxGrpMdaRole=tmnxBsxGrpMdaRole, tmnxBsxCflowdExpStatHCFlowsNoRes=tmnxBsxCflowdExpStatHCFlowsNoRes, tmnxBsxAppFilterServerAddrType=tmnxBsxAppFilterServerAddrType, tmnxBsxAqpFlowAttrOperator=tmnxBsxAqpFlowAttrOperator, tmnxBsxStatAaHCOctsDnyFmSb=tmnxBsxStatAaHCOctsDnyFmSb, tmnxBsxTlsStatQuicEsniOctsDny=tmnxBsxTlsStatQuicEsniOctsDny, tmnxBsxTransIpPolDiamGxError=tmnxBsxTransIpPolDiamGxError, tmnxBsxAaSubAsoValEntry=tmnxBsxAaSubAsoValEntry, tmnxBsxTlsStatTlsExistPktsDny=tmnxBsxTlsStatTlsExistPktsDny, tmnxBsxUrlListStatusNumEntries=tmnxBsxUrlListStatusNumEntries, tmnxBsxIcapServerStatsRespRedir=tmnxBsxIcapServerStatsRespRedir, tmnxBsxCustProtExprStr=tmnxBsxCustProtExprStr, tmnxBsxCflowdDirectExpVersion=tmnxBsxCflowdDirectExpVersion, tmnxBsxGtpFltrTable=tmnxBsxGtpFltrTable, tmnxBsxStatAaSubTable=tmnxBsxStatAaSubTable, tmnxBsxEsmMacSubSumUpdateTime=tmnxBsxEsmMacSubSumUpdateTime, tmnxBsxAqpRemarkPriority=tmnxBsxAqpRemarkPriority, tmnxBsxTcaStatsTcaState=tmnxBsxTcaStatsTcaState, tmnxBsxHttpEnrichNumEnrichedLo=tmnxBsxHttpEnrichNumEnrichedLo, tmnxBsxGrpStatusFlowSetupRateAvg=tmnxBsxGrpStatusFlowSetupRateAvg, tmnxBsxTransPrefSubAppProfNm=tmnxBsxTransPrefSubAppProfNm, tmnxBsxAqpMirrorSource=tmnxBsxAqpMirrorSource, tmnxBsxPlcyCfgEntry=tmnxBsxPlcyCfgEntry, tmnxBsxAppStorageType=tmnxBsxAppStorageType, tmnxBsxOvrdScalars=tmnxBsxOvrdScalars, tmnxBsxHttpRedirRowLastCh=tmnxBsxHttpRedirRowLastCh, tmnxBsxHttpEnrichMissngSubDataLo=tmnxBsxHttpEnrichMissngSubDataLo, tmnxBsxHttpEnrichFieldStaticStr=tmnxBsxHttpEnrichFieldStaticStr, tmnxBsxIsaAaGrpIngressSlpPolicy=tmnxBsxIsaAaGrpIngressSlpPolicy, tmnxBsxPolicerOvrdEndMinute=tmnxBsxPolicerOvrdEndMinute, tmnxBsxNotificationGroupV7v0=tmnxBsxNotificationGroupV7v0, tmnxBsxGrpStatusHCPktSzDecPk=tmnxBsxGrpStatusHCPktSzDecPk, tmnxBsxCflowdRecTemplate=tmnxBsxCflowdRecTemplate, tmnxBsxStatFlowAttrPktsFmSb=tmnxBsxStatFlowAttrPktsFmSb, TmnxBsxAaStatExportMethod=TmnxBsxAaStatExportMethod, tmnxBsxCertProfileOperFlags=tmnxBsxCertProfileOperFlags, tmnxBsxCflowdDirExpStatEntry=tmnxBsxCflowdDirExpStatEntry, tmnxBsxAppLastChTime=tmnxBsxAppLastChTime, tmnxBsxProtLastChTime=tmnxBsxProtLastChTime, tmnxBsxIsaLoadBalUnSubTransit=tmnxBsxIsaLoadBalUnSubTransit, tmnxBsxAppGrpChargeGrp=tmnxBsxAppGrpChargeGrp, tmnxBsxGrpStatusSubsModifiedLo=tmnxBsxGrpStatusSubsModifiedLo, tmnxBsxTlsStatTls12OctsDny=tmnxBsxTlsStatTls12OctsDny, tmnxBsxTransitIpPolicySeenIp=tmnxBsxTransitIpPolicySeenIp, tmnxBsxStatTcaFtrCfgHiWmark=tmnxBsxStatTcaFtrCfgHiWmark, tmnxBsxTransPrefSubRefCount=tmnxBsxTransPrefSubRefCount, tmnxBsxAdmitDenyAcctEntry=tmnxBsxAdmitDenyAcctEntry, TmnxBsxAdminCtrl=TmnxBsxAdminCtrl, tmnxBsxGtpObjs=tmnxBsxGtpObjs, tmnxBsxGrpStatusEgrQDroInPOcts=tmnxBsxGrpStatusEgrQDroInPOcts, tmnxBsxUrlListDecryptKey=tmnxBsxUrlListDecryptKey, tmnxBsxHttpPcyRdStatOutOfResHi=tmnxBsxHttpPcyRdStatOutOfResHi, tmnxBsxSyslogStatsEventsSent=tmnxBsxSyslogStatsEventsSent, tmnxBsxTlsStatTls10PktsAdm=tmnxBsxTlsStatTls10PktsAdm, tmnxBsxUrlFltWebSerProfDescr=tmnxBsxUrlFltWebSerProfDescr, tmnxBsxStatAaSubTermFlwDur=tmnxBsxStatAaSubTermFlwDur, tmnxBsxAarpInstOperFlags=tmnxBsxAarpInstOperFlags, tmnxBsxNotificationGroup=tmnxBsxNotificationGroup, tmnxBsxUrlFilterObjGrpV12v0=tmnxBsxUrlFilterObjGrpV12v0, tmnxBsxTrafStatTable=tmnxBsxTrafStatTable, tmnxBsxTransIpPolAaSubDeleted=tmnxBsxTransIpPolAaSubDeleted, tmnxBsxUrlListStatusUpgErrDetail=tmnxBsxUrlListStatusUpgErrDetail, tmnxBsxGrpStatusOctsDisCongOut=tmnxBsxGrpStatusOctsDisCongOut, tmnxBsxDnsIpCacheFull=tmnxBsxDnsIpCacheFull, tmnxBsxUrlFltrWebServClassifyId=tmnxBsxUrlFltrWebServClassifyId, tmnxBsxEsmMacSubSumEsmSubscriber=tmnxBsxEsmMacSubSumEsmSubscriber, tmnxBsxOvrdGroups=tmnxBsxOvrdGroups, tmnxBsxAqpActRemarkDscpInProf=tmnxBsxAqpActRemarkDscpInProf, tmnxBsxGrpStatusFlowResAvg=tmnxBsxGrpStatusFlowResAvg, tmnxBsxAsoCharName=tmnxBsxAsoCharName, tmnxBsxStatAaHCOctsAdmToSb=tmnxBsxStatAaHCOctsAdmToSb, tmnxBsxStatIsaAaCfgEntry=tmnxBsxStatIsaAaCfgEntry, tmnxBsxHttpEnrichRowLastCh=tmnxBsxHttpEnrichRowLastCh, tmnxBsxObsoleteGroups=tmnxBsxObsoleteGroups, tmnxBsxTransitIpSumParentSubType=tmnxBsxTransitIpSumParentSubType, TmnxBsxAaSubAcctLossReason=TmnxBsxAaSubAcctLossReason, tmnxBsxStatAaSubSdyCfgTable=tmnxBsxStatAaSubSdyCfgTable, tmnxBsxGtpFltrStatsPkDndMsgType=tmnxBsxGtpFltrStatsPkDndMsgType, tmnxBsxMdaGroupV9v0=tmnxBsxMdaGroupV9v0, tmnxBsxStatAaSubSdyFlwsAdmFmSb=tmnxBsxStatAaSubSdyFlwsAdmFmSb, tmnxBsxAqpActBwLimitPolicer=tmnxBsxAqpActBwLimitPolicer, tmnxBsxAaSubscribersUnassigned=tmnxBsxAaSubscribersUnassigned, tmnxBsxObsoleteGroupV13v0=tmnxBsxObsoleteGroupV13v0, tmnxBsxAqpCharLastChTime=tmnxBsxAqpCharLastChTime, tmnxBsxIsaAaGrpFcEntry=tmnxBsxIsaAaGrpFcEntry, tmnxBsxEventLogRowStatus=tmnxBsxEventLogRowStatus, tmnxBsxProtObsolete=tmnxBsxProtObsolete, tmnxBsxCflowdStatusHCRecReported=tmnxBsxCflowdStatusHCRecReported, tmnxBsxAqpHttpRedirName=tmnxBsxAqpHttpRedirName, tmnxBsxUrlListGroupV13v0=tmnxBsxUrlListGroupV13v0, tmnxBsxGtpUntunnelingObjGrp=tmnxBsxGtpUntunnelingObjGrp, tmnxBsxStatAaSubSdyHCFlwsDnyToSb=tmnxBsxStatAaSubSdyHCFlwsDnyToSb, tmnxBsxHttpNotifRowStatus=tmnxBsxHttpNotifRowStatus, tmnxBsxIcapServerRowStatus=tmnxBsxIcapServerRowStatus, tmnxBsxAppFilterV15v0ObjGrp=tmnxBsxAppFilterV15v0ObjGrp, tmnxBsxAqpSrcAddressType=tmnxBsxAqpSrcAddressType, tmnxBsxCertProfileCertFile=tmnxBsxCertProfileCertFile, tmnxBsxOverloadSubQuarantineGrp=tmnxBsxOverloadSubQuarantineGrp, tmnxBsxAaGrpPartTable=tmnxBsxAaGrpPartTable, tmnxBsxSessFltrParamsDstPortHVal=tmnxBsxSessFltrParamsDstPortHVal, tmnxBsxCflowdPerfEntry=tmnxBsxCflowdPerfEntry, tmnxBsxAqpRowLastChange=tmnxBsxAqpRowLastChange, tmnxBsxPrefixEntry=tmnxBsxPrefixEntry, tmnxBsxAqpSubscriber=tmnxBsxAqpSubscriber, tmnxBsxHttpEnrichHCExceedMaxPkt=tmnxBsxHttpEnrichHCExceedMaxPkt, TmnxBsxCflowdPerfMeasType=TmnxBsxCflowdPerfMeasType, tmnxBsxObsoleteGroupsV9v0=tmnxBsxObsoleteGroupsV9v0, tmnxBsxPolicerName=tmnxBsxPolicerName, tmnxBsxHttpRedirErrDescription=tmnxBsxHttpRedirErrDescription, tmnxBsxTcpValStrict=tmnxBsxTcpValStrict, tmnxBsxNotifyTransitIpPolicyId=tmnxBsxNotifyTransitIpPolicyId)
mibBuilder.exportSymbols("TIMETRA-BSX-NG-MIB", tmnxBsxTransIpPlcyAddrRowStatus=tmnxBsxTransIpPlcyAddrRowStatus, tmnxBsxIsaAaGrpVmTrafficDistTeid=tmnxBsxIsaAaGrpVmTrafficDistTeid, tmnxBsxAaSubSumHCOctsDnyToSb=tmnxBsxAaSubSumHCOctsDnyToSb, tmnxBsxCertProfileOperState=tmnxBsxCertProfileOperState, tmnxBsxStatAaOctsAdmToSb=tmnxBsxStatAaOctsAdmToSb, tmnxBsxGrpStatusPktSzDecOcLo=tmnxBsxGrpStatusPktSzDecOcLo, tmnxBsxHttpEnrichFieldRowLastCh=tmnxBsxHttpEnrichFieldRowLastCh, tmnxBsxStatAaSubSdyHCOctsDnyToSb=tmnxBsxStatAaSubSdyHCOctsDnyToSb, tmnxBsxTrafStatFlwsAdmToSb=tmnxBsxTrafStatFlwsAdmToSb, tmnxBsxUrlFilterHttpRedirName=tmnxBsxUrlFilterHttpRedirName, tmnxBsxUrlListStatusUpgInProgres=tmnxBsxUrlListStatusUpgInProgres, TmnxBsxAarpCommand=TmnxBsxAarpCommand, tmnxBsxSessFltrLastChTime=tmnxBsxSessFltrLastChTime, tmnxBsxGtpFltrMsgLastChangedTime=tmnxBsxGtpFltrMsgLastChangedTime, tmnxBsxUrlFltrUrlListStatMatch=tmnxBsxUrlFltrUrlListStatMatch, tmnxBsxAqpMatchAaSubscriberType=tmnxBsxAqpMatchAaSubscriberType, tmnxBsxGrpStatusOctsOutToSub=tmnxBsxGrpStatusOctsOutToSub, tmnxBsxAsoEntry=tmnxBsxAsoEntry, tmnxBsxAnlEntry=tmnxBsxAnlEntry, tmnxBsxHttpNotifInterval=tmnxBsxHttpNotifInterval, tmnxBsxAppGrpName=tmnxBsxAppGrpName, tmnxBsxStatAaSubSdyHCPktsDnyFmSb=tmnxBsxStatAaSubSdyHCPktsDnyFmSb, tmnxBsxTransitSeenIpGroup=tmnxBsxTransitSeenIpGroup, tmnxBsxAppFilterProtocolOp=tmnxBsxAppFilterProtocolOp, tmnxBsxAaIfAddrPrefixLength=tmnxBsxAaIfAddrPrefixLength, tmnxBsxGrpStatusPktSzIncPkLo=tmnxBsxGrpStatusPktSzIncPkLo, tmnxBsxAqpTrafficDir=tmnxBsxAqpTrafficDir, tmnxBsxAppFilterExprRowLastCh=tmnxBsxAppFilterExprRowLastCh, tmnxBsxStatAaLngDurFlws=tmnxBsxStatAaLngDurFlws, tmnxBsxAppGrpRowStatus=tmnxBsxAppGrpRowStatus, tmnxBsxAppFilterRowStatus=tmnxBsxAppFilterRowStatus, tmnxBsxTransPrefSumEntry=tmnxBsxTransPrefSumEntry, tmnxBsxGrpStatusPktsDisCongMda=tmnxBsxGrpStatusPktsDisCongMda, tmnxBsxHttpEnrichStatDiscontTime=tmnxBsxHttpEnrichStatDiscontTime, tmnxBsxPolicyTimeStampExtObjGrp=tmnxBsxPolicyTimeStampExtObjGrp, tmnxBsxAarpInstStateChanged=tmnxBsxAarpInstStateChanged, tmnxBsxAarpInstPeerEPSapPortId=tmnxBsxAarpInstPeerEPSapPortId, tmnxBsxTlsStatTlsExistOctsAdm=tmnxBsxTlsStatTlsExistOctsAdm, tmnxBsxUrlFilterIcapDefAction=tmnxBsxUrlFilterIcapDefAction, tmnxBsxEventLogSyslogAddrType=tmnxBsxEventLogSyslogAddrType, tmnxBsxAaWap1xRowLastChange=tmnxBsxAaWap1xRowLastChange, tmnxBsxTlsStatTls13EsniOctsDny=tmnxBsxTlsStatTls13EsniOctsDny, tmnxBsxHttpNotifObjGrpV13v0=tmnxBsxHttpNotifObjGrpV13v0, tmnxBsxIsaAaGrpActivityChange=tmnxBsxIsaAaGrpActivityChange, tmnxBsxSctpFltrPpidRangeMin=tmnxBsxSctpFltrPpidRangeMin, tmnxBsxIsaAaGrpRowLastChange=tmnxBsxIsaAaGrpRowLastChange, tmnxBsxStatIsaAaCfgType=tmnxBsxStatIsaAaCfgType, tmnxBsxTransPrefEntryRowStatus=tmnxBsxTransPrefEntryRowStatus, tmnxBsxGrpStatusOctsFromMdaToSub=tmnxBsxGrpStatusOctsFromMdaToSub, tmnxBsxAppFilterHttpPort=tmnxBsxAppFilterHttpPort, tmnxBsxHttpPcyRdStatHCRedir=tmnxBsxHttpPcyRdStatHCRedir, tmnxBsxUrlFilterWebDefHttpRedir=tmnxBsxUrlFilterWebDefHttpRedir, TmnxBsxActionStatus=TmnxBsxActionStatus, tmnxBsxStatsGroups=tmnxBsxStatsGroups, tmnxBsxStatTcaThreshCrossed=tmnxBsxStatTcaThreshCrossed, tmnxBsxGrpStatusPktDisCngInFrSub=tmnxBsxGrpStatusPktDisCngInFrSub, tmnxBsxAppProfCharRowLastChange=tmnxBsxAppProfCharRowLastChange, tmnxBsxAaSubMdaSlotNum=tmnxBsxAaSubMdaSlotNum, tmnxBsxGtpStatsPkPrmtNoFltrToSb=tmnxBsxGtpStatsPkPrmtNoFltrToSb, tmnxBsxStatAaFlwsAdmFmSb=tmnxBsxStatAaFlwsAdmFmSb, tmnxBsxTransitIpPolicyIPv4EntCnt=tmnxBsxTransitIpPolicyIPv4EntCnt, tmnxBsxRadApScalars=tmnxBsxRadApScalars, tmnxBsxPolicyAqpExtObjGrp=tmnxBsxPolicyAqpExtObjGrp, tmnxBsxNotifyObjsGroupV7v0=tmnxBsxNotifyObjsGroupV7v0, tmnxBsxIsaAaGrpDescription=tmnxBsxIsaAaGrpDescription, tmnxBsxGrpMdaRowStatus=tmnxBsxGrpMdaRowStatus, tmnxBsxHttpRedirErrCodeEntry=tmnxBsxHttpRedirErrCodeEntry, tmnxBsxAqpHttpErrRedirName=tmnxBsxAqpHttpErrRedirName, tmnxBsxGrpStatusIngQDroInPOcts=tmnxBsxGrpStatusIngQDroInPOcts, tmnxBsxAqpBaseRowStatus=tmnxBsxAqpBaseRowStatus, tmnxBsxIsaAaVmTrafDistribByIpGrp=tmnxBsxIsaAaVmTrafDistribByIpGrp, tmnxBsxAaSubSumHCFlwsAdmFmSb=tmnxBsxAaSubSumHCFlwsAdmFmSb, tmnxBsxStatsFlowAttrEntry=tmnxBsxStatsFlowAttrEntry, tmnxBsxCflowdDirExpAddrPort=tmnxBsxCflowdDirExpAddrPort, tmnxBsxAaWap1xAdminState=tmnxBsxAaWap1xAdminState, tmnxBsxGtpStatsPkPermittedFmSb=tmnxBsxGtpStatsPkPermittedFmSb, tmnxBsxHttpEnrichHCNumNoResource=tmnxBsxHttpEnrichHCNumNoResource, tmnxBsxUrlFltrWebSerStatCacheHit=tmnxBsxUrlFltrWebSerStatCacheHit, tmnxBsxEventLogAdminState=tmnxBsxEventLogAdminState, tmnxBsxGrpStatusHCSeenIpReqSent=tmnxBsxGrpStatusHCSeenIpReqSent, tmnxBsxTcaPolcrStatsTable=tmnxBsxTcaPolcrStatsTable, tmnxBsxStatAaTable=tmnxBsxStatAaTable, tmnxBsxAqpMatchSrcPortHighValue=tmnxBsxAqpMatchSrcPortHighValue, tmnxBsxGrpStatusPktsInPChipErs=tmnxBsxGrpStatusPktsInPChipErs, tmnxBsxTlsStatTls11FlwsDny=tmnxBsxTlsStatTls11FlwsDny, tmnxBsxUrlFltrStatsEntry=tmnxBsxUrlFltrStatsEntry, TmnxBsxAarpInstState=TmnxBsxAarpInstState, tmnxBsxTransPrefSubTable=tmnxBsxTransPrefSubTable, tmnxBsxCflowdRecFldRowLstChg=tmnxBsxCflowdRecFldRowLstChg, tmnxBsxTransPrefSumAppProfNm=tmnxBsxTransPrefSumAppProfNm, tmnxBsxAqpDscpOp=tmnxBsxAqpDscpOp, tmnxBsxHttpPcyRdStatTcpResets=tmnxBsxHttpPcyRdStatTcpResets, tmnxBsxUrlFilterIcapCustXHeader=tmnxBsxUrlFilterIcapCustXHeader, tmnxBsxUrlFltrWebSerStatCacheMis=tmnxBsxUrlFltrWebSerStatCacheMis, tmnxBsxGtpFltrRowStatus=tmnxBsxGtpFltrRowStatus, tmnxBsxStatTcaPolcrCfgLoWmark=tmnxBsxStatTcaPolcrCfgLoWmark, tmnxBsxTransPrefEntryNetAddr=tmnxBsxTransPrefEntryNetAddr, tmnxBsxRadApServEntry=tmnxBsxRadApServEntry, tmnxBsxTcaStatsEntry=tmnxBsxTcaStatsEntry, tmnxBsxHttpEnrEncObjGrpV11v0=tmnxBsxHttpEnrEncObjGrpV11v0, tmnxBsxGrpMdaEsmMacSubscribers=tmnxBsxGrpMdaEsmMacSubscribers, tmnxBsxAppGrpCfgEntry=tmnxBsxAppGrpCfgEntry, tmnxBsxGrpMdaStatsResourceCount=tmnxBsxGrpMdaStatsResourceCount, tmnxBsxGrpStatusOctsIn=tmnxBsxGrpStatusOctsIn, tmnxBsxAqpObjs=tmnxBsxAqpObjs, tmnxBsxAppProfRowStatus=tmnxBsxAppProfRowStatus, tmnxBsxStatTcaFtrEnCfgHiWmark=tmnxBsxStatTcaFtrEnCfgHiWmark, tmnxBsxSctpFltrPpidTable=tmnxBsxSctpFltrPpidTable, TmnxBsxAnlSourceLevel=TmnxBsxAnlSourceLevel, tmnxBsxTlsStatTlsExistOctsDny=tmnxBsxTlsStatTlsExistOctsDny, tmnxBsxAqpSrcAddress=tmnxBsxAqpSrcAddress, tmnxBsxAarpInstOperState=tmnxBsxAarpInstOperState, tmnxBsxStatAaSubMedDurFlws=tmnxBsxStatAaSubMedDurFlws, tmnxBsxRadApServTxRequests=tmnxBsxRadApServTxRequests, tmnxBsxCflowdStatusHCPktsSent=tmnxBsxCflowdStatusHCPktsSent, tmnxBsxHttpEnrichEntry=tmnxBsxHttpEnrichEntry, TmnxBsxLoadBalanceStatus=TmnxBsxLoadBalanceStatus, tmnxBsxTcaFtrStatsTcaTrigType=tmnxBsxTcaFtrStatsTcaTrigType, tmnxBsxTransIpPolRadCoAError=tmnxBsxTransIpPolRadCoAError, tmnxBsxTlsStatTlsUnknownFlwsAdm=tmnxBsxTlsStatTlsUnknownFlwsAdm, tmnxBsxCflowdAdminState=tmnxBsxCflowdAdminState, tmnxBsxAqpFlowAttrEntry=tmnxBsxAqpFlowAttrEntry, tmnxBsxAarpInstLastCh=tmnxBsxAarpInstLastCh, tmnxBsxPrefixListLastChTime=tmnxBsxPrefixListLastChTime, tmnxBsxIsaAaGrpHttpEnrichMaxPkt=tmnxBsxIsaAaGrpHttpEnrichMaxPkt, TmnxBsxUmOperStatus=TmnxBsxUmOperStatus, tmnxBsxAqpActMirrorSourceAllIncl=tmnxBsxAqpActMirrorSourceAllIncl, tmnxBsxGrpStatusPacketRate=tmnxBsxGrpStatusPacketRate, tmnxBsxGtpEventLogAction=tmnxBsxGtpEventLogAction, tmnxBsxTcpValTcaLowWatermark=tmnxBsxTcpValTcaLowWatermark, tmnxBsxIsaAaGrpFromSubWaSBfLoWmk=tmnxBsxIsaAaGrpFromSubWaSBfLoWmk, tmnxBsxUrlListStatusOperState=tmnxBsxUrlListStatusOperState, tmnxBsxRadApServOperStateChange=tmnxBsxRadApServOperStateChange, tmnxBsxAqpBaseEntryId=tmnxBsxAqpBaseEntryId, tmnxBsxSessFltrParamsDstAddress=tmnxBsxSessFltrParamsDstAddress, tmnxBsxAaSubSumPktsDnyFmSb=tmnxBsxAaSubSumPktsDnyFmSb, tmnxBsxGrpStatusSubsDeletedLo=tmnxBsxGrpStatusSubsDeletedLo, tmnxBsxGrpStatusPktCutThrouFrSub=tmnxBsxGrpStatusPktCutThrouFrSub, tmnxBsxGrpStatusEgrQDroOutPPkts=tmnxBsxGrpStatusEgrQDroOutPPkts, tmnxBsxDnsIpCacheProxyRowStatus=tmnxBsxDnsIpCacheProxyRowStatus, tmnxBsxNotifyObjsGroupV14v0=tmnxBsxNotifyObjsGroupV14v0, tmnxBsxAarpInstDescription=tmnxBsxAarpInstDescription, tmnxBsxTlsStatQuicUnknwnFlwsDny=tmnxBsxTlsStatQuicUnknwnFlwsDny, tmnxBsxGrpStatusSubsDeletedHi=tmnxBsxGrpStatusSubsDeletedHi, tmnxBsxUrlListEnhancementObjGrp=tmnxBsxUrlListEnhancementObjGrp, tmnxBsxStatAaAcctCfgType=tmnxBsxStatAaAcctCfgType, tmnxBsxGrpStatusPktSzIncOcFrSub=tmnxBsxGrpStatusPktSzIncOcFrSub, tmnxBsxAqpMatchTrafficDir=tmnxBsxAqpMatchTrafficDir, tmnxBsxStatAaSubSdyActFlwsFmSb=tmnxBsxStatAaSubSdyActFlwsFmSb, tmnxBsxStatAaSubActFlwsFmSb=tmnxBsxStatAaSubActFlwsFmSb, tmnxBsxUrlFltrWebSvStatsConnTot=tmnxBsxUrlFltrWebSvStatsConnTot, tmnxBsxAaSubscriberType=tmnxBsxAaSubscriberType, tmnxBsxUrlListTable=tmnxBsxUrlListTable, tmnxBsxTcaFtrEnStatsTcaTrigType=tmnxBsxTcaFtrEnStatsTcaTrigType, tmnxBsxAqpAaSubErrors=tmnxBsxAqpAaSubErrors, tmnxBsxHttpEnrichFieldEncodeKey=tmnxBsxHttpEnrichFieldEncodeKey, tmnxBsxTcaFtrStatsTcaState=tmnxBsxTcaFtrStatsTcaState, tmnxBsxAqpActHttpNotif=tmnxBsxAqpActHttpNotif, tmnxBsxUrlFltrStatsWebServReqErr=tmnxBsxUrlFltrStatsWebServReqErr, tmnxBsxCertProfileDescription=tmnxBsxCertProfileDescription, tmnxBsxAppFilterEntry=tmnxBsxAppFilterEntry, tmnxBsxRadApStatTable=tmnxBsxRadApStatTable, tmnxBsxStatAaSubSdyRowStatus=tmnxBsxStatAaSubSdyRowStatus, tmnxBsxAqpBaseLastChTime=tmnxBsxAqpBaseLastChTime, tmnxBsxGtpRowLastChange=tmnxBsxGtpRowLastChange, tmnxBsxGtpMode=tmnxBsxGtpMode, tmnxBsxGtpFltrImsiApnEntryId=tmnxBsxGtpFltrImsiApnEntryId, tmnxBsxCardSlotEsaId=tmnxBsxCardSlotEsaId, tmnxBsxTlsStatQuicEsniOctsAdm=tmnxBsxTlsStatQuicEsniOctsAdm, tmnxBsxTransPrefSumTable=tmnxBsxTransPrefSumTable, tmnxBsxUrlFltrWSClassOvrdEntry=tmnxBsxUrlFltrWSClassOvrdEntry, tmnxBsxStatAaSubSdyHCFlwsDnyFmSb=tmnxBsxStatAaSubSdyHCFlwsDnyFmSb, tmnxBsxNotifyCertProfileName=tmnxBsxNotifyCertProfileName, tmnxBsxUrlFltrUrlListStatLkup=tmnxBsxUrlFltrUrlListStatLkup, tmnxBsxStatAaHCOctsAdmFmSb=tmnxBsxStatAaHCOctsAdmFmSb, tmnxBsxHttpEnrichFieldRowStatus=tmnxBsxHttpEnrichFieldRowStatus, tmnxBsxUrlFltWSClassOvrdCategNam=tmnxBsxUrlFltWSClassOvrdCategNam, tmnxBsxDnsIpCacheDomainRowStatus=tmnxBsxDnsIpCacheDomainRowStatus, tmnxBsxGrpStatusPktsDiscErrors=tmnxBsxGrpStatusPktsDiscErrors, tmnxBsxDnsIpCacheStatTable=tmnxBsxDnsIpCacheStatTable, tmnxBsxCflowdRecFieldTable=tmnxBsxCflowdRecFieldTable, tmnxBsxGrpStatusPktSzIncOcHi=tmnxBsxGrpStatusPktSzIncOcHi, tmnxBsxGrpStatusEntry=tmnxBsxGrpStatusEntry, tmnxBsxGrpStatusOcDisCngMdaToSub=tmnxBsxGrpStatusOcDisCngMdaToSub, tmnxBsxIsaAaGrpAdminState=tmnxBsxIsaAaGrpAdminState, TmnxBsxAqpAction=TmnxBsxAqpAction, tmnxBsxAaSubSumMdaMdaNum=tmnxBsxAaSubSumMdaMdaNum, tmnxBsxNotifyActionStatus=tmnxBsxNotifyActionStatus, tmnxBsxTcpValTcaStatsLastRaised=tmnxBsxTcpValTcaStatsLastRaised, tmnxBsxIsaAaGrpUnassignedSapSubs=tmnxBsxIsaAaGrpUnassignedSapSubs, tmnxBsxGrpMdaTransPrefEntries=tmnxBsxGrpMdaTransPrefEntries, tmnxBsxMdaScalars=tmnxBsxMdaScalars, tmnxBsxAsoDefValName=tmnxBsxAsoDefValName, tmnxBsxUrlListStatusEntry=tmnxBsxUrlListStatusEntry, tmnxBsxGtpFltrV2MsgRowStatus=tmnxBsxGtpFltrV2MsgRowStatus, tmnxBsxGrpStatusEgrQFwdOutPOcts=tmnxBsxGrpStatusEgrQFwdOutPOcts, tmnxBsxTransitIpPolicyDiamAppPlc=tmnxBsxTransitIpPolicyDiamAppPlc, tmnxBsxTcpValTcaRowLastChanged=tmnxBsxTcpValTcaRowLastChanged, tmnxBsxCflowdStatusFlowsNoRes=tmnxBsxCflowdStatusFlowsNoRes, tmnxBsxTrafStatFlwsAdmFmSb=tmnxBsxTrafStatFlwsAdmFmSb, tmnxBsxAaSubSumHCFlwsAdmToSb=tmnxBsxAaSubSumHCFlwsAdmToSb, tmnxBsxGrpMdaActivityChange=tmnxBsxGrpMdaActivityChange, tmnxBsxTListAttribName=tmnxBsxTListAttribName, tmnxBsxRadApServLastChTime=tmnxBsxRadApServLastChTime, tmnxBsxEsmMacObjs=tmnxBsxEsmMacObjs, TmnxBsxMdaRole=TmnxBsxMdaRole, tmnxBsxGrpStatusPktSzIncPkFrSub=tmnxBsxGrpStatusPktSzIncPkFrSub, tmnxBsxNotifyTcaCfgDirection=tmnxBsxNotifyTcaCfgDirection, tmnxBsxStatAaFlwsAdmToSb=tmnxBsxStatAaFlwsAdmToSb, tmnxBsxIsaAaGrpFlowAttrRowStatus=tmnxBsxIsaAaGrpFlowAttrRowStatus, tmnxBsxGrpStatusFlowSetupRate=tmnxBsxGrpStatusFlowSetupRate, tmnxBsxHttpRdStatHCNotRedir=tmnxBsxHttpRdStatHCNotRedir, TmnxBsxAaStatType=TmnxBsxAaStatType, tmnxBsxAaSubSumEntry=tmnxBsxAaSubSumEntry, tmnxBsxAaSubSumPktsAdmFmSb=tmnxBsxAaSubSumPktsAdmFmSb, tmnxBsxAqpDstAddressType=tmnxBsxAqpDstAddressType, tmnxBsxAqpMatchAppGroup=tmnxBsxAqpMatchAppGroup, tmnxBsxCflowdRecFieldName=tmnxBsxCflowdRecFieldName, tmnxBsxGrpStatusEgrQHCDroOutPPkts=tmnxBsxGrpStatusEgrQHCDroOutPPkts, tmnxBsxCflowdCollAddress=tmnxBsxCflowdCollAddress, tmnxBsxHttpsCaptiveRedirObjGrp=tmnxBsxHttpsCaptiveRedirObjGrp, tmnxBsxGrpStatusTable=tmnxBsxGrpStatusTable, tmnxBsxGrpStatusInQDirection=tmnxBsxGrpStatusInQDirection, tmnxBsxRadApReqTimeouts=tmnxBsxRadApReqTimeouts, tmnxBsxTetherSingleDeviceEntry=tmnxBsxTetherSingleDeviceEntry)
