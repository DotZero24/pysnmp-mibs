# PySNMP SMI module. Autogenerated from smidump -f python RTP-MIB
# by libsmi2pysnmp-0.0.5-alpha at Fri Oct 28 00:30:52 2005,
# Python version (2, 4, 0, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pyasn1.type import constraint, namedval

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( InterfaceIndex, ) = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Counter32, Counter64, Gauge32, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Counter64", "Gauge32", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32", "mib-2")
( RowStatus, TAddress, TDomain, TestAndIncr, TimeStamp, TruthValue, ) = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TAddress", "TDomain", "TestAndIncr", "TimeStamp", "TruthValue")
( Utf8String, ) = mibBuilder.importSymbols("SYSAPPL-MIB", "Utf8String")

# Objects

rtpMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 87))
rtpMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 87, 1))
rtpSessionNewIndex = MibScalar((1, 3, 6, 1, 2, 1, 87, 1, 1), TestAndIncr()).setMaxAccess("readwrite")
rtpSessionInverseTable = MibTable((1, 3, 6, 1, 2, 1, 87, 1, 2))
rtpSessionInverseEntry = MibTableRow((1, 3, 6, 1, 2, 1, 87, 1, 2, 1)).setIndexNames((0, "RTP-MIB", "rtpSessionDomain"), (0, "RTP-MIB", "rtpSessionRemAddr"), (0, "RTP-MIB", "rtpSessionLocAddr"), (0, "RTP-MIB", "rtpSessionIndex"))
rtpSessionInverseStartTime = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 2, 1, 1), TimeStamp()).setMaxAccess("readonly")
rtpSessionTable = MibTable((1, 3, 6, 1, 2, 1, 87, 1, 3))
rtpSessionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 87, 1, 3, 1)).setIndexNames((0, "RTP-MIB", "rtpSessionIndex"))
rtpSessionIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 2147483647L))).setMaxAccess("noaccess")
rtpSessionDomain = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 2), TDomain()).setMaxAccess("readwrite")
rtpSessionRemAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 3), TAddress()).setMaxAccess("readwrite")
rtpSessionLocAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 4), TAddress()).setMaxAccess("readonly")
rtpSessionIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 5), InterfaceIndex()).setMaxAccess("readwrite")
rtpSessionSenderJoins = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
rtpSessionReceiverJoins = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
rtpSessionByes = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
rtpSessionStartTime = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 9), TimeStamp()).setMaxAccess("readonly")
rtpSessionMonitor = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 10), TruthValue()).setMaxAccess("readonly")
rtpSessionRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 3, 1, 11), RowStatus()).setMaxAccess("readwrite")
rtpSenderInverseTable = MibTable((1, 3, 6, 1, 2, 1, 87, 1, 4))
rtpSenderInverseEntry = MibTableRow((1, 3, 6, 1, 2, 1, 87, 1, 4, 1)).setIndexNames((0, "RTP-MIB", "rtpSessionDomain"), (0, "RTP-MIB", "rtpSenderAddr"), (0, "RTP-MIB", "rtpSessionIndex"), (0, "RTP-MIB", "rtpSenderSSRC"))
rtpSenderInverseStartTime = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 4, 1, 1), TimeStamp()).setMaxAccess("readonly")
rtpSenderTable = MibTable((1, 3, 6, 1, 2, 1, 87, 1, 5))
rtpSenderEntry = MibTableRow((1, 3, 6, 1, 2, 1, 87, 1, 5, 1)).setIndexNames((0, "RTP-MIB", "rtpSessionIndex"), (0, "RTP-MIB", "rtpSenderSSRC"))
rtpSenderSSRC = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 1), Unsigned32()).setMaxAccess("noaccess")
rtpSenderCNAME = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 2), Utf8String()).setMaxAccess("readonly")
rtpSenderAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 3), TAddress()).setMaxAccess("readonly")
rtpSenderPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 4), Counter64()).setMaxAccess("readonly")
rtpSenderOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 5), Counter64()).setMaxAccess("readonly")
rtpSenderTool = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 6), Utf8String().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
rtpSenderSRs = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 7), Counter32()).setMaxAccess("readonly")
rtpSenderSRTime = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 8), TimeStamp()).setMaxAccess("readonly")
rtpSenderPT = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 9), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
rtpSenderStartTime = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 5, 1, 10), TimeStamp()).setMaxAccess("readonly")
rtpRcvrInverseTable = MibTable((1, 3, 6, 1, 2, 1, 87, 1, 6))
rtpRcvrInverseEntry = MibTableRow((1, 3, 6, 1, 2, 1, 87, 1, 6, 1)).setIndexNames((0, "RTP-MIB", "rtpSessionDomain"), (0, "RTP-MIB", "rtpRcvrAddr"), (0, "RTP-MIB", "rtpSessionIndex"), (0, "RTP-MIB", "rtpRcvrSRCSSRC"), (0, "RTP-MIB", "rtpRcvrSSRC"))
rtpRcvrInverseStartTime = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 6, 1, 1), TimeStamp()).setMaxAccess("readonly")
rtpRcvrTable = MibTable((1, 3, 6, 1, 2, 1, 87, 1, 7))
rtpRcvrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 87, 1, 7, 1)).setIndexNames((0, "RTP-MIB", "rtpSessionIndex"), (0, "RTP-MIB", "rtpRcvrSRCSSRC"), (0, "RTP-MIB", "rtpRcvrSSRC"))
rtpRcvrSRCSSRC = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 1), Unsigned32()).setMaxAccess("noaccess")
rtpRcvrSSRC = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 2), Unsigned32()).setMaxAccess("noaccess")
rtpRcvrCNAME = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 3), Utf8String()).setMaxAccess("readonly")
rtpRcvrAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 4), TAddress()).setMaxAccess("readonly")
rtpRcvrRTT = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 5), Gauge32()).setMaxAccess("readonly")
rtpRcvrLostPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 6), Counter64()).setMaxAccess("readonly")
rtpRcvrJitter = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 7), Gauge32()).setMaxAccess("readonly")
rtpRcvrTool = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 8), Utf8String().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
rtpRcvrRRs = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 9), Counter32()).setMaxAccess("readonly")
rtpRcvrRRTime = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 10), TimeStamp()).setMaxAccess("readonly")
rtpRcvrPT = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 11), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
rtpRcvrPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 12), Counter64()).setMaxAccess("readonly")
rtpRcvrOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 13), Counter64()).setMaxAccess("readonly")
rtpRcvrStartTime = MibTableColumn((1, 3, 6, 1, 2, 1, 87, 1, 7, 1, 14), TimeStamp()).setMaxAccess("readonly")
rtpConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 87, 2))
rtpGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 87, 2, 1))
rtpCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 87, 2, 2))

# Augmentions

# Groups

rtpSystemGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 87, 2, 1, 1)).setObjects(("RTP-MIB", "rtpSenderPackets"), ("RTP-MIB", "rtpRcvrRRs"), ("RTP-MIB", "rtpSenderStartTime"), ("RTP-MIB", "rtpSessionMonitor"), ("RTP-MIB", "rtpSessionStartTime"), ("RTP-MIB", "rtpSenderAddr"), ("RTP-MIB", "rtpSenderSRs"), ("RTP-MIB", "rtpRcvrAddr"), ("RTP-MIB", "rtpRcvrCNAME"), ("RTP-MIB", "rtpSessionIfIndex"), ("RTP-MIB", "rtpSessionByes"), ("RTP-MIB", "rtpSessionRemAddr"), ("RTP-MIB", "rtpSessionDomain"), ("RTP-MIB", "rtpSenderOctets"), ("RTP-MIB", "rtpRcvrLostPackets"), ("RTP-MIB", "rtpSenderTool"), ("RTP-MIB", "rtpRcvrJitter"), ("RTP-MIB", "rtpSenderSRTime"), ("RTP-MIB", "rtpRcvrStartTime"), ("RTP-MIB", "rtpSenderCNAME"), ("RTP-MIB", "rtpSessionReceiverJoins"), ("RTP-MIB", "rtpRcvrRRTime"), ("RTP-MIB", "rtpSessionSenderJoins"), ("RTP-MIB", "rtpRcvrTool"), )
rtpHostGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 87, 2, 1, 2)).setObjects(("RTP-MIB", "rtpRcvrPackets"), ("RTP-MIB", "rtpSenderPT"), ("RTP-MIB", "rtpSessionLocAddr"), ("RTP-MIB", "rtpRcvrRTT"), ("RTP-MIB", "rtpRcvrOctets"), ("RTP-MIB", "rtpRcvrPT"), )
rtpMonitorGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 87, 2, 1, 3)).setObjects(("RTP-MIB", "rtpSessionNewIndex"), ("RTP-MIB", "rtpSessionRowStatus"), )
rtpInverseGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 87, 2, 1, 4)).setObjects(("RTP-MIB", "rtpSenderInverseStartTime"), ("RTP-MIB", "rtpRcvrInverseStartTime"), ("RTP-MIB", "rtpSessionInverseStartTime"), )

# Exports

# Objects
mibBuilder.exportSymbols("RTP-MIB", rtpMIB=rtpMIB, rtpMIBObjects=rtpMIBObjects, rtpSessionNewIndex=rtpSessionNewIndex, rtpSessionInverseTable=rtpSessionInverseTable, rtpSessionInverseEntry=rtpSessionInverseEntry, rtpSessionInverseStartTime=rtpSessionInverseStartTime, rtpSessionTable=rtpSessionTable, rtpSessionEntry=rtpSessionEntry, rtpSessionIndex=rtpSessionIndex, rtpSessionDomain=rtpSessionDomain, rtpSessionRemAddr=rtpSessionRemAddr, rtpSessionLocAddr=rtpSessionLocAddr, rtpSessionIfIndex=rtpSessionIfIndex, rtpSessionSenderJoins=rtpSessionSenderJoins, rtpSessionReceiverJoins=rtpSessionReceiverJoins, rtpSessionByes=rtpSessionByes, rtpSessionStartTime=rtpSessionStartTime, rtpSessionMonitor=rtpSessionMonitor, rtpSessionRowStatus=rtpSessionRowStatus, rtpSenderInverseTable=rtpSenderInverseTable, rtpSenderInverseEntry=rtpSenderInverseEntry, rtpSenderInverseStartTime=rtpSenderInverseStartTime, rtpSenderTable=rtpSenderTable, rtpSenderEntry=rtpSenderEntry, rtpSenderSSRC=rtpSenderSSRC, rtpSenderCNAME=rtpSenderCNAME, rtpSenderAddr=rtpSenderAddr, rtpSenderPackets=rtpSenderPackets, rtpSenderOctets=rtpSenderOctets, rtpSenderTool=rtpSenderTool, rtpSenderSRs=rtpSenderSRs, rtpSenderSRTime=rtpSenderSRTime, rtpSenderPT=rtpSenderPT, rtpSenderStartTime=rtpSenderStartTime, rtpRcvrInverseTable=rtpRcvrInverseTable, rtpRcvrInverseEntry=rtpRcvrInverseEntry, rtpRcvrInverseStartTime=rtpRcvrInverseStartTime, rtpRcvrTable=rtpRcvrTable, rtpRcvrEntry=rtpRcvrEntry, rtpRcvrSRCSSRC=rtpRcvrSRCSSRC, rtpRcvrSSRC=rtpRcvrSSRC, rtpRcvrCNAME=rtpRcvrCNAME, rtpRcvrAddr=rtpRcvrAddr, rtpRcvrRTT=rtpRcvrRTT, rtpRcvrLostPackets=rtpRcvrLostPackets, rtpRcvrJitter=rtpRcvrJitter, rtpRcvrTool=rtpRcvrTool, rtpRcvrRRs=rtpRcvrRRs, rtpRcvrRRTime=rtpRcvrRRTime, rtpRcvrPT=rtpRcvrPT, rtpRcvrPackets=rtpRcvrPackets, rtpRcvrOctets=rtpRcvrOctets, rtpRcvrStartTime=rtpRcvrStartTime, rtpConformance=rtpConformance, rtpGroups=rtpGroups, rtpCompliances=rtpCompliances)

# Groups
mibBuilder.exportSymbols("RTP-MIB", rtpSystemGroup=rtpSystemGroup, rtpHostGroup=rtpHostGroup, rtpMonitorGroup=rtpMonitorGroup, rtpInverseGroup=rtpInverseGroup)
