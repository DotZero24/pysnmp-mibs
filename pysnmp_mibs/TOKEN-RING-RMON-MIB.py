# PySNMP SMI module. Autogenerated from smidump -f python TOKEN-RING-RMON-MIB
# by libsmi2pysnmp-0.0.7-alpha at Wed Feb  7 16:13:17 2007,
# Python version (2, 4, 3, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pyasn1.type import constraint, namedval

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( EntryStatus, OwnerString, history, rmon, statistics, ) = mibBuilder.importSymbols("RFC1271-MIB", "EntryStatus", "OwnerString", "history", "rmon", "statistics")
( Bits, Counter32, Integer32, Integer32, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Integer32", "Integer32", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "TimeTicks")

# Types

class MacAddress(OctetString):
    subtypeSpec = OctetString.subtypeSpec+constraint.ValueSizeConstraint(6,6)
    fixedLength = 6
    pass

class TimeInterval(Integer32):
    pass


# Objects

tokenRingMLStatsTable = MibTable((1, 3, 6, 1, 2, 1, 16, 1, 2))
tokenRingMLStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 1, 2, 1)).setIndexNames((0, "TOKEN-RING-RMON-MIB", "tokenRingMLStatsIndex"))
tokenRingMLStatsIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 1), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
tokenRingMLStatsDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 2), ObjectIdentifier()).setMaxAccess("readwrite")
tokenRingMLStatsDropEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 3), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsMacOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 4), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsMacPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 5), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsRingPurgeEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 6), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsRingPurgePkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 7), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsBeaconEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 8), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsBeaconTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 9), TimeInterval()).setMaxAccess("readonly")
tokenRingMLStatsBeaconPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 10), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsClaimTokenEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 11), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsClaimTokenPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 12), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsNAUNChanges = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 13), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsLineErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsInternalErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsBurstErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsACErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsAbortErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsLostFrameErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsCongestionErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 20), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsFrameCopiedErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsFrequencyErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 22), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsTokenErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 23), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsSoftErrorReports = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 24), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsRingPollEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 25), Counter32()).setMaxAccess("readonly")
tokenRingMLStatsOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 26), OwnerString()).setMaxAccess("readwrite")
tokenRingMLStatsStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 2, 1, 27), EntryStatus()).setMaxAccess("readwrite")
tokenRingPStatsTable = MibTable((1, 3, 6, 1, 2, 1, 16, 1, 3))
tokenRingPStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 1, 3, 1)).setIndexNames((0, "TOKEN-RING-RMON-MIB", "tokenRingPStatsIndex"))
tokenRingPStatsIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 1), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
tokenRingPStatsDataSource = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 2), ObjectIdentifier()).setMaxAccess("readwrite")
tokenRingPStatsDropEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
tokenRingPStatsDataOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
tokenRingPStatsDataPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
tokenRingPStatsDataBroadcastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
tokenRingPStatsDataMulticastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
tokenRingPStatsDataPkts18to63Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
tokenRingPStatsDataPkts64to127Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
tokenRingPStatsDataPkts128to255Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
tokenRingPStatsDataPkts256to511Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
tokenRingPStatsDataPkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 12), Counter32()).setMaxAccess("readonly")
tokenRingPStatsDataPkts1024to2047Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
tokenRingPStatsDataPkts2048to4095Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 14), Counter32()).setMaxAccess("readonly")
tokenRingPStatsDataPkts4096to8191Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
tokenRingPStatsDataPkts8192to18000Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 16), Counter32()).setMaxAccess("readonly")
tokenRingPStatsDataPktsGreaterThan18000Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 17), Counter32()).setMaxAccess("readonly")
tokenRingPStatsOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 18), OwnerString()).setMaxAccess("readwrite")
tokenRingPStatsStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 1, 3, 1, 19), EntryStatus()).setMaxAccess("readwrite")
tokenRingMLHistoryTable = MibTable((1, 3, 6, 1, 2, 1, 16, 2, 3))
tokenRingMLHistoryEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 2, 3, 1)).setIndexNames((0, "TOKEN-RING-RMON-MIB", "tokenRingMLHistoryIndex"), (0, "TOKEN-RING-RMON-MIB", "tokenRingMLHistorySampleIndex"))
tokenRingMLHistoryIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 1), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
tokenRingMLHistorySampleIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 2), Integer32()).setMaxAccess("readonly")
tokenRingMLHistoryIntervalStart = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 3), TimeTicks()).setMaxAccess("readonly")
tokenRingMLHistoryDropEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryMacOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryMacPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryRingPurgeEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryRingPurgePkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryBeaconEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryBeaconTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 10), TimeInterval()).setMaxAccess("readonly")
tokenRingMLHistoryBeaconPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryClaimTokenEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryClaimTokenPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryNAUNChanges = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 14), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryLineErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 15), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryInternalErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 16), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryBurstErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 17), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryACErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 18), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryAbortErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 19), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryLostFrameErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 20), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryCongestionErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 21), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryFrameCopiedErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 22), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryFrequencyErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 23), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryTokenErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 24), Counter32()).setMaxAccess("readonly")
tokenRingMLHistorySoftErrorReports = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 25), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryRingPollEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 26), Counter32()).setMaxAccess("readonly")
tokenRingMLHistoryActiveStations = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 3, 1, 27), Integer32()).setMaxAccess("readonly")
tokenRingPHistoryTable = MibTable((1, 3, 6, 1, 2, 1, 16, 2, 4))
tokenRingPHistoryEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 2, 4, 1)).setIndexNames((0, "TOKEN-RING-RMON-MIB", "tokenRingPHistoryIndex"), (0, "TOKEN-RING-RMON-MIB", "tokenRingPHistorySampleIndex"))
tokenRingPHistoryIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 1), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
tokenRingPHistorySampleIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 2), Integer32()).setMaxAccess("readonly")
tokenRingPHistoryIntervalStart = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 3), TimeTicks()).setMaxAccess("readonly")
tokenRingPHistoryDropEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 4), Counter32()).setMaxAccess("readonly")
tokenRingPHistoryDataOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 5), Counter32()).setMaxAccess("readonly")
tokenRingPHistoryDataPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 6), Counter32()).setMaxAccess("readonly")
tokenRingPHistoryDataBroadcastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 7), Counter32()).setMaxAccess("readonly")
tokenRingPHistoryDataMulticastPkts = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 8), Counter32()).setMaxAccess("readonly")
tokenRingPHistoryDataPkts18to63Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 9), Counter32()).setMaxAccess("readonly")
tokenRingPHistoryDataPkts64to127Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 10), Counter32()).setMaxAccess("readonly")
tokenRingPHistoryDataPkts128to255Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 11), Counter32()).setMaxAccess("readonly")
tokenRingPHistoryDataPkts256to511Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 12), Counter32()).setMaxAccess("readonly")
tokenRingPHistoryDataPkts512to1023Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 13), Counter32()).setMaxAccess("readonly")
tokenRingPHistoryDataPkts1024to2047Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 14), Counter32()).setMaxAccess("readonly")
tokenRingPHistoryDataPkts2048to4095Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 15), Counter32()).setMaxAccess("readonly")
tokenRingPHistoryDataPkts4096to8191Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 16), Counter32()).setMaxAccess("readonly")
tokenRingPHistoryDataPkts8192to18000Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 17), Counter32()).setMaxAccess("readonly")
tokenRingPHistoryDataPktsGreaterThan18000Octets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 2, 4, 1, 18), Counter32()).setMaxAccess("readonly")
tokenRing = MibIdentifier((1, 3, 6, 1, 2, 1, 16, 10))
ringStationControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 10, 1))
ringStationControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 10, 1, 1)).setIndexNames((0, "TOKEN-RING-RMON-MIB", "ringStationControlIfIndex"))
ringStationControlIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 1), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
ringStationControlTableSize = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 2), Integer32()).setMaxAccess("readonly")
ringStationControlActiveStations = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 3), Integer32()).setMaxAccess("readonly")
ringStationControlRingState = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 4), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(5,2,3,7,4,6,1,)).subtype(namedValues=namedval.NamedValues(("normalOperation", 1), ("ringPurgeState", 2), ("claimTokenState", 3), ("beaconFrameStreamingState", 4), ("beaconBitStreamingState", 5), ("beaconRingSignalLossState", 6), ("beaconSetRecoveryModeState", 7), ))).setMaxAccess("readonly")
ringStationControlBeaconSender = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 5), MacAddress()).setMaxAccess("readonly")
ringStationControlBeaconNAUN = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 6), MacAddress()).setMaxAccess("readonly")
ringStationControlActiveMonitor = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 7), MacAddress()).setMaxAccess("readonly")
ringStationControlOrderChanges = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 8), Counter32()).setMaxAccess("readonly")
ringStationControlOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 9), OwnerString()).setMaxAccess("readwrite")
ringStationControlStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 1, 1, 10), EntryStatus()).setMaxAccess("readwrite")
ringStationTable = MibTable((1, 3, 6, 1, 2, 1, 16, 10, 2))
ringStationEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 10, 2, 1)).setIndexNames((0, "TOKEN-RING-RMON-MIB", "ringStationIfIndex"), (0, "TOKEN-RING-RMON-MIB", "ringStationMacAddress"))
ringStationIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 1), Integer32()).setMaxAccess("readonly")
ringStationMacAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 2), MacAddress()).setMaxAccess("readonly")
ringStationLastNAUN = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 3), MacAddress()).setMaxAccess("readonly")
ringStationStationStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 4), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,3,)).subtype(namedValues=namedval.NamedValues(("active", 1), ("inactive", 2), ("forcedRemoval", 3), ))).setMaxAccess("readonly")
ringStationLastEnterTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 5), TimeTicks()).setMaxAccess("readonly")
ringStationLastExitTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 6), TimeTicks()).setMaxAccess("readonly")
ringStationDuplicateAddresses = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 7), Counter32()).setMaxAccess("readonly")
ringStationInLineErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 8), Counter32()).setMaxAccess("readonly")
ringStationOutLineErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 9), Counter32()).setMaxAccess("readonly")
ringStationInternalErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 10), Counter32()).setMaxAccess("readonly")
ringStationInBurstErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 11), Counter32()).setMaxAccess("readonly")
ringStationOutBurstErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 12), Counter32()).setMaxAccess("readonly")
ringStationACErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 13), Counter32()).setMaxAccess("readonly")
ringStationAbortErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 14), Counter32()).setMaxAccess("readonly")
ringStationLostFrameErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 15), Counter32()).setMaxAccess("readonly")
ringStationCongestionErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 16), Counter32()).setMaxAccess("readonly")
ringStationFrameCopiedErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 17), Counter32()).setMaxAccess("readonly")
ringStationFrequencyErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 18), Counter32()).setMaxAccess("readonly")
ringStationTokenErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 19), Counter32()).setMaxAccess("readonly")
ringStationInBeaconErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 20), Counter32()).setMaxAccess("readonly")
ringStationOutBeaconErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 21), Counter32()).setMaxAccess("readonly")
ringStationInsertions = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 2, 1, 22), Counter32()).setMaxAccess("readonly")
ringStationOrderTable = MibTable((1, 3, 6, 1, 2, 1, 16, 10, 3))
ringStationOrderEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 10, 3, 1)).setIndexNames((0, "TOKEN-RING-RMON-MIB", "ringStationOrderIfIndex"), (0, "TOKEN-RING-RMON-MIB", "ringStationOrderOrderIndex"))
ringStationOrderIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 3, 1, 1), Integer32()).setMaxAccess("readonly")
ringStationOrderOrderIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 3, 1, 2), Integer32()).setMaxAccess("readonly")
ringStationOrderMacAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 3, 1, 3), MacAddress()).setMaxAccess("readonly")
ringStationConfigControlTable = MibTable((1, 3, 6, 1, 2, 1, 16, 10, 4))
ringStationConfigControlEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 10, 4, 1)).setIndexNames((0, "TOKEN-RING-RMON-MIB", "ringStationConfigControlIfIndex"), (0, "TOKEN-RING-RMON-MIB", "ringStationConfigControlMacAddress"))
ringStationConfigControlIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 4, 1, 1), Integer32()).setMaxAccess("readonly")
ringStationConfigControlMacAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 4, 1, 2), MacAddress()).setMaxAccess("readonly")
ringStationConfigControlRemove = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 4, 1, 3), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("stable", 1), ("removing", 2), ))).setMaxAccess("readwrite")
ringStationConfigControlUpdateStats = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 4, 1, 4), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("stable", 1), ("updating", 2), ))).setMaxAccess("readwrite")
ringStationConfigTable = MibTable((1, 3, 6, 1, 2, 1, 16, 10, 5))
ringStationConfigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 10, 5, 1)).setIndexNames((0, "TOKEN-RING-RMON-MIB", "ringStationConfigIfIndex"), (0, "TOKEN-RING-RMON-MIB", "ringStationConfigMacAddress"))
ringStationConfigIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 5, 1, 1), Integer32()).setMaxAccess("readonly")
ringStationConfigMacAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 5, 1, 2), MacAddress()).setMaxAccess("readonly")
ringStationConfigUpdateTime = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 5, 1, 3), TimeTicks()).setMaxAccess("readonly")
ringStationConfigLocation = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 5, 1, 4), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
ringStationConfigMicrocode = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 5, 1, 5), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(10, 10)).setFixedLength(10)).setMaxAccess("readonly")
ringStationConfigGroupAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 5, 1, 6), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
ringStationConfigFunctionalAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 5, 1, 7), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(4, 4)).setFixedLength(4)).setMaxAccess("readonly")
sourceRoutingStatsTable = MibTable((1, 3, 6, 1, 2, 1, 16, 10, 6))
sourceRoutingStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 16, 10, 6, 1)).setIndexNames((0, "TOKEN-RING-RMON-MIB", "sourceRoutingStatsIfIndex"))
sourceRoutingStatsIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 1), Integer32()).setMaxAccess("readonly")
sourceRoutingStatsRingNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 2), Integer32()).setMaxAccess("readonly")
sourceRoutingStatsInFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 3), Counter32()).setMaxAccess("readonly")
sourceRoutingStatsOutFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 4), Counter32()).setMaxAccess("readonly")
sourceRoutingStatsThroughFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 5), Counter32()).setMaxAccess("readonly")
sourceRoutingStatsAllRoutesBroadcastFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 6), Counter32()).setMaxAccess("readonly")
sourceRoutingStatsSingleRouteBroadcastFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 7), Counter32()).setMaxAccess("readonly")
sourceRoutingStatsInOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 8), Counter32()).setMaxAccess("readonly")
sourceRoutingStatsOutOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 9), Counter32()).setMaxAccess("readonly")
sourceRoutingStatsThroughOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 10), Counter32()).setMaxAccess("readonly")
sourceRoutingStatsAllRoutesBroadcastOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 11), Counter32()).setMaxAccess("readonly")
sourceRoutingStatsSingleRoutesBroadcastOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 12), Counter32()).setMaxAccess("readonly")
sourceRoutingStatsLocalLLCFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 13), Counter32()).setMaxAccess("readonly")
sourceRoutingStats1HopFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 14), Counter32()).setMaxAccess("readonly")
sourceRoutingStats2HopsFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 15), Counter32()).setMaxAccess("readonly")
sourceRoutingStats3HopsFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 16), Counter32()).setMaxAccess("readonly")
sourceRoutingStats4HopsFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 17), Counter32()).setMaxAccess("readonly")
sourceRoutingStats5HopsFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 18), Counter32()).setMaxAccess("readonly")
sourceRoutingStats6HopsFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 19), Counter32()).setMaxAccess("readonly")
sourceRoutingStats7HopsFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 20), Counter32()).setMaxAccess("readonly")
sourceRoutingStats8HopsFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 21), Counter32()).setMaxAccess("readonly")
sourceRoutingStatsMoreThan8HopsFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 22), Counter32()).setMaxAccess("readonly")
sourceRoutingStatsOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 23), OwnerString()).setMaxAccess("readwrite")
sourceRoutingStatsStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 16, 10, 6, 1, 24), EntryStatus()).setMaxAccess("readwrite")

# Augmentions

# Exports

# Types
mibBuilder.exportSymbols("TOKEN-RING-RMON-MIB", MacAddress=MacAddress, TimeInterval=TimeInterval)

# Objects
mibBuilder.exportSymbols("TOKEN-RING-RMON-MIB", tokenRingMLStatsTable=tokenRingMLStatsTable, tokenRingMLStatsEntry=tokenRingMLStatsEntry, tokenRingMLStatsIndex=tokenRingMLStatsIndex, tokenRingMLStatsDataSource=tokenRingMLStatsDataSource, tokenRingMLStatsDropEvents=tokenRingMLStatsDropEvents, tokenRingMLStatsMacOctets=tokenRingMLStatsMacOctets, tokenRingMLStatsMacPkts=tokenRingMLStatsMacPkts, tokenRingMLStatsRingPurgeEvents=tokenRingMLStatsRingPurgeEvents, tokenRingMLStatsRingPurgePkts=tokenRingMLStatsRingPurgePkts, tokenRingMLStatsBeaconEvents=tokenRingMLStatsBeaconEvents, tokenRingMLStatsBeaconTime=tokenRingMLStatsBeaconTime, tokenRingMLStatsBeaconPkts=tokenRingMLStatsBeaconPkts, tokenRingMLStatsClaimTokenEvents=tokenRingMLStatsClaimTokenEvents, tokenRingMLStatsClaimTokenPkts=tokenRingMLStatsClaimTokenPkts, tokenRingMLStatsNAUNChanges=tokenRingMLStatsNAUNChanges, tokenRingMLStatsLineErrors=tokenRingMLStatsLineErrors, tokenRingMLStatsInternalErrors=tokenRingMLStatsInternalErrors, tokenRingMLStatsBurstErrors=tokenRingMLStatsBurstErrors, tokenRingMLStatsACErrors=tokenRingMLStatsACErrors, tokenRingMLStatsAbortErrors=tokenRingMLStatsAbortErrors, tokenRingMLStatsLostFrameErrors=tokenRingMLStatsLostFrameErrors, tokenRingMLStatsCongestionErrors=tokenRingMLStatsCongestionErrors, tokenRingMLStatsFrameCopiedErrors=tokenRingMLStatsFrameCopiedErrors, tokenRingMLStatsFrequencyErrors=tokenRingMLStatsFrequencyErrors, tokenRingMLStatsTokenErrors=tokenRingMLStatsTokenErrors, tokenRingMLStatsSoftErrorReports=tokenRingMLStatsSoftErrorReports, tokenRingMLStatsRingPollEvents=tokenRingMLStatsRingPollEvents, tokenRingMLStatsOwner=tokenRingMLStatsOwner, tokenRingMLStatsStatus=tokenRingMLStatsStatus, tokenRingPStatsTable=tokenRingPStatsTable, tokenRingPStatsEntry=tokenRingPStatsEntry, tokenRingPStatsIndex=tokenRingPStatsIndex, tokenRingPStatsDataSource=tokenRingPStatsDataSource, tokenRingPStatsDropEvents=tokenRingPStatsDropEvents, tokenRingPStatsDataOctets=tokenRingPStatsDataOctets, tokenRingPStatsDataPkts=tokenRingPStatsDataPkts, tokenRingPStatsDataBroadcastPkts=tokenRingPStatsDataBroadcastPkts, tokenRingPStatsDataMulticastPkts=tokenRingPStatsDataMulticastPkts, tokenRingPStatsDataPkts18to63Octets=tokenRingPStatsDataPkts18to63Octets, tokenRingPStatsDataPkts64to127Octets=tokenRingPStatsDataPkts64to127Octets, tokenRingPStatsDataPkts128to255Octets=tokenRingPStatsDataPkts128to255Octets, tokenRingPStatsDataPkts256to511Octets=tokenRingPStatsDataPkts256to511Octets, tokenRingPStatsDataPkts512to1023Octets=tokenRingPStatsDataPkts512to1023Octets, tokenRingPStatsDataPkts1024to2047Octets=tokenRingPStatsDataPkts1024to2047Octets, tokenRingPStatsDataPkts2048to4095Octets=tokenRingPStatsDataPkts2048to4095Octets, tokenRingPStatsDataPkts4096to8191Octets=tokenRingPStatsDataPkts4096to8191Octets, tokenRingPStatsDataPkts8192to18000Octets=tokenRingPStatsDataPkts8192to18000Octets, tokenRingPStatsDataPktsGreaterThan18000Octets=tokenRingPStatsDataPktsGreaterThan18000Octets, tokenRingPStatsOwner=tokenRingPStatsOwner, tokenRingPStatsStatus=tokenRingPStatsStatus, tokenRingMLHistoryTable=tokenRingMLHistoryTable, tokenRingMLHistoryEntry=tokenRingMLHistoryEntry, tokenRingMLHistoryIndex=tokenRingMLHistoryIndex, tokenRingMLHistorySampleIndex=tokenRingMLHistorySampleIndex, tokenRingMLHistoryIntervalStart=tokenRingMLHistoryIntervalStart, tokenRingMLHistoryDropEvents=tokenRingMLHistoryDropEvents, tokenRingMLHistoryMacOctets=tokenRingMLHistoryMacOctets, tokenRingMLHistoryMacPkts=tokenRingMLHistoryMacPkts, tokenRingMLHistoryRingPurgeEvents=tokenRingMLHistoryRingPurgeEvents, tokenRingMLHistoryRingPurgePkts=tokenRingMLHistoryRingPurgePkts, tokenRingMLHistoryBeaconEvents=tokenRingMLHistoryBeaconEvents, tokenRingMLHistoryBeaconTime=tokenRingMLHistoryBeaconTime, tokenRingMLHistoryBeaconPkts=tokenRingMLHistoryBeaconPkts, tokenRingMLHistoryClaimTokenEvents=tokenRingMLHistoryClaimTokenEvents, tokenRingMLHistoryClaimTokenPkts=tokenRingMLHistoryClaimTokenPkts, tokenRingMLHistoryNAUNChanges=tokenRingMLHistoryNAUNChanges, tokenRingMLHistoryLineErrors=tokenRingMLHistoryLineErrors, tokenRingMLHistoryInternalErrors=tokenRingMLHistoryInternalErrors, tokenRingMLHistoryBurstErrors=tokenRingMLHistoryBurstErrors, tokenRingMLHistoryACErrors=tokenRingMLHistoryACErrors, tokenRingMLHistoryAbortErrors=tokenRingMLHistoryAbortErrors, tokenRingMLHistoryLostFrameErrors=tokenRingMLHistoryLostFrameErrors, tokenRingMLHistoryCongestionErrors=tokenRingMLHistoryCongestionErrors, tokenRingMLHistoryFrameCopiedErrors=tokenRingMLHistoryFrameCopiedErrors, tokenRingMLHistoryFrequencyErrors=tokenRingMLHistoryFrequencyErrors, tokenRingMLHistoryTokenErrors=tokenRingMLHistoryTokenErrors, tokenRingMLHistorySoftErrorReports=tokenRingMLHistorySoftErrorReports, tokenRingMLHistoryRingPollEvents=tokenRingMLHistoryRingPollEvents, tokenRingMLHistoryActiveStations=tokenRingMLHistoryActiveStations, tokenRingPHistoryTable=tokenRingPHistoryTable, tokenRingPHistoryEntry=tokenRingPHistoryEntry, tokenRingPHistoryIndex=tokenRingPHistoryIndex, tokenRingPHistorySampleIndex=tokenRingPHistorySampleIndex, tokenRingPHistoryIntervalStart=tokenRingPHistoryIntervalStart, tokenRingPHistoryDropEvents=tokenRingPHistoryDropEvents, tokenRingPHistoryDataOctets=tokenRingPHistoryDataOctets, tokenRingPHistoryDataPkts=tokenRingPHistoryDataPkts, tokenRingPHistoryDataBroadcastPkts=tokenRingPHistoryDataBroadcastPkts, tokenRingPHistoryDataMulticastPkts=tokenRingPHistoryDataMulticastPkts, tokenRingPHistoryDataPkts18to63Octets=tokenRingPHistoryDataPkts18to63Octets, tokenRingPHistoryDataPkts64to127Octets=tokenRingPHistoryDataPkts64to127Octets, tokenRingPHistoryDataPkts128to255Octets=tokenRingPHistoryDataPkts128to255Octets, tokenRingPHistoryDataPkts256to511Octets=tokenRingPHistoryDataPkts256to511Octets, tokenRingPHistoryDataPkts512to1023Octets=tokenRingPHistoryDataPkts512to1023Octets, tokenRingPHistoryDataPkts1024to2047Octets=tokenRingPHistoryDataPkts1024to2047Octets, tokenRingPHistoryDataPkts2048to4095Octets=tokenRingPHistoryDataPkts2048to4095Octets, tokenRingPHistoryDataPkts4096to8191Octets=tokenRingPHistoryDataPkts4096to8191Octets, tokenRingPHistoryDataPkts8192to18000Octets=tokenRingPHistoryDataPkts8192to18000Octets, tokenRingPHistoryDataPktsGreaterThan18000Octets=tokenRingPHistoryDataPktsGreaterThan18000Octets, tokenRing=tokenRing, ringStationControlTable=ringStationControlTable, ringStationControlEntry=ringStationControlEntry, ringStationControlIfIndex=ringStationControlIfIndex, ringStationControlTableSize=ringStationControlTableSize, ringStationControlActiveStations=ringStationControlActiveStations, ringStationControlRingState=ringStationControlRingState, ringStationControlBeaconSender=ringStationControlBeaconSender, ringStationControlBeaconNAUN=ringStationControlBeaconNAUN, ringStationControlActiveMonitor=ringStationControlActiveMonitor, ringStationControlOrderChanges=ringStationControlOrderChanges, ringStationControlOwner=ringStationControlOwner, ringStationControlStatus=ringStationControlStatus, ringStationTable=ringStationTable, ringStationEntry=ringStationEntry, ringStationIfIndex=ringStationIfIndex, ringStationMacAddress=ringStationMacAddress, ringStationLastNAUN=ringStationLastNAUN, ringStationStationStatus=ringStationStationStatus, ringStationLastEnterTime=ringStationLastEnterTime, ringStationLastExitTime=ringStationLastExitTime, ringStationDuplicateAddresses=ringStationDuplicateAddresses, ringStationInLineErrors=ringStationInLineErrors, ringStationOutLineErrors=ringStationOutLineErrors, ringStationInternalErrors=ringStationInternalErrors, ringStationInBurstErrors=ringStationInBurstErrors, ringStationOutBurstErrors=ringStationOutBurstErrors)
mibBuilder.exportSymbols("TOKEN-RING-RMON-MIB", ringStationACErrors=ringStationACErrors, ringStationAbortErrors=ringStationAbortErrors, ringStationLostFrameErrors=ringStationLostFrameErrors, ringStationCongestionErrors=ringStationCongestionErrors, ringStationFrameCopiedErrors=ringStationFrameCopiedErrors, ringStationFrequencyErrors=ringStationFrequencyErrors, ringStationTokenErrors=ringStationTokenErrors, ringStationInBeaconErrors=ringStationInBeaconErrors, ringStationOutBeaconErrors=ringStationOutBeaconErrors, ringStationInsertions=ringStationInsertions, ringStationOrderTable=ringStationOrderTable, ringStationOrderEntry=ringStationOrderEntry, ringStationOrderIfIndex=ringStationOrderIfIndex, ringStationOrderOrderIndex=ringStationOrderOrderIndex, ringStationOrderMacAddress=ringStationOrderMacAddress, ringStationConfigControlTable=ringStationConfigControlTable, ringStationConfigControlEntry=ringStationConfigControlEntry, ringStationConfigControlIfIndex=ringStationConfigControlIfIndex, ringStationConfigControlMacAddress=ringStationConfigControlMacAddress, ringStationConfigControlRemove=ringStationConfigControlRemove, ringStationConfigControlUpdateStats=ringStationConfigControlUpdateStats, ringStationConfigTable=ringStationConfigTable, ringStationConfigEntry=ringStationConfigEntry, ringStationConfigIfIndex=ringStationConfigIfIndex, ringStationConfigMacAddress=ringStationConfigMacAddress, ringStationConfigUpdateTime=ringStationConfigUpdateTime, ringStationConfigLocation=ringStationConfigLocation, ringStationConfigMicrocode=ringStationConfigMicrocode, ringStationConfigGroupAddress=ringStationConfigGroupAddress, ringStationConfigFunctionalAddress=ringStationConfigFunctionalAddress, sourceRoutingStatsTable=sourceRoutingStatsTable, sourceRoutingStatsEntry=sourceRoutingStatsEntry, sourceRoutingStatsIfIndex=sourceRoutingStatsIfIndex, sourceRoutingStatsRingNumber=sourceRoutingStatsRingNumber, sourceRoutingStatsInFrames=sourceRoutingStatsInFrames, sourceRoutingStatsOutFrames=sourceRoutingStatsOutFrames, sourceRoutingStatsThroughFrames=sourceRoutingStatsThroughFrames, sourceRoutingStatsAllRoutesBroadcastFrames=sourceRoutingStatsAllRoutesBroadcastFrames, sourceRoutingStatsSingleRouteBroadcastFrames=sourceRoutingStatsSingleRouteBroadcastFrames, sourceRoutingStatsInOctets=sourceRoutingStatsInOctets, sourceRoutingStatsOutOctets=sourceRoutingStatsOutOctets, sourceRoutingStatsThroughOctets=sourceRoutingStatsThroughOctets, sourceRoutingStatsAllRoutesBroadcastOctets=sourceRoutingStatsAllRoutesBroadcastOctets, sourceRoutingStatsSingleRoutesBroadcastOctets=sourceRoutingStatsSingleRoutesBroadcastOctets, sourceRoutingStatsLocalLLCFrames=sourceRoutingStatsLocalLLCFrames, sourceRoutingStats1HopFrames=sourceRoutingStats1HopFrames, sourceRoutingStats2HopsFrames=sourceRoutingStats2HopsFrames, sourceRoutingStats3HopsFrames=sourceRoutingStats3HopsFrames, sourceRoutingStats4HopsFrames=sourceRoutingStats4HopsFrames, sourceRoutingStats5HopsFrames=sourceRoutingStats5HopsFrames, sourceRoutingStats6HopsFrames=sourceRoutingStats6HopsFrames, sourceRoutingStats7HopsFrames=sourceRoutingStats7HopsFrames, sourceRoutingStats8HopsFrames=sourceRoutingStats8HopsFrames, sourceRoutingStatsMoreThan8HopsFrames=sourceRoutingStatsMoreThan8HopsFrames, sourceRoutingStatsOwner=sourceRoutingStatsOwner, sourceRoutingStatsStatus=sourceRoutingStatsStatus)

