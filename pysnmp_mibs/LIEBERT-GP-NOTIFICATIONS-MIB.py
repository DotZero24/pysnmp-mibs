_N='deprecated'
_M='read-only'
_L='lgpConditionTime'
_K='lgpConditionTableRowRef'
_J='lgpConditionTableRef'
_I='lgpConditionId'
_H='lgpConditionDescr'
_G='lgpEventParmTableRowRef'
_F='lgpEventParmTableRef'
_E='LIEBERT-GP-CONDITIONS-MIB'
_D='LIEBERT-GP-NOTIFICATIONS-MIB'
_C='sysUpTime'
_B='SNMPv2-MIB'
_A='current'
if'mibBuilder'not in globals():import sys;sys.stderr.write(__doc__);sys.exit(1)
Integer,OctetString,ObjectIdentifier=mibBuilder.importSymbols('ASN1','Integer','OctetString','ObjectIdentifier')
NamedValues,=mibBuilder.importSymbols('ASN1-ENUMERATION','NamedValues')
ConstraintsIntersection,ConstraintsUnion,SingleValueConstraint,ValueRangeConstraint,ValueSizeConstraint=mibBuilder.importSymbols('ASN1-REFINEMENT','ConstraintsIntersection','ConstraintsUnion','SingleValueConstraint','ValueRangeConstraint','ValueSizeConstraint')
lgpConditionDescr,lgpConditionId,lgpConditionTableRef,lgpConditionTableRowRef,lgpConditionTime=mibBuilder.importSymbols(_E,_H,_I,_J,_K,_L)
lgpNotifications,liebertNotificationsModuleReg=mibBuilder.importSymbols('LIEBERT-GP-REGISTRATION-MIB','lgpNotifications','liebertNotificationsModuleReg')
ModuleCompliance,NotificationGroup=mibBuilder.importSymbols('SNMPv2-CONF','ModuleCompliance','NotificationGroup')
sysUpTime,=mibBuilder.importSymbols(_B,_C)
Bits,Counter32,Counter64,Gauge32,Integer32,IpAddress,ModuleIdentity,MibIdentifier,NotificationType,ObjectIdentity,MibScalar,MibTable,MibTableRow,MibTableColumn,TimeTicks,Unsigned32,iso=mibBuilder.importSymbols('SNMPv2-SMI','Bits','Counter32','Counter64','Gauge32','Integer32','IpAddress','ModuleIdentity','MibIdentifier','NotificationType','ObjectIdentity','MibScalar','MibTable','MibTableRow','MibTableColumn','TimeTicks','Unsigned32','iso')
DisplayString,PhysAddress,TextualConvention=mibBuilder.importSymbols('SNMPv2-TC','DisplayString','PhysAddress','TextualConvention')
liebertGlobalProductsNotificationsModule=ModuleIdentity((1,3,6,1,4,1,476,1,42,1,4,1))
if mibBuilder.loadTexts:liebertGlobalProductsNotificationsModule.setRevisions(('2008-07-02 00:00','2008-05-15 00:00','2008-01-10 00:00','2006-08-15 00:00','2006-02-22 00:00'))
_LgpEventNotifications_ObjectIdentity=ObjectIdentity
lgpEventNotifications=_LgpEventNotifications_ObjectIdentity((1,3,6,1,4,1,476,1,42,3,3,0))
if mibBuilder.loadTexts:lgpEventNotifications.setStatus(_A)
_LgpEventParameters_ObjectIdentity=ObjectIdentity
lgpEventParameters=_LgpEventParameters_ObjectIdentity((1,3,6,1,4,1,476,1,42,3,3,10))
if mibBuilder.loadTexts:lgpEventParameters.setStatus(_A)
_LgpEventParmTableRef_Type=ObjectIdentifier
_LgpEventParmTableRef_Object=MibScalar
lgpEventParmTableRef=_LgpEventParmTableRef_Object((1,3,6,1,4,1,476,1,42,3,3,10,5),_LgpEventParmTableRef_Type())
lgpEventParmTableRef.setMaxAccess(_M)
if mibBuilder.loadTexts:lgpEventParmTableRef.setStatus(_A)
_LgpEventParmTableRowRef_Type=ObjectIdentifier
_LgpEventParmTableRowRef_Object=MibScalar
lgpEventParmTableRowRef=_LgpEventParmTableRowRef_Object((1,3,6,1,4,1,476,1,42,3,3,10,6),_LgpEventParmTableRowRef_Type())
lgpEventParmTableRowRef.setMaxAccess(_M)
if mibBuilder.loadTexts:lgpEventParmTableRowRef.setStatus(_A)
lgpEventConditionEntryAdded=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,1))
lgpEventConditionEntryAdded.setObjects(*((_E,_I),(_E,_H),(_E,_L),(_E,_J),(_E,_K)))
if mibBuilder.loadTexts:lgpEventConditionEntryAdded.setStatus(_A)
lgpEventConditionEntryRemoved=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,2))
lgpEventConditionEntryRemoved.setObjects(*((_E,_I),(_E,_H),(_E,_L),(_E,_J),(_E,_K)))
if mibBuilder.loadTexts:lgpEventConditionEntryRemoved.setStatus(_A)
lgpEventLowBatteryWarning=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,3))
lgpEventLowBatteryWarning.setObjects((_B,_C))
if mibBuilder.loadTexts:lgpEventLowBatteryWarning.setStatus(_A)
lgpEventLoadTransferedToBypass=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,4))
lgpEventLoadTransferedToBypass.setObjects((_B,_C))
if mibBuilder.loadTexts:lgpEventLoadTransferedToBypass.setStatus(_A)
lgpEventInternalFault=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,5))
lgpEventInternalFault.setObjects((_B,_C))
if mibBuilder.loadTexts:lgpEventInternalFault.setStatus(_A)
lgpEventBatteryTestFailed=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,6))
lgpEventBatteryTestFailed.setObjects((_B,_C))
if mibBuilder.loadTexts:lgpEventBatteryTestFailed.setStatus(_A)
lgpEventOutputOverload=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,7))
lgpEventOutputOverload.setObjects((_B,_C))
if mibBuilder.loadTexts:lgpEventOutputOverload.setStatus(_A)
lgpEventEstablishedPowerRedundancy=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,8))
lgpEventEstablishedPowerRedundancy.setObjects((_B,_C))
if mibBuilder.loadTexts:lgpEventEstablishedPowerRedundancy.setStatus(_A)
lgpEventLostPowerRedundancy=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,9))
lgpEventLostPowerRedundancy.setObjects((_B,_C))
if mibBuilder.loadTexts:lgpEventLostPowerRedundancy.setStatus(_A)
lgpEventPowerModuleFailure=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,10))
lgpEventPowerModuleFailure.setObjects((_B,_C))
if mibBuilder.loadTexts:lgpEventPowerModuleFailure.setStatus(_A)
lgpEventBatteryModuleFailure=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,11))
lgpEventBatteryModuleFailure.setObjects((_B,_C))
if mibBuilder.loadTexts:lgpEventBatteryModuleFailure.setStatus(_A)
lgpEventControlModuleFailure=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,12))
lgpEventControlModuleFailure.setObjects((_B,_C))
if mibBuilder.loadTexts:lgpEventControlModuleFailure.setStatus(_A)
lgpEventPowerModuleWarning=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,13))
lgpEventPowerModuleWarning.setObjects((_B,_C))
if mibBuilder.loadTexts:lgpEventPowerModuleWarning.setStatus(_A)
lgpEventBatteryModuleWarning=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,14))
lgpEventBatteryModuleWarning.setObjects((_B,_C))
if mibBuilder.loadTexts:lgpEventBatteryModuleWarning.setStatus(_A)
lgpEventControlModuleWarning=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,15))
lgpEventControlModuleWarning.setObjects((_B,_C))
if mibBuilder.loadTexts:lgpEventControlModuleWarning.setStatus(_A)
lgpEventAgentFirmwareUpdateSuccessful=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,16))
lgpEventAgentFirmwareUpdateSuccessful.setObjects((_B,_C))
if mibBuilder.loadTexts:lgpEventAgentFirmwareUpdateSuccessful.setStatus(_N)
lgpEventAgentFirmwareCorrupt=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,17))
lgpEventAgentFirmwareCorrupt.setObjects((_B,_C))
if mibBuilder.loadTexts:lgpEventAgentFirmwareCorrupt.setStatus(_N)
lgpEventConfigModified=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,18))
lgpEventConfigModified.setObjects(*((_B,_C),(_D,_F),(_D,_G)))
if mibBuilder.loadTexts:lgpEventConfigModified.setStatus(_A)
lgpEventModuleAdded=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,19))
lgpEventModuleAdded.setObjects(*((_B,_C),(_D,_F),(_D,_G)))
if mibBuilder.loadTexts:lgpEventModuleAdded.setStatus(_A)
lgpEventModuleRemoved=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,20))
lgpEventModuleRemoved.setObjects(*((_B,_C),(_D,_F),(_D,_G)))
if mibBuilder.loadTexts:lgpEventModuleRemoved.setStatus(_A)
lgpEventRcpPowerStateChangeOn=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,21))
lgpEventRcpPowerStateChangeOn.setObjects(*((_B,_C),(_D,_F),(_D,_G)))
if mibBuilder.loadTexts:lgpEventRcpPowerStateChangeOn.setStatus(_A)
lgpEventRcpPowerStateChangeOff=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,22))
lgpEventRcpPowerStateChangeOff.setObjects(*((_B,_C),(_D,_F),(_D,_G)))
if mibBuilder.loadTexts:lgpEventRcpPowerStateChangeOff.setStatus(_A)
lgpEventRcpLoadAdded=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,23))
lgpEventRcpLoadAdded.setObjects(*((_B,_C),(_D,_F),(_D,_G)))
if mibBuilder.loadTexts:lgpEventRcpLoadAdded.setStatus(_A)
lgpEventRcpLoadRemoved=NotificationType((1,3,6,1,4,1,476,1,42,3,3,0,24))
lgpEventRcpLoadRemoved.setObjects(*((_B,_C),(_D,_F),(_D,_G)))
if mibBuilder.loadTexts:lgpEventRcpLoadRemoved.setStatus(_A)
mibBuilder.exportSymbols(_D,**{'liebertGlobalProductsNotificationsModule':liebertGlobalProductsNotificationsModule,'lgpEventNotifications':lgpEventNotifications,'lgpEventConditionEntryAdded':lgpEventConditionEntryAdded,'lgpEventConditionEntryRemoved':lgpEventConditionEntryRemoved,'lgpEventLowBatteryWarning':lgpEventLowBatteryWarning,'lgpEventLoadTransferedToBypass':lgpEventLoadTransferedToBypass,'lgpEventInternalFault':lgpEventInternalFault,'lgpEventBatteryTestFailed':lgpEventBatteryTestFailed,'lgpEventOutputOverload':lgpEventOutputOverload,'lgpEventEstablishedPowerRedundancy':lgpEventEstablishedPowerRedundancy,'lgpEventLostPowerRedundancy':lgpEventLostPowerRedundancy,'lgpEventPowerModuleFailure':lgpEventPowerModuleFailure,'lgpEventBatteryModuleFailure':lgpEventBatteryModuleFailure,'lgpEventControlModuleFailure':lgpEventControlModuleFailure,'lgpEventPowerModuleWarning':lgpEventPowerModuleWarning,'lgpEventBatteryModuleWarning':lgpEventBatteryModuleWarning,'lgpEventControlModuleWarning':lgpEventControlModuleWarning,'lgpEventAgentFirmwareUpdateSuccessful':lgpEventAgentFirmwareUpdateSuccessful,'lgpEventAgentFirmwareCorrupt':lgpEventAgentFirmwareCorrupt,'lgpEventConfigModified':lgpEventConfigModified,'lgpEventModuleAdded':lgpEventModuleAdded,'lgpEventModuleRemoved':lgpEventModuleRemoved,'lgpEventRcpPowerStateChangeOn':lgpEventRcpPowerStateChangeOn,'lgpEventRcpPowerStateChangeOff':lgpEventRcpPowerStateChangeOff,'lgpEventRcpLoadAdded':lgpEventRcpLoadAdded,'lgpEventRcpLoadRemoved':lgpEventRcpLoadRemoved,'lgpEventParameters':lgpEventParameters,_F:lgpEventParmTableRef,_G:lgpEventParmTableRowRef})