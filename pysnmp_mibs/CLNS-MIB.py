# PySNMP SMI module. Autogenerated from smidump -f python CLNS-MIB
# by libsmi2pysnmp-0.0.3-alpha at Wed Nov 10 12:10:11 2004,
# Python version (2, 2, 1, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pysnmp.asn1 import subtypes

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( MibVariable, MibTable, MibTableRow, MibTableColumn, ) = mibBuilder.importSymbols("RFC-1212", "MibVariable", "MibTable", "MibTableRow", "MibTableColumn")
( Counter, experimental, ) = mibBuilder.importSymbols("RFC1155-SMI", "Counter", "experimental")
( PhysAddress, ) = mibBuilder.importSymbols("RFC1213-MIB", "PhysAddress")
( Bits, Integer32, MibIdentifier, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "MibIdentifier", "TimeTicks")

# Types

class ClnpAddress(OctetString):
    subtypeConstraints = OctetString.subtypeConstraints + ( subtypes.ValueRangeConstraint(1, 21), )
    pass


# Objects

clns = MibIdentifier((1, 3, 6, 1, 3, 1))
clnp = MibIdentifier((1, 3, 6, 1, 3, 1, 1))
clnpForwarding = MibVariable((1, 3, 6, 1, 3, 1, 1, 1), Integer().addConstraints(subtypes.SingleValueConstraint(1,2,)).addNamedValues(("is", 1), ("es", 2), )).setMaxAccess("readwrite")
clnpDefaultLifeTime = MibVariable((1, 3, 6, 1, 3, 1, 1, 2), Integer32()).setMaxAccess("readwrite")
clnpInReceives = MibVariable((1, 3, 6, 1, 3, 1, 1, 3), Counter()).setMaxAccess("readonly")
clnpInHdrErrors = MibVariable((1, 3, 6, 1, 3, 1, 1, 4), Counter()).setMaxAccess("readonly")
clnpInAddrErrors = MibVariable((1, 3, 6, 1, 3, 1, 1, 5), Counter()).setMaxAccess("readonly")
clnpForwPDUs = MibVariable((1, 3, 6, 1, 3, 1, 1, 6), Counter()).setMaxAccess("readonly")
clnpInUnknownNLPs = MibVariable((1, 3, 6, 1, 3, 1, 1, 7), Counter()).setMaxAccess("readonly")
clnpInUnknownULPs = MibVariable((1, 3, 6, 1, 3, 1, 1, 8), Counter()).setMaxAccess("readonly")
clnpInDiscards = MibVariable((1, 3, 6, 1, 3, 1, 1, 9), Counter()).setMaxAccess("readonly")
clnpInDelivers = MibVariable((1, 3, 6, 1, 3, 1, 1, 10), Counter()).setMaxAccess("readonly")
clnpOutRequests = MibVariable((1, 3, 6, 1, 3, 1, 1, 11), Counter()).setMaxAccess("readonly")
clnpOutDiscards = MibVariable((1, 3, 6, 1, 3, 1, 1, 12), Counter()).setMaxAccess("readonly")
clnpOutNoRoutes = MibVariable((1, 3, 6, 1, 3, 1, 1, 13), Counter()).setMaxAccess("readonly")
clnpReasmTimeout = MibVariable((1, 3, 6, 1, 3, 1, 1, 14), Integer32()).setMaxAccess("readonly")
clnpReasmReqds = MibVariable((1, 3, 6, 1, 3, 1, 1, 15), Counter()).setMaxAccess("readonly")
clnpReasmOKs = MibVariable((1, 3, 6, 1, 3, 1, 1, 16), Counter()).setMaxAccess("readonly")
clnpReasmFails = MibVariable((1, 3, 6, 1, 3, 1, 1, 17), Counter()).setMaxAccess("readonly")
clnpSegOKs = MibVariable((1, 3, 6, 1, 3, 1, 1, 18), Counter()).setMaxAccess("readonly")
clnpSegFails = MibVariable((1, 3, 6, 1, 3, 1, 1, 19), Counter()).setMaxAccess("readonly")
clnpSegCreates = MibVariable((1, 3, 6, 1, 3, 1, 1, 20), Counter()).setMaxAccess("readonly")
clnpAddrTable = MibTable((1, 3, 6, 1, 3, 1, 1, 21))
clnpAddrEntry = MibTableRow((1, 3, 6, 1, 3, 1, 1, 21, 1)).setIndexNames((0, "CLNS-MIB", "clnpAdEntAddr"))
clnpAdEntAddr = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 21, 1, 1)).setColumnInitializer(MibVariable((), ClnpAddress()).setMaxAccess("readonly"))
clnpAdEntIfIndex = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 21, 1, 2)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
clnpAdEntReasmMaxSize = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 21, 1, 3)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
clnpRoutingTable = MibTable((1, 3, 6, 1, 3, 1, 1, 22))
clnpRouteEntry = MibTableRow((1, 3, 6, 1, 3, 1, 1, 22, 1)).setIndexNames((0, "CLNS-MIB", "clnpRouteDest"))
clnpRouteDest = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 1)).setColumnInitializer(MibVariable((), ClnpAddress()).setMaxAccess("readwrite"))
clnpRouteIfIndex = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 2)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readwrite"))
clnpRouteMetric1 = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 3)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readwrite"))
clnpRouteMetric2 = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 4)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readwrite"))
clnpRouteMetric3 = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 5)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readwrite"))
clnpRouteMetric4 = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 6)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readwrite"))
clnpRouteNextHop = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 7)).setColumnInitializer(MibVariable((), ClnpAddress()).setMaxAccess("readwrite"))
clnpRouteType = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 8)).setColumnInitializer(MibVariable((), Integer().addConstraints(subtypes.SingleValueConstraint(1,4,3,2,)).addNamedValues(("other", 1), ("invalid", 2), ("direct", 3), ("remote", 4), )).setMaxAccess("readwrite"))
clnpRouteProto = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 9)).setColumnInitializer(MibVariable((), Integer().addConstraints(subtypes.SingleValueConstraint(14,11,1,9,3,12,13,2,)).addNamedValues(("other", 1), ("ciscoIgrp", 11), ("bbnSpfIgp", 12), ("ospf", 13), ("bgp", 14), ("local", 2), ("netmgmt", 3), ("is-is", 9), )).setMaxAccess("readonly"))
clnpRouteAge = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 10)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readwrite"))
clnpRouteMetric5 = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 11)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readwrite"))
clnpRouteInfo = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 22, 1, 12)).setColumnInitializer(MibVariable((), ObjectIdentifier()).setMaxAccess("readonly"))
clnpNetToMediaTable = MibTable((1, 3, 6, 1, 3, 1, 1, 23))
clnpNetToMediaEntry = MibTableRow((1, 3, 6, 1, 3, 1, 1, 23, 1)).setIndexNames((0, "CLNS-MIB", "clnpNetToMediaIfIndex"), (0, "CLNS-MIB", "clnpNetToMediaNetAddress"))
clnpNetToMediaIfIndex = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 23, 1, 1)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readwrite"))
clnpNetToMediaPhysAddress = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 23, 1, 2)).setColumnInitializer(MibVariable((), PhysAddress()).setMaxAccess("readwrite"))
clnpNetToMediaNetAddress = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 23, 1, 3)).setColumnInitializer(MibVariable((), ClnpAddress()).setMaxAccess("readwrite"))
clnpNetToMediaType = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 23, 1, 4)).setColumnInitializer(MibVariable((), Integer().addConstraints(subtypes.SingleValueConstraint(4,1,3,2,)).addNamedValues(("other", 1), ("invalid", 2), ("dynamic", 3), ("static", 4), )).setMaxAccess("readwrite"))
clnpNetToMediaAge = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 23, 1, 5)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readwrite"))
clnpNetToMediaHoldTime = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 23, 1, 6)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readwrite"))
clnpMediaToNetTable = MibTable((1, 3, 6, 1, 3, 1, 1, 24))
clnpMediaToNetEntry = MibTableRow((1, 3, 6, 1, 3, 1, 1, 24, 1)).setIndexNames((0, "CLNS-MIB", "clnpMediaToNetIfIndex"), (0, "CLNS-MIB", "clnpMediaToNetPhysAddress"))
clnpMediaToNetIfIndex = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 24, 1, 1)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readwrite"))
clnpMediaToNetAddress = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 24, 1, 2)).setColumnInitializer(MibVariable((), ClnpAddress()).setMaxAccess("readwrite"))
clnpMediaToNetPhysAddress = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 24, 1, 3)).setColumnInitializer(MibVariable((), PhysAddress()).setMaxAccess("readwrite"))
clnpMediaToNetType = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 24, 1, 4)).setColumnInitializer(MibVariable((), Integer().addConstraints(subtypes.SingleValueConstraint(4,1,3,2,)).addNamedValues(("other", 1), ("invalid", 2), ("dynamic", 3), ("static", 4), )).setMaxAccess("readwrite"))
clnpMediaToNetAge = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 24, 1, 5)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readwrite"))
clnpMediaToNetHoldTime = MibTableColumn((1, 3, 6, 1, 3, 1, 1, 24, 1, 6)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readwrite"))
clnpInOpts = MibVariable((1, 3, 6, 1, 3, 1, 1, 25), Counter()).setMaxAccess("readonly")
clnpOutOpts = MibVariable((1, 3, 6, 1, 3, 1, 1, 26), Counter()).setMaxAccess("readonly")
clnpRoutingDiscards = MibVariable((1, 3, 6, 1, 3, 1, 1, 27), Counter()).setMaxAccess("readonly")
error = MibIdentifier((1, 3, 6, 1, 3, 1, 2))
clnpInErrors = MibVariable((1, 3, 6, 1, 3, 1, 2, 1), Counter()).setMaxAccess("readonly")
clnpOutErrors = MibVariable((1, 3, 6, 1, 3, 1, 2, 2), Counter()).setMaxAccess("readonly")
clnpInErrUnspecs = MibVariable((1, 3, 6, 1, 3, 1, 2, 3), Counter()).setMaxAccess("readonly")
clnpInErrProcs = MibVariable((1, 3, 6, 1, 3, 1, 2, 4), Counter()).setMaxAccess("readonly")
clnpInErrCksums = MibVariable((1, 3, 6, 1, 3, 1, 2, 5), Counter()).setMaxAccess("readonly")
clnpInErrCongests = MibVariable((1, 3, 6, 1, 3, 1, 2, 6), Counter()).setMaxAccess("readonly")
clnpInErrHdrs = MibVariable((1, 3, 6, 1, 3, 1, 2, 7), Counter()).setMaxAccess("readonly")
clnpInErrSegs = MibVariable((1, 3, 6, 1, 3, 1, 2, 8), Counter()).setMaxAccess("readonly")
clnpInErrIncomps = MibVariable((1, 3, 6, 1, 3, 1, 2, 9), Counter()).setMaxAccess("readonly")
clnpInErrDups = MibVariable((1, 3, 6, 1, 3, 1, 2, 10), Counter()).setMaxAccess("readonly")
clnpInErrUnreachDsts = MibVariable((1, 3, 6, 1, 3, 1, 2, 11), Counter()).setMaxAccess("readonly")
clnpInErrUnknownDsts = MibVariable((1, 3, 6, 1, 3, 1, 2, 12), Counter()).setMaxAccess("readonly")
clnpInErrSRUnspecs = MibVariable((1, 3, 6, 1, 3, 1, 2, 13), Counter()).setMaxAccess("readonly")
clnpInErrSRSyntaxes = MibVariable((1, 3, 6, 1, 3, 1, 2, 14), Counter()).setMaxAccess("readonly")
clnpInErrSRUnkAddrs = MibVariable((1, 3, 6, 1, 3, 1, 2, 15), Counter()).setMaxAccess("readonly")
clnpInErrSRBadPaths = MibVariable((1, 3, 6, 1, 3, 1, 2, 16), Counter()).setMaxAccess("readonly")
clnpInErrHops = MibVariable((1, 3, 6, 1, 3, 1, 2, 17), Counter()).setMaxAccess("readonly")
clnpInErrHopReassms = MibVariable((1, 3, 6, 1, 3, 1, 2, 18), Counter()).setMaxAccess("readonly")
clnpInErrUnsOptions = MibVariable((1, 3, 6, 1, 3, 1, 2, 19), Counter()).setMaxAccess("readonly")
clnpInErrUnsVersions = MibVariable((1, 3, 6, 1, 3, 1, 2, 20), Counter()).setMaxAccess("readonly")
clnpInErrUnsSecurities = MibVariable((1, 3, 6, 1, 3, 1, 2, 21), Counter()).setMaxAccess("readonly")
clnpInErrUnsSRs = MibVariable((1, 3, 6, 1, 3, 1, 2, 22), Counter()).setMaxAccess("readonly")
clnpInErrUnsRRs = MibVariable((1, 3, 6, 1, 3, 1, 2, 23), Counter()).setMaxAccess("readonly")
clnpInErrInterferences = MibVariable((1, 3, 6, 1, 3, 1, 2, 24), Counter()).setMaxAccess("readonly")
clnpOutErrUnspecs = MibVariable((1, 3, 6, 1, 3, 1, 2, 25), Counter()).setMaxAccess("readonly")
clnpOutErrProcs = MibVariable((1, 3, 6, 1, 3, 1, 2, 26), Counter()).setMaxAccess("readonly")
clnpOutErrCksums = MibVariable((1, 3, 6, 1, 3, 1, 2, 27), Counter()).setMaxAccess("readonly")
clnpOutErrCongests = MibVariable((1, 3, 6, 1, 3, 1, 2, 28), Counter()).setMaxAccess("readonly")
clnpOutErrHdrs = MibVariable((1, 3, 6, 1, 3, 1, 2, 29), Counter()).setMaxAccess("readonly")
clnpOutErrSegs = MibVariable((1, 3, 6, 1, 3, 1, 2, 30), Counter()).setMaxAccess("readonly")
clnpOutErrIncomps = MibVariable((1, 3, 6, 1, 3, 1, 2, 31), Counter()).setMaxAccess("readonly")
clnpOutErrDups = MibVariable((1, 3, 6, 1, 3, 1, 2, 32), Counter()).setMaxAccess("readonly")
clnpOutErrUnreachDsts = MibVariable((1, 3, 6, 1, 3, 1, 2, 33), Counter()).setMaxAccess("readonly")
clnpOutErrUnknownDsts = MibVariable((1, 3, 6, 1, 3, 1, 2, 34), Counter()).setMaxAccess("readonly")
clnpOutErrSRUnspecs = MibVariable((1, 3, 6, 1, 3, 1, 2, 35), Counter()).setMaxAccess("readonly")
clnpOutErrSRSyntaxes = MibVariable((1, 3, 6, 1, 3, 1, 2, 36), Counter()).setMaxAccess("readonly")
clnpOutErrSRUnkAddrs = MibVariable((1, 3, 6, 1, 3, 1, 2, 37), Counter()).setMaxAccess("readonly")
clnpOutErrSRBadPaths = MibVariable((1, 3, 6, 1, 3, 1, 2, 38), Counter()).setMaxAccess("readonly")
clnpOutErrHops = MibVariable((1, 3, 6, 1, 3, 1, 2, 39), Counter()).setMaxAccess("readonly")
clnpOutErrHopReassms = MibVariable((1, 3, 6, 1, 3, 1, 2, 40), Counter()).setMaxAccess("readonly")
clnpOutErrUnsOptions = MibVariable((1, 3, 6, 1, 3, 1, 2, 41), Counter()).setMaxAccess("readonly")
clnpOutErrUnsVersions = MibVariable((1, 3, 6, 1, 3, 1, 2, 42), Counter()).setMaxAccess("readonly")
clnpOutErrUnsSecurities = MibVariable((1, 3, 6, 1, 3, 1, 2, 43), Counter()).setMaxAccess("readonly")
clnpOutErrUnsSRs = MibVariable((1, 3, 6, 1, 3, 1, 2, 44), Counter()).setMaxAccess("readonly")
clnpOutErrUnsRRs = MibVariable((1, 3, 6, 1, 3, 1, 2, 45), Counter()).setMaxAccess("readonly")
clnpOutErrInterferences = MibVariable((1, 3, 6, 1, 3, 1, 2, 46), Counter()).setMaxAccess("readonly")
echo = MibIdentifier((1, 3, 6, 1, 3, 1, 3))
es_is = MibIdentifier((1, 3, 6, 1, 3, 1, 4)).setLabel("es-is")
esisESHins = MibVariable((1, 3, 6, 1, 3, 1, 4, 1), Counter()).setMaxAccess("readonly")
esisESHouts = MibVariable((1, 3, 6, 1, 3, 1, 4, 2), Counter()).setMaxAccess("readonly")
esisISHins = MibVariable((1, 3, 6, 1, 3, 1, 4, 3), Counter()).setMaxAccess("readonly")
esisISHouts = MibVariable((1, 3, 6, 1, 3, 1, 4, 4), Counter()).setMaxAccess("readonly")
esisRDUins = MibVariable((1, 3, 6, 1, 3, 1, 4, 5), Counter()).setMaxAccess("readonly")
esisRDUouts = MibVariable((1, 3, 6, 1, 3, 1, 4, 6), Counter()).setMaxAccess("readonly")

# Augmentions

# Exports

# Types
mibBuilder.exportSymbols("CLNS-MIB", ClnpAddress=ClnpAddress)

# Objects
mibBuilder.exportSymbols("CLNS-MIB", clns=clns, clnp=clnp, clnpForwarding=clnpForwarding, clnpDefaultLifeTime=clnpDefaultLifeTime, clnpInReceives=clnpInReceives, clnpInHdrErrors=clnpInHdrErrors, clnpInAddrErrors=clnpInAddrErrors, clnpForwPDUs=clnpForwPDUs, clnpInUnknownNLPs=clnpInUnknownNLPs, clnpInUnknownULPs=clnpInUnknownULPs, clnpInDiscards=clnpInDiscards, clnpInDelivers=clnpInDelivers, clnpOutRequests=clnpOutRequests, clnpOutDiscards=clnpOutDiscards, clnpOutNoRoutes=clnpOutNoRoutes, clnpReasmTimeout=clnpReasmTimeout, clnpReasmReqds=clnpReasmReqds, clnpReasmOKs=clnpReasmOKs, clnpReasmFails=clnpReasmFails, clnpSegOKs=clnpSegOKs, clnpSegFails=clnpSegFails, clnpSegCreates=clnpSegCreates, clnpAddrTable=clnpAddrTable, clnpAddrEntry=clnpAddrEntry, clnpAdEntAddr=clnpAdEntAddr, clnpAdEntIfIndex=clnpAdEntIfIndex, clnpAdEntReasmMaxSize=clnpAdEntReasmMaxSize, clnpRoutingTable=clnpRoutingTable, clnpRouteEntry=clnpRouteEntry, clnpRouteDest=clnpRouteDest, clnpRouteIfIndex=clnpRouteIfIndex, clnpRouteMetric1=clnpRouteMetric1, clnpRouteMetric2=clnpRouteMetric2, clnpRouteMetric3=clnpRouteMetric3, clnpRouteMetric4=clnpRouteMetric4, clnpRouteNextHop=clnpRouteNextHop, clnpRouteType=clnpRouteType, clnpRouteProto=clnpRouteProto, clnpRouteAge=clnpRouteAge, clnpRouteMetric5=clnpRouteMetric5, clnpRouteInfo=clnpRouteInfo, clnpNetToMediaTable=clnpNetToMediaTable, clnpNetToMediaEntry=clnpNetToMediaEntry, clnpNetToMediaIfIndex=clnpNetToMediaIfIndex, clnpNetToMediaPhysAddress=clnpNetToMediaPhysAddress, clnpNetToMediaNetAddress=clnpNetToMediaNetAddress, clnpNetToMediaType=clnpNetToMediaType, clnpNetToMediaAge=clnpNetToMediaAge, clnpNetToMediaHoldTime=clnpNetToMediaHoldTime, clnpMediaToNetTable=clnpMediaToNetTable, clnpMediaToNetEntry=clnpMediaToNetEntry, clnpMediaToNetIfIndex=clnpMediaToNetIfIndex, clnpMediaToNetAddress=clnpMediaToNetAddress, clnpMediaToNetPhysAddress=clnpMediaToNetPhysAddress, clnpMediaToNetType=clnpMediaToNetType, clnpMediaToNetAge=clnpMediaToNetAge, clnpMediaToNetHoldTime=clnpMediaToNetHoldTime, clnpInOpts=clnpInOpts, clnpOutOpts=clnpOutOpts, clnpRoutingDiscards=clnpRoutingDiscards, error=error, clnpInErrors=clnpInErrors, clnpOutErrors=clnpOutErrors, clnpInErrUnspecs=clnpInErrUnspecs, clnpInErrProcs=clnpInErrProcs, clnpInErrCksums=clnpInErrCksums, clnpInErrCongests=clnpInErrCongests, clnpInErrHdrs=clnpInErrHdrs, clnpInErrSegs=clnpInErrSegs, clnpInErrIncomps=clnpInErrIncomps, clnpInErrDups=clnpInErrDups, clnpInErrUnreachDsts=clnpInErrUnreachDsts, clnpInErrUnknownDsts=clnpInErrUnknownDsts, clnpInErrSRUnspecs=clnpInErrSRUnspecs, clnpInErrSRSyntaxes=clnpInErrSRSyntaxes, clnpInErrSRUnkAddrs=clnpInErrSRUnkAddrs, clnpInErrSRBadPaths=clnpInErrSRBadPaths, clnpInErrHops=clnpInErrHops, clnpInErrHopReassms=clnpInErrHopReassms, clnpInErrUnsOptions=clnpInErrUnsOptions, clnpInErrUnsVersions=clnpInErrUnsVersions, clnpInErrUnsSecurities=clnpInErrUnsSecurities, clnpInErrUnsSRs=clnpInErrUnsSRs, clnpInErrUnsRRs=clnpInErrUnsRRs, clnpInErrInterferences=clnpInErrInterferences, clnpOutErrUnspecs=clnpOutErrUnspecs, clnpOutErrProcs=clnpOutErrProcs, clnpOutErrCksums=clnpOutErrCksums, clnpOutErrCongests=clnpOutErrCongests, clnpOutErrHdrs=clnpOutErrHdrs, clnpOutErrSegs=clnpOutErrSegs, clnpOutErrIncomps=clnpOutErrIncomps, clnpOutErrDups=clnpOutErrDups, clnpOutErrUnreachDsts=clnpOutErrUnreachDsts, clnpOutErrUnknownDsts=clnpOutErrUnknownDsts, clnpOutErrSRUnspecs=clnpOutErrSRUnspecs, clnpOutErrSRSyntaxes=clnpOutErrSRSyntaxes, clnpOutErrSRUnkAddrs=clnpOutErrSRUnkAddrs, clnpOutErrSRBadPaths=clnpOutErrSRBadPaths, clnpOutErrHops=clnpOutErrHops, clnpOutErrHopReassms=clnpOutErrHopReassms, clnpOutErrUnsOptions=clnpOutErrUnsOptions, clnpOutErrUnsVersions=clnpOutErrUnsVersions, clnpOutErrUnsSecurities=clnpOutErrUnsSecurities, clnpOutErrUnsSRs=clnpOutErrUnsSRs, clnpOutErrUnsRRs=clnpOutErrUnsRRs, clnpOutErrInterferences=clnpOutErrInterferences, echo=echo, es_is=es_is, esisESHins=esisESHins, esisESHouts=esisESHouts, esisISHins=esisISHins, esisISHouts=esisISHouts, esisRDUins=esisRDUins, esisRDUouts=esisRDUouts)

