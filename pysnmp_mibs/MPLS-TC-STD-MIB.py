# PySNMP SMI module. Autogenerated from smidump -f python MPLS-TC-STD-MIB
# by libsmi2pysnmp-0.0.3-alpha at Wed Nov 10 12:10:26 2004,
# Python version (2, 2, 1, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pysnmp.asn1 import subtypes

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( Bits, Integer32, Integer32, ModuleIdentity, MibIdentifier, TimeTicks, Unsigned32, transmission, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "TimeTicks", "Unsigned32", "transmission")
( TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention")

# Types

class MplsAtmVcIdentifier(TextualConvention, Integer32):
    subtypeConstraints = Integer32.subtypeConstraints + ( subtypes.ValueRangeConstraint(32, 65535), )
    pass

class MplsBitRate(TextualConvention, Unsigned32):
    subtypeConstraints = Unsigned32.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 4294967295L), )
    pass

class MplsBurstSize(TextualConvention, Unsigned32):
    subtypeConstraints = Unsigned32.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 4294967295L), )
    pass

class MplsExtendedTunnelId(Unsigned32):
    subtypeConstraints = Unsigned32.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 4294967295L), )
    pass

class MplsLSPID(OctetString):
    subtypeConstraints = OctetString.subtypeConstraints + ( subtypes.ValueRangeConstraint(6, 6), )
    pass

class MplsLabel(Unsigned32):
    subtypeConstraints = Unsigned32.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 4294967295L), )
    pass

class MplsLabelDistributionMethod(Integer):
    subtypeConstraints = Integer.subtypeConstraints + ( subtypes.SingleValueConstraint(1,2,), )
    namedValues = Integer.namedValues.clone(("downstreamOnDemand", 1), ("downstreamUnsolicited", 2), )
    pass

class MplsLdpIdentifier(TextualConvention, OctetString):
    subtypeConstraints = OctetString.subtypeConstraints + ( subtypes.ValueRangeConstraint(6, 6), )
    pass

class MplsLdpLabelType(Integer):
    subtypeConstraints = Integer.subtypeConstraints + ( subtypes.SingleValueConstraint(3,1,2,), )
    namedValues = Integer.namedValues.clone(("generic", 1), ("atm", 2), ("frameRelay", 3), )
    pass

class MplsLspType(Integer):
    subtypeConstraints = Integer.subtypeConstraints + ( subtypes.SingleValueConstraint(3,2,4,1,), )
    namedValues = Integer.namedValues.clone(("unknown", 1), ("terminatingLsp", 2), ("originatingLsp", 3), ("crossConnectingLsp", 4), )
    pass

class MplsLsrIdentifier(OctetString):
    subtypeConstraints = OctetString.subtypeConstraints + ( subtypes.ValueRangeConstraint(4, 4), )
    pass

class MplsOwner(Integer):
    subtypeConstraints = Integer.subtypeConstraints + ( subtypes.SingleValueConstraint(2,6,4,5,1,3,7,), )
    namedValues = Integer.namedValues.clone(("unknown", 1), ("other", 2), ("snmp", 3), ("ldp", 4), ("crldp", 5), ("rsvpTe", 6), ("policyAgent", 7), )
    pass

class MplsPathIndex(Unsigned32):
    subtypeConstraints = Unsigned32.subtypeConstraints + ( subtypes.ValueRangeConstraint(1, 4294967295L), )
    pass

class MplsPathIndexOrZero(Unsigned32):
    subtypeConstraints = Unsigned32.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 4294967295L), )
    pass

class MplsRetentionMode(Integer):
    subtypeConstraints = Integer.subtypeConstraints + ( subtypes.SingleValueConstraint(2,1,), )
    namedValues = Integer.namedValues.clone(("conservative", 1), ("liberal", 2), )
    pass

class MplsTunnelAffinity(Unsigned32):
    subtypeConstraints = Unsigned32.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 4294967295L), )
    pass

class MplsTunnelIndex(Unsigned32):
    subtypeConstraints = Unsigned32.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 65535), )
    pass

class MplsTunnelInstanceIndex(Unsigned32):
    subtypeConstraints = Unsigned32.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 4294967295L), )
    pass

class TeHopAddress(OctetString):
    subtypeConstraints = OctetString.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 32), )
    pass

class TeHopAddressAS(OctetString):
    subtypeConstraints = OctetString.subtypeConstraints + ( subtypes.ValueRangeConstraint(4, 4), )
    pass

class TeHopAddressType(Integer):
    subtypeConstraints = Integer.subtypeConstraints + ( subtypes.SingleValueConstraint(3,1,2,0,5,4,), )
    namedValues = Integer.namedValues.clone(("unknown", 0), ("ipv4", 1), ("ipv6", 2), ("asnumber", 3), ("unnum", 4), ("lspid", 5), )
    pass

class TeHopAddressUnnum(OctetString):
    subtypeConstraints = OctetString.subtypeConstraints + ( subtypes.ValueRangeConstraint(4, 4), )
    pass


# Objects

mplsStdMIB = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166))
mplsTCStdMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 166, 1))

# Augmentions

# Exports

# Types
mibBuilder.exportSymbols("MPLS-TC-STD-MIB", MplsAtmVcIdentifier=MplsAtmVcIdentifier, MplsBitRate=MplsBitRate, MplsBurstSize=MplsBurstSize, MplsExtendedTunnelId=MplsExtendedTunnelId, MplsLSPID=MplsLSPID, MplsLabel=MplsLabel, MplsLabelDistributionMethod=MplsLabelDistributionMethod, MplsLdpIdentifier=MplsLdpIdentifier, MplsLdpLabelType=MplsLdpLabelType, MplsLspType=MplsLspType, MplsLsrIdentifier=MplsLsrIdentifier, MplsOwner=MplsOwner, MplsPathIndex=MplsPathIndex, MplsPathIndexOrZero=MplsPathIndexOrZero, MplsRetentionMode=MplsRetentionMode, MplsTunnelAffinity=MplsTunnelAffinity, MplsTunnelIndex=MplsTunnelIndex, MplsTunnelInstanceIndex=MplsTunnelInstanceIndex, TeHopAddress=TeHopAddress, TeHopAddressAS=TeHopAddressAS, TeHopAddressType=TeHopAddressType, TeHopAddressUnnum=TeHopAddressUnnum)

# Objects
mibBuilder.exportSymbols("MPLS-TC-STD-MIB", mplsStdMIB=mplsStdMIB, mplsTCStdMIB=mplsTCStdMIB)

