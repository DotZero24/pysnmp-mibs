_a='ntxAlertResolvedTime'
_Z='ntxTrapName'
_Y='cstIndex'
_X='vmIndex'
_W='hypervisorIndex'
_V='citIndex'
_U='spitIndex'
_T='crtIndex'
_S='dstIndex'
_R='sstIndex'
_Q='svtIndex'
_P='accessible-for-notify'
_O='Integer32'
_N='obsolete'
_M='DisplayString'
_L='read-only'
_K='ntxAlertSourceEntityType'
_J='ntxAlertSourceEntityName'
_I='ntxAlertSourceEntityUuid'
_H='ntxAlertUuid'
_G='ntxAlertClusterName'
_F='ntxAlertSeverity'
_E='ntxAlertTitle'
_D='ntxAlertCreationTime'
_C='ntxAlertDisplayMsg'
_B='current'
_A='NUTANIX-MIB'
if'mibBuilder'not in globals():import sys;sys.stderr.write(__doc__);sys.exit(1)
Integer,OctetString,ObjectIdentifier=mibBuilder.importSymbols('ASN1','Integer','OctetString','ObjectIdentifier')
NamedValues,=mibBuilder.importSymbols('ASN1-ENUMERATION','NamedValues')
ConstraintsIntersection,ConstraintsUnion,SingleValueConstraint,ValueRangeConstraint,ValueSizeConstraint=mibBuilder.importSymbols('ASN1-REFINEMENT','ConstraintsIntersection','ConstraintsUnion','SingleValueConstraint','ValueRangeConstraint','ValueSizeConstraint')
ModuleCompliance,NotificationGroup=mibBuilder.importSymbols('SNMPv2-CONF','ModuleCompliance','NotificationGroup')
Bits,Counter32,Counter64,Gauge32,Integer32,IpAddress,ModuleIdentity,MibIdentifier,NotificationType,ObjectIdentity,MibScalar,MibTable,MibTableRow,MibTableColumn,TimeTicks,Unsigned32,enterprises,iso=mibBuilder.importSymbols('SNMPv2-SMI','Bits','Counter32','Counter64','Gauge32',_O,'IpAddress','ModuleIdentity','MibIdentifier','NotificationType','ObjectIdentity','MibScalar','MibTable','MibTableRow','MibTableColumn','TimeTicks','Unsigned32','enterprises','iso')
DisplayString,PhysAddress,TextualConvention=mibBuilder.importSymbols('SNMPv2-TC',_M,'PhysAddress','TextualConvention')
nutanix=ModuleIdentity((1,3,6,1,4,1,41263))
if mibBuilder.loadTexts:nutanix.setRevisions(('2021-11-08 18:11',))
_SoftwareVersionTable_Object=MibTable
softwareVersionTable=_SoftwareVersionTable_Object((1,3,6,1,4,1,41263,1))
if mibBuilder.loadTexts:softwareVersionTable.setStatus(_B)
_SvtEntry_Object=MibTableRow
svtEntry=_SvtEntry_Object((1,3,6,1,4,1,41263,1,1))
svtEntry.setIndexNames((0,_A,_Q))
if mibBuilder.loadTexts:svtEntry.setStatus(_B)
class _SvtIndex_Type(Integer32):subtypeSpec=Integer32.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueRangeConstraint(1,2147483647))
_SvtIndex_Type.__name__=_O
_SvtIndex_Object=MibTableColumn
svtIndex=_SvtIndex_Object((1,3,6,1,4,1,41263,1,1,1),_SvtIndex_Type())
svtIndex.setMaxAccess(_L)
if mibBuilder.loadTexts:svtIndex.setStatus(_B)
_SvtControllerVMId_Type=DisplayString
_SvtControllerVMId_Object=MibTableColumn
svtControllerVMId=_SvtControllerVMId_Object((1,3,6,1,4,1,41263,1,1,2),_SvtControllerVMId_Type())
svtControllerVMId.setMaxAccess(_L)
if mibBuilder.loadTexts:svtControllerVMId.setStatus(_B)
class _SvtNutanixBootstrap_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SvtNutanixBootstrap_Type.__name__=_M
_SvtNutanixBootstrap_Object=MibTableColumn
svtNutanixBootstrap=_SvtNutanixBootstrap_Object((1,3,6,1,4,1,41263,1,1,3),_SvtNutanixBootstrap_Type())
svtNutanixBootstrap.setMaxAccess(_L)
if mibBuilder.loadTexts:svtNutanixBootstrap.setStatus(_B)
class _SvtNutanixInfrastructure_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SvtNutanixInfrastructure_Type.__name__=_M
_SvtNutanixInfrastructure_Object=MibTableColumn
svtNutanixInfrastructure=_SvtNutanixInfrastructure_Object((1,3,6,1,4,1,41263,1,1,4),_SvtNutanixInfrastructure_Type())
svtNutanixInfrastructure.setMaxAccess(_L)
if mibBuilder.loadTexts:svtNutanixInfrastructure.setStatus(_B)
class _SvtNutanixCore_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SvtNutanixCore_Type.__name__=_M
_SvtNutanixCore_Object=MibTableColumn
svtNutanixCore=_SvtNutanixCore_Object((1,3,6,1,4,1,41263,1,1,5),_SvtNutanixCore_Type())
svtNutanixCore.setMaxAccess(_L)
if mibBuilder.loadTexts:svtNutanixCore.setStatus(_B)
class _SvtNutanixToolchain_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SvtNutanixToolchain_Type.__name__=_M
_SvtNutanixToolchain_Object=MibTableColumn
svtNutanixToolchain=_SvtNutanixToolchain_Object((1,3,6,1,4,1,41263,1,1,6),_SvtNutanixToolchain_Type())
svtNutanixToolchain.setMaxAccess(_L)
if mibBuilder.loadTexts:svtNutanixToolchain.setStatus(_B)
class _SvtNutanixServiceability_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SvtNutanixServiceability_Type.__name__=_M
_SvtNutanixServiceability_Object=MibTableColumn
svtNutanixServiceability=_SvtNutanixServiceability_Object((1,3,6,1,4,1,41263,1,1,7),_SvtNutanixServiceability_Type())
svtNutanixServiceability.setMaxAccess(_L)
if mibBuilder.loadTexts:svtNutanixServiceability.setStatus(_B)
class _SvtLinuxKernel_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SvtLinuxKernel_Type.__name__=_M
_SvtLinuxKernel_Object=MibTableColumn
svtLinuxKernel=_SvtLinuxKernel_Object((1,3,6,1,4,1,41263,1,1,8),_SvtLinuxKernel_Type())
svtLinuxKernel.setMaxAccess(_L)
if mibBuilder.loadTexts:svtLinuxKernel.setStatus(_B)
_ServiceStatusTable_Object=MibTable
serviceStatusTable=_ServiceStatusTable_Object((1,3,6,1,4,1,41263,2))
if mibBuilder.loadTexts:serviceStatusTable.setStatus(_N)
_SstEntry_Object=MibTableRow
sstEntry=_SstEntry_Object((1,3,6,1,4,1,41263,2,1))
sstEntry.setIndexNames((0,_A,_R))
if mibBuilder.loadTexts:sstEntry.setStatus(_N)
class _SstIndex_Type(Integer32):subtypeSpec=Integer32.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueRangeConstraint(1,2147483647))
_SstIndex_Type.__name__=_O
_SstIndex_Object=MibTableColumn
sstIndex=_SstIndex_Object((1,3,6,1,4,1,41263,2,1,1),_SstIndex_Type())
sstIndex.setMaxAccess(_L)
if mibBuilder.loadTexts:sstIndex.setStatus(_N)
_SstControllerVMId_Type=DisplayString
_SstControllerVMId_Object=MibTableColumn
sstControllerVMId=_SstControllerVMId_Object((1,3,6,1,4,1,41263,2,1,2),_SstControllerVMId_Type())
sstControllerVMId.setMaxAccess(_L)
if mibBuilder.loadTexts:sstControllerVMId.setStatus(_N)
class _SstControllerVMStatus_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SstControllerVMStatus_Type.__name__=_M
_SstControllerVMStatus_Object=MibTableColumn
sstControllerVMStatus=_SstControllerVMStatus_Object((1,3,6,1,4,1,41263,2,1,3),_SstControllerVMStatus_Type())
sstControllerVMStatus.setMaxAccess(_L)
if mibBuilder.loadTexts:sstControllerVMStatus.setStatus(_N)
class _SstZeusStatus_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SstZeusStatus_Type.__name__=_M
_SstZeusStatus_Object=MibTableColumn
sstZeusStatus=_SstZeusStatus_Object((1,3,6,1,4,1,41263,2,1,4),_SstZeusStatus_Type())
sstZeusStatus.setMaxAccess(_L)
if mibBuilder.loadTexts:sstZeusStatus.setStatus(_N)
class _SstScavengerStatus_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SstScavengerStatus_Type.__name__=_M
_SstScavengerStatus_Object=MibTableColumn
sstScavengerStatus=_SstScavengerStatus_Object((1,3,6,1,4,1,41263,2,1,5),_SstScavengerStatus_Type())
sstScavengerStatus.setMaxAccess(_L)
if mibBuilder.loadTexts:sstScavengerStatus.setStatus(_N)
class _SstMedusaStatus_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SstMedusaStatus_Type.__name__=_M
_SstMedusaStatus_Object=MibTableColumn
sstMedusaStatus=_SstMedusaStatus_Object((1,3,6,1,4,1,41263,2,1,6),_SstMedusaStatus_Type())
sstMedusaStatus.setMaxAccess(_L)
if mibBuilder.loadTexts:sstMedusaStatus.setStatus(_N)
class _SstPithosStatus_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SstPithosStatus_Type.__name__=_M
_SstPithosStatus_Object=MibTableColumn
sstPithosStatus=_SstPithosStatus_Object((1,3,6,1,4,1,41263,2,1,7),_SstPithosStatus_Type())
sstPithosStatus.setMaxAccess(_L)
if mibBuilder.loadTexts:sstPithosStatus.setStatus(_N)
class _SstStargateStatus_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SstStargateStatus_Type.__name__=_M
_SstStargateStatus_Object=MibTableColumn
sstStargateStatus=_SstStargateStatus_Object((1,3,6,1,4,1,41263,2,1,8),_SstStargateStatus_Type())
sstStargateStatus.setMaxAccess(_L)
if mibBuilder.loadTexts:sstStargateStatus.setStatus(_N)
class _SstChronosStatus_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SstChronosStatus_Type.__name__=_M
_SstChronosStatus_Object=MibTableColumn
sstChronosStatus=_SstChronosStatus_Object((1,3,6,1,4,1,41263,2,1,9),_SstChronosStatus_Type())
sstChronosStatus.setMaxAccess(_L)
if mibBuilder.loadTexts:sstChronosStatus.setStatus(_N)
class _SstCuratorStatus_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SstCuratorStatus_Type.__name__=_M
_SstCuratorStatus_Object=MibTableColumn
sstCuratorStatus=_SstCuratorStatus_Object((1,3,6,1,4,1,41263,2,1,10),_SstCuratorStatus_Type())
sstCuratorStatus.setMaxAccess(_L)
if mibBuilder.loadTexts:sstCuratorStatus.setStatus(_N)
class _SstPrismStatus_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SstPrismStatus_Type.__name__=_M
_SstPrismStatus_Object=MibTableColumn
sstPrismStatus=_SstPrismStatus_Object((1,3,6,1,4,1,41263,2,1,11),_SstPrismStatus_Type())
sstPrismStatus.setMaxAccess(_L)
if mibBuilder.loadTexts:sstPrismStatus.setStatus(_N)
class _SstAlertManagerStatus_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SstAlertManagerStatus_Type.__name__=_M
_SstAlertManagerStatus_Object=MibTableColumn
sstAlertManagerStatus=_SstAlertManagerStatus_Object((1,3,6,1,4,1,41263,2,1,12),_SstAlertManagerStatus_Type())
sstAlertManagerStatus.setMaxAccess(_L)
if mibBuilder.loadTexts:sstAlertManagerStatus.setStatus(_N)
class _SstStatsAggregatorStatus_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SstStatsAggregatorStatus_Type.__name__=_M
_SstStatsAggregatorStatus_Object=MibTableColumn
sstStatsAggregatorStatus=_SstStatsAggregatorStatus_Object((1,3,6,1,4,1,41263,2,1,13),_SstStatsAggregatorStatus_Type())
sstStatsAggregatorStatus.setMaxAccess(_L)
if mibBuilder.loadTexts:sstStatsAggregatorStatus.setStatus(_N)
class _SstSysStatCollectorStatus_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SstSysStatCollectorStatus_Type.__name__=_M
_SstSysStatCollectorStatus_Object=MibTableColumn
sstSysStatCollectorStatus=_SstSysStatCollectorStatus_Object((1,3,6,1,4,1,41263,2,1,14),_SstSysStatCollectorStatus_Type())
sstSysStatCollectorStatus.setMaxAccess(_L)
if mibBuilder.loadTexts:sstSysStatCollectorStatus.setStatus(_N)
_DiskStatusTable_Object=MibTable
diskStatusTable=_DiskStatusTable_Object((1,3,6,1,4,1,41263,3))
if mibBuilder.loadTexts:diskStatusTable.setStatus(_B)
_DstEntry_Object=MibTableRow
dstEntry=_DstEntry_Object((1,3,6,1,4,1,41263,3,1))
dstEntry.setIndexNames((0,_A,_S))
if mibBuilder.loadTexts:dstEntry.setStatus(_B)
class _DstIndex_Type(Integer32):subtypeSpec=Integer32.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueRangeConstraint(1,2147483647))
_DstIndex_Type.__name__=_O
_DstIndex_Object=MibTableColumn
dstIndex=_DstIndex_Object((1,3,6,1,4,1,41263,3,1,1),_DstIndex_Type())
dstIndex.setMaxAccess(_L)
if mibBuilder.loadTexts:dstIndex.setStatus(_B)
_DstDiskId_Type=DisplayString
_DstDiskId_Object=MibTableColumn
dstDiskId=_DstDiskId_Object((1,3,6,1,4,1,41263,3,1,2),_DstDiskId_Type())
dstDiskId.setMaxAccess(_L)
if mibBuilder.loadTexts:dstDiskId.setStatus(_B)
_DstControllerVMId_Type=DisplayString
_DstControllerVMId_Object=MibTableColumn
dstControllerVMId=_DstControllerVMId_Object((1,3,6,1,4,1,41263,3,1,3),_DstControllerVMId_Type())
dstControllerVMId.setMaxAccess(_L)
if mibBuilder.loadTexts:dstControllerVMId.setStatus(_B)
class _DstSerial_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_DstSerial_Type.__name__=_M
_DstSerial_Object=MibTableColumn
dstSerial=_DstSerial_Object((1,3,6,1,4,1,41263,3,1,4),_DstSerial_Type())
dstSerial.setMaxAccess(_L)
if mibBuilder.loadTexts:dstSerial.setStatus(_B)
_DstNumRawBytes_Type=Counter64
_DstNumRawBytes_Object=MibTableColumn
dstNumRawBytes=_DstNumRawBytes_Object((1,3,6,1,4,1,41263,3,1,5),_DstNumRawBytes_Type())
dstNumRawBytes.setMaxAccess(_L)
if mibBuilder.loadTexts:dstNumRawBytes.setStatus(_B)
_DstNumTotalBytes_Type=Counter64
_DstNumTotalBytes_Object=MibTableColumn
dstNumTotalBytes=_DstNumTotalBytes_Object((1,3,6,1,4,1,41263,3,1,6),_DstNumTotalBytes_Type())
dstNumTotalBytes.setMaxAccess(_L)
if mibBuilder.loadTexts:dstNumTotalBytes.setStatus(_B)
_DstNumFreeBytes_Type=Counter64
_DstNumFreeBytes_Object=MibTableColumn
dstNumFreeBytes=_DstNumFreeBytes_Object((1,3,6,1,4,1,41263,3,1,7),_DstNumFreeBytes_Type())
dstNumFreeBytes.setMaxAccess(_L)
if mibBuilder.loadTexts:dstNumFreeBytes.setStatus(_B)
_DstNumTotalInodes_Type=Counter64
_DstNumTotalInodes_Object=MibTableColumn
dstNumTotalInodes=_DstNumTotalInodes_Object((1,3,6,1,4,1,41263,3,1,8),_DstNumTotalInodes_Type())
dstNumTotalInodes.setMaxAccess(_L)
if mibBuilder.loadTexts:dstNumTotalInodes.setStatus(_N)
_DstNumFreeInodes_Type=Counter64
_DstNumFreeInodes_Object=MibTableColumn
dstNumFreeInodes=_DstNumFreeInodes_Object((1,3,6,1,4,1,41263,3,1,9),_DstNumFreeInodes_Type())
dstNumFreeInodes.setMaxAccess(_L)
if mibBuilder.loadTexts:dstNumFreeInodes.setStatus(_N)
_DstAverageLatency_Type=Counter64
_DstAverageLatency_Object=MibTableColumn
dstAverageLatency=_DstAverageLatency_Object((1,3,6,1,4,1,41263,3,1,10),_DstAverageLatency_Type())
dstAverageLatency.setMaxAccess(_L)
if mibBuilder.loadTexts:dstAverageLatency.setStatus(_B)
_DstIOBandwidth_Type=Counter64
_DstIOBandwidth_Object=MibTableColumn
dstIOBandwidth=_DstIOBandwidth_Object((1,3,6,1,4,1,41263,3,1,11),_DstIOBandwidth_Type())
dstIOBandwidth.setMaxAccess(_L)
if mibBuilder.loadTexts:dstIOBandwidth.setStatus(_B)
_DstNumberIops_Type=Counter64
_DstNumberIops_Object=MibTableColumn
dstNumberIops=_DstNumberIops_Object((1,3,6,1,4,1,41263,3,1,12),_DstNumberIops_Type())
dstNumberIops.setMaxAccess(_L)
if mibBuilder.loadTexts:dstNumberIops.setStatus(_B)
class _DstState_Type(Integer32):subtypeSpec=Integer32.subtypeSpec;subtypeSpec+=ConstraintsUnion(SingleValueConstraint(*(1,2)));namedValues=NamedValues(*(('online',1),('offline',2)))
_DstState_Type.__name__=_O
_DstState_Object=MibTableColumn
dstState=_DstState_Object((1,3,6,1,4,1,41263,3,1,13),_DstState_Type())
dstState.setMaxAccess(_L)
if mibBuilder.loadTexts:dstState.setStatus(_B)
_ControllerVMResourceTable_Object=MibTable
controllerVMResourceTable=_ControllerVMResourceTable_Object((1,3,6,1,4,1,41263,4))
if mibBuilder.loadTexts:controllerVMResourceTable.setStatus(_B)
_CrtEntry_Object=MibTableRow
crtEntry=_CrtEntry_Object((1,3,6,1,4,1,41263,4,1))
crtEntry.setIndexNames((0,_A,_T))
if mibBuilder.loadTexts:crtEntry.setStatus(_B)
class _CrtIndex_Type(Integer32):subtypeSpec=Integer32.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueRangeConstraint(1,2147483647))
_CrtIndex_Type.__name__=_O
_CrtIndex_Object=MibTableColumn
crtIndex=_CrtIndex_Object((1,3,6,1,4,1,41263,4,1,1),_CrtIndex_Type())
crtIndex.setMaxAccess(_L)
if mibBuilder.loadTexts:crtIndex.setStatus(_B)
_CrtControllerVMId_Type=DisplayString
_CrtControllerVMId_Object=MibTableColumn
crtControllerVMId=_CrtControllerVMId_Object((1,3,6,1,4,1,41263,4,1,2),_CrtControllerVMId_Type())
crtControllerVMId.setMaxAccess(_L)
if mibBuilder.loadTexts:crtControllerVMId.setStatus(_B)
_CrtMemory_Type=Counter64
_CrtMemory_Object=MibTableColumn
crtMemory=_CrtMemory_Object((1,3,6,1,4,1,41263,4,1,3),_CrtMemory_Type())
crtMemory.setMaxAccess(_L)
if mibBuilder.loadTexts:crtMemory.setStatus(_B)
_CrtNumCpus_Type=Integer32
_CrtNumCpus_Object=MibTableColumn
crtNumCpus=_CrtNumCpus_Object((1,3,6,1,4,1,41263,4,1,4),_CrtNumCpus_Type())
crtNumCpus.setMaxAccess(_L)
if mibBuilder.loadTexts:crtNumCpus.setStatus(_B)
class _CrtName_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_CrtName_Type.__name__=_M
_CrtName_Object=MibTableColumn
crtName=_CrtName_Object((1,3,6,1,4,1,41263,4,1,5),_CrtName_Type())
crtName.setMaxAccess(_L)
if mibBuilder.loadTexts:crtName.setStatus(_B)
_StoragePoolInformationTable_Object=MibTable
storagePoolInformationTable=_StoragePoolInformationTable_Object((1,3,6,1,4,1,41263,7))
if mibBuilder.loadTexts:storagePoolInformationTable.setStatus(_B)
_SpitEntry_Object=MibTableRow
spitEntry=_SpitEntry_Object((1,3,6,1,4,1,41263,7,1))
spitEntry.setIndexNames((0,_A,_U))
if mibBuilder.loadTexts:spitEntry.setStatus(_B)
class _SpitIndex_Type(Integer32):subtypeSpec=Integer32.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueRangeConstraint(1,2147483647))
_SpitIndex_Type.__name__=_O
_SpitIndex_Object=MibTableColumn
spitIndex=_SpitIndex_Object((1,3,6,1,4,1,41263,7,1,1),_SpitIndex_Type())
spitIndex.setMaxAccess(_L)
if mibBuilder.loadTexts:spitIndex.setStatus(_B)
_SpitStoragePoolId_Type=DisplayString
_SpitStoragePoolId_Object=MibTableColumn
spitStoragePoolId=_SpitStoragePoolId_Object((1,3,6,1,4,1,41263,7,1,2),_SpitStoragePoolId_Type())
spitStoragePoolId.setMaxAccess(_L)
if mibBuilder.loadTexts:spitStoragePoolId.setStatus(_B)
class _SpitStoragePoolName_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_SpitStoragePoolName_Type.__name__=_M
_SpitStoragePoolName_Object=MibTableColumn
spitStoragePoolName=_SpitStoragePoolName_Object((1,3,6,1,4,1,41263,7,1,3),_SpitStoragePoolName_Type())
spitStoragePoolName.setMaxAccess(_L)
if mibBuilder.loadTexts:spitStoragePoolName.setStatus(_B)
_SpitTotalCapacity_Type=Counter64
_SpitTotalCapacity_Object=MibTableColumn
spitTotalCapacity=_SpitTotalCapacity_Object((1,3,6,1,4,1,41263,7,1,4),_SpitTotalCapacity_Type())
spitTotalCapacity.setMaxAccess(_L)
if mibBuilder.loadTexts:spitTotalCapacity.setStatus(_B)
_SpitUsedCapacity_Type=Counter64
_SpitUsedCapacity_Object=MibTableColumn
spitUsedCapacity=_SpitUsedCapacity_Object((1,3,6,1,4,1,41263,7,1,5),_SpitUsedCapacity_Type())
spitUsedCapacity.setMaxAccess(_L)
if mibBuilder.loadTexts:spitUsedCapacity.setStatus(_B)
_SpitIOPerSecond_Type=Integer32
_SpitIOPerSecond_Object=MibTableColumn
spitIOPerSecond=_SpitIOPerSecond_Object((1,3,6,1,4,1,41263,7,1,6),_SpitIOPerSecond_Type())
spitIOPerSecond.setMaxAccess(_L)
if mibBuilder.loadTexts:spitIOPerSecond.setStatus(_B)
_SpitAvgLatencyUsecs_Type=Counter64
_SpitAvgLatencyUsecs_Object=MibTableColumn
spitAvgLatencyUsecs=_SpitAvgLatencyUsecs_Object((1,3,6,1,4,1,41263,7,1,7),_SpitAvgLatencyUsecs_Type())
spitAvgLatencyUsecs.setMaxAccess(_L)
if mibBuilder.loadTexts:spitAvgLatencyUsecs.setStatus(_B)
_SpitIOBandwidth_Type=Counter64
_SpitIOBandwidth_Object=MibTableColumn
spitIOBandwidth=_SpitIOBandwidth_Object((1,3,6,1,4,1,41263,7,1,8),_SpitIOBandwidth_Type())
spitIOBandwidth.setMaxAccess(_L)
if mibBuilder.loadTexts:spitIOBandwidth.setStatus(_B)
_ContainerInformationTable_Object=MibTable
containerInformationTable=_ContainerInformationTable_Object((1,3,6,1,4,1,41263,8))
if mibBuilder.loadTexts:containerInformationTable.setStatus(_B)
_CitEntry_Object=MibTableRow
citEntry=_CitEntry_Object((1,3,6,1,4,1,41263,8,1))
citEntry.setIndexNames((0,_A,_V))
if mibBuilder.loadTexts:citEntry.setStatus(_B)
class _CitIndex_Type(Integer32):subtypeSpec=Integer32.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueRangeConstraint(1,2147483647))
_CitIndex_Type.__name__=_O
_CitIndex_Object=MibTableColumn
citIndex=_CitIndex_Object((1,3,6,1,4,1,41263,8,1,1),_CitIndex_Type())
citIndex.setMaxAccess(_L)
if mibBuilder.loadTexts:citIndex.setStatus(_B)
_CitContainerId_Type=DisplayString
_CitContainerId_Object=MibTableColumn
citContainerId=_CitContainerId_Object((1,3,6,1,4,1,41263,8,1,2),_CitContainerId_Type())
citContainerId.setMaxAccess(_L)
if mibBuilder.loadTexts:citContainerId.setStatus(_B)
class _CitContainerName_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_CitContainerName_Type.__name__=_M
_CitContainerName_Object=MibTableColumn
citContainerName=_CitContainerName_Object((1,3,6,1,4,1,41263,8,1,3),_CitContainerName_Type())
citContainerName.setMaxAccess(_L)
if mibBuilder.loadTexts:citContainerName.setStatus(_B)
_CitTotalCapacity_Type=Counter64
_CitTotalCapacity_Object=MibTableColumn
citTotalCapacity=_CitTotalCapacity_Object((1,3,6,1,4,1,41263,8,1,4),_CitTotalCapacity_Type())
citTotalCapacity.setMaxAccess(_L)
if mibBuilder.loadTexts:citTotalCapacity.setStatus(_B)
_CitUsedCapacity_Type=Counter64
_CitUsedCapacity_Object=MibTableColumn
citUsedCapacity=_CitUsedCapacity_Object((1,3,6,1,4,1,41263,8,1,5),_CitUsedCapacity_Type())
citUsedCapacity.setMaxAccess(_L)
if mibBuilder.loadTexts:citUsedCapacity.setStatus(_B)
_CitIOPerSecond_Type=Integer32
_CitIOPerSecond_Object=MibTableColumn
citIOPerSecond=_CitIOPerSecond_Object((1,3,6,1,4,1,41263,8,1,6),_CitIOPerSecond_Type())
citIOPerSecond.setMaxAccess(_L)
if mibBuilder.loadTexts:citIOPerSecond.setStatus(_B)
_CitAvgLatencyUsecs_Type=Counter64
_CitAvgLatencyUsecs_Object=MibTableColumn
citAvgLatencyUsecs=_CitAvgLatencyUsecs_Object((1,3,6,1,4,1,41263,8,1,7),_CitAvgLatencyUsecs_Type())
citAvgLatencyUsecs.setMaxAccess(_L)
if mibBuilder.loadTexts:citAvgLatencyUsecs.setStatus(_B)
_CitIOBandwidth_Type=Counter64
_CitIOBandwidth_Object=MibTableColumn
citIOBandwidth=_CitIOBandwidth_Object((1,3,6,1,4,1,41263,8,1,8),_CitIOBandwidth_Type())
citIOBandwidth.setMaxAccess(_L)
if mibBuilder.loadTexts:citIOBandwidth.setStatus(_B)
_HypervisorInformationTable_Object=MibTable
hypervisorInformationTable=_HypervisorInformationTable_Object((1,3,6,1,4,1,41263,9))
if mibBuilder.loadTexts:hypervisorInformationTable.setStatus(_B)
_HypervisorEntry_Object=MibTableRow
hypervisorEntry=_HypervisorEntry_Object((1,3,6,1,4,1,41263,9,1))
hypervisorEntry.setIndexNames((0,_A,_W))
if mibBuilder.loadTexts:hypervisorEntry.setStatus(_B)
class _HypervisorIndex_Type(Integer32):subtypeSpec=Integer32.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueRangeConstraint(1,2147483647))
_HypervisorIndex_Type.__name__=_O
_HypervisorIndex_Object=MibTableColumn
hypervisorIndex=_HypervisorIndex_Object((1,3,6,1,4,1,41263,9,1,1),_HypervisorIndex_Type())
hypervisorIndex.setMaxAccess(_L)
if mibBuilder.loadTexts:hypervisorIndex.setStatus(_B)
_HypervisorId_Type=DisplayString
_HypervisorId_Object=MibTableColumn
hypervisorId=_HypervisorId_Object((1,3,6,1,4,1,41263,9,1,2),_HypervisorId_Type())
hypervisorId.setMaxAccess(_L)
if mibBuilder.loadTexts:hypervisorId.setStatus(_B)
class _HypervisorName_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_HypervisorName_Type.__name__=_M
_HypervisorName_Object=MibTableColumn
hypervisorName=_HypervisorName_Object((1,3,6,1,4,1,41263,9,1,3),_HypervisorName_Type())
hypervisorName.setMaxAccess(_L)
if mibBuilder.loadTexts:hypervisorName.setStatus(_B)
_HypervisorVmCount_Type=Unsigned32
_HypervisorVmCount_Object=MibTableColumn
hypervisorVmCount=_HypervisorVmCount_Object((1,3,6,1,4,1,41263,9,1,4),_HypervisorVmCount_Type())
hypervisorVmCount.setMaxAccess(_L)
if mibBuilder.loadTexts:hypervisorVmCount.setStatus(_B)
_HypervisorCpuCount_Type=Unsigned32
_HypervisorCpuCount_Object=MibTableColumn
hypervisorCpuCount=_HypervisorCpuCount_Object((1,3,6,1,4,1,41263,9,1,5),_HypervisorCpuCount_Type())
hypervisorCpuCount.setMaxAccess(_L)
if mibBuilder.loadTexts:hypervisorCpuCount.setStatus(_B)
_HypervisorCpuUsagePercent_Type=Unsigned32
_HypervisorCpuUsagePercent_Object=MibTableColumn
hypervisorCpuUsagePercent=_HypervisorCpuUsagePercent_Object((1,3,6,1,4,1,41263,9,1,6),_HypervisorCpuUsagePercent_Type())
hypervisorCpuUsagePercent.setMaxAccess(_L)
if mibBuilder.loadTexts:hypervisorCpuUsagePercent.setStatus(_B)
_HypervisorMemory_Type=Counter64
_HypervisorMemory_Object=MibTableColumn
hypervisorMemory=_HypervisorMemory_Object((1,3,6,1,4,1,41263,9,1,7),_HypervisorMemory_Type())
hypervisorMemory.setMaxAccess(_L)
if mibBuilder.loadTexts:hypervisorMemory.setStatus(_B)
_HypervisorMemoryUsagePercent_Type=Unsigned32
_HypervisorMemoryUsagePercent_Object=MibTableColumn
hypervisorMemoryUsagePercent=_HypervisorMemoryUsagePercent_Object((1,3,6,1,4,1,41263,9,1,8),_HypervisorMemoryUsagePercent_Type())
hypervisorMemoryUsagePercent.setMaxAccess(_L)
if mibBuilder.loadTexts:hypervisorMemoryUsagePercent.setStatus(_B)
_HypervisorReadIOPerSecond_Type=Unsigned32
_HypervisorReadIOPerSecond_Object=MibTableColumn
hypervisorReadIOPerSecond=_HypervisorReadIOPerSecond_Object((1,3,6,1,4,1,41263,9,1,9),_HypervisorReadIOPerSecond_Type())
hypervisorReadIOPerSecond.setMaxAccess(_L)
if mibBuilder.loadTexts:hypervisorReadIOPerSecond.setStatus(_B)
_HypervisorWriteIOPerSecond_Type=Unsigned32
_HypervisorWriteIOPerSecond_Object=MibTableColumn
hypervisorWriteIOPerSecond=_HypervisorWriteIOPerSecond_Object((1,3,6,1,4,1,41263,9,1,10),_HypervisorWriteIOPerSecond_Type())
hypervisorWriteIOPerSecond.setMaxAccess(_L)
if mibBuilder.loadTexts:hypervisorWriteIOPerSecond.setStatus(_B)
_HypervisorAverageLatency_Type=Counter64
_HypervisorAverageLatency_Object=MibTableColumn
hypervisorAverageLatency=_HypervisorAverageLatency_Object((1,3,6,1,4,1,41263,9,1,11),_HypervisorAverageLatency_Type())
hypervisorAverageLatency.setMaxAccess(_L)
if mibBuilder.loadTexts:hypervisorAverageLatency.setStatus(_B)
_HypervisorIOBandwidth_Type=Counter64
_HypervisorIOBandwidth_Object=MibTableColumn
hypervisorIOBandwidth=_HypervisorIOBandwidth_Object((1,3,6,1,4,1,41263,9,1,12),_HypervisorIOBandwidth_Type())
hypervisorIOBandwidth.setMaxAccess(_L)
if mibBuilder.loadTexts:hypervisorIOBandwidth.setStatus(_B)
_HypervisorRxBytes_Type=Counter64
_HypervisorRxBytes_Object=MibTableColumn
hypervisorRxBytes=_HypervisorRxBytes_Object((1,3,6,1,4,1,41263,9,1,13),_HypervisorRxBytes_Type())
hypervisorRxBytes.setMaxAccess(_L)
if mibBuilder.loadTexts:hypervisorRxBytes.setStatus(_B)
_HypervisorTxBytes_Type=Counter64
_HypervisorTxBytes_Object=MibTableColumn
hypervisorTxBytes=_HypervisorTxBytes_Object((1,3,6,1,4,1,41263,9,1,14),_HypervisorTxBytes_Type())
hypervisorTxBytes.setMaxAccess(_L)
if mibBuilder.loadTexts:hypervisorTxBytes.setStatus(_B)
_HypervisorRxDropCount_Type=Counter64
_HypervisorRxDropCount_Object=MibTableColumn
hypervisorRxDropCount=_HypervisorRxDropCount_Object((1,3,6,1,4,1,41263,9,1,15),_HypervisorRxDropCount_Type())
hypervisorRxDropCount.setMaxAccess(_L)
if mibBuilder.loadTexts:hypervisorRxDropCount.setStatus(_B)
_HypervisorTxDropCount_Type=Counter64
_HypervisorTxDropCount_Object=MibTableColumn
hypervisorTxDropCount=_HypervisorTxDropCount_Object((1,3,6,1,4,1,41263,9,1,16),_HypervisorTxDropCount_Type())
hypervisorTxDropCount.setMaxAccess(_L)
if mibBuilder.loadTexts:hypervisorTxDropCount.setStatus(_B)
_VmInformationTable_Object=MibTable
vmInformationTable=_VmInformationTable_Object((1,3,6,1,4,1,41263,10))
if mibBuilder.loadTexts:vmInformationTable.setStatus(_B)
_VmEntry_Object=MibTableRow
vmEntry=_VmEntry_Object((1,3,6,1,4,1,41263,10,1))
vmEntry.setIndexNames((0,_A,_X))
if mibBuilder.loadTexts:vmEntry.setStatus(_B)
class _VmIndex_Type(Integer32):subtypeSpec=Integer32.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueRangeConstraint(1,2147483647))
_VmIndex_Type.__name__=_O
_VmIndex_Object=MibTableColumn
vmIndex=_VmIndex_Object((1,3,6,1,4,1,41263,10,1,1),_VmIndex_Type())
vmIndex.setMaxAccess(_L)
if mibBuilder.loadTexts:vmIndex.setStatus(_B)
class _VmId_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_VmId_Type.__name__=_M
_VmId_Object=MibTableColumn
vmId=_VmId_Object((1,3,6,1,4,1,41263,10,1,2),_VmId_Type())
vmId.setMaxAccess(_L)
if mibBuilder.loadTexts:vmId.setStatus(_B)
class _VmName_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_VmName_Type.__name__=_M
_VmName_Object=MibTableColumn
vmName=_VmName_Object((1,3,6,1,4,1,41263,10,1,3),_VmName_Type())
vmName.setMaxAccess(_L)
if mibBuilder.loadTexts:vmName.setStatus(_B)
_VmHypervisorId_Type=DisplayString
_VmHypervisorId_Object=MibTableColumn
vmHypervisorId=_VmHypervisorId_Object((1,3,6,1,4,1,41263,10,1,4),_VmHypervisorId_Type())
vmHypervisorId.setMaxAccess(_L)
if mibBuilder.loadTexts:vmHypervisorId.setStatus(_B)
_VmPowerState_Type=DisplayString
_VmPowerState_Object=MibTableColumn
vmPowerState=_VmPowerState_Object((1,3,6,1,4,1,41263,10,1,5),_VmPowerState_Type())
vmPowerState.setMaxAccess(_L)
if mibBuilder.loadTexts:vmPowerState.setStatus(_B)
_VmCpuCount_Type=Unsigned32
_VmCpuCount_Object=MibTableColumn
vmCpuCount=_VmCpuCount_Object((1,3,6,1,4,1,41263,10,1,6),_VmCpuCount_Type())
vmCpuCount.setMaxAccess(_L)
if mibBuilder.loadTexts:vmCpuCount.setStatus(_B)
_VmCpuUsagePercent_Type=Unsigned32
_VmCpuUsagePercent_Object=MibTableColumn
vmCpuUsagePercent=_VmCpuUsagePercent_Object((1,3,6,1,4,1,41263,10,1,7),_VmCpuUsagePercent_Type())
vmCpuUsagePercent.setMaxAccess(_L)
if mibBuilder.loadTexts:vmCpuUsagePercent.setStatus(_B)
_VmMemory_Type=Counter64
_VmMemory_Object=MibTableColumn
vmMemory=_VmMemory_Object((1,3,6,1,4,1,41263,10,1,8),_VmMemory_Type())
vmMemory.setMaxAccess(_L)
if mibBuilder.loadTexts:vmMemory.setStatus(_B)
_VmMemoryUsagePercent_Type=Unsigned32
_VmMemoryUsagePercent_Object=MibTableColumn
vmMemoryUsagePercent=_VmMemoryUsagePercent_Object((1,3,6,1,4,1,41263,10,1,9),_VmMemoryUsagePercent_Type())
vmMemoryUsagePercent.setMaxAccess(_L)
if mibBuilder.loadTexts:vmMemoryUsagePercent.setStatus(_B)
_VmReadIOPerSecond_Type=Unsigned32
_VmReadIOPerSecond_Object=MibTableColumn
vmReadIOPerSecond=_VmReadIOPerSecond_Object((1,3,6,1,4,1,41263,10,1,10),_VmReadIOPerSecond_Type())
vmReadIOPerSecond.setMaxAccess(_L)
if mibBuilder.loadTexts:vmReadIOPerSecond.setStatus(_B)
_VmWriteIOPerSecond_Type=Unsigned32
_VmWriteIOPerSecond_Object=MibTableColumn
vmWriteIOPerSecond=_VmWriteIOPerSecond_Object((1,3,6,1,4,1,41263,10,1,11),_VmWriteIOPerSecond_Type())
vmWriteIOPerSecond.setMaxAccess(_L)
if mibBuilder.loadTexts:vmWriteIOPerSecond.setStatus(_B)
_VmAverageLatency_Type=Counter64
_VmAverageLatency_Object=MibTableColumn
vmAverageLatency=_VmAverageLatency_Object((1,3,6,1,4,1,41263,10,1,12),_VmAverageLatency_Type())
vmAverageLatency.setMaxAccess(_L)
if mibBuilder.loadTexts:vmAverageLatency.setStatus(_B)
_VmIOBandwidth_Type=Counter64
_VmIOBandwidth_Object=MibTableColumn
vmIOBandwidth=_VmIOBandwidth_Object((1,3,6,1,4,1,41263,10,1,13),_VmIOBandwidth_Type())
vmIOBandwidth.setMaxAccess(_L)
if mibBuilder.loadTexts:vmIOBandwidth.setStatus(_B)
_VmRxBytes_Type=Counter64
_VmRxBytes_Object=MibTableColumn
vmRxBytes=_VmRxBytes_Object((1,3,6,1,4,1,41263,10,1,14),_VmRxBytes_Type())
vmRxBytes.setMaxAccess(_L)
if mibBuilder.loadTexts:vmRxBytes.setStatus(_B)
_VmTxBytes_Type=Counter64
_VmTxBytes_Object=MibTableColumn
vmTxBytes=_VmTxBytes_Object((1,3,6,1,4,1,41263,10,1,15),_VmTxBytes_Type())
vmTxBytes.setMaxAccess(_L)
if mibBuilder.loadTexts:vmTxBytes.setStatus(_B)
_VmRxDropCount_Type=Counter64
_VmRxDropCount_Object=MibTableColumn
vmRxDropCount=_VmRxDropCount_Object((1,3,6,1,4,1,41263,10,1,16),_VmRxDropCount_Type())
vmRxDropCount.setMaxAccess(_L)
if mibBuilder.loadTexts:vmRxDropCount.setStatus(_B)
_VmTxDropCount_Type=Counter64
_VmTxDropCount_Object=MibTableColumn
vmTxDropCount=_VmTxDropCount_Object((1,3,6,1,4,1,41263,10,1,17),_VmTxDropCount_Type())
vmTxDropCount.setMaxAccess(_L)
if mibBuilder.loadTexts:vmTxDropCount.setStatus(_B)
_ControllerStatusTable_Object=MibTable
controllerStatusTable=_ControllerStatusTable_Object((1,3,6,1,4,1,41263,11))
if mibBuilder.loadTexts:controllerStatusTable.setStatus(_B)
_CstEntry_Object=MibTableRow
cstEntry=_CstEntry_Object((1,3,6,1,4,1,41263,11,1))
cstEntry.setIndexNames((0,_A,_Y))
if mibBuilder.loadTexts:cstEntry.setStatus(_B)
class _CstIndex_Type(Integer32):subtypeSpec=Integer32.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueRangeConstraint(1,2147483647))
_CstIndex_Type.__name__=_O
_CstIndex_Object=MibTableColumn
cstIndex=_CstIndex_Object((1,3,6,1,4,1,41263,11,1,1),_CstIndex_Type())
cstIndex.setMaxAccess(_L)
if mibBuilder.loadTexts:cstIndex.setStatus(_B)
_CstControllerVMId_Type=DisplayString
_CstControllerVMId_Object=MibTableColumn
cstControllerVMId=_CstControllerVMId_Object((1,3,6,1,4,1,41263,11,1,2),_CstControllerVMId_Type())
cstControllerVMId.setMaxAccess(_L)
if mibBuilder.loadTexts:cstControllerVMId.setStatus(_B)
class _CstControllerVMStatus_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_CstControllerVMStatus_Type.__name__=_M
_CstControllerVMStatus_Object=MibTableColumn
cstControllerVMStatus=_CstControllerVMStatus_Object((1,3,6,1,4,1,41263,11,1,3),_CstControllerVMStatus_Type())
cstControllerVMStatus.setMaxAccess(_L)
if mibBuilder.loadTexts:cstControllerVMStatus.setStatus(_B)
class _CstDataServiceStatus_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_CstDataServiceStatus_Type.__name__=_M
_CstDataServiceStatus_Object=MibTableColumn
cstDataServiceStatus=_CstDataServiceStatus_Object((1,3,6,1,4,1,41263,11,1,4),_CstDataServiceStatus_Type())
cstDataServiceStatus.setMaxAccess(_L)
if mibBuilder.loadTexts:cstDataServiceStatus.setStatus(_B)
class _CstMetadataServiceStatus_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_CstMetadataServiceStatus_Type.__name__=_M
_CstMetadataServiceStatus_Object=MibTableColumn
cstMetadataServiceStatus=_CstMetadataServiceStatus_Object((1,3,6,1,4,1,41263,11,1,5),_CstMetadataServiceStatus_Type())
cstMetadataServiceStatus.setMaxAccess(_L)
if mibBuilder.loadTexts:cstMetadataServiceStatus.setStatus(_B)
class _ClusterName_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_ClusterName_Type.__name__=_M
_ClusterName_Object=MibScalar
clusterName=_ClusterName_Object((1,3,6,1,4,1,41263,501),_ClusterName_Type())
clusterName.setMaxAccess(_L)
if mibBuilder.loadTexts:clusterName.setStatus(_B)
class _ClusterVersion_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_ClusterVersion_Type.__name__=_M
_ClusterVersion_Object=MibScalar
clusterVersion=_ClusterVersion_Object((1,3,6,1,4,1,41263,502),_ClusterVersion_Type())
clusterVersion.setMaxAccess(_L)
if mibBuilder.loadTexts:clusterVersion.setStatus(_B)
class _ClusterStatus_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,255))
_ClusterStatus_Type.__name__=_M
_ClusterStatus_Object=MibScalar
clusterStatus=_ClusterStatus_Object((1,3,6,1,4,1,41263,503),_ClusterStatus_Type())
clusterStatus.setMaxAccess(_L)
if mibBuilder.loadTexts:clusterStatus.setStatus(_B)
_ClusterTotalStorageCapacity_Type=Counter64
_ClusterTotalStorageCapacity_Object=MibScalar
clusterTotalStorageCapacity=_ClusterTotalStorageCapacity_Object((1,3,6,1,4,1,41263,504),_ClusterTotalStorageCapacity_Type())
clusterTotalStorageCapacity.setMaxAccess(_L)
if mibBuilder.loadTexts:clusterTotalStorageCapacity.setStatus(_B)
_ClusterUsedStorageCapacity_Type=Counter64
_ClusterUsedStorageCapacity_Object=MibScalar
clusterUsedStorageCapacity=_ClusterUsedStorageCapacity_Object((1,3,6,1,4,1,41263,505),_ClusterUsedStorageCapacity_Type())
clusterUsedStorageCapacity.setMaxAccess(_L)
if mibBuilder.loadTexts:clusterUsedStorageCapacity.setStatus(_B)
_ClusterIops_Type=Counter64
_ClusterIops_Object=MibScalar
clusterIops=_ClusterIops_Object((1,3,6,1,4,1,41263,506),_ClusterIops_Type())
clusterIops.setMaxAccess(_L)
if mibBuilder.loadTexts:clusterIops.setStatus(_B)
_ClusterLatency_Type=Counter64
_ClusterLatency_Object=MibScalar
clusterLatency=_ClusterLatency_Object((1,3,6,1,4,1,41263,507),_ClusterLatency_Type())
clusterLatency.setMaxAccess(_L)
if mibBuilder.loadTexts:clusterLatency.setStatus(_B)
_ClusterIOBandwidth_Type=Counter64
_ClusterIOBandwidth_Object=MibScalar
clusterIOBandwidth=_ClusterIOBandwidth_Object((1,3,6,1,4,1,41263,508),_ClusterIOBandwidth_Type())
clusterIOBandwidth.setMaxAccess(_L)
if mibBuilder.loadTexts:clusterIOBandwidth.setStatus(_B)
_NtxTrapName_Type=DisplayString
_NtxTrapName_Object=MibScalar
ntxTrapName=_NtxTrapName_Object((1,3,6,1,4,1,41263,992),_NtxTrapName_Type())
ntxTrapName.setMaxAccess(_P)
if mibBuilder.loadTexts:ntxTrapName.setStatus(_B)
_NtxAlert_ObjectIdentity=ObjectIdentity
ntxAlert=_NtxAlert_ObjectIdentity((1,3,6,1,4,1,41263,999))
_NtxAlertCreationTime_Type=Counter64
_NtxAlertCreationTime_Object=MibScalar
ntxAlertCreationTime=_NtxAlertCreationTime_Object((1,3,6,1,4,1,41263,999,1),_NtxAlertCreationTime_Type())
ntxAlertCreationTime.setMaxAccess(_L)
if mibBuilder.loadTexts:ntxAlertCreationTime.setStatus(_B)
class _NtxAlertDisplayMsg_Type(DisplayString):subtypeSpec=DisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(0,1024))
_NtxAlertDisplayMsg_Type.__name__=_M
_NtxAlertDisplayMsg_Object=MibScalar
ntxAlertDisplayMsg=_NtxAlertDisplayMsg_Object((1,3,6,1,4,1,41263,999,2),_NtxAlertDisplayMsg_Type())
ntxAlertDisplayMsg.setMaxAccess(_L)
if mibBuilder.loadTexts:ntxAlertDisplayMsg.setStatus(_B)
_NtxAlertTitle_Type=DisplayString
_NtxAlertTitle_Object=MibScalar
ntxAlertTitle=_NtxAlertTitle_Object((1,3,6,1,4,1,41263,999,3),_NtxAlertTitle_Type())
ntxAlertTitle.setMaxAccess(_L)
if mibBuilder.loadTexts:ntxAlertTitle.setStatus(_B)
class _NtxAlertSeverity_Type(Integer32):subtypeSpec=Integer32.subtypeSpec;subtypeSpec+=ConstraintsUnion(SingleValueConstraint(*(1,2,3,4)));namedValues=NamedValues(*(('informational',1),('warning',2),('critical',3),('audit',4)))
_NtxAlertSeverity_Type.__name__=_O
_NtxAlertSeverity_Object=MibScalar
ntxAlertSeverity=_NtxAlertSeverity_Object((1,3,6,1,4,1,41263,999,4),_NtxAlertSeverity_Type())
ntxAlertSeverity.setMaxAccess(_L)
if mibBuilder.loadTexts:ntxAlertSeverity.setStatus(_B)
_NtxAlertUuid_Type=DisplayString
_NtxAlertUuid_Object=MibScalar
ntxAlertUuid=_NtxAlertUuid_Object((1,3,6,1,4,1,41263,999,5),_NtxAlertUuid_Type())
ntxAlertUuid.setMaxAccess(_P)
if mibBuilder.loadTexts:ntxAlertUuid.setStatus(_B)
_NtxAlertResolvedTime_Type=Counter64
_NtxAlertResolvedTime_Object=MibScalar
ntxAlertResolvedTime=_NtxAlertResolvedTime_Object((1,3,6,1,4,1,41263,999,6),_NtxAlertResolvedTime_Type())
ntxAlertResolvedTime.setMaxAccess(_P)
if mibBuilder.loadTexts:ntxAlertResolvedTime.setStatus(_B)
_NtxAlertClusterName_Type=DisplayString
_NtxAlertClusterName_Object=MibScalar
ntxAlertClusterName=_NtxAlertClusterName_Object((1,3,6,1,4,1,41263,999,7),_NtxAlertClusterName_Type())
ntxAlertClusterName.setMaxAccess(_L)
if mibBuilder.loadTexts:ntxAlertClusterName.setStatus(_B)
_NtxAlertSourceEntityUuid_Type=DisplayString
_NtxAlertSourceEntityUuid_Object=MibScalar
ntxAlertSourceEntityUuid=_NtxAlertSourceEntityUuid_Object((1,3,6,1,4,1,41263,999,8),_NtxAlertSourceEntityUuid_Type())
ntxAlertSourceEntityUuid.setMaxAccess(_L)
if mibBuilder.loadTexts:ntxAlertSourceEntityUuid.setStatus(_B)
_NtxAlertSourceEntityName_Type=DisplayString
_NtxAlertSourceEntityName_Object=MibScalar
ntxAlertSourceEntityName=_NtxAlertSourceEntityName_Object((1,3,6,1,4,1,41263,999,9),_NtxAlertSourceEntityName_Type())
ntxAlertSourceEntityName.setMaxAccess(_L)
if mibBuilder.loadTexts:ntxAlertSourceEntityName.setStatus(_B)
_NtxAlertSourceEntityType_Type=DisplayString
_NtxAlertSourceEntityType_Object=MibScalar
ntxAlertSourceEntityType=_NtxAlertSourceEntityType_Object((1,3,6,1,4,1,41263,999,10),_NtxAlertSourceEntityType_Type())
ntxAlertSourceEntityType.setMaxAccess(_L)
if mibBuilder.loadTexts:ntxAlertSourceEntityType.setStatus(_B)
ntxTrap=NotificationType((1,3,6,1,4,1,41263,991))
ntxTrap.setObjects(*((_A,_D),(_A,_C)))
if mibBuilder.loadTexts:ntxTrap.setStatus(_B)
ntxTrapResolved=NotificationType((1,3,6,1,4,1,41263,993))
ntxTrapResolved.setObjects(*((_A,_Z),(_A,_a),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapResolved.setStatus(_B)
ntxTrapClusterRunningOutOfStorageCapacitylowRunway=NotificationType((1,3,6,1,4,1,41263,1000))
ntxTrapClusterRunningOutOfStorageCapacitylowRunway.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapClusterRunningOutOfStorageCapacitylowRunway.setStatus(_B)
ntxTrapClusterRunningOutOfCPUCapacitylowRunway=NotificationType((1,3,6,1,4,1,41263,1001))
ntxTrapClusterRunningOutOfCPUCapacitylowRunway.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapClusterRunningOutOfCPUCapacitylowRunway.setStatus(_B)
ntxTrapNodeRunningOutOfCPUCapacitylowRunway=NotificationType((1,3,6,1,4,1,41263,1002))
ntxTrapNodeRunningOutOfCPUCapacitylowRunway.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNodeRunningOutOfCPUCapacitylowRunway.setStatus(_B)
ntxTrapClusterRunningOutOfMemoryCapacitylowRunway=NotificationType((1,3,6,1,4,1,41263,1003))
ntxTrapClusterRunningOutOfMemoryCapacitylowRunway.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapClusterRunningOutOfMemoryCapacitylowRunway.setStatus(_B)
ntxTrapNodeRunningOutOfMemoryCapacitylowRunway=NotificationType((1,3,6,1,4,1,41263,1004))
ntxTrapNodeRunningOutOfMemoryCapacitylowRunway.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNodeRunningOutOfMemoryCapacitylowRunway.setStatus(_B)
ntxTrapStorageContainerRunningOutOfStorageCapacitylowRunway=NotificationType((1,3,6,1,4,1,41263,1005))
ntxTrapStorageContainerRunningOutOfStorageCapacitylowRunway.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapStorageContainerRunningOutOfStorageCapacitylowRunway.setStatus(_B)
ntxTrapTestAlertTitle=NotificationType((1,3,6,1,4,1,41263,1006))
ntxTrapTestAlertTitle.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTestAlertTitle.setStatus(_B)
ntxTrapMetadataDriveAutoAddDisabled=NotificationType((1,3,6,1,4,1,41263,1007))
ntxTrapMetadataDriveAutoAddDisabled.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetadataDriveAutoAddDisabled.setStatus(_B)
ntxTrapNodeDetachedFromMetadataRing=NotificationType((1,3,6,1,4,1,41263,1008))
ntxTrapNodeDetachedFromMetadataRing.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNodeDetachedFromMetadataRing.setStatus(_B)
ntxTrapMetadataDynamicRingChangeOperationStuck=NotificationType((1,3,6,1,4,1,41263,1009))
ntxTrapMetadataDynamicRingChangeOperationStuck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetadataDynamicRingChangeOperationStuck.setStatus(_B)
ntxTrapMetadataDynamicRingChangeOperationTooSlow=NotificationType((1,3,6,1,4,1,41263,1010))
ntxTrapMetadataDynamicRingChangeOperationTooSlow.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetadataDynamicRingChangeOperationTooSlow.setStatus(_B)
ntxTrapMetadataDriveFailed=NotificationType((1,3,6,1,4,1,41263,1011))
ntxTrapMetadataDriveFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetadataDriveFailed.setStatus(_B)
ntxTrapLargeMetadataSizeDetected=NotificationType((1,3,6,1,4,1,41263,1012))
ntxTrapLargeMetadataSizeDetected.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapLargeMetadataSizeDetected.setStatus(_B)
ntxTrapMetadataDriveMarkedToBeAutoAdded=NotificationType((1,3,6,1,4,1,41263,1013))
ntxTrapMetadataDriveMarkedToBeAutoAdded.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetadataDriveMarkedToBeAutoAdded.setStatus(_B)
ntxTrapMetadataDriveDetached=NotificationType((1,3,6,1,4,1,41263,1014))
ntxTrapMetadataDriveDetached.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetadataDriveDetached.setStatus(_B)
ntxTrapMetadataRingImbalance=NotificationType((1,3,6,1,4,1,41263,1015))
ntxTrapMetadataRingImbalance.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetadataRingImbalance.setStatus(_B)
ntxTrapCassandraWaitingForDiskReplacement=NotificationType((1,3,6,1,4,1,41263,1016))
ntxTrapCassandraWaitingForDiskReplacement.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCassandraWaitingForDiskReplacement.setStatus(_B)
ntxTrapCloudApplianceDeploymentFailed=NotificationType((1,3,6,1,4,1,41263,1017))
ntxTrapCloudApplianceDeploymentFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCloudApplianceDeploymentFailed.setStatus(_B)
ntxTrapUnableToRemountDatastore=NotificationType((1,3,6,1,4,1,41263,1018))
ntxTrapUnableToRemountDatastore.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapUnableToRemountDatastore.setStatus(_B)
ntxTrapRemountedDatastore=NotificationType((1,3,6,1,4,1,41263,1019))
ntxTrapRemountedDatastore.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemountedDatastore.setStatus(_B)
ntxTrapFailedToAllocateSnapshotReserveOnTheRemoteSite=NotificationType((1,3,6,1,4,1,41263,1020))
ntxTrapFailedToAllocateSnapshotReserveOnTheRemoteSite.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailedToAllocateSnapshotReserveOnTheRemoteSite.setStatus(_B)
ntxTrapFailedToAllocateSnapshotReserve=NotificationType((1,3,6,1,4,1,41263,1021))
ntxTrapFailedToAllocateSnapshotReserve.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailedToAllocateSnapshotReserve.setStatus(_B)
ntxTrapMetroTakeoverOldPrimarySiteIsHostingVMs=NotificationType((1,3,6,1,4,1,41263,1022))
ntxTrapMetroTakeoverOldPrimarySiteIsHostingVMs.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetroTakeoverOldPrimarySiteIsHostingVMs.setStatus(_B)
ntxTrapProtectionDomainIsInDecoupledState=NotificationType((1,3,6,1,4,1,41263,1023))
ntxTrapProtectionDomainIsInDecoupledState.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainIsInDecoupledState.setStatus(_B)
ntxTrapRemoteSiteLatencyIsHigh=NotificationType((1,3,6,1,4,1,41263,1024))
ntxTrapRemoteSiteLatencyIsHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemoteSiteLatencyIsHigh.setStatus(_B)
ntxTrapFailedToUpdateMetroAvailabilityFailureHandling=NotificationType((1,3,6,1,4,1,41263,1025))
ntxTrapFailedToUpdateMetroAvailabilityFailureHandling.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailedToUpdateMetroAvailabilityFailureHandling.setStatus(_B)
ntxTrapStretchConnectivityIsLost=NotificationType((1,3,6,1,4,1,41263,1026))
ntxTrapStretchConnectivityIsLost.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapStretchConnectivityIsLost.setStatus(_B)
ntxTrapVMRegistrationWarning=NotificationType((1,3,6,1,4,1,41263,1027))
ntxTrapVMRegistrationWarning.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMRegistrationWarning.setStatus(_B)
ntxTrapVMRenamedOnConversion=NotificationType((1,3,6,1,4,1,41263,1028))
ntxTrapVMRenamedOnConversion.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMRenamedOnConversion.setStatus(_B)
ntxTrapAuthenticationFailedInWitness=NotificationType((1,3,6,1,4,1,41263,1029))
ntxTrapAuthenticationFailedInWitness.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAuthenticationFailedInWitness.setStatus(_B)
ntxTrapWitnessIsNotConfigured=NotificationType((1,3,6,1,4,1,41263,1030))
ntxTrapWitnessIsNotConfigured.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapWitnessIsNotConfigured.setStatus(_B)
ntxTrapWitnessIsNotReachable=NotificationType((1,3,6,1,4,1,41263,1031))
ntxTrapWitnessIsNotReachable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapWitnessIsNotReachable.setStatus(_B)
ntxTrapCuratorJobRunningTooLong=NotificationType((1,3,6,1,4,1,41263,1032))
ntxTrapCuratorJobRunningTooLong.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCuratorJobRunningTooLong.setStatus(_B)
ntxTrapCuratorScanFailure=NotificationType((1,3,6,1,4,1,41263,1033))
ntxTrapCuratorScanFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCuratorScanFailure.setStatus(_B)
ntxTrapFileServerSpaceUsageHigh=NotificationType((1,3,6,1,4,1,41263,1034))
ntxTrapFileServerSpaceUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerSpaceUsageHigh.setStatus(_B)
ntxTrapFileServerSpaceUsageCritical=NotificationType((1,3,6,1,4,1,41263,1035))
ntxTrapFileServerSpaceUsageCritical.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerSpaceUsageCritical.setStatus(_B)
ntxTrapFileServerUnreachable=NotificationType((1,3,6,1,4,1,41263,1036))
ntxTrapFileServerUnreachable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerUnreachable.setStatus(_B)
ntxTrapFileServerStorageIsNotAvailable=NotificationType((1,3,6,1,4,1,41263,1037))
ntxTrapFileServerStorageIsNotAvailable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerStorageIsNotAvailable.setStatus(_B)
ntxTrapFileServerScaleoutFailed=NotificationType((1,3,6,1,4,1,41263,1038))
ntxTrapFileServerScaleoutFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerScaleoutFailed.setStatus(_B)
ntxTrapFileServerCouldNotJoinTheADDomain=NotificationType((1,3,6,1,4,1,41263,1039))
ntxTrapFileServerCouldNotJoinTheADDomain.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerCouldNotJoinTheADDomain.setStatus(_B)
ntxTrapNodeFailedToJoinDomain=NotificationType((1,3,6,1,4,1,41263,1040))
ntxTrapNodeFailedToJoinDomain.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNodeFailedToJoinDomain.setStatus(_B)
ntxTrapFileServerTimeDifferenceHigh=NotificationType((1,3,6,1,4,1,41263,1041))
ntxTrapFileServerTimeDifferenceHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerTimeDifferenceHigh.setStatus(_B)
ntxTrapFileServerStorageCleanupFailed=NotificationType((1,3,6,1,4,1,41263,1042))
ntxTrapFileServerStorageCleanupFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerStorageCleanupFailed.setStatus(_B)
ntxTrapFileServerCannotConnectWithADServer=NotificationType((1,3,6,1,4,1,41263,1043))
ntxTrapFileServerCannotConnectWithADServer.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerCannotConnectWithADServer.setStatus(_B)
ntxTrapFileServerPerformanceOptimizationRecommended=NotificationType((1,3,6,1,4,1,41263,1044))
ntxTrapFileServerPerformanceOptimizationRecommended.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerPerformanceOptimizationRecommended.setStatus(_B)
ntxTrapAppropriateSiteNotFoundInActiveDirectory=NotificationType((1,3,6,1,4,1,41263,1045))
ntxTrapAppropriateSiteNotFoundInActiveDirectory.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAppropriateSiteNotFoundInActiveDirectory.setStatus(_B)
ntxTrapFileServerDNSUpdatesPending=NotificationType((1,3,6,1,4,1,41263,1046))
ntxTrapFileServerDNSUpdatesPending.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerDNSUpdatesPending.setStatus(_B)
ntxTrapUserQuotaAssignmentFailed=NotificationType((1,3,6,1,4,1,41263,1047))
ntxTrapUserQuotaAssignmentFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapUserQuotaAssignmentFailed.setStatus(_B)
ntxTrapShareUtilizationReachedConfiguredLimit=NotificationType((1,3,6,1,4,1,41263,1048))
ntxTrapShareUtilizationReachedConfiguredLimit.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapShareUtilizationReachedConfiguredLimit.setStatus(_B)
ntxTrapFileServerFailedToGetUpdatedCVMIPAddress=NotificationType((1,3,6,1,4,1,41263,1049))
ntxTrapFileServerFailedToGetUpdatedCVMIPAddress.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerFailedToGetUpdatedCVMIPAddress.setStatus(_B)
ntxTrapFileServerActivationFailed=NotificationType((1,3,6,1,4,1,41263,1050))
ntxTrapFileServerActivationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerActivationFailed.setStatus(_B)
ntxTrapFailedToSetVMtoVMAntiaffinityRule=NotificationType((1,3,6,1,4,1,41263,1051))
ntxTrapFailedToSetVMtoVMAntiaffinityRule.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailedToSetVMtoVMAntiaffinityRule.setStatus(_B)
ntxTrapFileServerHomeShareCreationFailed=NotificationType((1,3,6,1,4,1,41263,1052))
ntxTrapFileServerHomeShareCreationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerHomeShareCreationFailed.setStatus(_B)
ntxTrapDiscoveryOfISCSITargetsFailed=NotificationType((1,3,6,1,4,1,41263,1053))
ntxTrapDiscoveryOfISCSITargetsFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDiscoveryOfISCSITargetsFailed.setStatus(_B)
ntxTrapFileServerUpgradeFailed=NotificationType((1,3,6,1,4,1,41263,1054))
ntxTrapFileServerUpgradeFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerUpgradeFailed.setStatus(_B)
ntxTrapIncompatibleFileServerActivated=NotificationType((1,3,6,1,4,1,41263,1055))
ntxTrapIncompatibleFileServerActivated.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIncompatibleFileServerActivated.setStatus(_B)
ntxTrapFileServerInHeterogeneousState=NotificationType((1,3,6,1,4,1,41263,1056))
ntxTrapFileServerInHeterogeneousState.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerInHeterogeneousState.setStatus(_B)
ntxTrapFailedToCorrectFileServerDataAndMetaDataInconsistencies=NotificationType((1,3,6,1,4,1,41263,1057))
ntxTrapFailedToCorrectFileServerDataAndMetaDataInconsistencies.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailedToCorrectFileServerDataAndMetaDataInconsistencies.setStatus(_B)
ntxTrapFileServerShareDeletionFailed=NotificationType((1,3,6,1,4,1,41263,1058))
ntxTrapFileServerShareDeletionFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerShareDeletionFailed.setStatus(_B)
ntxTrapFileServerCompatibilityCheckSkipped=NotificationType((1,3,6,1,4,1,41263,1059))
ntxTrapFileServerCompatibilityCheckSkipped.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerCompatibilityCheckSkipped.setStatus(_B)
ntxTrapSnapshotInvalidForClone=NotificationType((1,3,6,1,4,1,41263,1060))
ntxTrapSnapshotInvalidForClone.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSnapshotInvalidForClone.setStatus(_B)
ntxTrapFileServerAntiVirusICAPServerDown=NotificationType((1,3,6,1,4,1,41263,1061))
ntxTrapFileServerAntiVirusICAPServerDown.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerAntiVirusICAPServerDown.setStatus(_B)
ntxTrapFileServerAntiVirusAllICAPServersDown=NotificationType((1,3,6,1,4,1,41263,1062))
ntxTrapFileServerAntiVirusAllICAPServersDown.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerAntiVirusAllICAPServersDown.setStatus(_B)
ntxTrapClusterInReadOnlyMode=NotificationType((1,3,6,1,4,1,41263,1063))
ntxTrapClusterInReadOnlyMode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapClusterInReadOnlyMode.setStatus(_B)
ntxTrapStorageContainerSpaceUsageExceededAOSCheck=NotificationType((1,3,6,1,4,1,41263,1064))
ntxTrapStorageContainerSpaceUsageExceededAOSCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapStorageContainerSpaceUsageExceededAOSCheck.setStatus(_B)
ntxTrapDiskDiagnosticFailure=NotificationType((1,3,6,1,4,1,41263,1065))
ntxTrapDiskDiagnosticFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDiskDiagnosticFailure.setStatus(_B)
ntxTrapNodeFailure=NotificationType((1,3,6,1,4,1,41263,1066))
ntxTrapNodeFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNodeFailure.setStatus(_B)
ntxTrapNodeInMaintenanceMode=NotificationType((1,3,6,1,4,1,41263,1067))
ntxTrapNodeInMaintenanceMode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNodeInMaintenanceMode.setStatus(_B)
ntxTrapNonSelfEncryptionDriveDiskInserted=NotificationType((1,3,6,1,4,1,41263,1068))
ntxTrapNonSelfEncryptionDriveDiskInserted.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNonSelfEncryptionDriveDiskInserted.setStatus(_B)
ntxTrapPhysicalDiskAddedToSlot=NotificationType((1,3,6,1,4,1,41263,1069))
ntxTrapPhysicalDiskAddedToSlot.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPhysicalDiskAddedToSlot.setStatus(_B)
ntxTrapPhysicalDiskDriveHasFailed=NotificationType((1,3,6,1,4,1,41263,1070))
ntxTrapPhysicalDiskDriveHasFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPhysicalDiskDriveHasFailed.setStatus(_B)
ntxTrapPhysicalDiskRemovedFromSlot=NotificationType((1,3,6,1,4,1,41263,1071))
ntxTrapPhysicalDiskRemovedFromSlot.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPhysicalDiskRemovedFromSlot.setStatus(_B)
ntxTrapSelfEncryptingDriveOperationFailure=NotificationType((1,3,6,1,4,1,41263,1072))
ntxTrapSelfEncryptingDriveOperationFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSelfEncryptingDriveOperationFailure.setStatus(_B)
ntxTrapUnsupportedConfigurationForRedundancyFactor3=NotificationType((1,3,6,1,4,1,41263,1073))
ntxTrapUnsupportedConfigurationForRedundancyFactor3.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapUnsupportedConfigurationForRedundancyFactor3.setStatus(_B)
ntxTrapCannotRemovePasswordProtectedDisks=NotificationType((1,3,6,1,4,1,41263,1074))
ntxTrapCannotRemovePasswordProtectedDisks.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCannotRemovePasswordProtectedDisks.setStatus(_B)
ntxTrapDiskBad=NotificationType((1,3,6,1,4,1,41263,1075))
ntxTrapDiskBad.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDiskBad.setStatus(_B)
ntxTrapDuplicateIPAddressDetected=NotificationType((1,3,6,1,4,1,41263,1076))
ntxTrapDuplicateIPAddressDetected.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDuplicateIPAddressDetected.setStatus(_B)
ntxTrapIPAddressNotHosted=NotificationType((1,3,6,1,4,1,41263,1077))
ntxTrapIPAddressNotHosted.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIPAddressNotHosted.setStatus(_B)
ntxTrapSMTPError=NotificationType((1,3,6,1,4,1,41263,1078))
ntxTrapSMTPError.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSMTPError.setStatus(_B)
ntxTrapProtectionDomainReplicationFailure=NotificationType((1,3,6,1,4,1,41263,1079))
ntxTrapProtectionDomainReplicationFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainReplicationFailure.setStatus(_B)
ntxTrapProtectionDomainSnapshotFailure=NotificationType((1,3,6,1,4,1,41263,1080))
ntxTrapProtectionDomainSnapshotFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainSnapshotFailure.setStatus(_B)
ntxTrapNutanixGuestToolsAgentIsNotReachableOnTheVM=NotificationType((1,3,6,1,4,1,41263,1081))
ntxTrapNutanixGuestToolsAgentIsNotReachableOnTheVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNutanixGuestToolsAgentIsNotReachableOnTheVM.setStatus(_B)
ntxTrapMetroAvailabilityIsPromoted=NotificationType((1,3,6,1,4,1,41263,1082))
ntxTrapMetroAvailabilityIsPromoted.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetroAvailabilityIsPromoted.setStatus(_B)
ntxTrapEntityRestoreAborted=NotificationType((1,3,6,1,4,1,41263,1083))
ntxTrapEntityRestoreAborted.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEntityRestoreAborted.setStatus(_B)
ntxTrapProtectionDomainReceiveSnapshotFailure=NotificationType((1,3,6,1,4,1,41263,1084))
ntxTrapProtectionDomainReceiveSnapshotFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainReceiveSnapshotFailure.setStatus(_B)
ntxTrapSecureTunnelToRemoteSiteDown=NotificationType((1,3,6,1,4,1,41263,1085))
ntxTrapSecureTunnelToRemoteSiteDown.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSecureTunnelToRemoteSiteDown.setStatus(_B)
ntxTrapProtectedVolumeGroupNotFound=NotificationType((1,3,6,1,4,1,41263,1086))
ntxTrapProtectedVolumeGroupNotFound.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectedVolumeGroupNotFound.setStatus(_B)
ntxTrapProtectionDomainActivation=NotificationType((1,3,6,1,4,1,41263,1087))
ntxTrapProtectionDomainActivation.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainActivation.setStatus(_B)
ntxTrapDuplicateRemoteClusterID=NotificationType((1,3,6,1,4,1,41263,1088))
ntxTrapDuplicateRemoteClusterID.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDuplicateRemoteClusterID.setStatus(_B)
ntxTrapCloudRemoteSiteFailedToStart=NotificationType((1,3,6,1,4,1,41263,1089))
ntxTrapCloudRemoteSiteFailedToStart.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCloudRemoteSiteFailedToStart.setStatus(_B)
ntxTrapRemoteSiteremotenameNetworkMappingMissing=NotificationType((1,3,6,1,4,1,41263,1090))
ntxTrapRemoteSiteremotenameNetworkMappingMissing.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemoteSiteremotenameNetworkMappingMissing.setStatus(_B)
ntxTrapOperationForwardedToCloudRemoteFailed=NotificationType((1,3,6,1,4,1,41263,1091))
ntxTrapOperationForwardedToCloudRemoteFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapOperationForwardedToCloudRemoteFailed.setStatus(_B)
ntxTrapRecoveryPointObjectiveCannotBeMet=NotificationType((1,3,6,1,4,1,41263,1092))
ntxTrapRecoveryPointObjectiveCannotBeMet.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveryPointObjectiveCannotBeMet.setStatus(_B)
ntxTrapVStoreSnapshotStatus=NotificationType((1,3,6,1,4,1,41263,1093))
ntxTrapVStoreSnapshotStatus.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVStoreSnapshotStatus.setStatus(_B)
ntxTrapProtectionDomainSnapshotOperationSkipped=NotificationType((1,3,6,1,4,1,41263,1094))
ntxTrapProtectionDomainSnapshotOperationSkipped.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainSnapshotOperationSkipped.setStatus(_B)
ntxTrapSkippedReplicationOfTheSnapshot=NotificationType((1,3,6,1,4,1,41263,1095))
ntxTrapSkippedReplicationOfTheSnapshot.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSkippedReplicationOfTheSnapshot.setStatus(_B)
ntxTrapFailedToSnapshotEntities=NotificationType((1,3,6,1,4,1,41263,1096))
ntxTrapFailedToSnapshotEntities.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailedToSnapshotEntities.setStatus(_B)
ntxTrapIncorrectClusterInformationInRemoteSite=NotificationType((1,3,6,1,4,1,41263,1097))
ntxTrapIncorrectClusterInformationInRemoteSite.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIncorrectClusterInformationInRemoteSite.setStatus(_B)
ntxTrapVStoreIsBeingReplicatedToBackupOnlyRemoteSite=NotificationType((1,3,6,1,4,1,41263,1098))
ntxTrapVStoreIsBeingReplicatedToBackupOnlyRemoteSite.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVStoreIsBeingReplicatedToBackupOnlyRemoteSite.setStatus(_B)
ntxTrapFailedToChangeStateOfOneOrMoreVMs=NotificationType((1,3,6,1,4,1,41263,1099))
ntxTrapFailedToChangeStateOfOneOrMoreVMs.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailedToChangeStateOfOneOrMoreVMs.setStatus(_B)
ntxTrapRegistrationOfOneOrMoreVMsFailed=NotificationType((1,3,6,1,4,1,41263,1100))
ntxTrapRegistrationOfOneOrMoreVMsFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRegistrationOfOneOrMoreVMsFailed.setStatus(_B)
ntxTrapSelfServiceRestoreOperationFailed=NotificationType((1,3,6,1,4,1,41263,1101))
ntxTrapSelfServiceRestoreOperationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSelfServiceRestoreOperationFailed.setStatus(_B)
ntxTrapMetadataVolumeSnapshotPersistentFailure=NotificationType((1,3,6,1,4,1,41263,1102))
ntxTrapMetadataVolumeSnapshotPersistentFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetadataVolumeSnapshotPersistentFailure.setStatus(_B)
ntxTrapMetroAvailabilityIsDisabled=NotificationType((1,3,6,1,4,1,41263,1103))
ntxTrapMetroAvailabilityIsDisabled.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetroAvailabilityIsDisabled.setStatus(_B)
ntxTrapApplicationconsistentSnapshotNotTakenForTheVM=NotificationType((1,3,6,1,4,1,41263,1104))
ntxTrapApplicationconsistentSnapshotNotTakenForTheVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapApplicationconsistentSnapshotNotTakenForTheVM.setStatus(_B)
ntxTrapInvalidConsistencyGroup=NotificationType((1,3,6,1,4,1,41263,1105))
ntxTrapInvalidConsistencyGroup.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapInvalidConsistencyGroup.setStatus(_B)
ntxTrapFailedToReconfigureNutanixGuestToolsForTheRecoveredVM=NotificationType((1,3,6,1,4,1,41263,1106))
ntxTrapFailedToReconfigureNutanixGuestToolsForTheRecoveredVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailedToReconfigureNutanixGuestToolsForTheRecoveredVM.setStatus(_B)
ntxTrapNutanixGuestToolsNotInstalled=NotificationType((1,3,6,1,4,1,41263,1107))
ntxTrapNutanixGuestToolsNotInstalled.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNutanixGuestToolsNotInstalled.setStatus(_B)
ntxTrapRemoteSiteremotenameNetworkMappingInvalid=NotificationType((1,3,6,1,4,1,41263,1108))
ntxTrapRemoteSiteremotenameNetworkMappingInvalid.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemoteSiteremotenameNetworkMappingInvalid.setStatus(_B)
ntxTrapVSSSnapshotFailed=NotificationType((1,3,6,1,4,1,41263,1109))
ntxTrapVSSSnapshotFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVSSSnapshotFailed.setStatus(_B)
ntxTrapAlertRaisedOnCloudRemoteSiteremotenamealertmessage=NotificationType((1,3,6,1,4,1,41263,1110))
ntxTrapAlertRaisedOnCloudRemoteSiteremotenamealertmessage.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAlertRaisedOnCloudRemoteSiteremotenamealertmessage.setStatus(_B)
ntxTrapProtectedVmsNotFound=NotificationType((1,3,6,1,4,1,41263,1111))
ntxTrapProtectedVmsNotFound.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectedVmsNotFound.setStatus(_B)
ntxTrapProtectionDomainContainsMoreThanSpecifiedVMs=NotificationType((1,3,6,1,4,1,41263,1112))
ntxTrapProtectionDomainContainsMoreThanSpecifiedVMs.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainContainsMoreThanSpecifiedVMs.setStatus(_B)
ntxTrapRelatedEntityProtectionStatus=NotificationType((1,3,6,1,4,1,41263,1113))
ntxTrapRelatedEntityProtectionStatus.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRelatedEntityProtectionStatus.setStatus(_B)
ntxTrapNutanixGuestToolsIsNotSupportedOnRemoteSite=NotificationType((1,3,6,1,4,1,41263,1114))
ntxTrapNutanixGuestToolsIsNotSupportedOnRemoteSite.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNutanixGuestToolsIsNotSupportedOnRemoteSite.setStatus(_B)
ntxTrapRemoteSiteOperationModeReadOnly=NotificationType((1,3,6,1,4,1,41263,1115))
ntxTrapRemoteSiteOperationModeReadOnly.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemoteSiteOperationModeReadOnly.setStatus(_B)
ntxTrapRemoteSiteIsUnhealthy=NotificationType((1,3,6,1,4,1,41263,1116))
ntxTrapRemoteSiteIsUnhealthy.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemoteSiteIsUnhealthy.setStatus(_B)
ntxTrapEntitiesRestoredButUnprotected=NotificationType((1,3,6,1,4,1,41263,1117))
ntxTrapEntitiesRestoredButUnprotected.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEntitiesRestoredButUnprotected.setStatus(_B)
ntxTrapProtectionDomainFullReplicationPerformed=NotificationType((1,3,6,1,4,1,41263,1118))
ntxTrapProtectionDomainFullReplicationPerformed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainFullReplicationPerformed.setStatus(_B)
ntxTrapProtectedVMIsNotNutanixBackupAndRecoveryCompliant=NotificationType((1,3,6,1,4,1,41263,1119))
ntxTrapProtectedVMIsNotNutanixBackupAndRecoveryCompliant.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectedVMIsNotNutanixBackupAndRecoveryCompliant.setStatus(_B)
ntxTrapProtectedVMRenamedDuringClone=NotificationType((1,3,6,1,4,1,41263,1120))
ntxTrapProtectedVMRenamedDuringClone.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectedVMRenamedDuringClone.setStatus(_B)
ntxTrapProtectedVolumeGroupsNotFound=NotificationType((1,3,6,1,4,1,41263,1121))
ntxTrapProtectedVolumeGroupsNotFound.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectedVolumeGroupsNotFound.setStatus(_B)
ntxTrapVMRegistrationFailed=NotificationType((1,3,6,1,4,1,41263,1122))
ntxTrapVMRegistrationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMRegistrationFailed.setStatus(_B)
ntxTrapProtectionDomainReplicationExpired=NotificationType((1,3,6,1,4,1,41263,1123))
ntxTrapProtectionDomainReplicationExpired.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainReplicationExpired.setStatus(_B)
ntxTrapVolumeGroupAttachmentsNotRestored=NotificationType((1,3,6,1,4,1,41263,1124))
ntxTrapVolumeGroupAttachmentsNotRestored.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVolumeGroupAttachmentsNotRestored.setStatus(_B)
ntxTrapEntitiesSkippedDuringRestore=NotificationType((1,3,6,1,4,1,41263,1125))
ntxTrapEntitiesSkippedDuringRestore.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEntitiesSkippedDuringRestore.setStatus(_B)
ntxTrapProtectionDomainChangeModeFailure=NotificationType((1,3,6,1,4,1,41263,1126))
ntxTrapProtectionDomainChangeModeFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainChangeModeFailure.setStatus(_B)
ntxTrapVSSSnapshotAborted=NotificationType((1,3,6,1,4,1,41263,1127))
ntxTrapVSSSnapshotAborted.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVSSSnapshotAborted.setStatus(_B)
ntxTrapExternalISCSIAttachmentsNotSnapshotted=NotificationType((1,3,6,1,4,1,41263,1128))
ntxTrapExternalISCSIAttachmentsNotSnapshotted.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapExternalISCSIAttachmentsNotSnapshotted.setStatus(_B)
ntxTrapVMVirtualHardwareVersionNotCompatible=NotificationType((1,3,6,1,4,1,41263,1129))
ntxTrapVMVirtualHardwareVersionNotCompatible.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMVirtualHardwareVersionNotCompatible.setStatus(_B)
ntxTrapVolumeGroupActionError=NotificationType((1,3,6,1,4,1,41263,1130))
ntxTrapVolumeGroupActionError.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVolumeGroupActionError.setStatus(_B)
ntxTrapMetadataVolumeSnapshotTimeout=NotificationType((1,3,6,1,4,1,41263,1131))
ntxTrapMetadataVolumeSnapshotTimeout.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetadataVolumeSnapshotTimeout.setStatus(_B)
ntxTrapSnapshotPartiallyCrashConsistent=NotificationType((1,3,6,1,4,1,41263,1132))
ntxTrapSnapshotPartiallyCrashConsistent.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSnapshotPartiallyCrashConsistent.setStatus(_B)
ntxTrapMetroAvailabilityPrechecksFailed=NotificationType((1,3,6,1,4,1,41263,1133))
ntxTrapMetroAvailabilityPrechecksFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetroAvailabilityPrechecksFailed.setStatus(_B)
ntxTrapProtectionDomainMightHaveSymlinks=NotificationType((1,3,6,1,4,1,41263,1134))
ntxTrapProtectionDomainMightHaveSymlinks.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainMightHaveSymlinks.setStatus(_B)
ntxTrapVSSSnapshotIsNotSupportedForTheVM=NotificationType((1,3,6,1,4,1,41263,1135))
ntxTrapVSSSnapshotIsNotSupportedForTheVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVSSSnapshotIsNotSupportedForTheVM.setStatus(_B)
ntxTrapSnapshotReserveOnSSDIsFull=NotificationType((1,3,6,1,4,1,41263,1136))
ntxTrapSnapshotReserveOnSSDIsFull.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSnapshotReserveOnSSDIsFull.setStatus(_B)
ntxTrapMetroAvailabilityConfigurationFailed=NotificationType((1,3,6,1,4,1,41263,1137))
ntxTrapMetroAvailabilityConfigurationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetroAvailabilityConfigurationFailed.setStatus(_B)
ntxTrapStaleNFSMount=NotificationType((1,3,6,1,4,1,41263,1138))
ntxTrapStaleNFSMount.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapStaleNFSMount.setStatus(_B)
ntxTrapVSSSoftwareOrprefreezepostthawScriptsNotInstalled=NotificationType((1,3,6,1,4,1,41263,1139))
ntxTrapVSSSoftwareOrprefreezepostthawScriptsNotInstalled.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVSSSoftwareOrprefreezepostthawScriptsNotInstalled.setStatus(_B)
ntxTrapProtectedVMNotFound=NotificationType((1,3,6,1,4,1,41263,1140))
ntxTrapProtectedVMNotFound.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectedVMNotFound.setStatus(_B)
ntxTrapProtectionDomainTransitioningToLowerFrequencySnapshotting=NotificationType((1,3,6,1,4,1,41263,1141))
ntxTrapProtectionDomainTransitioningToLowerFrequencySnapshotting.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainTransitioningToLowerFrequencySnapshotting.setStatus(_B)
ntxTrapSnapshotQueuedForReplicationsToRemoteSite=NotificationType((1,3,6,1,4,1,41263,1142))
ntxTrapSnapshotQueuedForReplicationsToRemoteSite.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSnapshotQueuedForReplicationsToRemoteSite.setStatus(_B)
ntxTrapAgentVMRestorationFailure=NotificationType((1,3,6,1,4,1,41263,1143))
ntxTrapAgentVMRestorationFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAgentVMRestorationFailure.setStatus(_B)
ntxTrapCPSDeploymentEvaluationMode=NotificationType((1,3,6,1,4,1,41263,1144))
ntxTrapCPSDeploymentEvaluationMode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCPSDeploymentEvaluationMode.setStatus(_B)
ntxTrapHAHostEvacuationFailure=NotificationType((1,3,6,1,4,1,41263,1145))
ntxTrapHAHostEvacuationFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHAHostEvacuationFailure.setStatus(_B)
ntxTrapFailureToRestartVMsForHAEvent=NotificationType((1,3,6,1,4,1,41263,1146))
ntxTrapFailureToRestartVMsForHAEvent.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailureToRestartVMsForHAEvent.setStatus(_B)
ntxTrapUpgradeBundleAvailable=NotificationType((1,3,6,1,4,1,41263,1147))
ntxTrapUpgradeBundleAvailable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapUpgradeBundleAvailable.setStatus(_B)
ntxTrapVMActionError=NotificationType((1,3,6,1,4,1,41263,1148))
ntxTrapVMActionError.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMActionError.setStatus(_B)
ntxTrapHAHealingFailure=NotificationType((1,3,6,1,4,1,41263,1149))
ntxTrapHAHealingFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHAHealingFailure.setStatus(_B)
ntxTrapVmHighAvailabilityFailure=NotificationType((1,3,6,1,4,1,41263,1150))
ntxTrapVmHighAvailabilityFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVmHighAvailabilityFailure.setStatus(_B)
ntxTrapKerberosClockSkewFailure=NotificationType((1,3,6,1,4,1,41263,1151))
ntxTrapKerberosClockSkewFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapKerberosClockSkewFailure.setStatus(_B)
ntxTrapStargateTemporarilyDown=NotificationType((1,3,6,1,4,1,41263,1152))
ntxTrapStargateTemporarilyDown.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapStargateTemporarilyDown.setStatus(_B)
ntxTrapVMGroupSnapshotAndCurrentMismatch=NotificationType((1,3,6,1,4,1,41263,1153))
ntxTrapVMGroupSnapshotAndCurrentMismatch.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMGroupSnapshotAndCurrentMismatch.setStatus(_B)
ntxTrapCertificateCreationError=NotificationType((1,3,6,1,4,1,41263,1154))
ntxTrapCertificateCreationError.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCertificateCreationError.setStatus(_B)
ntxTrapFingerprintingDisabled=NotificationType((1,3,6,1,4,1,41263,1156))
ntxTrapFingerprintingDisabled.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFingerprintingDisabled.setStatus(_B)
ntxTrapSystemDefinedFlashModeUsageLimitExceeded=NotificationType((1,3,6,1,4,1,41263,1157))
ntxTrapSystemDefinedFlashModeUsageLimitExceeded.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSystemDefinedFlashModeUsageLimitExceeded.setStatus(_B)
ntxTrapMetadataUsageHigh=NotificationType((1,3,6,1,4,1,41263,1158))
ntxTrapMetadataUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetadataUsageHigh.setStatus(_B)
ntxTrapNFSMetadataSizeOvershoot=NotificationType((1,3,6,1,4,1,41263,1159))
ntxTrapNFSMetadataSizeOvershoot.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNFSMetadataSizeOvershoot.setStatus(_B)
ntxTrapOnDiskDedupDisabled=NotificationType((1,3,6,1,4,1,41263,1160))
ntxTrapOnDiskDedupDisabled.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapOnDiskDedupDisabled.setStatus(_B)
ntxTrapSpaceReservationViolated=NotificationType((1,3,6,1,4,1,41263,1161))
ntxTrapSpaceReservationViolated.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSpaceReservationViolated.setStatus(_B)
ntxTrapPossibleDegradedNode=NotificationType((1,3,6,1,4,1,41263,1164))
ntxTrapPossibleDegradedNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPossibleDegradedNode.setStatus(_B)
ntxTrapDynamicSchedulingFailure=NotificationType((1,3,6,1,4,1,41263,1165))
ntxTrapDynamicSchedulingFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDynamicSchedulingFailure.setStatus(_B)
ntxTrapRecoveredVMDiskConfigurationUpdateFailed=NotificationType((1,3,6,1,4,1,41263,1166))
ntxTrapRecoveredVMDiskConfigurationUpdateFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveredVMDiskConfigurationUpdateFailed.setStatus(_B)
ntxTrapISCSIConfigurationFailed=NotificationType((1,3,6,1,4,1,41263,1167))
ntxTrapISCSIConfigurationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapISCSIConfigurationFailed.setStatus(_B)
ntxTrapA130104=NotificationType((1,3,6,1,4,1,41263,1168))
ntxTrapA130104.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA130104.setStatus(_B)
ntxTrapExecutionOfThePostThawScriptFailed=NotificationType((1,3,6,1,4,1,41263,1169))
ntxTrapExecutionOfThePostThawScriptFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapExecutionOfThePostThawScriptFailed.setStatus(_B)
ntxTrapNutanixGuestToolsMountFailed=NotificationType((1,3,6,1,4,1,41263,1170))
ntxTrapNutanixGuestToolsMountFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNutanixGuestToolsMountFailed.setStatus(_B)
ntxTrapVMForciblyPoweredOff=NotificationType((1,3,6,1,4,1,41263,1171))
ntxTrapVMForciblyPoweredOff.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMForciblyPoweredOff.setStatus(_B)
ntxTrapReportGenerationFailure=NotificationType((1,3,6,1,4,1,41263,1172))
ntxTrapReportGenerationFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapReportGenerationFailure.setStatus(_B)
ntxTrapSendReportThroughEmailFailure=NotificationType((1,3,6,1,4,1,41263,1173))
ntxTrapSendReportThroughEmailFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSendReportThroughEmailFailure.setStatus(_B)
ntxTrapReportQuotaScanFailure=NotificationType((1,3,6,1,4,1,41263,1174))
ntxTrapReportQuotaScanFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapReportQuotaScanFailure.setStatus(_B)
ntxTrapCassandraServiceCrashed=NotificationType((1,3,6,1,4,1,41263,1175))
ntxTrapCassandraServiceCrashed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCassandraServiceCrashed.setStatus(_B)
ntxTrapCassandraServiceIsRunningOutOfMemory=NotificationType((1,3,6,1,4,1,41263,1176))
ntxTrapCassandraServiceIsRunningOutOfMemory.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCassandraServiceIsRunningOutOfMemory.setStatus(_B)
ntxTrapMultipleCassandraNodesHaveSimilarTokens=NotificationType((1,3,6,1,4,1,41263,1177))
ntxTrapMultipleCassandraNodesHaveSimilarTokens.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMultipleCassandraNodesHaveSimilarTokens.setStatus(_B)
ntxTrapCloudClusterDoesNotHaveRecommendedConfigurationLocally=NotificationType((1,3,6,1,4,1,41263,1178))
ntxTrapCloudClusterDoesNotHaveRecommendedConfigurationLocally.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCloudClusterDoesNotHaveRecommendedConfigurationLocally.setStatus(_B)
ntxTrapAWSCloudInstanceNotConfiguredProperly=NotificationType((1,3,6,1,4,1,41263,1179))
ntxTrapAWSCloudInstanceNotConfiguredProperly.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAWSCloudInstanceNotConfiguredProperly.setStatus(_B)
ntxTrapOldGenerationAWSInstanceConfigured=NotificationType((1,3,6,1,4,1,41263,1180))
ntxTrapOldGenerationAWSInstanceConfigured.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapOldGenerationAWSInstanceConfigured.setStatus(_B)
ntxTrapAOSVersionOfCloudRemoteSiteIsLessThanSourceCluster=NotificationType((1,3,6,1,4,1,41263,1181))
ntxTrapAOSVersionOfCloudRemoteSiteIsLessThanSourceCluster.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAOSVersionOfCloudRemoteSiteIsLessThanSourceCluster.setStatus(_B)
ntxTrapCloudClusterDoesNotHaveAllRecommendedGflagsSet=NotificationType((1,3,6,1,4,1,41263,1182))
ntxTrapCloudClusterDoesNotHaveAllRecommendedGflagsSet.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCloudClusterDoesNotHaveAllRecommendedGflagsSet.setStatus(_B)
ntxTrapEgroupCountOnCloudDiskIsHigherThanTheRecommendedThreshold=NotificationType((1,3,6,1,4,1,41263,1183))
ntxTrapEgroupCountOnCloudDiskIsHigherThanTheRecommendedThreshold.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEgroupCountOnCloudDiskIsHigherThanTheRecommendedThreshold.setStatus(_B)
ntxTrapFileServerMutipleVMsOnSingleNodeCheck=NotificationType((1,3,6,1,4,1,41263,1184))
ntxTrapFileServerMutipleVMsOnSingleNodeCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerMutipleVMsOnSingleNodeCheck.setStatus(_B)
ntxTrapFileServerServicesDownCheck=NotificationType((1,3,6,1,4,1,41263,1185))
ntxTrapFileServerServicesDownCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerServicesDownCheck.setStatus(_B)
ntxTrapFileServerUnreachableCheck=NotificationType((1,3,6,1,4,1,41263,1186))
ntxTrapFileServerUnreachableCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerUnreachableCheck.setStatus(_B)
ntxTrapFileServerDownCheck=NotificationType((1,3,6,1,4,1,41263,1187))
ntxTrapFileServerDownCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerDownCheck.setStatus(_B)
ntxTrapFileServerInvalidSnapshot=NotificationType((1,3,6,1,4,1,41263,1188))
ntxTrapFileServerInvalidSnapshot.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerInvalidSnapshot.setStatus(_B)
ntxTrapFileServerEntitiesNotProtected=NotificationType((1,3,6,1,4,1,41263,1189))
ntxTrapFileServerEntitiesNotProtected.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerEntitiesNotProtected.setStatus(_B)
ntxTrapMultipleFileServerVersionsArePresentInTheCluster=NotificationType((1,3,6,1,4,1,41263,1190))
ntxTrapMultipleFileServerVersionsArePresentInTheCluster.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMultipleFileServerVersionsArePresentInTheCluster.setStatus(_B)
ntxTrapFileServerUpgradeTaskHungForTooLong=NotificationType((1,3,6,1,4,1,41263,1191))
ntxTrapFileServerUpgradeTaskHungForTooLong.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerUpgradeTaskHungForTooLong.setStatus(_B)
ntxTrapFileServerPDActivatesOnMultipleSites=NotificationType((1,3,6,1,4,1,41263,1192))
ntxTrapFileServerPDActivatesOnMultipleSites.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerPDActivatesOnMultipleSites.setStatus(_B)
ntxTrapFileServerPDEnabledOnNoncompatibleRemoteSite=NotificationType((1,3,6,1,4,1,41263,1193))
ntxTrapFileServerPDEnabledOnNoncompatibleRemoteSite.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerPDEnabledOnNoncompatibleRemoteSite.setStatus(_B)
ntxTrapHardwareClockFailure=NotificationType((1,3,6,1,4,1,41263,1194))
ntxTrapHardwareClockFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHardwareClockFailure.setStatus(_B)
ntxTrapWsmanConnectivityLost=NotificationType((1,3,6,1,4,1,41263,1195))
ntxTrapWsmanConnectivityLost.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapWsmanConnectivityLost.setStatus(_B)
ntxTrapVMMigrationCompromised=NotificationType((1,3,6,1,4,1,41263,1196))
ntxTrapVMMigrationCompromised.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMMigrationCompromised.setStatus(_B)
ntxTrapCVMMemoryReservationIsIncorrectlyConfigured=NotificationType((1,3,6,1,4,1,41263,1197))
ntxTrapCVMMemoryReservationIsIncorrectlyConfigured.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMMemoryReservationIsIncorrectlyConfigured.setStatus(_B)
ntxTrapHostMissingCriticalWindowsUpdates=NotificationType((1,3,6,1,4,1,41263,1198))
ntxTrapHostMissingCriticalWindowsUpdates.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHostMissingCriticalWindowsUpdates.setStatus(_B)
ntxTrapHostdServiceNotRunning=NotificationType((1,3,6,1,4,1,41263,1200))
ntxTrapHostdServiceNotRunning.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHostdServiceNotRunning.setStatus(_B)
ntxTrapIncorrectKerberosSetup=NotificationType((1,3,6,1,4,1,41263,1201))
ntxTrapIncorrectKerberosSetup.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIncorrectKerberosSetup.setStatus(_B)
ntxTrapUnableToConnectToVCenter=NotificationType((1,3,6,1,4,1,41263,1202))
ntxTrapUnableToConnectToVCenter.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapUnableToConnectToVCenter.setStatus(_B)
ntxTrapVMHasNonASCIIName=NotificationType((1,3,6,1,4,1,41263,1203))
ntxTrapVMHasNonASCIIName.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMHasNonASCIIName.setStatus(_B)
ntxTrapFanSpeedLow=NotificationType((1,3,6,1,4,1,41263,1204))
ntxTrapFanSpeedLow.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFanSpeedLow.setStatus(_B)
ntxTrapFanSpeedHigh=NotificationType((1,3,6,1,4,1,41263,1205))
ntxTrapFanSpeedHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFanSpeedHigh.setStatus(_B)
ntxTrapRAMFault=NotificationType((1,3,6,1,4,1,41263,1206))
ntxTrapRAMFault.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRAMFault.setStatus(_B)
ntxTrapPowerSupplyDown=NotificationType((1,3,6,1,4,1,41263,1207))
ntxTrapPowerSupplyDown.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPowerSupplyDown.setStatus(_B)
ntxTrapCPUTemperatureHigh=NotificationType((1,3,6,1,4,1,41263,1208))
ntxTrapCPUTemperatureHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCPUTemperatureHigh.setStatus(_B)
ntxTrapCPUTemperatureReadingError=NotificationType((1,3,6,1,4,1,41263,1209))
ntxTrapCPUTemperatureReadingError.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCPUTemperatureReadingError.setStatus(_B)
ntxTrapCPUVoltageAbnormal=NotificationType((1,3,6,1,4,1,41263,1210))
ntxTrapCPUVoltageAbnormal.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCPUVoltageAbnormal.setStatus(_B)
ntxTrapCPUVRMTemperatureHigh=NotificationType((1,3,6,1,4,1,41263,1211))
ntxTrapCPUVRMTemperatureHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCPUVRMTemperatureHigh.setStatus(_B)
ntxTrapRAMTemperatureHigh=NotificationType((1,3,6,1,4,1,41263,1212))
ntxTrapRAMTemperatureHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRAMTemperatureHigh.setStatus(_B)
ntxTrapRAMVoltageAbnormal=NotificationType((1,3,6,1,4,1,41263,1213))
ntxTrapRAMVoltageAbnormal.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRAMVoltageAbnormal.setStatus(_B)
ntxTrapRAMVRMTemperatureHigh=NotificationType((1,3,6,1,4,1,41263,1214))
ntxTrapRAMVRMTemperatureHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRAMVRMTemperatureHigh.setStatus(_B)
ntxTrapSystemTemperatureHigh=NotificationType((1,3,6,1,4,1,41263,1215))
ntxTrapSystemTemperatureHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSystemTemperatureHigh.setStatus(_B)
ntxTrapGPUTemperatureHigh=NotificationType((1,3,6,1,4,1,41263,1216))
ntxTrapGPUTemperatureHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapGPUTemperatureHigh.setStatus(_B)
ntxTrapIPMIError=NotificationType((1,3,6,1,4,1,41263,1217))
ntxTrapIPMIError.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIPMIError.setStatus(_B)
ntxTrapGPUFault=NotificationType((1,3,6,1,4,1,41263,1218))
ntxTrapGPUFault.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapGPUFault.setStatus(_B)
ntxTrapHighNumberOfCorrectableECCErrorsInLast1Day=NotificationType((1,3,6,1,4,1,41263,1219))
ntxTrapHighNumberOfCorrectableECCErrorsInLast1Day.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHighNumberOfCorrectableECCErrorsInLast1Day.setStatus(_B)
ntxTrapHighNumberOfCorrectableECCErrorsInLast10Days=NotificationType((1,3,6,1,4,1,41263,1220))
ntxTrapHighNumberOfCorrectableECCErrorsInLast10Days.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHighNumberOfCorrectableECCErrorsInLast10Days.setStatus(_B)
ntxTrapLicenseExpiry=NotificationType((1,3,6,1,4,1,41263,1221))
ntxTrapLicenseExpiry.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapLicenseExpiry.setStatus(_B)
ntxTrapLicenseFeatureViolation=NotificationType((1,3,6,1,4,1,41263,1222))
ntxTrapLicenseFeatureViolation.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapLicenseFeatureViolation.setStatus(_B)
ntxTrapLicenseStandbyMode=NotificationType((1,3,6,1,4,1,41263,1223))
ntxTrapLicenseStandbyMode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapLicenseStandbyMode.setStatus(_B)
ntxTrapLicenseNodeInvalid=NotificationType((1,3,6,1,4,1,41263,1224))
ntxTrapLicenseNodeInvalid.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapLicenseNodeInvalid.setStatus(_B)
ntxTrapSecondaryPDsNotInSync=NotificationType((1,3,6,1,4,1,41263,1225))
ntxTrapSecondaryPDsNotInSync.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSecondaryPDsNotInSync.setStatus(_B)
ntxTrapNoCheckpointSnapshotsOnMetroPDInLastHour=NotificationType((1,3,6,1,4,1,41263,1226))
ntxTrapNoCheckpointSnapshotsOnMetroPDInLastHour.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNoCheckpointSnapshotsOnMetroPDInLastHour.setStatus(_B)
ntxTrapCVMTimeDifferenceHigh=NotificationType((1,3,6,1,4,1,41263,1227))
ntxTrapCVMTimeDifferenceHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMTimeDifferenceHigh.setStatus(_B)
ntxTrapIPMIIPNotReachable=NotificationType((1,3,6,1,4,1,41263,1228))
ntxTrapIPMIIPNotReachable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIPMIIPNotReachable.setStatus(_B)
ntxTrapHostIPNotReachable=NotificationType((1,3,6,1,4,1,41263,1229))
ntxTrapHostIPNotReachable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHostIPNotReachable.setStatus(_B)
ntxTrapCVMNICSpeedLow=NotificationType((1,3,6,1,4,1,41263,1230))
ntxTrapCVMNICSpeedLow.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMNICSpeedLow.setStatus(_B)
ntxTrapCVMNotUplinkedToActive10GbpsLink=NotificationType((1,3,6,1,4,1,41263,1231))
ntxTrapCVMNotUplinkedToActive10GbpsLink.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMNotUplinkedToActive10GbpsLink.setStatus(_B)
ntxTrapNICErrorRateHigh=NotificationType((1,3,6,1,4,1,41263,1232))
ntxTrapNICErrorRateHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNICErrorRateHigh.setStatus(_B)
ntxTrapCVMHostSubnetMismatch=NotificationType((1,3,6,1,4,1,41263,1233))
ntxTrapCVMHostSubnetMismatch.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMHostSubnetMismatch.setStatus(_B)
ntxTrapNICLinkDown=NotificationType((1,3,6,1,4,1,41263,1234))
ntxTrapNICLinkDown.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNICLinkDown.setStatus(_B)
ntxTrapCVMIPAddressMismatch=NotificationType((1,3,6,1,4,1,41263,1235))
ntxTrapCVMIPAddressMismatch.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMIPAddressMismatch.setStatus(_B)
ntxTrapZeusConfigMismatch=NotificationType((1,3,6,1,4,1,41263,1236))
ntxTrapZeusConfigMismatch.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapZeusConfigMismatch.setStatus(_B)
ntxTrapIPMIIPAddressMismatch=NotificationType((1,3,6,1,4,1,41263,1237))
ntxTrapIPMIIPAddressMismatch.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIPMIIPAddressMismatch.setStatus(_B)
ntxTrapJumboFramesEnabled=NotificationType((1,3,6,1,4,1,41263,1238))
ntxTrapJumboFramesEnabled.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapJumboFramesEnabled.setStatus(_B)
ntxTrapNICFlaps=NotificationType((1,3,6,1,4,1,41263,1239))
ntxTrapNICFlaps.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNICFlaps.setStatus(_B)
ntxTrapIncorrectNTPConfiguration=NotificationType((1,3,6,1,4,1,41263,1240))
ntxTrapIncorrectNTPConfiguration.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIncorrectNTPConfiguration.setStatus(_B)
ntxTrapCVMIsUnreachable=NotificationType((1,3,6,1,4,1,41263,1241))
ntxTrapCVMIsUnreachable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMIsUnreachable.setStatus(_B)
ntxTrapNGTInstallationRequired=NotificationType((1,3,6,1,4,1,41263,1242))
ntxTrapNGTInstallationRequired.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNGTInstallationRequired.setStatus(_B)
ntxTrapTooManyFilesInTheProtectionDomain=NotificationType((1,3,6,1,4,1,41263,1243))
ntxTrapTooManyFilesInTheProtectionDomain.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTooManyFilesInTheProtectionDomain.setStatus(_B)
ntxTrapTooManyFilesInTheConsistencyGroup=NotificationType((1,3,6,1,4,1,41263,1244))
ntxTrapTooManyFilesInTheConsistencyGroup.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTooManyFilesInTheConsistencyGroup.setStatus(_B)
ntxTrapFoundOldClonesOnCluster=NotificationType((1,3,6,1,4,1,41263,1245))
ntxTrapFoundOldClonesOnCluster.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFoundOldClonesOnCluster.setStatus(_B)
ntxTrapTooManyClonesOnCluster=NotificationType((1,3,6,1,4,1,41263,1246))
ntxTrapTooManyClonesOnCluster.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTooManyClonesOnCluster.setStatus(_B)
ntxTrapProtectingVMsThatAreUsingSharedVHDXDisksIsUnsupported=NotificationType((1,3,6,1,4,1,41263,1247))
ntxTrapProtectingVMsThatAreUsingSharedVHDXDisksIsUnsupported.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectingVMsThatAreUsingSharedVHDXDisksIsUnsupported.setStatus(_B)
ntxTrapSymlinksFoundOnMetrovstoreProtectedContainer=NotificationType((1,3,6,1,4,1,41263,1248))
ntxTrapSymlinksFoundOnMetrovstoreProtectedContainer.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSymlinksFoundOnMetrovstoreProtectedContainer.setStatus(_B)
ntxTrapAgedThirdpartyBackupSnapshotsPresent=NotificationType((1,3,6,1,4,1,41263,1249))
ntxTrapAgedThirdpartyBackupSnapshotsPresent.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAgedThirdpartyBackupSnapshotsPresent.setStatus(_B)
ntxTrapProtectionDomainContainsMoreThanOneEntity=NotificationType((1,3,6,1,4,1,41263,1250))
ntxTrapProtectionDomainContainsMoreThanOneEntity.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainContainsMoreThanOneEntity.setStatus(_B)
ntxTrapRemoteSiteConnectivityNotNormal=NotificationType((1,3,6,1,4,1,41263,1251))
ntxTrapRemoteSiteConnectivityNotNormal.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemoteSiteConnectivityNotNormal.setStatus(_B)
ntxTrapCPUAverageLoadHighOnControllerVM=NotificationType((1,3,6,1,4,1,41263,1252))
ntxTrapCPUAverageLoadHighOnControllerVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCPUAverageLoadHighOnControllerVM.setStatus(_B)
ntxTrapCPUAverageLoadCriticallyHighOnControllerVM=NotificationType((1,3,6,1,4,1,41263,1253))
ntxTrapCPUAverageLoadCriticallyHighOnControllerVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCPUAverageLoadCriticallyHighOnControllerVM.setStatus(_B)
ntxTrapControllerVMCertificateExpiring=NotificationType((1,3,6,1,4,1,41263,1254))
ntxTrapControllerVMCertificateExpiring.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapControllerVMCertificateExpiring.setStatus(_B)
ntxTrapClusterCertificateExpiring=NotificationType((1,3,6,1,4,1,41263,1255))
ntxTrapClusterCertificateExpiring.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapClusterCertificateExpiring.setStatus(_B)
ntxTrapRemoteSiteInsecure=NotificationType((1,3,6,1,4,1,41263,1256))
ntxTrapRemoteSiteInsecure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemoteSiteInsecure.setStatus(_B)
ntxTrapMixedSelfEncryptingDriveHardware=NotificationType((1,3,6,1,4,1,41263,1257))
ntxTrapMixedSelfEncryptingDriveHardware.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMixedSelfEncryptingDriveHardware.setStatus(_B)
ntxTrapKeyManagementServerUnavailable=NotificationType((1,3,6,1,4,1,41263,1258))
ntxTrapKeyManagementServerUnavailable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapKeyManagementServerUnavailable.setStatus(_B)
ntxTrapNumberOfOrphanedEgroupsIsOverTheRecommendedThreshold=NotificationType((1,3,6,1,4,1,41263,1259))
ntxTrapNumberOfOrphanedEgroupsIsOverTheRecommendedThreshold.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNumberOfOrphanedEgroupsIsOverTheRecommendedThreshold.setStatus(_B)
ntxTrapCVMRAMUsageHigh=NotificationType((1,3,6,1,4,1,41263,1260))
ntxTrapCVMRAMUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMRAMUsageHigh.setStatus(_B)
ntxTrapClusterServicesAreDown=NotificationType((1,3,6,1,4,1,41263,1261))
ntxTrapClusterServicesAreDown.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapClusterServicesAreDown.setStatus(_B)
ntxTrapKernelMemoryUsageHigh=NotificationType((1,3,6,1,4,1,41263,1262))
ntxTrapKernelMemoryUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapKernelMemoryUsageHigh.setStatus(_B)
ntxTrapCVMServicesRestartingFrequently=NotificationType((1,3,6,1,4,1,41263,1263))
ntxTrapCVMServicesRestartingFrequently.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMServicesRestartingFrequently.setStatus(_B)
ntxTrapClusterServiceRestartingFrequently=NotificationType((1,3,6,1,4,1,41263,1264))
ntxTrapClusterServiceRestartingFrequently.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapClusterServiceRestartingFrequently.setStatus(_B)
ntxTrapCVMConnectivityFailure=NotificationType((1,3,6,1,4,1,41263,1265))
ntxTrapCVMConnectivityFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMConnectivityFailure.setStatus(_B)
ntxTrapStorageContainerReplicationFactorLow=NotificationType((1,3,6,1,4,1,41263,1266))
ntxTrapStorageContainerReplicationFactorLow.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapStorageContainerReplicationFactorLow.setStatus(_B)
ntxTrapCVMRebooted=NotificationType((1,3,6,1,4,1,41263,1267))
ntxTrapCVMRebooted.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMRebooted.setStatus(_B)
ntxTrapRemoteSupportEnabled=NotificationType((1,3,6,1,4,1,41263,1268))
ntxTrapRemoteSupportEnabled.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemoteSupportEnabled.setStatus(_B)
ntxTrapDatastoreVMCountHigh=NotificationType((1,3,6,1,4,1,41263,1269))
ntxTrapDatastoreVMCountHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDatastoreVMCountHigh.setStatus(_B)
ntxTrapHighVDiskCountInTheCluster=NotificationType((1,3,6,1,4,1,41263,1270))
ntxTrapHighVDiskCountInTheCluster.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHighVDiskCountInTheCluster.setStatus(_B)
ntxTrapAllFlashNodesMixedWithNonallflashNodes=NotificationType((1,3,6,1,4,1,41263,1271))
ntxTrapAllFlashNodesMixedWithNonallflashNodes.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAllFlashNodesMixedWithNonallflashNodes.setStatus(_B)
ntxTrapHaswellAndBroadwellCPUsAreInTheSameChassis=NotificationType((1,3,6,1,4,1,41263,1272))
ntxTrapHaswellAndBroadwellCPUsAreInTheSameChassis.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHaswellAndBroadwellCPUsAreInTheSameChassis.setStatus(_B)
ntxTrapTimeSinceLastCuratorScanIsBeyondThreshold=NotificationType((1,3,6,1,4,1,41263,1273))
ntxTrapTimeSinceLastCuratorScanIsBeyondThreshold.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTimeSinceLastCuratorScanIsBeyondThreshold.setStatus(_B)
ntxTrapSnapshotChainHeightExceedsThreshold=NotificationType((1,3,6,1,4,1,41263,1274))
ntxTrapSnapshotChainHeightExceedsThreshold.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSnapshotChainHeightExceedsThreshold.setStatus(_B)
ntxTrapDIMMsOfDifferentTypesInOneMemoryChannel=NotificationType((1,3,6,1,4,1,41263,1275))
ntxTrapDIMMsOfDifferentTypesInOneMemoryChannel.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDIMMsOfDifferentTypesInOneMemoryChannel.setStatus(_B)
ntxTrapZookeeperNotActiveOnAllCVMs=NotificationType((1,3,6,1,4,1,41263,1276))
ntxTrapZookeeperNotActiveOnAllCVMs.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapZookeeperNotActiveOnAllCVMs.setStatus(_B)
ntxTrapM60GPUConfigurationWrongOnTheNode=NotificationType((1,3,6,1,4,1,41263,1277))
ntxTrapM60GPUConfigurationWrongOnTheNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapM60GPUConfigurationWrongOnTheNode.setStatus(_B)
ntxTrapM10GPUConfigurationWrongOnTheNode=NotificationType((1,3,6,1,4,1,41263,1278))
ntxTrapM10GPUConfigurationWrongOnTheNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapM10GPUConfigurationWrongOnTheNode.setStatus(_B)
ntxTrapM10AndM60GPUsInstalledOnTheSameNode=NotificationType((1,3,6,1,4,1,41263,1279))
ntxTrapM10AndM60GPUsInstalledOnTheSameNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapM10AndM60GPUsInstalledOnTheSameNode.setStatus(_B)
ntxTrapPCVCPUAvailabilityCheck=NotificationType((1,3,6,1,4,1,41263,1280))
ntxTrapPCVCPUAvailabilityCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPCVCPUAvailabilityCheck.setStatus(_B)
ntxTrapPCSufficientDiskSpaceCheck=NotificationType((1,3,6,1,4,1,41263,1281))
ntxTrapPCSufficientDiskSpaceCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPCSufficientDiskSpaceCheck.setStatus(_B)
ntxTrapPCMemoryAvailabilityCheck=NotificationType((1,3,6,1,4,1,41263,1282))
ntxTrapPCMemoryAvailabilityCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPCMemoryAvailabilityCheck.setStatus(_B)
ntxTrapPCVMLimitCheck=NotificationType((1,3,6,1,4,1,41263,1283))
ntxTrapPCVMLimitCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPCVMLimitCheck.setStatus(_B)
ntxTrapStoragePoolSpaceUsageExceeded=NotificationType((1,3,6,1,4,1,41263,1284))
ntxTrapStoragePoolSpaceUsageExceeded.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapStoragePoolSpaceUsageExceeded.setStatus(_B)
ntxTrapDiskInodeUsageHigh=NotificationType((1,3,6,1,4,1,41263,1285))
ntxTrapDiskInodeUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDiskInodeUsageHigh.setStatus(_B)
ntxTrapDiskUnused=NotificationType((1,3,6,1,4,1,41263,1286))
ntxTrapDiskUnused.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDiskUnused.setStatus(_B)
ntxTrapFusionIOWearHigh=NotificationType((1,3,6,1,4,1,41263,1287))
ntxTrapFusionIOWearHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFusionIOWearHigh.setStatus(_B)
ntxTrapFusionIOTemperatureHigh=NotificationType((1,3,6,1,4,1,41263,1288))
ntxTrapFusionIOTemperatureHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFusionIOTemperatureHigh.setStatus(_B)
ntxTrapFusionIOReserveLow=NotificationType((1,3,6,1,4,1,41263,1289))
ntxTrapFusionIOReserveLow.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFusionIOReserveLow.setStatus(_B)
ntxTrapFusionIODiskFailed=NotificationType((1,3,6,1,4,1,41263,1290))
ntxTrapFusionIODiskFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFusionIODiskFailed.setStatus(_B)
ntxTrapStorageContainerSpaceUsageExceededNCCCheck=NotificationType((1,3,6,1,4,1,41263,1291))
ntxTrapStorageContainerSpaceUsageExceededNCCCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapStorageContainerSpaceUsageExceededNCCCheck.setStatus(_B)
ntxTrapDataDiskSpaceUsageHigh=NotificationType((1,3,6,1,4,1,41263,1292))
ntxTrapDataDiskSpaceUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDataDiskSpaceUsageHigh.setStatus(_B)
ntxTrapSystemPartitionsSpaceUsageHigh=NotificationType((1,3,6,1,4,1,41263,1293))
ntxTrapSystemPartitionsSpaceUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSystemPartitionsSpaceUsageHigh.setStatus(_B)
ntxTrapStorageDeviceHealthBad=NotificationType((1,3,6,1,4,1,41263,1294))
ntxTrapStorageDeviceHealthBad.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapStorageDeviceHealthBad.setStatus(_B)
ntxTrapIntelSSDWearHigh=NotificationType((1,3,6,1,4,1,41263,1295))
ntxTrapIntelSSDWearHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIntelSSDWearHigh.setStatus(_B)
ntxTrapIntelSSDTemperatureHigh=NotificationType((1,3,6,1,4,1,41263,1296))
ntxTrapIntelSSDTemperatureHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIntelSSDTemperatureHigh.setStatus(_B)
ntxTrapCVMBootRaidDegraded=NotificationType((1,3,6,1,4,1,41263,1297))
ntxTrapCVMBootRaidDegraded.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMBootRaidDegraded.setStatus(_B)
ntxTrapAbnormalHostBootRAIDState=NotificationType((1,3,6,1,4,1,41263,1298))
ntxTrapAbnormalHostBootRAIDState.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAbnormalHostBootRAIDState.setStatus(_B)
ntxTrapHypervisorDiskSpaceUsageHigh=NotificationType((1,3,6,1,4,1,41263,1299))
ntxTrapHypervisorDiskSpaceUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHypervisorDiskSpaceUsageHigh.setStatus(_B)
ntxTrapInvalidDriveConfiguration=NotificationType((1,3,6,1,4,1,41263,1300))
ntxTrapInvalidDriveConfiguration.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapInvalidDriveConfiguration.setStatus(_B)
ntxTrapSATADOMHasFailed=NotificationType((1,3,6,1,4,1,41263,1301))
ntxTrapSATADOMHasFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSATADOMHasFailed.setStatus(_B)
ntxTrapSATADOMNotReachable=NotificationType((1,3,6,1,4,1,41263,1302))
ntxTrapSATADOMNotReachable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSATADOMNotReachable.setStatus(_B)
ntxTrapSATADOMHasWornOut=NotificationType((1,3,6,1,4,1,41263,1303))
ntxTrapSATADOMHasWornOut.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSATADOMHasWornOut.setStatus(_B)
ntxTrapSATADOMSL3IE3HasHighWear=NotificationType((1,3,6,1,4,1,41263,1304))
ntxTrapSATADOMSL3IE3HasHighWear.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSATADOMSL3IE3HasHighWear.setStatus(_B)
ntxTrapSATADOMNeedsFirmwareVersionUpgradeToS170119=NotificationType((1,3,6,1,4,1,41263,1305))
ntxTrapSATADOMNeedsFirmwareVersionUpgradeToS170119.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSATADOMNeedsFirmwareVersionUpgradeToS170119.setStatus(_B)
ntxTrapmodelFirmwareVersionIsNotTheLatestFirmwareVersion=NotificationType((1,3,6,1,4,1,41263,1306))
ntxTrapmodelFirmwareVersionIsNotTheLatestFirmwareVersion.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapmodelFirmwareVersionIsNotTheLatestFirmwareVersion.setStatus(_B)
ntxTrapSATADOMHasGuestVM=NotificationType((1,3,6,1,4,1,41263,1307))
ntxTrapSATADOMHasGuestVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSATADOMHasGuestVM.setStatus(_B)
ntxTrapSASConnectivityNotNormal=NotificationType((1,3,6,1,4,1,41263,1308))
ntxTrapSASConnectivityNotNormal.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSASConnectivityNotNormal.setStatus(_B)
ntxTrapSamsungPM1633DriveHasWornOut=NotificationType((1,3,6,1,4,1,41263,1309))
ntxTrapSamsungPM1633DriveHasWornOut.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSamsungPM1633DriveHasWornOut.setStatus(_B)
ntxTrapToshibaPM3DriveHasWornOut=NotificationType((1,3,6,1,4,1,41263,1310))
ntxTrapToshibaPM3DriveHasWornOut.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapToshibaPM3DriveHasWornOut.setStatus(_B)
ntxTrapToshibaPM4DriveHasWornOut=NotificationType((1,3,6,1,4,1,41263,1311))
ntxTrapToshibaPM4DriveHasWornOut.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapToshibaPM4DriveHasWornOut.setStatus(_B)
ntxTrapSM863DriveHasWornOut=NotificationType((1,3,6,1,4,1,41263,1312))
ntxTrapSM863DriveHasWornOut.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSM863DriveHasWornOut.setStatus(_B)
ntxTrapMicron5100DriveHasWornOut=NotificationType((1,3,6,1,4,1,41263,1313))
ntxTrapMicron5100DriveHasWornOut.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMicron5100DriveHasWornOut.setStatus(_B)
ntxTrapIntelSSDS3610OnipaddressHasConfigurationProblems=NotificationType((1,3,6,1,4,1,41263,1314))
ntxTrapIntelSSDS3610OnipaddressHasConfigurationProblems.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIntelSSDS3610OnipaddressHasConfigurationProblems.setStatus(_B)
ntxTrapOfflineDiskInACluster=NotificationType((1,3,6,1,4,1,41263,1315))
ntxTrapOfflineDiskInACluster.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapOfflineDiskInACluster.setStatus(_B)
ntxTrapNVMeDriveHasErrors=NotificationType((1,3,6,1,4,1,41263,1316))
ntxTrapNVMeDriveHasErrors.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNVMeDriveHasErrors.setStatus(_B)
ntxTrapHypervisorBootDriveWearHigh=NotificationType((1,3,6,1,4,1,41263,1317))
ntxTrapHypervisorBootDriveWearHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHypervisorBootDriveWearHigh.setStatus(_B)
ntxTrapVMIsProtectedInMultiplePDs=NotificationType((1,3,6,1,4,1,41263,1318))
ntxTrapVMIsProtectedInMultiplePDs.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMIsProtectedInMultiplePDs.setStatus(_B)
ntxTrapProtectedVMsNotOnNutanixStorage=NotificationType((1,3,6,1,4,1,41263,1319))
ntxTrapProtectedVMsNotOnNutanixStorage.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectedVMsNotOnNutanixStorage.setStatus(_B)
ntxTrapClusterConnectivityStatus=NotificationType((1,3,6,1,4,1,41263,1320))
ntxTrapClusterConnectivityStatus.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapClusterConnectivityStatus.setStatus(_B)
ntxTrapHighGarbageDueToErasureCoding=NotificationType((1,3,6,1,4,1,41263,1321))
ntxTrapHighGarbageDueToErasureCoding.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHighGarbageDueToErasureCoding.setStatus(_B)
ntxTrapA1175=NotificationType((1,3,6,1,4,1,41263,1322))
ntxTrapA1175.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA1175.setStatus(_B)
ntxTrapInvalidErasureCodeDelayParameter=NotificationType((1,3,6,1,4,1,41263,1323))
ntxTrapInvalidErasureCodeDelayParameter.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapInvalidErasureCodeDelayParameter.setStatus(_B)
ntxTrapFlashModeUsageLimitExceeded=NotificationType((1,3,6,1,4,1,41263,1325))
ntxTrapFlashModeUsageLimitExceeded.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFlashModeUsageLimitExceeded.setStatus(_B)
ntxTrapFlashmodeenabledVMPowerStatus=NotificationType((1,3,6,1,4,1,41263,1326))
ntxTrapFlashmodeenabledVMPowerStatus.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFlashmodeenabledVMPowerStatus.setStatus(_B)
ntxTrapStoragePoolFlashModeConfiguration=NotificationType((1,3,6,1,4,1,41263,1327))
ntxTrapStoragePoolFlashModeConfiguration.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapStoragePoolFlashModeConfiguration.setStatus(_B)
ntxTrapTestNotificationTitle=NotificationType((1,3,6,1,4,1,41263,1328))
ntxTrapTestNotificationTitle.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTestNotificationTitle.setStatus(_B)
ntxTrapIncompatibleFileServer=NotificationType((1,3,6,1,4,1,41263,1329))
ntxTrapIncompatibleFileServer.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIncompatibleFileServer.setStatus(_B)
ntxTrapA1202=NotificationType((1,3,6,1,4,1,41263,1330))
ntxTrapA1202.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA1202.setStatus(_B)
ntxTrapFirmwareVersionOfSamsungPM1633DrivesIsOld=NotificationType((1,3,6,1,4,1,41263,1331))
ntxTrapFirmwareVersionOfSamsungPM1633DrivesIsOld.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFirmwareVersionOfSamsungPM1633DrivesIsOld.setStatus(_B)
ntxTrapMoreThanOneTypeOfToshibaPM4DrivesInstalledOnTheNode=NotificationType((1,3,6,1,4,1,41263,1332))
ntxTrapMoreThanOneTypeOfToshibaPM4DrivesInstalledOnTheNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMoreThanOneTypeOfToshibaPM4DrivesInstalledOnTheNode.setStatus(_B)
ntxTrapA1200=NotificationType((1,3,6,1,4,1,41263,1333))
ntxTrapA1200.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA1200.setStatus(_B)
ntxTrapFirmwareVersionOfToshibaPM4DrivesIsOld=NotificationType((1,3,6,1,4,1,41263,1334))
ntxTrapFirmwareVersionOfToshibaPM4DrivesIsOld.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFirmwareVersionOfToshibaPM4DrivesIsOld.setStatus(_B)
ntxTrapFirmwareVersionOfSM863DrivesIsOld=NotificationType((1,3,6,1,4,1,41263,1335))
ntxTrapFirmwareVersionOfSM863DrivesIsOld.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFirmwareVersionOfSM863DrivesIsOld.setStatus(_B)
ntxTrapFewerThanTwoNonSamsungPM863aDrivesInstalledOnTheNode=NotificationType((1,3,6,1,4,1,41263,1336))
ntxTrapFewerThanTwoNonSamsungPM863aDrivesInstalledOnTheNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFewerThanTwoNonSamsungPM863aDrivesInstalledOnTheNode.setStatus(_B)
ntxTrapFirmwareVersionOfPM863aDrivesIsOld=NotificationType((1,3,6,1,4,1,41263,1337))
ntxTrapFirmwareVersionOfPM863aDrivesIsOld.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFirmwareVersionOfPM863aDrivesIsOld.setStatus(_B)
ntxTrapPM863aDriveHasWornOut=NotificationType((1,3,6,1,4,1,41263,1338))
ntxTrapPM863aDriveHasWornOut.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPM863aDriveHasWornOut.setStatus(_B)
ntxTrapOfflineDiskInCluster=NotificationType((1,3,6,1,4,1,41263,1339))
ntxTrapOfflineDiskInCluster.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapOfflineDiskInCluster.setStatus(_B)
ntxTrapMetadataDisksNotMountedOnCVM=NotificationType((1,3,6,1,4,1,41263,1340))
ntxTrapMetadataDisksNotMountedOnCVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetadataDisksNotMountedOnCVM.setStatus(_B)
ntxTrapFileServerUpgradeTaskIsNotProgressing=NotificationType((1,3,6,1,4,1,41263,1341))
ntxTrapFileServerUpgradeTaskIsNotProgressing.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerUpgradeTaskIsNotProgressing.setStatus(_B)
ntxTrapA130129=NotificationType((1,3,6,1,4,1,41263,1342))
ntxTrapA130129.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA130129.setStatus(_B)
ntxTrapA130118=NotificationType((1,3,6,1,4,1,41263,1343))
ntxTrapA130118.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA130118.setStatus(_B)
ntxTrapFileServerCloneFailed=NotificationType((1,3,6,1,4,1,41263,1344))
ntxTrapFileServerCloneFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerCloneFailed.setStatus(_B)
ntxTrapFileServerRenameFailed=NotificationType((1,3,6,1,4,1,41263,1345))
ntxTrapFileServerRenameFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerRenameFailed.setStatus(_B)
ntxTrapA130097=NotificationType((1,3,6,1,4,1,41263,1346))
ntxTrapA130097.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA130097.setStatus(_B)
ntxTrapA130095=NotificationType((1,3,6,1,4,1,41263,1347))
ntxTrapA130095.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA130095.setStatus(_B)
ntxTrapA130131=NotificationType((1,3,6,1,4,1,41263,1348))
ntxTrapA130131.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA130131.setStatus(_B)
ntxTrapA130137=NotificationType((1,3,6,1,4,1,41263,1349))
ntxTrapA130137.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA130137.setStatus(_B)
ntxTrapA106030=NotificationType((1,3,6,1,4,1,41263,1350))
ntxTrapA106030.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA106030.setStatus(_B)
ntxTrapA106033=NotificationType((1,3,6,1,4,1,41263,1351))
ntxTrapA106033.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA106033.setStatus(_B)
ntxTrapA111047=NotificationType((1,3,6,1,4,1,41263,1352))
ntxTrapA111047.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA111047.setStatus(_B)
ntxTrapA110219=NotificationType((1,3,6,1,4,1,41263,1353))
ntxTrapA110219.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA110219.setStatus(_B)
ntxTrapA110251=NotificationType((1,3,6,1,4,1,41263,1354))
ntxTrapA110251.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA110251.setStatus(_B)
ntxTrapA111044=NotificationType((1,3,6,1,4,1,41263,1355))
ntxTrapA111044.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA111044.setStatus(_B)
ntxTrapMaximumConnectionsLimitReachedOnAFileServerVM=NotificationType((1,3,6,1,4,1,41263,1356))
ntxTrapMaximumConnectionsLimitReachedOnAFileServerVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMaximumConnectionsLimitReachedOnAFileServerVM.setStatus(_B)
ntxTrapFailedToAddOneOrMoreFileServerAdministratorUsersOrGroups=NotificationType((1,3,6,1,4,1,41263,1357))
ntxTrapFailedToAddOneOrMoreFileServerAdministratorUsersOrGroups.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailedToAddOneOrMoreFileServerAdministratorUsersOrGroups.setStatus(_B)
ntxTrapUserDefinedAlert=NotificationType((1,3,6,1,4,1,41263,1358))
ntxTrapUserDefinedAlert.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapUserDefinedAlert.setStatus(_B)
ntxTrapFileServerNetworkChangeFailed=NotificationType((1,3,6,1,4,1,41263,1359))
ntxTrapFileServerNetworkChangeFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerNetworkChangeFailed.setStatus(_B)
ntxTrapSnapshotCreationDelayed=NotificationType((1,3,6,1,4,1,41263,1360))
ntxTrapSnapshotCreationDelayed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSnapshotCreationDelayed.setStatus(_B)
ntxTrapA130146=NotificationType((1,3,6,1,4,1,41263,1361))
ntxTrapA130146.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA130146.setStatus(_B)
ntxTrapA130143=NotificationType((1,3,6,1,4,1,41263,1362))
ntxTrapA130143.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA130143.setStatus(_B)
ntxTrapA130144=NotificationType((1,3,6,1,4,1,41263,1363))
ntxTrapA130144.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA130144.setStatus(_B)
ntxTrapFoundationVersionsInconsistent=NotificationType((1,3,6,1,4,1,41263,1364))
ntxTrapFoundationVersionsInconsistent.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFoundationVersionsInconsistent.setStatus(_B)
ntxTrapMetadataDiskUsageIsHigherThanTheSpecifiedLimit=NotificationType((1,3,6,1,4,1,41263,1365))
ntxTrapMetadataDiskUsageIsHigherThanTheSpecifiedLimit.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetadataDiskUsageIsHigherThanTheSpecifiedLimit.setStatus(_B)
ntxTrapVolumeGroupSpaceUsageExceeded=NotificationType((1,3,6,1,4,1,41263,1366))
ntxTrapVolumeGroupSpaceUsageExceeded.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVolumeGroupSpaceUsageExceeded.setStatus(_B)
ntxTrapVSSContainersHaveHighFileCount=NotificationType((1,3,6,1,4,1,41263,1367))
ntxTrapVSSContainersHaveHighFileCount.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVSSContainersHaveHighFileCount.setStatus(_B)
ntxTrapCVMIpAddressIsUnreachable=NotificationType((1,3,6,1,4,1,41263,1368))
ntxTrapCVMIpAddressIsUnreachable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMIpAddressIsUnreachable.setStatus(_B)
ntxTrapIncorrectClusterInformationInTheRemoteSite=NotificationType((1,3,6,1,4,1,41263,1369))
ntxTrapIncorrectClusterInformationInTheRemoteSite.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIncorrectClusterInformationInTheRemoteSite.setStatus(_B)
ntxTrapProtectionDomainActivationMayFailAsConflictingFilesExist=NotificationType((1,3,6,1,4,1,41263,1370))
ntxTrapProtectionDomainActivationMayFailAsConflictingFilesExist.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainActivationMayFailAsConflictingFilesExist.setStatus(_B)
ntxTrapVNUMAVMPinningFailure=NotificationType((1,3,6,1,4,1,41263,1371))
ntxTrapVNUMAVMPinningFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVNUMAVMPinningFailure.setStatus(_B)
ntxTrapGuestPowerOperationThroughNGTFailed=NotificationType((1,3,6,1,4,1,41263,1372))
ntxTrapGuestPowerOperationThroughNGTFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapGuestPowerOperationThroughNGTFailed.setStatus(_B)
ntxTrapMellanoxNICNotInstalledOrWithWrongTypeOnHostMachine=NotificationType((1,3,6,1,4,1,41263,1373))
ntxTrapMellanoxNICNotInstalledOrWithWrongTypeOnHostMachine.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMellanoxNICNotInstalledOrWithWrongTypeOnHostMachine.setStatus(_B)
ntxTrapNonComplianceWithHostAffinityPolicies=NotificationType((1,3,6,1,4,1,41263,1374))
ntxTrapNonComplianceWithHostAffinityPolicies.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNonComplianceWithHostAffinityPolicies.setStatus(_B)
ntxTrapPolicyNotApplicableToAnyHost=NotificationType((1,3,6,1,4,1,41263,1375))
ntxTrapPolicyNotApplicableToAnyHost.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPolicyNotApplicableToAnyHost.setStatus(_B)
ntxTrapTheClusterIsNotSynchronizingTimeWithAnyExternalServers=NotificationType((1,3,6,1,4,1,41263,1376))
ntxTrapTheClusterIsNotSynchronizingTimeWithAnyExternalServers.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTheClusterIsNotSynchronizingTimeWithAnyExternalServers.setStatus(_B)
ntxTrapTheHypervisorIsNotSynchronizingTimeWithAnyExternalServers=NotificationType((1,3,6,1,4,1,41263,1377))
ntxTrapTheHypervisorIsNotSynchronizingTimeWithAnyExternalServers.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTheHypervisorIsNotSynchronizingTimeWithAnyExternalServers.setStatus(_B)
ntxTrapProtectionDomainActivationOrMigrationFailure=NotificationType((1,3,6,1,4,1,41263,1378))
ntxTrapProtectionDomainActivationOrMigrationFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainActivationOrMigrationFailure.setStatus(_B)
ntxTrapProtectionDomainContainsMoreThanTheSpecifiedVMs=NotificationType((1,3,6,1,4,1,41263,1379))
ntxTrapProtectionDomainContainsMoreThanTheSpecifiedVMs.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainContainsMoreThanTheSpecifiedVMs.setStatus(_B)
ntxTrapSATADOMML3SEHasHighWear=NotificationType((1,3,6,1,4,1,41263,1380))
ntxTrapSATADOMML3SEHasHighWear.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSATADOMML3SEHasHighWear.setStatus(_B)
ntxTrapFileServerAntiVirusScanQueueFullOnFSVM=NotificationType((1,3,6,1,4,1,41263,1381))
ntxTrapFileServerAntiVirusScanQueueFullOnFSVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerAntiVirusScanQueueFullOnFSVM.setStatus(_B)
ntxTrapFileServerAntiVirusScanQueuePilingUpOnFSVM=NotificationType((1,3,6,1,4,1,41263,1382))
ntxTrapFileServerAntiVirusScanQueuePilingUpOnFSVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerAntiVirusScanQueuePilingUpOnFSVM.setStatus(_B)
ntxTrapFileServerAntiVirusExcessiveQuarantinedUnquarantinedFiles=NotificationType((1,3,6,1,4,1,41263,1383))
ntxTrapFileServerAntiVirusExcessiveQuarantinedUnquarantinedFiles.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerAntiVirusExcessiveQuarantinedUnquarantinedFiles.setStatus(_B)
ntxTrapA160048=NotificationType((1,3,6,1,4,1,41263,1384))
ntxTrapA160048.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA160048.setStatus(_B)
ntxTrapFailedToTakeTheApplicationconsistentSnapshotForTheVM=NotificationType((1,3,6,1,4,1,41263,1385))
ntxTrapFailedToTakeTheApplicationconsistentSnapshotForTheVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailedToTakeTheApplicationconsistentSnapshotForTheVM.setStatus(_B)
ntxTrapRemovalOfTheTemporaryHypervisorSnapshotFailedForTheVM=NotificationType((1,3,6,1,4,1,41263,1386))
ntxTrapRemovalOfTheTemporaryHypervisorSnapshotFailedForTheVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemovalOfTheTemporaryHypervisorSnapshotFailedForTheVM.setStatus(_B)
ntxTrapCloudDiskUsageIsNearingTheThreshold=NotificationType((1,3,6,1,4,1,41263,1387))
ntxTrapCloudDiskUsageIsNearingTheThreshold.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCloudDiskUsageIsNearingTheThreshold.setStatus(_B)
ntxTrapDIMMsHaveInvalidPartNumber=NotificationType((1,3,6,1,4,1,41263,1388))
ntxTrapDIMMsHaveInvalidPartNumber.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDIMMsHaveInvalidPartNumber.setStatus(_B)
ntxTrapAzureCloudControllerVMHasSmallerDisks=NotificationType((1,3,6,1,4,1,41263,1389))
ntxTrapAzureCloudControllerVMHasSmallerDisks.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAzureCloudControllerVMHasSmallerDisks.setStatus(_B)
ntxTrapFirmwareVersionOfSM863OrSM863aDrivesIsOld=NotificationType((1,3,6,1,4,1,41263,1390))
ntxTrapFirmwareVersionOfSM863OrSM863aDrivesIsOld.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFirmwareVersionOfSM863OrSM863aDrivesIsOld.setStatus(_B)
ntxTrapM2Micron5100HostBootDriveHasWornOut=NotificationType((1,3,6,1,4,1,41263,1391))
ntxTrapM2Micron5100HostBootDriveHasWornOut.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapM2Micron5100HostBootDriveHasWornOut.setStatus(_B)
ntxTrapM2IntelS3520HostBootDriveHasWornOut=NotificationType((1,3,6,1,4,1,41263,1392))
ntxTrapM2IntelS3520HostBootDriveHasWornOut.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapM2IntelS3520HostBootDriveHasWornOut.setStatus(_B)
ntxTrapClusterInOverrideMode=NotificationType((1,3,6,1,4,1,41263,1393))
ntxTrapClusterInOverrideMode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapClusterInOverrideMode.setStatus(_B)
ntxTrapMultipleVcentersDiscovered=NotificationType((1,3,6,1,4,1,41263,1394))
ntxTrapMultipleVcentersDiscovered.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMultipleVcentersDiscovered.setStatus(_B)
ntxTrapProtectionRuleTestAlertTitle=NotificationType((1,3,6,1,4,1,41263,1395))
ntxTrapProtectionRuleTestAlertTitle.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionRuleTestAlertTitle.setStatus(_B)
ntxTrapExternalClientAuthentication=NotificationType((1,3,6,1,4,1,41263,1396))
ntxTrapExternalClientAuthentication.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapExternalClientAuthentication.setStatus(_B)
ntxTrapTwoNodeClusterStateChangeToclusteroperationmode=NotificationType((1,3,6,1,4,1,41263,1397))
ntxTrapTwoNodeClusterStateChangeToclusteroperationmode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTwoNodeClusterStateChangeToclusteroperationmode.setStatus(_B)
ntxTrapWitnessIsUnreachableFromNode=NotificationType((1,3,6,1,4,1,41263,1398))
ntxTrapWitnessIsUnreachableFromNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapWitnessIsUnreachableFromNode.setStatus(_B)
ntxTrapTwoNodeClusterChangedStateToStandaloneMode=NotificationType((1,3,6,1,4,1,41263,1399))
ntxTrapTwoNodeClusterChangedStateToStandaloneMode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTwoNodeClusterChangedStateToStandaloneMode.setStatus(_B)
ntxTrapTwoNodeClusterStateChangeTostate=NotificationType((1,3,6,1,4,1,41263,1400))
ntxTrapTwoNodeClusterStateChangeTostate.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTwoNodeClusterStateChangeTostate.setStatus(_B)
ntxTrapTwoNodeClusterStateChangeToStandaloneMode=NotificationType((1,3,6,1,4,1,41263,1401))
ntxTrapTwoNodeClusterStateChangeToStandaloneMode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTwoNodeClusterStateChangeToStandaloneMode.setStatus(_B)
ntxTrapRecoveryPlanExecutionFailed=NotificationType((1,3,6,1,4,1,41263,1402))
ntxTrapRecoveryPlanExecutionFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveryPlanExecutionFailed.setStatus(_B)
ntxTrapXiPaymentMissed=NotificationType((1,3,6,1,4,1,41263,1403))
ntxTrapXiPaymentMissed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapXiPaymentMissed.setStatus(_B)
ntxTrapFreeXiAccountExpired=NotificationType((1,3,6,1,4,1,41263,1404))
ntxTrapFreeXiAccountExpired.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFreeXiAccountExpired.setStatus(_B)
ntxTrapXiSubscriptionExpired=NotificationType((1,3,6,1,4,1,41263,1405))
ntxTrapXiSubscriptionExpired.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapXiSubscriptionExpired.setStatus(_B)
ntxTrapEntitySyncFailure=NotificationType((1,3,6,1,4,1,41263,1406))
ntxTrapEntitySyncFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEntitySyncFailure.setStatus(_B)
ntxTrapNucalmInternalServiceHasStoppedWorking=NotificationType((1,3,6,1,4,1,41263,1407))
ntxTrapNucalmInternalServiceHasStoppedWorking.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNucalmInternalServiceHasStoppedWorking.setStatus(_B)
ntxTrapEpsilonInternalServiceHasStoppedWorking=NotificationType((1,3,6,1,4,1,41263,1408))
ntxTrapEpsilonInternalServiceHasStoppedWorking.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEpsilonInternalServiceHasStoppedWorking.setStatus(_B)
ntxTrapProtectionRuleConflictOccurred=NotificationType((1,3,6,1,4,1,41263,1409))
ntxTrapProtectionRuleConflictOccurred.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionRuleConflictOccurred.setStatus(_B)
ntxTrapDomainFaultToleranceIsReducedForMetadata=NotificationType((1,3,6,1,4,1,41263,1410))
ntxTrapDomainFaultToleranceIsReducedForMetadata.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDomainFaultToleranceIsReducedForMetadata.setStatus(_B)
ntxTrapVMProtectionFailed=NotificationType((1,3,6,1,4,1,41263,1411))
ntxTrapVMProtectionFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMProtectionFailed.setStatus(_B)
ntxTrapVMRecoveryPointReplicationFailed=NotificationType((1,3,6,1,4,1,41263,1412))
ntxTrapVMRecoveryPointReplicationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMRecoveryPointReplicationFailed.setStatus(_B)
ntxTrapVMRecoveryPointCreationFailed=NotificationType((1,3,6,1,4,1,41263,1413))
ntxTrapVMRecoveryPointCreationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMRecoveryPointCreationFailed.setStatus(_B)
ntxTrapMicrosegmentationControlPlaneFailed=NotificationType((1,3,6,1,4,1,41263,1414))
ntxTrapMicrosegmentationControlPlaneFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMicrosegmentationControlPlaneFailed.setStatus(_B)
ntxTrapMicrosegmentationRuleFailed=NotificationType((1,3,6,1,4,1,41263,1415))
ntxTrapMicrosegmentationRuleFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMicrosegmentationRuleFailed.setStatus(_B)
ntxTrapDriveRemovalStuck=NotificationType((1,3,6,1,4,1,41263,1416))
ntxTrapDriveRemovalStuck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDriveRemovalStuck.setStatus(_B)
ntxTrapFileServerNTPServersConnectivityFailure=NotificationType((1,3,6,1,4,1,41263,1417))
ntxTrapFileServerNTPServersConnectivityFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerNTPServersConnectivityFailure.setStatus(_B)
ntxTrapFileServerTimeIsOutOfSyncWithTheActiveDirectory=NotificationType((1,3,6,1,4,1,41263,1418))
ntxTrapFileServerTimeIsOutOfSyncWithTheActiveDirectory.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerTimeIsOutOfSyncWithTheActiveDirectory.setStatus(_B)
ntxTrapFileServerDNSResolverIPConnectivityFailure=NotificationType((1,3,6,1,4,1,41263,1419))
ntxTrapFileServerDNSResolverIPConnectivityFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerDNSResolverIPConnectivityFailure.setStatus(_B)
ntxTrapFileServerUserManagementConfigurationFailed=NotificationType((1,3,6,1,4,1,41263,1420))
ntxTrapFileServerUserManagementConfigurationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerUserManagementConfigurationFailed.setStatus(_B)
ntxTraphomePartitionUsageOnAFileServerVMHigherThanThreshold=NotificationType((1,3,6,1,4,1,41263,1421))
ntxTraphomePartitionUsageOnAFileServerVMHigherThanThreshold.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTraphomePartitionUsageOnAFileServerVMHigherThanThreshold.setStatus(_B)
ntxTrapFileServerDNSRecordsCannotBeRefreshed=NotificationType((1,3,6,1,4,1,41263,1422))
ntxTrapFileServerDNSRecordsCannotBeRefreshed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerDNSRecordsCannotBeRefreshed.setStatus(_B)
ntxTrapFileServerShareBackupDiffPathTranslationFailed=NotificationType((1,3,6,1,4,1,41263,1423))
ntxTrapFileServerShareBackupDiffPathTranslationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerShareBackupDiffPathTranslationFailed.setStatus(_B)
ntxTrapFileServerPartnerServerConnectivityDown=NotificationType((1,3,6,1,4,1,41263,1424))
ntxTrapFileServerPartnerServerConnectivityDown.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerPartnerServerConnectivityDown.setStatus(_B)
ntxTrapFileServerPDActionToIncompatibleRemoteSiteAOS=NotificationType((1,3,6,1,4,1,41263,1425))
ntxTrapFileServerPDActionToIncompatibleRemoteSiteAOS.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerPDActionToIncompatibleRemoteSiteAOS.setStatus(_B)
ntxTrapFileServerServicesGotInterrupted=NotificationType((1,3,6,1,4,1,41263,1426))
ntxTrapFileServerServicesGotInterrupted.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerServicesGotInterrupted.setStatus(_B)
ntxTrapCommonPortGroupBetweenESXiHostsIsAbsent=NotificationType((1,3,6,1,4,1,41263,1427))
ntxTrapCommonPortGroupBetweenESXiHostsIsAbsent.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCommonPortGroupBetweenESXiHostsIsAbsent.setStatus(_B)
ntxTrapFailedToReceiveSnapshotForTheProtectionDomain=NotificationType((1,3,6,1,4,1,41263,1428))
ntxTrapFailedToReceiveSnapshotForTheProtectionDomain.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailedToReceiveSnapshotForTheProtectionDomain.setStatus(_B)
ntxTrapHostNetworkUplinkConfigurationFailed=NotificationType((1,3,6,1,4,1,41263,1429))
ntxTrapHostNetworkUplinkConfigurationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHostNetworkUplinkConfigurationFailed.setStatus(_B)
ntxTrapRestartVMsBeforePerformingUpgradeOrMigrateOperation=NotificationType((1,3,6,1,4,1,41263,1430))
ntxTrapRestartVMsBeforePerformingUpgradeOrMigrateOperation.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRestartVMsBeforePerformingUpgradeOrMigrateOperation.setStatus(_B)
ntxTrapOplogEpisodeCountCheck=NotificationType((1,3,6,1,4,1,41263,1431))
ntxTrapOplogEpisodeCountCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapOplogEpisodeCountCheck.setStatus(_B)
ntxTrapCerebroStatsCollectorFailed=NotificationType((1,3,6,1,4,1,41263,1432))
ntxTrapCerebroStatsCollectorFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCerebroStatsCollectorFailed.setStatus(_B)
ntxTrapLatencyBetweenCVMsIsHigh=NotificationType((1,3,6,1,4,1,41263,1433))
ntxTrapLatencyBetweenCVMsIsHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapLatencyBetweenCVMsIsHigh.setStatus(_B)
ntxTrapLicenseInvalid=NotificationType((1,3,6,1,4,1,41263,1434))
ntxTrapLicenseInvalid.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapLicenseInvalid.setStatus(_B)
ntxTrapRemoteSiteAOSNotCompatibleWithFileServerVersion=NotificationType((1,3,6,1,4,1,41263,1435))
ntxTrapRemoteSiteAOSNotCompatibleWithFileServerVersion.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemoteSiteAOSNotCompatibleWithFileServerVersion.setStatus(_B)
ntxTrapA106043=NotificationType((1,3,6,1,4,1,41263,1436))
ntxTrapA106043.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA106043.setStatus(_B)
ntxTrapFirmwareVersionOfIntelS4600DrivesIsOld=NotificationType((1,3,6,1,4,1,41263,1437))
ntxTrapFirmwareVersionOfIntelS4600DrivesIsOld.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFirmwareVersionOfIntelS4600DrivesIsOld.setStatus(_B)
ntxTrapIntelS4600DriveHasWornOut=NotificationType((1,3,6,1,4,1,41263,1438))
ntxTrapIntelS4600DriveHasWornOut.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIntelS4600DriveHasWornOut.setStatus(_B)
ntxTrapHostBootDiskSerialNumberHasChanged=NotificationType((1,3,6,1,4,1,41263,1439))
ntxTrapHostBootDiskSerialNumberHasChanged.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHostBootDiskSerialNumberHasChanged.setStatus(_B)
ntxTrapSataControllerStatusIsBad=NotificationType((1,3,6,1,4,1,41263,1440))
ntxTrapSataControllerStatusIsBad.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSataControllerStatusIsBad.setStatus(_B)
ntxTrapSamsung863Or863aOnipaddressHasConfigurationProblems=NotificationType((1,3,6,1,4,1,41263,1441))
ntxTrapSamsung863Or863aOnipaddressHasConfigurationProblems.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSamsung863Or863aOnipaddressHasConfigurationProblems.setStatus(_B)
ntxTrapHypervisorBootDriveRAIDIsInAnUnhealthyState=NotificationType((1,3,6,1,4,1,41263,1442))
ntxTrapHypervisorBootDriveRAIDIsInAnUnhealthyState.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHypervisorBootDriveRAIDIsInAnUnhealthyState.setStatus(_B)
ntxTrapCVMPortGroupRenamed=NotificationType((1,3,6,1,4,1,41263,1443))
ntxTrapCVMPortGroupRenamed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMPortGroupRenamed.setStatus(_B)
ntxTrapA106453=NotificationType((1,3,6,1,4,1,41263,1444))
ntxTrapA106453.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA106453.setStatus(_B)
ntxTrapActiveDirectoryDCsAndorDNSServersRunningOnCluster=NotificationType((1,3,6,1,4,1,41263,1445))
ntxTrapActiveDirectoryDCsAndorDNSServersRunningOnCluster.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapActiveDirectoryDCsAndorDNSServersRunningOnCluster.setStatus(_B)
ntxTrappowersourceDown=NotificationType((1,3,6,1,4,1,41263,1446))
ntxTrappowersourceDown.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrappowersourceDown.setStatus(_B)
ntxTrapCPUTemperatureLow=NotificationType((1,3,6,1,4,1,41263,1447))
ntxTrapCPUTemperatureLow.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCPUTemperatureLow.setStatus(_B)
ntxTrapRAMTemperatureLow=NotificationType((1,3,6,1,4,1,41263,1448))
ntxTrapRAMTemperatureLow.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRAMTemperatureLow.setStatus(_B)
ntxTrapSystemTemperatureLow=NotificationType((1,3,6,1,4,1,41263,1449))
ntxTrapSystemTemperatureLow.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSystemTemperatureLow.setStatus(_B)
ntxTrapIPMISELLogFetchFail=NotificationType((1,3,6,1,4,1,41263,1450))
ntxTrapIPMISELLogFetchFail.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIPMISELLogFetchFail.setStatus(_B)
ntxTrapIPMISELLogPowerFailure=NotificationType((1,3,6,1,4,1,41263,1451))
ntxTrapIPMISELLogPowerFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIPMISELLogPowerFailure.setStatus(_B)
ntxTrapAggressiveBreakReplicationTimeout=NotificationType((1,3,6,1,4,1,41263,1452))
ntxTrapAggressiveBreakReplicationTimeout.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAggressiveBreakReplicationTimeout.setStatus(_B)
ntxTrapCVMOrPCVMRAMUsageHigh=NotificationType((1,3,6,1,4,1,41263,1453))
ntxTrapCVMOrPCVMRAMUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMOrPCVMRAMUsageHigh.setStatus(_B)
ntxTrapCVMOrPCVMCPULoadHigh=NotificationType((1,3,6,1,4,1,41263,1454))
ntxTrapCVMOrPCVMCPULoadHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMOrPCVMCPULoadHigh.setStatus(_B)
ntxTrapCVMRenamedIncorrectly=NotificationType((1,3,6,1,4,1,41263,1455))
ntxTrapCVMRenamedIncorrectly.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMRenamedIncorrectly.setStatus(_B)
ntxTrapPCVMDiskUsageHigh=NotificationType((1,3,6,1,4,1,41263,1457))
ntxTrapPCVMDiskUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPCVMDiskUsageHigh.setStatus(_B)
ntxTrapvmtypeVirtualIPCheck=NotificationType((1,3,6,1,4,1,41263,1458))
ntxTrapvmtypeVirtualIPCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapvmtypeVirtualIPCheck.setStatus(_B)
ntxTrapvmtypeSameTimezoneCheck=NotificationType((1,3,6,1,4,1,41263,1459))
ntxTrapvmtypeSameTimezoneCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapvmtypeSameTimezoneCheck.setStatus(_B)
ntxTrapDIMMConfigurationIsWrong=NotificationType((1,3,6,1,4,1,41263,1460))
ntxTrapDIMMConfigurationIsWrong.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDIMMConfigurationIsWrong.setStatus(_B)
ntxTrapP40GPUConfigurationWrongOnTheNode=NotificationType((1,3,6,1,4,1,41263,1461))
ntxTrapP40GPUConfigurationWrongOnTheNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapP40GPUConfigurationWrongOnTheNode.setStatus(_B)
ntxTrapP40GPUBMCVersionIsOldOnTheNode=NotificationType((1,3,6,1,4,1,41263,1462))
ntxTrapP40GPUBMCVersionIsOldOnTheNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapP40GPUBMCVersionIsOldOnTheNode.setStatus(_B)
ntxTrapMemoryConfigurationInconsistent=NotificationType((1,3,6,1,4,1,41263,1463))
ntxTrapMemoryConfigurationInconsistent.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMemoryConfigurationInconsistent.setStatus(_B)
ntxTrapEntityCountExceededTheMaximumLimit=NotificationType((1,3,6,1,4,1,41263,1464))
ntxTrapEntityCountExceededTheMaximumLimit.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEntityCountExceededTheMaximumLimit.setStatus(_B)
ntxTrapAOSUpgradesAreDisabledOncvmip=NotificationType((1,3,6,1,4,1,41263,1465))
ntxTrapAOSUpgradesAreDisabledOncvmip.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAOSUpgradesAreDisabledOncvmip.setStatus(_B)
ntxTrapFirmwareUpgradesAreDisabledOncvmip=NotificationType((1,3,6,1,4,1,41263,1466))
ntxTrapFirmwareUpgradesAreDisabledOncvmip.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFirmwareUpgradesAreDisabledOncvmip.setStatus(_B)
ntxTrapHypervisorDiskdevnameSpaceUsageHigh=NotificationType((1,3,6,1,4,1,41263,1467))
ntxTrapHypervisorDiskdevnameSpaceUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHypervisorDiskdevnameSpaceUsageHigh.setStatus(_B)
ntxTrapCVMPasswordlessSSHToHost=NotificationType((1,3,6,1,4,1,41263,1468))
ntxTrapCVMPasswordlessSSHToHost.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMPasswordlessSSHToHost.setStatus(_B)
ntxTrapCPUsOfDifferentTypesOrModelsAreInTheSameChassis=NotificationType((1,3,6,1,4,1,41263,1469))
ntxTrapCPUsOfDifferentTypesOrModelsAreInTheSameChassis.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCPUsOfDifferentTypesOrModelsAreInTheSameChassis.setStatus(_B)
ntxTrapRecoveryPointReplicationSkipped=NotificationType((1,3,6,1,4,1,41263,1470))
ntxTrapRecoveryPointReplicationSkipped.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveryPointReplicationSkipped.setStatus(_B)
ntxTrapNetworkCreationFailureForRecoveryPlan=NotificationType((1,3,6,1,4,1,41263,1471))
ntxTrapNetworkCreationFailureForRecoveryPlan.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNetworkCreationFailureForRecoveryPlan.setStatus(_B)
ntxTrapVirtualIPAddressNotConfiguredOnTheRemoteCluster=NotificationType((1,3,6,1,4,1,41263,1472))
ntxTrapVirtualIPAddressNotConfiguredOnTheRemoteCluster.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVirtualIPAddressNotConfiguredOnTheRemoteCluster.setStatus(_B)
ntxTrapEntityCountExceedDiscovered=NotificationType((1,3,6,1,4,1,41263,1473))
ntxTrapEntityCountExceedDiscovered.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEntityCountExceedDiscovered.setStatus(_B)
ntxTrapVMReplicationFailure=NotificationType((1,3,6,1,4,1,41263,1474))
ntxTrapVMReplicationFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMReplicationFailure.setStatus(_B)
ntxTrapVMReplicationExpired=NotificationType((1,3,6,1,4,1,41263,1475))
ntxTrapVMReplicationExpired.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMReplicationExpired.setStatus(_B)
ntxTrapApplicationConsistentRecoveryPointFailed=NotificationType((1,3,6,1,4,1,41263,1476))
ntxTrapApplicationConsistentRecoveryPointFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapApplicationConsistentRecoveryPointFailed.setStatus(_B)
ntxTrapReplicationTimeExceededTheRPOLimit=NotificationType((1,3,6,1,4,1,41263,1477))
ntxTrapReplicationTimeExceededTheRPOLimit.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapReplicationTimeExceededTheRPOLimit.setStatus(_B)
ntxTrapNGTOnVMvmnameWasNotReachable=NotificationType((1,3,6,1,4,1,41263,1478))
ntxTrapNGTOnVMvmnameWasNotReachable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNGTOnVMvmnameWasNotReachable.setStatus(_B)
ntxTrapVMReplicationHasNotProgressed=NotificationType((1,3,6,1,4,1,41263,1479))
ntxTrapVMReplicationHasNotProgressed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMReplicationHasNotProgressed.setStatus(_B)
ntxTrapVSSProviderOrprefreezepostthawScriptsNotInstalled=NotificationType((1,3,6,1,4,1,41263,1480))
ntxTrapVSSProviderOrprefreezepostthawScriptsNotInstalled.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVSSProviderOrprefreezepostthawScriptsNotInstalled.setStatus(_B)
ntxTrapPartialRecoveryPoint=NotificationType((1,3,6,1,4,1,41263,1481))
ntxTrapPartialRecoveryPoint.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPartialRecoveryPoint.setStatus(_B)
ntxTrapPulseCannotConnectToRESTServerEndpoint=NotificationType((1,3,6,1,4,1,41263,1482))
ntxTrapPulseCannotConnectToRESTServerEndpoint.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPulseCannotConnectToRESTServerEndpoint.setStatus(_B)
ntxTrapJumboFramesEnabledForNICnicnameOnservicevmexternalip=NotificationType((1,3,6,1,4,1,41263,1483))
ntxTrapJumboFramesEnabledForNICnicnameOnservicevmexternalip.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapJumboFramesEnabledForNICnicnameOnservicevmexternalip.setStatus(_B)
ntxTrapUnableToRetrieveTheAvailabilityZoneEndpoint=NotificationType((1,3,6,1,4,1,41263,1484))
ntxTrapUnableToRetrieveTheAvailabilityZoneEndpoint.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapUnableToRetrieveTheAvailabilityZoneEndpoint.setStatus(_B)
ntxTrapRecoveryPointReplicationFailed=NotificationType((1,3,6,1,4,1,41263,1485))
ntxTrapRecoveryPointReplicationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveryPointReplicationFailed.setStatus(_B)
ntxTrapUnableToCommunicateWithTheDataCenterManager=NotificationType((1,3,6,1,4,1,41263,1486))
ntxTrapUnableToCommunicateWithTheDataCenterManager.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapUnableToCommunicateWithTheDataCenterManager.setStatus(_B)
ntxTrapRemoteSiteInSameVCenterDatacenter=NotificationType((1,3,6,1,4,1,41263,1487))
ntxTrapRemoteSiteInSameVCenterDatacenter.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemoteSiteInSameVCenterDatacenter.setStatus(_B)
ntxTrapV100GPUConfigurationWrongOnTheNode=NotificationType((1,3,6,1,4,1,41263,1488))
ntxTrapV100GPUConfigurationWrongOnTheNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapV100GPUConfigurationWrongOnTheNode.setStatus(_B)
ntxTrapApplicationsArchiveReadyForDownload=NotificationType((1,3,6,1,4,1,41263,1489))
ntxTrapApplicationsArchiveReadyForDownload.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapApplicationsArchiveReadyForDownload.setStatus(_B)
ntxTrapMoreThanOneTypeOfGPUsInstalledOnTheSameNode=NotificationType((1,3,6,1,4,1,41263,1490))
ntxTrapMoreThanOneTypeOfGPUsInstalledOnTheSameNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMoreThanOneTypeOfGPUsInstalledOnTheSameNode.setStatus(_B)
ntxTrapVmRegisteredWithoutNetwork=NotificationType((1,3,6,1,4,1,41263,1491))
ntxTrapVmRegisteredWithoutNetwork.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVmRegisteredWithoutNetwork.setStatus(_B)
ntxTrapAlertEmailFailure=NotificationType((1,3,6,1,4,1,41263,1492))
ntxTrapAlertEmailFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAlertEmailFailure.setStatus(_B)
ntxTrapNICRXCRCErrorRateHigh=NotificationType((1,3,6,1,4,1,41263,1493))
ntxTrapNICRXCRCErrorRateHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNICRXCRCErrorRateHigh.setStatus(_B)
ntxTrapNICRXMissedErrorRateHigh=NotificationType((1,3,6,1,4,1,41263,1494))
ntxTrapNICRXMissedErrorRateHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNICRXMissedErrorRateHigh.setStatus(_B)
ntxTrapEntityUnprotectionFailed=NotificationType((1,3,6,1,4,1,41263,1495))
ntxTrapEntityUnprotectionFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEntityUnprotectionFailed.setStatus(_B)
ntxTrapAvailabilityZoneValidationFailed=NotificationType((1,3,6,1,4,1,41263,1496))
ntxTrapAvailabilityZoneValidationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAvailabilityZoneValidationFailed.setStatus(_B)
ntxTrapInvalidNetworkMappingForRecoveryPlanrecoveryplanname=NotificationType((1,3,6,1,4,1,41263,1497))
ntxTrapInvalidNetworkMappingForRecoveryPlanrecoveryplanname.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapInvalidNetworkMappingForRecoveryPlanrecoveryplanname.setStatus(_B)
ntxTrapDataProtectionTasksAreNotProgressing=NotificationType((1,3,6,1,4,1,41263,1498))
ntxTrapDataProtectionTasksAreNotProgressing.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDataProtectionTasksAreNotProgressing.setStatus(_B)
ntxTrapIncorrectClusterInformationInTheRemoteSiteremotename=NotificationType((1,3,6,1,4,1,41263,1499))
ntxTrapIncorrectClusterInformationInTheRemoteSiteremotename.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIncorrectClusterInformationInTheRemoteSiteremotename.setStatus(_B)
ntxTrapVCenterNotRegistered=NotificationType((1,3,6,1,4,1,41263,1500))
ntxTrapVCenterNotRegistered.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVCenterNotRegistered.setStatus(_B)
ntxTrapNGTUpdateAvailable=NotificationType((1,3,6,1,4,1,41263,1501))
ntxTrapNGTUpdateAvailable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNGTUpdateAvailable.setStatus(_B)
ntxTrapDuplicateCVMIPAddressDetected=NotificationType((1,3,6,1,4,1,41263,1502))
ntxTrapDuplicateCVMIPAddressDetected.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDuplicateCVMIPAddressDetected.setStatus(_B)
ntxTrapMTUConfigurationAcrossControllerVMsIsNotConsistent=NotificationType((1,3,6,1,4,1,41263,1503))
ntxTrapMTUConfigurationAcrossControllerVMsIsNotConsistent.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMTUConfigurationAcrossControllerVMsIsNotConsistent.setStatus(_B)
ntxTrapMultipleCpuunblockProcessesRunning=NotificationType((1,3,6,1,4,1,41263,1504))
ntxTrapMultipleCpuunblockProcessesRunning.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMultipleCpuunblockProcessesRunning.setStatus(_B)
ntxTrapRecoveryLocationOperationChangedToReadOnlyMode=NotificationType((1,3,6,1,4,1,41263,1505))
ntxTrapRecoveryLocationOperationChangedToReadOnlyMode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveryLocationOperationChangedToReadOnlyMode.setStatus(_B)
ntxTrapA130181=NotificationType((1,3,6,1,4,1,41263,1506))
ntxTrapA130181.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA130181.setStatus(_B)
ntxTrapAvailabilityZoneConnectionFailure=NotificationType((1,3,6,1,4,1,41263,1507))
ntxTrapAvailabilityZoneConnectionFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAvailabilityZoneConnectionFailure.setStatus(_B)
ntxTrapPEPCConnectionFailure=NotificationType((1,3,6,1,4,1,41263,1508))
ntxTrapPEPCConnectionFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPEPCConnectionFailure.setStatus(_B)
ntxTrapNutanixGuestToolsNotUpgraded=NotificationType((1,3,6,1,4,1,41263,1509))
ntxTrapNutanixGuestToolsNotUpgraded.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNutanixGuestToolsNotUpgraded.setStatus(_B)
ntxTrapFileServerMultipleVMsOnSingleNodeCheck=NotificationType((1,3,6,1,4,1,41263,1510))
ntxTrapFileServerMultipleVMsOnSingleNodeCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerMultipleVMsOnSingleNodeCheck.setStatus(_B)
ntxTrapShareUsageReachingToConfiguredLimit=NotificationType((1,3,6,1,4,1,41263,1511))
ntxTrapShareUsageReachingToConfiguredLimit.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapShareUsageReachingToConfiguredLimit.setStatus(_B)
ntxTrapProtectedVMsNotRecoverable=NotificationType((1,3,6,1,4,1,41263,1512))
ntxTrapProtectedVMsNotRecoverable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectedVMsNotRecoverable.setStatus(_B)
ntxTrapEntitySyncFailureForProtectionRule=NotificationType((1,3,6,1,4,1,41263,1513))
ntxTrapEntitySyncFailureForProtectionRule.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEntitySyncFailureForProtectionRule.setStatus(_B)
ntxTrapEntitySyncFailureForRecoveryPlan=NotificationType((1,3,6,1,4,1,41263,1514))
ntxTrapEntitySyncFailureForRecoveryPlan.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEntitySyncFailureForRecoveryPlan.setStatus(_B)
ntxTrapDataAtRestEncryptionKeyBackupWarning=NotificationType((1,3,6,1,4,1,41263,1515))
ntxTrapDataAtRestEncryptionKeyBackupWarning.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDataAtRestEncryptionKeyBackupWarning.setStatus(_B)
ntxTrapLocalKeyManagerMasterKeyRotationWarning=NotificationType((1,3,6,1,4,1,41263,1516))
ntxTrapLocalKeyManagerMasterKeyRotationWarning.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapLocalKeyManagerMasterKeyRotationWarning.setStatus(_B)
ntxTrapPulseCannotConnectToRESTServerEndpointOnFileServer=NotificationType((1,3,6,1,4,1,41263,1517))
ntxTrapPulseCannotConnectToRESTServerEndpointOnFileServer.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPulseCannotConnectToRESTServerEndpointOnFileServer.setStatus(_B)
ntxTrapDetectedIncompatibleAHVVersion=NotificationType((1,3,6,1,4,1,41263,1518))
ntxTrapDetectedIncompatibleAHVVersion.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDetectedIncompatibleAHVVersion.setStatus(_B)
ntxTrapNucalmLicenseIsOvershooting=NotificationType((1,3,6,1,4,1,41263,1519))
ntxTrapNucalmLicenseIsOvershooting.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNucalmLicenseIsOvershooting.setStatus(_B)
ntxTrapA300409=NotificationType((1,3,6,1,4,1,41263,1520))
ntxTrapA300409.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA300409.setStatus(_B)
ntxTrapValidationFailedForRecoveryPlanrecoveryplanname=NotificationType((1,3,6,1,4,1,41263,1521))
ntxTrapValidationFailedForRecoveryPlanrecoveryplanname.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapValidationFailedForRecoveryPlanrecoveryplanname.setStatus(_B)
ntxTrapoperationtypeFailedForRecoveryPlanrecoveryplanname=NotificationType((1,3,6,1,4,1,41263,1522))
ntxTrapoperationtypeFailedForRecoveryPlanrecoveryplanname.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapoperationtypeFailedForRecoveryPlanrecoveryplanname.setStatus(_B)
ntxTrapA300402=NotificationType((1,3,6,1,4,1,41263,1523))
ntxTrapA300402.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA300402.setStatus(_B)
ntxTrapEntitySyncFailureForAvailabilityZone=NotificationType((1,3,6,1,4,1,41263,1524))
ntxTrapEntitySyncFailureForAvailabilityZone.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEntitySyncFailureForAvailabilityZone.setStatus(_B)
ntxTrapRemoteAvailabilityZoneLatencyIsHigh=NotificationType((1,3,6,1,4,1,41263,1525))
ntxTrapRemoteAvailabilityZoneLatencyIsHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemoteAvailabilityZoneLatencyIsHigh.setStatus(_B)
ntxTrapTheFrequencyOfCPUcpuidOnHosthostipIsExtremelyLow=NotificationType((1,3,6,1,4,1,41263,1526))
ntxTrapTheFrequencyOfCPUcpuidOnHosthostipIsExtremelyLow.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTheFrequencyOfCPUcpuidOnHosthostipIsExtremelyLow.setStatus(_B)
ntxTrapCalmLicenseExpiry=NotificationType((1,3,6,1,4,1,41263,1527))
ntxTrapCalmLicenseExpiry.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCalmLicenseExpiry.setStatus(_B)
ntxTrapPCVMCPULoadHigh=NotificationType((1,3,6,1,4,1,41263,1528))
ntxTrapPCVMCPULoadHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPCVMCPULoadHigh.setStatus(_B)
ntxTrapNodeMarkedToBeAutoAddedToMetadataRing=NotificationType((1,3,6,1,4,1,41263,1529))
ntxTrapNodeMarkedToBeAutoAddedToMetadataRing.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNodeMarkedToBeAutoAddedToMetadataRing.setStatus(_B)
ntxTrapAutomaticAdditionOfNodeToMetadataRingDisabled=NotificationType((1,3,6,1,4,1,41263,1530))
ntxTrapAutomaticAdditionOfNodeToMetadataRingDisabled.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAutomaticAdditionOfNodeToMetadataRingDisabled.setStatus(_B)
ntxTrapNodeMarkedToBeDetachedFromMetadataRing=NotificationType((1,3,6,1,4,1,41263,1531))
ntxTrapNodeMarkedToBeDetachedFromMetadataRing.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNodeMarkedToBeDetachedFromMetadataRing.setStatus(_B)
ntxTrapNodeForwardingMetadataRequests=NotificationType((1,3,6,1,4,1,41263,1532))
ntxTrapNodeForwardingMetadataRequests.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNodeForwardingMetadataRequests.setStatus(_B)
ntxTrapRecoveryPlansHaveConflictingNetworkMappings=NotificationType((1,3,6,1,4,1,41263,1533))
ntxTrapRecoveryPlansHaveConflictingNetworkMappings.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveryPlansHaveConflictingNetworkMappings.setStatus(_B)
ntxTrapVMRecoveryMayFail=NotificationType((1,3,6,1,4,1,41263,1534))
ntxTrapVMRecoveryMayFail.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMRecoveryMayFail.setStatus(_B)
ntxTrapNutanixCalmLicenseViolation=NotificationType((1,3,6,1,4,1,41263,1535))
ntxTrapNutanixCalmLicenseViolation.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNutanixCalmLicenseViolation.setStatus(_B)
ntxTrapTranslatedAddressesRetrievalFailureInNGT=NotificationType((1,3,6,1,4,1,41263,1536))
ntxTrapTranslatedAddressesRetrievalFailureInNGT.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTranslatedAddressesRetrievalFailureInNGT.setStatus(_B)
ntxTrapStoragePoolUsageReachingItsLimit=NotificationType((1,3,6,1,4,1,41263,1537))
ntxTrapStoragePoolUsageReachingItsLimit.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapStoragePoolUsageReachingItsLimit.setStatus(_B)
ntxTrapTargetCouldNotBeFoundForReplication=NotificationType((1,3,6,1,4,1,41263,1538))
ntxTrapTargetCouldNotBeFoundForReplication.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTargetCouldNotBeFoundForReplication.setStatus(_B)
ntxTrapClusterJoinToDomainFailure=NotificationType((1,3,6,1,4,1,41263,1539))
ntxTrapClusterJoinToDomainFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapClusterJoinToDomainFailure.setStatus(_B)
ntxTrapUnplannedFailoverAndFailbackCanCauseFullReplication=NotificationType((1,3,6,1,4,1,41263,1540))
ntxTrapUnplannedFailoverAndFailbackCanCauseFullReplication.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapUnplannedFailoverAndFailbackCanCauseFullReplication.setStatus(_B)
ntxTrapEntitySyncFailureForTheProtectionPolicy=NotificationType((1,3,6,1,4,1,41263,1541))
ntxTrapEntitySyncFailureForTheProtectionPolicy.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEntitySyncFailureForTheProtectionPolicy.setStatus(_B)
ntxTrapEntitySyncFailureForTheRecoveryPlan=NotificationType((1,3,6,1,4,1,41263,1542))
ntxTrapEntitySyncFailureForTheRecoveryPlan.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEntitySyncFailureForTheRecoveryPlan.setStatus(_B)
ntxTrapEntitySyncFailureForTheAvailabilityZone=NotificationType((1,3,6,1,4,1,41263,1543))
ntxTrapEntitySyncFailureForTheAvailabilityZone.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEntitySyncFailureForTheAvailabilityZone.setStatus(_B)
ntxTrapDeleteTheFailedOverVMsOnThePrimaryLocation=NotificationType((1,3,6,1,4,1,41263,1544))
ntxTrapDeleteTheFailedOverVMsOnThePrimaryLocation.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDeleteTheFailedOverVMsOnThePrimaryLocation.setStatus(_B)
ntxTrapVMvmnameMemoryOverprovisioned=NotificationType((1,3,6,1,4,1,41263,1545))
ntxTrapVMvmnameMemoryOverprovisioned.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMvmnameMemoryOverprovisioned.setStatus(_B)
ntxTrapVMvmnameMemoryConstrained=NotificationType((1,3,6,1,4,1,41263,1546))
ntxTrapVMvmnameMemoryConstrained.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMvmnameMemoryConstrained.setStatus(_B)
ntxTrapVMvmnameCPUOverprovisioned=NotificationType((1,3,6,1,4,1,41263,1547))
ntxTrapVMvmnameCPUOverprovisioned.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMvmnameCPUOverprovisioned.setStatus(_B)
ntxTrapVMvmnameCPUConstrained=NotificationType((1,3,6,1,4,1,41263,1548))
ntxTrapVMvmnameCPUConstrained.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMvmnameCPUConstrained.setStatus(_B)
ntxTrapVMvmnameInactive=NotificationType((1,3,6,1,4,1,41263,1549))
ntxTrapVMvmnameInactive.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMvmnameInactive.setStatus(_B)
ntxTrapVMBullyvmname=NotificationType((1,3,6,1,4,1,41263,1550))
ntxTrapVMBullyvmname.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMBullyvmname.setStatus(_B)
ntxTrapNutanixGuestToolsFailedToInitiateVMReboot=NotificationType((1,3,6,1,4,1,41263,1551))
ntxTrapNutanixGuestToolsFailedToInitiateVMReboot.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNutanixGuestToolsFailedToInitiateVMReboot.setStatus(_B)
ntxTrapMultipleRecoveryPlansHaveCategorycategory=NotificationType((1,3,6,1,4,1,41263,1552))
ntxTrapMultipleRecoveryPlansHaveCategorycategory.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMultipleRecoveryPlansHaveCategorycategory.setStatus(_B)
ntxTrapFloatingIPfloatingipIsAssociatedWithMultipleVMs=NotificationType((1,3,6,1,4,1,41263,1553))
ntxTrapFloatingIPfloatingipIsAssociatedWithMultipleVMs.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFloatingIPfloatingipIsAssociatedWithMultipleVMs.setStatus(_B)
ntxTrapRemoteReplicationIsLaggingForProtectionDomainSnapshot=NotificationType((1,3,6,1,4,1,41263,1554))
ntxTrapRemoteReplicationIsLaggingForProtectionDomainSnapshot.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemoteReplicationIsLaggingForProtectionDomainSnapshot.setStatus(_B)
ntxTrapSameVMsPresentInMultipleStagesOfTheRecoveryPlan=NotificationType((1,3,6,1,4,1,41263,1555))
ntxTrapSameVMsPresentInMultipleStagesOfTheRecoveryPlan.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSameVMsPresentInMultipleStagesOfTheRecoveryPlan.setStatus(_B)
ntxTrapZookeeperAliasIsIncorrectlyConfiguredInTheCluster=NotificationType((1,3,6,1,4,1,41263,1556))
ntxTrapZookeeperAliasIsIncorrectlyConfiguredInTheCluster.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapZookeeperAliasIsIncorrectlyConfiguredInTheCluster.setStatus(_B)
ntxTrapValidationFailedForTheRecoveryPlan=NotificationType((1,3,6,1,4,1,41263,1557))
ntxTrapValidationFailedForTheRecoveryPlan.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapValidationFailedForTheRecoveryPlan.setStatus(_B)
ntxTrapNetworkCreationFailureForTheRecoveryPlan=NotificationType((1,3,6,1,4,1,41263,1558))
ntxTrapNetworkCreationFailureForTheRecoveryPlan.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNetworkCreationFailureForTheRecoveryPlan.setStatus(_B)
ntxTrapValidationFailedForTheRecoveryPlanrecoveryplanname=NotificationType((1,3,6,1,4,1,41263,1559))
ntxTrapValidationFailedForTheRecoveryPlanrecoveryplanname.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapValidationFailedForTheRecoveryPlanrecoveryplanname.setStatus(_B)
ntxTrapVirtualIPAddressNotConfiguredOnTheCluster=NotificationType((1,3,6,1,4,1,41263,1560))
ntxTrapVirtualIPAddressNotConfiguredOnTheCluster.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVirtualIPAddressNotConfiguredOnTheCluster.setStatus(_B)
ntxTrapNGTOnVMvmnameIsNotReachable=NotificationType((1,3,6,1,4,1,41263,1561))
ntxTrapNGTOnVMvmnameIsNotReachable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNGTOnVMvmnameIsNotReachable.setStatus(_B)
ntxTrapCVMNICLinkDown=NotificationType((1,3,6,1,4,1,41263,1562))
ntxTrapCVMNICLinkDown.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMNICLinkDown.setStatus(_B)
ntxTrapA300417=NotificationType((1,3,6,1,4,1,41263,1563))
ntxTrapA300417.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA300417.setStatus(_B)
ntxTrapConflictingNgtPolicies=NotificationType((1,3,6,1,4,1,41263,1564))
ntxTrapConflictingNgtPolicies.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapConflictingNgtPolicies.setStatus(_B)
ntxTrapSystemTemperatureReadingError=NotificationType((1,3,6,1,4,1,41263,1565))
ntxTrapSystemTemperatureReadingError.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSystemTemperatureReadingError.setStatus(_B)
ntxTrapMultipleRecoveryPlansAreAssociatedWithCategorycategory=NotificationType((1,3,6,1,4,1,41263,1566))
ntxTrapMultipleRecoveryPlansAreAssociatedWithCategorycategory.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMultipleRecoveryPlansAreAssociatedWithCategorycategory.setStatus(_B)
ntxTrapA300412=NotificationType((1,3,6,1,4,1,41263,1567))
ntxTrapA300412.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA300412.setStatus(_B)
ntxTrapA110401=NotificationType((1,3,6,1,4,1,41263,1568))
ntxTrapA110401.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA110401.setStatus(_B)
ntxTrapA300418=NotificationType((1,3,6,1,4,1,41263,1569))
ntxTrapA300418.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA300418.setStatus(_B)
ntxTrapA300416=NotificationType((1,3,6,1,4,1,41263,1570))
ntxTrapA300416.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA300416.setStatus(_B)
ntxTrapVMsArePartOfMultipleStagesInTheRecoveryPlanrecoveryplan=NotificationType((1,3,6,1,4,1,41263,1571))
ntxTrapVMsArePartOfMultipleStagesInTheRecoveryPlanrecoveryplan.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMsArePartOfMultipleStagesInTheRecoveryPlanrecoveryplan.setStatus(_B)
ntxTrapA300414=NotificationType((1,3,6,1,4,1,41263,1572))
ntxTrapA300414.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA300414.setStatus(_B)
ntxTrapKaranServicesAreUnreachable=NotificationType((1,3,6,1,4,1,41263,1573))
ntxTrapKaranServicesAreUnreachable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapKaranServicesAreUnreachable.setStatus(_B)
ntxTrapDataserviceIPIsUnreachable=NotificationType((1,3,6,1,4,1,41263,1574))
ntxTrapDataserviceIPIsUnreachable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDataserviceIPIsUnreachable.setStatus(_B)
ntxTrapUSBBootDeviceMissingOnNode=NotificationType((1,3,6,1,4,1,41263,1575))
ntxTrapUSBBootDeviceMissingOnNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapUSBBootDeviceMissingOnNode.setStatus(_B)
ntxTrapVSSSnapshotOfContainerShareFailed=NotificationType((1,3,6,1,4,1,41263,1576))
ntxTrapVSSSnapshotOfContainerShareFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVSSSnapshotOfContainerShareFailed.setStatus(_B)
ntxTrapPrismIsRestartingFrequently=NotificationType((1,3,6,1,4,1,41263,1577))
ntxTrapPrismIsRestartingFrequently.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPrismIsRestartingFrequently.setStatus(_B)
ntxTrapRecoveryPlanValidationFailedWithWarnings=NotificationType((1,3,6,1,4,1,41263,1578))
ntxTrapRecoveryPlanValidationFailedWithWarnings.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveryPlanValidationFailedWithWarnings.setStatus(_B)
ntxTrapRecoveryPlanValidationFailedWithErrors=NotificationType((1,3,6,1,4,1,41263,1579))
ntxTrapRecoveryPlanValidationFailedWithErrors.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveryPlanValidationFailedWithErrors.setStatus(_B)
ntxTrapRecoveryPlanExecutionFailureDueToValidationErrors=NotificationType((1,3,6,1,4,1,41263,1580))
ntxTrapRecoveryPlanExecutionFailureDueToValidationErrors.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveryPlanExecutionFailureDueToValidationErrors.setStatus(_B)
ntxTrapInvalidNetworkSettingsForTheRecoveryPlan=NotificationType((1,3,6,1,4,1,41263,1581))
ntxTrapInvalidNetworkSettingsForTheRecoveryPlan.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapInvalidNetworkSettingsForTheRecoveryPlan.setStatus(_B)
ntxTrapRecoveryPlanExecutionFailure=NotificationType((1,3,6,1,4,1,41263,1582))
ntxTrapRecoveryPlanExecutionFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveryPlanExecutionFailure.setStatus(_B)
ntxTrapSubnetsDeletionFailureForTheRecoveryPlan=NotificationType((1,3,6,1,4,1,41263,1583))
ntxTrapSubnetsDeletionFailureForTheRecoveryPlan.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSubnetsDeletionFailureForTheRecoveryPlan.setStatus(_B)
ntxTrapFloatingIPsDeallocationFailed=NotificationType((1,3,6,1,4,1,41263,1584))
ntxTrapFloatingIPsDeallocationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFloatingIPsDeallocationFailed.setStatus(_B)
ntxTrapSubnetCreationFailureForTheRecoveryPlan=NotificationType((1,3,6,1,4,1,41263,1585))
ntxTrapSubnetCreationFailureForTheRecoveryPlan.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSubnetCreationFailureForTheRecoveryPlan.setStatus(_B)
ntxTrapFloatingIPsAllocationFailed=NotificationType((1,3,6,1,4,1,41263,1586))
ntxTrapFloatingIPsAllocationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFloatingIPsAllocationFailed.setStatus(_B)
ntxTrapFailoverOrFailbackOperationsAreNotPossible=NotificationType((1,3,6,1,4,1,41263,1587))
ntxTrapFailoverOrFailbackOperationsAreNotPossible.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailoverOrFailbackOperationsAreNotPossible.setStatus(_B)
ntxTrapValidationWarningsFoundDuringRecoveryPlanExecution=NotificationType((1,3,6,1,4,1,41263,1588))
ntxTrapValidationWarningsFoundDuringRecoveryPlanExecution.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapValidationWarningsFoundDuringRecoveryPlanExecution.setStatus(_B)
ntxTrapNodeRemovalFailure=NotificationType((1,3,6,1,4,1,41263,1589))
ntxTrapNodeRemovalFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNodeRemovalFailure.setStatus(_B)
ntxTrapConflictingNGTPolicies=NotificationType((1,3,6,1,4,1,41263,1590))
ntxTrapConflictingNGTPolicies.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapConflictingNGTPolicies.setStatus(_B)
ntxTrapVmRestorationFailed=NotificationType((1,3,6,1,4,1,41263,1591))
ntxTrapVmRestorationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVmRestorationFailed.setStatus(_B)
ntxTrapRecoveryLocationIsInReadOnlyMode=NotificationType((1,3,6,1,4,1,41263,1592))
ntxTrapRecoveryLocationIsInReadOnlyMode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveryLocationIsInReadOnlyMode.setStatus(_B)
ntxTrapNGTOnVMIsNotReachable=NotificationType((1,3,6,1,4,1,41263,1593))
ntxTrapNGTOnVMIsNotReachable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNGTOnVMIsNotReachable.setStatus(_B)
ntxTrapNutanixGuestToolsNotInstalledOnTheVM=NotificationType((1,3,6,1,4,1,41263,1594))
ntxTrapNutanixGuestToolsNotInstalledOnTheVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNutanixGuestToolsNotInstalledOnTheVM.setStatus(_B)
ntxTrapFullReplicationStartedForTheVM=NotificationType((1,3,6,1,4,1,41263,1595))
ntxTrapFullReplicationStartedForTheVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFullReplicationStartedForTheVM.setStatus(_B)
ntxTrapReplicationTimeExceededTheRPO=NotificationType((1,3,6,1,4,1,41263,1596))
ntxTrapReplicationTimeExceededTheRPO.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapReplicationTimeExceededTheRPO.setStatus(_B)
ntxTrapNutanixVSSProviderOrprefreezepostthawScriptsNotInstalled=NotificationType((1,3,6,1,4,1,41263,1597))
ntxTrapNutanixVSSProviderOrprefreezepostthawScriptsNotInstalled.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNutanixVSSProviderOrprefreezepostthawScriptsNotInstalled.setStatus(_B)
ntxTrapFailedToFindTheTargetClusterForReplication=NotificationType((1,3,6,1,4,1,41263,1598))
ntxTrapFailedToFindTheTargetClusterForReplication.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailedToFindTheTargetClusterForReplication.setStatus(_B)
ntxTrapVMVirtualHardwareVersionIncompatible=NotificationType((1,3,6,1,4,1,41263,1599))
ntxTrapVMVirtualHardwareVersionIncompatible.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMVirtualHardwareVersionIncompatible.setStatus(_B)
ntxTrapVMMigrationFailed=NotificationType((1,3,6,1,4,1,41263,1600))
ntxTrapVMMigrationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMMigrationFailed.setStatus(_B)
ntxTrapVMRegisteredWithoutAnyNetwork=NotificationType((1,3,6,1,4,1,41263,1601))
ntxTrapVMRegisteredWithoutAnyNetwork.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMRegisteredWithoutAnyNetwork.setStatus(_B)
ntxTrapProtectedVMNotRecoverable=NotificationType((1,3,6,1,4,1,41263,1602))
ntxTrapProtectedVMNotRecoverable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectedVMNotRecoverable.setStatus(_B)
ntxTrapBackgroundEncryptionStuck=NotificationType((1,3,6,1,4,1,41263,1603))
ntxTrapBackgroundEncryptionStuck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapBackgroundEncryptionStuck.setStatus(_B)
ntxTrapMaximumConnectionsLimitAboutToReachOnAFileServerVM=NotificationType((1,3,6,1,4,1,41263,1604))
ntxTrapMaximumConnectionsLimitAboutToReachOnAFileServerVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMaximumConnectionsLimitAboutToReachOnAFileServerVM.setStatus(_B)
ntxTrapVSSSnapshotIsNotSupportedForSomeVMs=NotificationType((1,3,6,1,4,1,41263,1605))
ntxTrapVSSSnapshotIsNotSupportedForSomeVMs.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVSSSnapshotIsNotSupportedForSomeVMs.setStatus(_B)
ntxTrapA110262=NotificationType((1,3,6,1,4,1,41263,1606))
ntxTrapA110262.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA110262.setStatus(_B)
ntxTrapIncorrectvmtypeNTPConfiguration=NotificationType((1,3,6,1,4,1,41263,1607))
ntxTrapIncorrectvmtypeNTPConfiguration.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIncorrectvmtypeNTPConfiguration.setStatus(_B)
ntxTrapThevmtypeIsNotSynchronizingTimeWithAnyExternalServers=NotificationType((1,3,6,1,4,1,41263,1608))
ntxTrapThevmtypeIsNotSynchronizingTimeWithAnyExternalServers.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapThevmtypeIsNotSynchronizingTimeWithAnyExternalServers.setStatus(_B)
ntxTrapA103095=NotificationType((1,3,6,1,4,1,41263,1609))
ntxTrapA103095.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA103095.setStatus(_B)
ntxTrapFirmwareVersionOfIntelS4600DrivesIsOldOrInvalid=NotificationType((1,3,6,1,4,1,41263,1610))
ntxTrapFirmwareVersionOfIntelS4600DrivesIsOldOrInvalid.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFirmwareVersionOfIntelS4600DrivesIsOldOrInvalid.setStatus(_B)
ntxTrapRemotenameConnectivityStatus=NotificationType((1,3,6,1,4,1,41263,1611))
ntxTrapRemotenameConnectivityStatus.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemotenameConnectivityStatus.setStatus(_B)
ntxTrapIncompleteMetroSetup=NotificationType((1,3,6,1,4,1,41263,1612))
ntxTrapIncompleteMetroSetup.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIncompleteMetroSetup.setStatus(_B)
ntxTrapA101047=NotificationType((1,3,6,1,4,1,41263,1613))
ntxTrapA101047.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA101047.setStatus(_B)
ntxTrapP4GPUConfigurationWrongOnTheNode=NotificationType((1,3,6,1,4,1,41263,1614))
ntxTrapP4GPUConfigurationWrongOnTheNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapP4GPUConfigurationWrongOnTheNode.setStatus(_B)
ntxTrapPCVMTypeOrAnnotationNotSet=NotificationType((1,3,6,1,4,1,41263,1615))
ntxTrapPCVMTypeOrAnnotationNotSet.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPCVMTypeOrAnnotationNotSet.setStatus(_B)
ntxTrapFailedToConfigureHostForAtlasNetworking=NotificationType((1,3,6,1,4,1,41263,1616))
ntxTrapFailedToConfigureHostForAtlasNetworking.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailedToConfigureHostForAtlasNetworking.setStatus(_B)
ntxTrapFailedToReserveHostMemoryForAtlasNetworking=NotificationType((1,3,6,1,4,1,41263,1617))
ntxTrapFailedToReserveHostMemoryForAtlasNetworking.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailedToReserveHostMemoryForAtlasNetworking.setStatus(_B)
ntxTrapRecoveryPlanExecutionExceededTheTimeLimit=NotificationType((1,3,6,1,4,1,41263,1618))
ntxTrapRecoveryPlanExecutionExceededTheTimeLimit.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveryPlanExecutionExceededTheTimeLimit.setStatus(_B)
ntxTrapAHVPrismElementDetached=NotificationType((1,3,6,1,4,1,41263,1619))
ntxTrapAHVPrismElementDetached.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAHVPrismElementDetached.setStatus(_B)
ntxTrapBeamIsNotReachable=NotificationType((1,3,6,1,4,1,41263,1620))
ntxTrapBeamIsNotReachable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapBeamIsNotReachable.setStatus(_B)
ntxTrapAHVPrismElementAttached=NotificationType((1,3,6,1,4,1,41263,1621))
ntxTrapAHVPrismElementAttached.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAHVPrismElementAttached.setStatus(_B)
ntxTrapVPNIPSECTunnelBetweenOnpremAndXiDatacenterIsDown=NotificationType((1,3,6,1,4,1,41263,1622))
ntxTrapVPNIPSECTunnelBetweenOnpremAndXiDatacenterIsDown.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVPNIPSECTunnelBetweenOnpremAndXiDatacenterIsDown.setStatus(_B)
ntxTrapEBGPSessionBetweenOnpremAndXiDatacenterIsDown=NotificationType((1,3,6,1,4,1,41263,1623))
ntxTrapEBGPSessionBetweenOnpremAndXiDatacenterIsDown.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEBGPSessionBetweenOnpremAndXiDatacenterIsDown.setStatus(_B)
ntxTrapMaximumVPNBGPRouteLimitReached=NotificationType((1,3,6,1,4,1,41263,1624))
ntxTrapMaximumVPNBGPRouteLimitReached.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMaximumVPNBGPRouteLimitReached.setStatus(_B)
ntxTrapDomainFaultToleranceIsLowForMetadata=NotificationType((1,3,6,1,4,1,41263,1625))
ntxTrapDomainFaultToleranceIsLowForMetadata.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDomainFaultToleranceIsLowForMetadata.setStatus(_B)
ntxTrapRecoveryLocationIsNotInGoodState=NotificationType((1,3,6,1,4,1,41263,1626))
ntxTrapRecoveryLocationIsNotInGoodState.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveryLocationIsNotInGoodState.setStatus(_B)
ntxTrapA110264=NotificationType((1,3,6,1,4,1,41263,1627))
ntxTrapA110264.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA110264.setStatus(_B)
ntxTrapFlowControlPlaneFailed=NotificationType((1,3,6,1,4,1,41263,1628))
ntxTrapFlowControlPlaneFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFlowControlPlaneFailed.setStatus(_B)
ntxTrapFlowRuleFailed=NotificationType((1,3,6,1,4,1,41263,1629))
ntxTrapFlowRuleFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFlowRuleFailed.setStatus(_B)
ntxTrapAnalyticsVMComponentFailure=NotificationType((1,3,6,1,4,1,41263,1630))
ntxTrapAnalyticsVMComponentFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAnalyticsVMComponentFailure.setStatus(_B)
ntxTrapAnalyticsVMHighCPUUsage=NotificationType((1,3,6,1,4,1,41263,1631))
ntxTrapAnalyticsVMHighCPUUsage.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAnalyticsVMHighCPUUsage.setStatus(_B)
ntxTrapAnalyticsVMHighDiskUsage=NotificationType((1,3,6,1,4,1,41263,1632))
ntxTrapAnalyticsVMHighDiskUsage.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAnalyticsVMHighDiskUsage.setStatus(_B)
ntxTrapAnalyticsVMLowMemoryAvailable=NotificationType((1,3,6,1,4,1,41263,1633))
ntxTrapAnalyticsVMLowMemoryAvailable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAnalyticsVMLowMemoryAvailable.setStatus(_B)
ntxTrapDuplicateIPAddressDetectedForAFileServerVM=NotificationType((1,3,6,1,4,1,41263,1634))
ntxTrapDuplicateIPAddressDetectedForAFileServerVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDuplicateIPAddressDetectedForAFileServerVM.setStatus(_B)
ntxTrapFileServerUniqueFsidFailure=NotificationType((1,3,6,1,4,1,41263,1635))
ntxTrapFileServerUniqueFsidFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerUniqueFsidFailure.setStatus(_B)
ntxTrapUnequalDiskSizeOfPCVMs=NotificationType((1,3,6,1,4,1,41263,1636))
ntxTrapUnequalDiskSizeOfPCVMs.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapUnequalDiskSizeOfPCVMs.setStatus(_B)
ntxTrapHighTimeDifferenceBetweenPCAndRegisteredPEs=NotificationType((1,3,6,1,4,1,41263,1637))
ntxTrapHighTimeDifferenceBetweenPCAndRegisteredPEs.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHighTimeDifferenceBetweenPCAndRegisteredPEs.setStatus(_B)
ntxTrapPrismCentralVersionEOL=NotificationType((1,3,6,1,4,1,41263,1638))
ntxTrapPrismCentralVersionEOL.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPrismCentralVersionEOL.setStatus(_B)
ntxTrapPEPCIncompatibleAOSVersions=NotificationType((1,3,6,1,4,1,41263,1639))
ntxTrapPEPCIncompatibleAOSVersions.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPEPCIncompatibleAOSVersions.setStatus(_B)
ntxTrapAplosGatewayIsDown=NotificationType((1,3,6,1,4,1,41263,1640))
ntxTrapAplosGatewayIsDown.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAplosGatewayIsDown.setStatus(_B)
ntxTrapAplosEngineIsDown=NotificationType((1,3,6,1,4,1,41263,1641))
ntxTrapAplosEngineIsDown.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAplosEngineIsDown.setStatus(_B)
ntxTrapStorageContainersAreNotMountedOnAllNodes=NotificationType((1,3,6,1,4,1,41263,1642))
ntxTrapStorageContainersAreNotMountedOnAllNodes.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapStorageContainersAreNotMountedOnAllNodes.setStatus(_B)
ntxTrapOldEntityCentricThirdPartyBackupSnapshotsPresent=NotificationType((1,3,6,1,4,1,41263,1643))
ntxTrapOldEntityCentricThirdPartyBackupSnapshotsPresent.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapOldEntityCentricThirdPartyBackupSnapshotsPresent.setStatus(_B)
ntxTrapUnsupportedSFPIsInstalledOnHostMachine=NotificationType((1,3,6,1,4,1,41263,1644))
ntxTrapUnsupportedSFPIsInstalledOnHostMachine.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapUnsupportedSFPIsInstalledOnHostMachine.setStatus(_B)
ntxTrapMultipleRecoveryPlansAssociatedWithACategory=NotificationType((1,3,6,1,4,1,41263,1645))
ntxTrapMultipleRecoveryPlansAssociatedWithACategory.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMultipleRecoveryPlansAssociatedWithACategory.setStatus(_B)
ntxTrapVMsArePartOfMultipleStagesInRecoveryPlan=NotificationType((1,3,6,1,4,1,41263,1646))
ntxTrapVMsArePartOfMultipleStagesInRecoveryPlan.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMsArePartOfMultipleStagesInRecoveryPlan.setStatus(_B)
ntxTrapTestFailoverOnRecoveryPlanHasNotBeenExecutedRecently=NotificationType((1,3,6,1,4,1,41263,1647))
ntxTrapTestFailoverOnRecoveryPlanHasNotBeenExecutedRecently.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTestFailoverOnRecoveryPlanHasNotBeenExecutedRecently.setStatus(_B)
ntxTrapNumberOfVMsInRecoveryPlanExceedsTheThreshold=NotificationType((1,3,6,1,4,1,41263,1648))
ntxTrapNumberOfVMsInRecoveryPlanExceedsTheThreshold.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNumberOfVMsInRecoveryPlanExceedsTheThreshold.setStatus(_B)
ntxTrapSATADOMNeedsFirmwareUpgrade=NotificationType((1,3,6,1,4,1,41263,1649))
ntxTrapSATADOMNeedsFirmwareUpgrade.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSATADOMNeedsFirmwareUpgrade.setStatus(_B)
ntxTrapVCenterServerNotRegistered=NotificationType((1,3,6,1,4,1,41263,1650))
ntxTrapVCenterServerNotRegistered.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVCenterServerNotRegistered.setStatus(_B)
ntxTrapDetectedOlderAHVVersion=NotificationType((1,3,6,1,4,1,41263,1651))
ntxTrapDetectedOlderAHVVersion.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDetectedOlderAHVVersion.setStatus(_B)
ntxTrapNoProtectionPolicyFoundForVMsInRecoveryPlan=NotificationType((1,3,6,1,4,1,41263,1652))
ntxTrapNoProtectionPolicyFoundForVMsInRecoveryPlan.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNoProtectionPolicyFoundForVMsInRecoveryPlan.setStatus(_B)
ntxTrapVMsNotCleanedUpFollowingTheTestFailoverForRecoveryPlan=NotificationType((1,3,6,1,4,1,41263,1653))
ntxTrapVMsNotCleanedUpFollowingTheTestFailoverForRecoveryPlan.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMsNotCleanedUpFollowingTheTestFailoverForRecoveryPlan.setStatus(_B)
ntxTrapPowerSupplyStatusUnavailable=NotificationType((1,3,6,1,4,1,41263,1654))
ntxTrapPowerSupplyStatusUnavailable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPowerSupplyStatusUnavailable.setStatus(_B)
ntxTrapCVMTimeAndIPMISELTimeDoNotMatch=NotificationType((1,3,6,1,4,1,41263,1655))
ntxTrapCVMTimeAndIPMISELTimeDoNotMatch.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMTimeAndIPMISELTimeDoNotMatch.setStatus(_B)
ntxTrapProtectionPolicyMaxVMsPerCategoryCheckFailed=NotificationType((1,3,6,1,4,1,41263,1656))
ntxTrapProtectionPolicyMaxVMsPerCategoryCheckFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionPolicyMaxVMsPerCategoryCheckFailed.setStatus(_B)
ntxTrapPulseIsDisabled=NotificationType((1,3,6,1,4,1,41263,1657))
ntxTrapPulseIsDisabled.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPulseIsDisabled.setStatus(_B)
ntxTrapAOSVersionEOL=NotificationType((1,3,6,1,4,1,41263,1658))
ntxTrapAOSVersionEOL.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAOSVersionEOL.setStatus(_B)
ntxTrapDIMMsOfDifferentManufacturersInOneMemoryChannel=NotificationType((1,3,6,1,4,1,41263,1659))
ntxTrapDIMMsOfDifferentManufacturersInOneMemoryChannel.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDIMMsOfDifferentManufacturersInOneMemoryChannel.setStatus(_B)
ntxTrapPrismCentralUsingDefaultPassword=NotificationType((1,3,6,1,4,1,41263,1660))
ntxTrapPrismCentralUsingDefaultPassword.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPrismCentralUsingDefaultPassword.setStatus(_B)
ntxTrapCVMUsingDefaultPassword=NotificationType((1,3,6,1,4,1,41263,1661))
ntxTrapCVMUsingDefaultPassword.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMUsingDefaultPassword.setStatus(_B)
ntxTrapHostUsingDefaultPassword=NotificationType((1,3,6,1,4,1,41263,1662))
ntxTrapHostUsingDefaultPassword.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHostUsingDefaultPassword.setStatus(_B)
ntxTrapIPMIUsingDefaultPassword=NotificationType((1,3,6,1,4,1,41263,1663))
ntxTrapIPMIUsingDefaultPassword.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIPMIUsingDefaultPassword.setStatus(_B)
ntxTrapSM883DriveHasWornOut=NotificationType((1,3,6,1,4,1,41263,1664))
ntxTrapSM883DriveHasWornOut.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSM883DriveHasWornOut.setStatus(_B)
ntxTrapFewerThanTwoNonSamsungPM883DrivesInstalledOnTheNode=NotificationType((1,3,6,1,4,1,41263,1665))
ntxTrapFewerThanTwoNonSamsungPM883DrivesInstalledOnTheNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFewerThanTwoNonSamsungPM883DrivesInstalledOnTheNode.setStatus(_B)
ntxTrapPM883DriveHasWornOut=NotificationType((1,3,6,1,4,1,41263,1666))
ntxTrapPM883DriveHasWornOut.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPM883DriveHasWornOut.setStatus(_B)
ntxTrapCalmVersionMismatch=NotificationType((1,3,6,1,4,1,41263,1667))
ntxTrapCalmVersionMismatch.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCalmVersionMismatch.setStatus(_B)
ntxTrapEpsilonVersionMismatch=NotificationType((1,3,6,1,4,1,41263,1668))
ntxTrapEpsilonVersionMismatch.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEpsilonVersionMismatch.setStatus(_B)
ntxTrapCalmShowbackIsUnableToReachBeamService=NotificationType((1,3,6,1,4,1,41263,1669))
ntxTrapCalmShowbackIsUnableToReachBeamService.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCalmShowbackIsUnableToReachBeamService.setStatus(_B)
ntxTrapFileAnalyticsVMComponentFailure=NotificationType((1,3,6,1,4,1,41263,1670))
ntxTrapFileAnalyticsVMComponentFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileAnalyticsVMComponentFailure.setStatus(_B)
ntxTrapFileAnalyticsVMHighCPUUsage=NotificationType((1,3,6,1,4,1,41263,1671))
ntxTrapFileAnalyticsVMHighCPUUsage.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileAnalyticsVMHighCPUUsage.setStatus(_B)
ntxTrapFileAnalyticsVMHighDiskUsage=NotificationType((1,3,6,1,4,1,41263,1672))
ntxTrapFileAnalyticsVMHighDiskUsage.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileAnalyticsVMHighDiskUsage.setStatus(_B)
ntxTrapFileAnalyticsVMLowMemoryAvailable=NotificationType((1,3,6,1,4,1,41263,1673))
ntxTrapFileAnalyticsVMLowMemoryAvailable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileAnalyticsVMLowMemoryAvailable.setStatus(_B)
ntxTrapFileServerVMTimeDriftFromNTPServers=NotificationType((1,3,6,1,4,1,41263,1674))
ntxTrapFileServerVMTimeDriftFromNTPServers.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerVMTimeDriftFromNTPServers.setStatus(_B)
ntxTrapFileServerServiceInCrashLoop=NotificationType((1,3,6,1,4,1,41263,1675))
ntxTrapFileServerServiceInCrashLoop.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerServiceInCrashLoop.setStatus(_B)
ntxTrapFileServerUpgradeTaskStuck=NotificationType((1,3,6,1,4,1,41263,1676))
ntxTrapFileServerUpgradeTaskStuck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerUpgradeTaskStuck.setStatus(_B)
ntxTrapFilesClusterHATakeoverFailure=NotificationType((1,3,6,1,4,1,41263,1677))
ntxTrapFilesClusterHATakeoverFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFilesClusterHATakeoverFailure.setStatus(_B)
ntxTrapFileServerAlert=NotificationType((1,3,6,1,4,1,41263,1678))
ntxTrapFileServerAlert.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerAlert.setStatus(_B)
ntxTrapFlowModeChangeFailed=NotificationType((1,3,6,1,4,1,41263,1679))
ntxTrapFlowModeChangeFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFlowModeChangeFailed.setStatus(_B)
ntxTrapOVSServiceRestart=NotificationType((1,3,6,1,4,1,41263,1680))
ntxTrapOVSServiceRestart.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapOVSServiceRestart.setStatus(_B)
ntxTrapRemoteSubnetIsNotConfiguredAppropriately=NotificationType((1,3,6,1,4,1,41263,1681))
ntxTrapRemoteSubnetIsNotConfiguredAppropriately.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemoteSubnetIsNotConfiguredAppropriately.setStatus(_B)
ntxTrapA130204=NotificationType((1,3,6,1,4,1,41263,1682))
ntxTrapA130204.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA130204.setStatus(_B)
ntxTrapA130205=NotificationType((1,3,6,1,4,1,41263,1683))
ntxTrapA130205.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA130205.setStatus(_B)
ntxTrapHostingOfVirtualIPOfTheNetworkSegmentationDRServiceFailed=NotificationType((1,3,6,1,4,1,41263,1684))
ntxTrapHostingOfVirtualIPOfTheNetworkSegmentationDRServiceFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHostingOfVirtualIPOfTheNetworkSegmentationDRServiceFailed.setStatus(_B)
ntxTrapFailureToCopyImageToCluster=NotificationType((1,3,6,1,4,1,41263,1685))
ntxTrapFailureToCopyImageToCluster.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFailureToCopyImageToCluster.setStatus(_B)
ntxTrapIDFirewallConnectivityaccessLossToAD=NotificationType((1,3,6,1,4,1,41263,1686))
ntxTrapIDFirewallConnectivityaccessLossToAD.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIDFirewallConnectivityaccessLossToAD.setStatus(_B)
ntxTrapEpochSaaSConnectivityIsLost=NotificationType((1,3,6,1,4,1,41263,1687))
ntxTrapEpochSaaSConnectivityIsLost.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEpochSaaSConnectivityIsLost.setStatus(_B)
ntxTrapIDFirewallUnableToLocateMappedADObject=NotificationType((1,3,6,1,4,1,41263,1688))
ntxTrapIDFirewallUnableToLocateMappedADObject.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIDFirewallUnableToLocateMappedADObject.setStatus(_B)
ntxTrapSecurityPlanningIsDisabled=NotificationType((1,3,6,1,4,1,41263,1689))
ntxTrapSecurityPlanningIsDisabled.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSecurityPlanningIsDisabled.setStatus(_B)
ntxTrapEpochDataCollectorNeedsUpgrade=NotificationType((1,3,6,1,4,1,41263,1690))
ntxTrapEpochDataCollectorNeedsUpgrade.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEpochDataCollectorNeedsUpgrade.setStatus(_B)
ntxTrapIDFirewallUnableToRecoverStateFromADAfterDisconnect=NotificationType((1,3,6,1,4,1,41263,1691))
ntxTrapIDFirewallUnableToRecoverStateFromADAfterDisconnect.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIDFirewallUnableToRecoverStateFromADAfterDisconnect.setStatus(_B)
ntxTrapNGTCDROMNotUnmountedOnTheVM=NotificationType((1,3,6,1,4,1,41263,1692))
ntxTrapNGTCDROMNotUnmountedOnTheVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNGTCDROMNotUnmountedOnTheVM.setStatus(_B)
ntxTrapFloatingIPsDeallocationFailedAfterFailbackFromXi=NotificationType((1,3,6,1,4,1,41263,1693))
ntxTrapFloatingIPsDeallocationFailedAfterFailbackFromXi.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFloatingIPsDeallocationFailedAfterFailbackFromXi.setStatus(_B)
ntxTrapTomcatIsRestartingFrequently=NotificationType((1,3,6,1,4,1,41263,1694))
ntxTrapTomcatIsRestartingFrequently.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTomcatIsRestartingFrequently.setStatus(_B)
ntxTrapExternalRepositoryAccessFailure=NotificationType((1,3,6,1,4,1,41263,1695))
ntxTrapExternalRepositoryAccessFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapExternalRepositoryAccessFailure.setStatus(_B)
ntxTrapIOFailuresToADataSourceInAnExternalRepository=NotificationType((1,3,6,1,4,1,41263,1697))
ntxTrapIOFailuresToADataSourceInAnExternalRepository.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIOFailuresToADataSourceInAnExternalRepository.setStatus(_B)
ntxTrapUnequalDiskSizeOfPrismCentralVMs=NotificationType((1,3,6,1,4,1,41263,1699))
ntxTrapUnequalDiskSizeOfPrismCentralVMs.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapUnequalDiskSizeOfPrismCentralVMs.setStatus(_B)
ntxTrapPCUpgradesAreDisabledOncvmip=NotificationType((1,3,6,1,4,1,41263,1700))
ntxTrapPCUpgradesAreDisabledOncvmip.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPCUpgradesAreDisabledOncvmip.setStatus(_B)
ntxTrapCalmTrialLicenseExpiry=NotificationType((1,3,6,1,4,1,41263,1701))
ntxTrapCalmTrialLicenseExpiry.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCalmTrialLicenseExpiry.setStatus(_B)
ntxTrapSystemNonRootPartitionsSpaceUsageHigh=NotificationType((1,3,6,1,4,1,41263,1702))
ntxTrapSystemNonRootPartitionsSpaceUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSystemNonRootPartitionsSpaceUsageHigh.setStatus(_B)
ntxTrapSystemRootPartitionSpaceUsageHigh=NotificationType((1,3,6,1,4,1,41263,1703))
ntxTrapSystemRootPartitionSpaceUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSystemRootPartitionSpaceUsageHigh.setStatus(_B)
ntxTrapscratchLocationSpaceUsageIsHigh=NotificationType((1,3,6,1,4,1,41263,1704))
ntxTrapscratchLocationSpaceUsageIsHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapscratchLocationSpaceUsageIsHigh.setStatus(_B)
ntxTrapFreeBlockCountOfSATADOMHasGoneBelowThreshold=NotificationType((1,3,6,1,4,1,41263,1705))
ntxTrapFreeBlockCountOfSATADOMHasGoneBelowThreshold.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFreeBlockCountOfSATADOMHasGoneBelowThreshold.setStatus(_B)
ntxTrapToshibaPM5DriveHasWornOut=NotificationType((1,3,6,1,4,1,41263,1706))
ntxTrapToshibaPM5DriveHasWornOut.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapToshibaPM5DriveHasWornOut.setStatus(_B)
ntxTrapMoreThanOneTypeOfToshibaPM5DrivesInstalledOnTheNode=NotificationType((1,3,6,1,4,1,41263,1707))
ntxTrapMoreThanOneTypeOfToshibaPM5DrivesInstalledOnTheNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMoreThanOneTypeOfToshibaPM5DrivesInstalledOnTheNode.setStatus(_B)
ntxTrapBootDriveIsInDegradedState=NotificationType((1,3,6,1,4,1,41263,1708))
ntxTrapBootDriveIsInDegradedState.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapBootDriveIsInDegradedState.setStatus(_B)
ntxTrapTemperatureOfM2DiskIsOutOfRange=NotificationType((1,3,6,1,4,1,41263,1709))
ntxTrapTemperatureOfM2DiskIsOutOfRange.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTemperatureOfM2DiskIsOutOfRange.setStatus(_B)
ntxTrapM2DiskReturnedUECCErrors=NotificationType((1,3,6,1,4,1,41263,1710))
ntxTrapM2DiskReturnedUECCErrors.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapM2DiskReturnedUECCErrors.setStatus(_B)
ntxTrapM2DiskHasWornOut=NotificationType((1,3,6,1,4,1,41263,1711))
ntxTrapM2DiskHasWornOut.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapM2DiskHasWornOut.setStatus(_B)
ntxTrapFirmwareOfRaidM2DiskNeedsToBeUpgraded=NotificationType((1,3,6,1,4,1,41263,1712))
ntxTrapFirmwareOfRaidM2DiskNeedsToBeUpgraded.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFirmwareOfRaidM2DiskNeedsToBeUpgraded.setStatus(_B)
ntxTrapRAIDCardBIOSOrFirmwareOrBootLoaderNeedsToBeUpdated=NotificationType((1,3,6,1,4,1,41263,1713))
ntxTrapRAIDCardBIOSOrFirmwareOrBootLoaderNeedsToBeUpdated.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRAIDCardBIOSOrFirmwareOrBootLoaderNeedsToBeUpdated.setStatus(_B)
ntxTrapDiskFirmwareNeedsUpgrade=NotificationType((1,3,6,1,4,1,41263,1714))
ntxTrapDiskFirmwareNeedsUpgrade.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDiskFirmwareNeedsUpgrade.setStatus(_B)
ntxTrapFlowPolicyhitLoggingDisabled=NotificationType((1,3,6,1,4,1,41263,1715))
ntxTrapFlowPolicyhitLoggingDisabled.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFlowPolicyhitLoggingDisabled.setStatus(_B)
ntxTrapLatencyBetweenvmtypes=NotificationType((1,3,6,1,4,1,41263,1716))
ntxTrapLatencyBetweenvmtypes.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapLatencyBetweenvmtypes.setStatus(_B)
ntxTrapCVMdestipIsUnreachable=NotificationType((1,3,6,1,4,1,41263,1717))
ntxTrapCVMdestipIsUnreachable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMdestipIsUnreachable.setStatus(_B)
ntxTrapComputeonlyMinimumBandwidthCheck=NotificationType((1,3,6,1,4,1,41263,1718))
ntxTrapComputeonlyMinimumBandwidthCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapComputeonlyMinimumBandwidthCheck.setStatus(_B)
ntxTrapFileServerVMDownCheck=NotificationType((1,3,6,1,4,1,41263,1719))
ntxTrapFileServerVMDownCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerVMDownCheck.setStatus(_B)
ntxTrapFileServerVMHardwareClockTimezoneNotSupported=NotificationType((1,3,6,1,4,1,41263,1720))
ntxTrapFileServerVMHardwareClockTimezoneNotSupported.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerVMHardwareClockTimezoneNotSupported.setStatus(_B)
ntxTrapNutanixFilesVersionEOL=NotificationType((1,3,6,1,4,1,41263,1721))
ntxTrapNutanixFilesVersionEOL.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNutanixFilesVersionEOL.setStatus(_B)
ntxTrapFileServerContainerDedupCheck=NotificationType((1,3,6,1,4,1,41263,1722))
ntxTrapFileServerContainerDedupCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerContainerDedupCheck.setStatus(_B)
ntxTrapCheckingIfTargetClusterVersionIsGreaterThan512=NotificationType((1,3,6,1,4,1,41263,1723))
ntxTrapCheckingIfTargetClusterVersionIsGreaterThan512.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCheckingIfTargetClusterVersionIsGreaterThan512.setStatus(_B)
ntxTrapCheckingIfPortsOfRelevantServicesAreOpenOrNot=NotificationType((1,3,6,1,4,1,41263,1724))
ntxTrapCheckingIfPortsOfRelevantServicesAreOpenOrNot.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCheckingIfPortsOfRelevantServicesAreOpenOrNot.setStatus(_B)
ntxTrapA110022=NotificationType((1,3,6,1,4,1,41263,1725))
ntxTrapA110022.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA110022.setStatus(_B)
ntxTrapCheckingIfDRServicesAreReachableOrNot=NotificationType((1,3,6,1,4,1,41263,1726))
ntxTrapCheckingIfDRServicesAreReachableOrNot.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCheckingIfDRServicesAreReachableOrNot.setStatus(_B)
ntxTrapHighNumberOfCorrectableECCErrorsFound=NotificationType((1,3,6,1,4,1,41263,1727))
ntxTrapHighNumberOfCorrectableECCErrorsFound.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHighNumberOfCorrectableECCErrorsFound.setStatus(_B)
ntxTrapPowerSuppliesOfDifferentTypesDetectedOnANode=NotificationType((1,3,6,1,4,1,41263,1728))
ntxTrapPowerSuppliesOfDifferentTypesDetectedOnANode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPowerSuppliesOfDifferentTypesDetectedOnANode.setStatus(_B)
ntxTrapPowerSupplyStatusDownUnretrievable=NotificationType((1,3,6,1,4,1,41263,1729))
ntxTrapPowerSupplyStatusDownUnretrievable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPowerSupplyStatusDownUnretrievable.setStatus(_B)
ntxTrapProtectedVMNameTooLongOrContainsRestrictedCharacters=NotificationType((1,3,6,1,4,1,41263,1730))
ntxTrapProtectedVMNameTooLongOrContainsRestrictedCharacters.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectedVMNameTooLongOrContainsRestrictedCharacters.setStatus(_B)
ntxTrapDetectedSnapshotsOnClusterWithHighDensityNodes=NotificationType((1,3,6,1,4,1,41263,1731))
ntxTrapDetectedSnapshotsOnClusterWithHighDensityNodes.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDetectedSnapshotsOnClusterWithHighDensityNodes.setStatus(_B)
ntxTrapDataProtectionIsConfiguredOnClusterWithHighDensityNodes=NotificationType((1,3,6,1,4,1,41263,1732))
ntxTrapDataProtectionIsConfiguredOnClusterWithHighDensityNodes.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDataProtectionIsConfiguredOnClusterWithHighDensityNodes.setStatus(_B)
ntxTrapA110452=NotificationType((1,3,6,1,4,1,41263,1733))
ntxTrapA110452.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA110452.setStatus(_B)
ntxTrapA110453=NotificationType((1,3,6,1,4,1,41263,1734))
ntxTrapA110453.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA110453.setStatus(_B)
ntxTrapNetworkIsNotProperlyConfiguredOnTheHost=NotificationType((1,3,6,1,4,1,41263,1735))
ntxTrapNetworkIsNotProperlyConfiguredOnTheHost.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNetworkIsNotProperlyConfiguredOnTheHost.setStatus(_B)
ntxTrapDisconnectedAvailabilityZonesAreAffectingSomeEntities=NotificationType((1,3,6,1,4,1,41263,1736))
ntxTrapDisconnectedAvailabilityZonesAreAffectingSomeEntities.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDisconnectedAvailabilityZonesAreAffectingSomeEntities.setStatus(_B)
ntxTrapRecoveryPlanHasMultipleAvailabilityZoneOrders=NotificationType((1,3,6,1,4,1,41263,1737))
ntxTrapRecoveryPlanHasMultipleAvailabilityZoneOrders.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveryPlanHasMultipleAvailabilityZoneOrders.setStatus(_B)
ntxTrapRecoveryPlanContainsVMsWithUnsupportedCHDRVMConfiguration=NotificationType((1,3,6,1,4,1,41263,1738))
ntxTrapRecoveryPlanContainsVMsWithUnsupportedCHDRVMConfiguration.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveryPlanContainsVMsWithUnsupportedCHDRVMConfiguration.setStatus(_B)
ntxTrapA300426=NotificationType((1,3,6,1,4,1,41263,1739))
ntxTrapA300426.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA300426.setStatus(_B)
ntxTrapA300428=NotificationType((1,3,6,1,4,1,41263,1740))
ntxTrapA300428.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA300428.setStatus(_B)
ntxTrapvmtypeRebooted=NotificationType((1,3,6,1,4,1,41263,1741))
ntxTrapvmtypeRebooted.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapvmtypeRebooted.setStatus(_B)
ntxTrapNodeIsInDegradedState=NotificationType((1,3,6,1,4,1,41263,1742))
ntxTrapNodeIsInDegradedState.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNodeIsInDegradedState.setStatus(_B)
ntxTrapComputeonlyClusterSizingHyperconvergedNodeCountCheck=NotificationType((1,3,6,1,4,1,41263,1743))
ntxTrapComputeonlyClusterSizingHyperconvergedNodeCountCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapComputeonlyClusterSizingHyperconvergedNodeCountCheck.setStatus(_B)
ntxTrapA405001=NotificationType((1,3,6,1,4,1,41263,1744))
ntxTrapA405001.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA405001.setStatus(_B)
ntxTrapComputeonlyClusterSizingCVMSizeCheck=NotificationType((1,3,6,1,4,1,41263,1745))
ntxTrapComputeonlyClusterSizingCVMSizeCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapComputeonlyClusterSizingCVMSizeCheck.setStatus(_B)
ntxTrapCalmContainersAreUnhealthy=NotificationType((1,3,6,1,4,1,41263,1746))
ntxTrapCalmContainersAreUnhealthy.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCalmContainersAreUnhealthy.setStatus(_B)
ntxTrapHealthWarningsDetectedInMetadataService=NotificationType((1,3,6,1,4,1,41263,1747))
ntxTrapHealthWarningsDetectedInMetadataService.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHealthWarningsDetectedInMetadataService.setStatus(_B)
ntxTrapProtectedVMsNotCBRCapable=NotificationType((1,3,6,1,4,1,41263,1748))
ntxTrapProtectedVMsNotCBRCapable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectedVMsNotCBRCapable.setStatus(_B)
ntxTrapAutoSupportCheckFails=NotificationType((1,3,6,1,4,1,41263,1749))
ntxTrapAutoSupportCheckFails.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAutoSupportCheckFails.setStatus(_B)
ntxTrapCoreDumpsAreEnabledOnThisCVMOrPCVM=NotificationType((1,3,6,1,4,1,41263,1750))
ntxTrapCoreDumpsAreEnabledOnThisCVMOrPCVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCoreDumpsAreEnabledOnThisCVMOrPCVM.setStatus(_B)
ntxTrapUnequalMetadataPartitionSizesAcrossPrismCentralVMs=NotificationType((1,3,6,1,4,1,41263,1751))
ntxTrapUnequalMetadataPartitionSizesAcrossPrismCentralVMs.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapUnequalMetadataPartitionSizesAcrossPrismCentralVMs.setStatus(_B)
ntxTrapFileServerCloneGracePeriodCheck=NotificationType((1,3,6,1,4,1,41263,1752))
ntxTrapFileServerCloneGracePeriodCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerCloneGracePeriodCheck.setStatus(_B)
ntxTrapVMRecoveryStorageContainerIsNotMountedOnAllHosts=NotificationType((1,3,6,1,4,1,41263,1753))
ntxTrapVMRecoveryStorageContainerIsNotMountedOnAllHosts.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMRecoveryStorageContainerIsNotMountedOnAllHosts.setStatus(_B)
ntxTrapOpenflowTableGettingFull=NotificationType((1,3,6,1,4,1,41263,1754))
ntxTrapOpenflowTableGettingFull.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapOpenflowTableGettingFull.setStatus(_B)
ntxTrapNumberOfDatastoresConfiguredIsHigherThanESXiMaxConnPerIP=NotificationType((1,3,6,1,4,1,41263,1755))
ntxTrapNumberOfDatastoresConfiguredIsHigherThanESXiMaxConnPerIP.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNumberOfDatastoresConfiguredIsHigherThanESXiMaxConnPerIP.setStatus(_B)
ntxTrapA110021=NotificationType((1,3,6,1,4,1,41263,1756))
ntxTrapA110021.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA110021.setStatus(_B)
ntxTrapCheckingIfPortsOfRelevantServicesAreOpen=NotificationType((1,3,6,1,4,1,41263,1757))
ntxTrapCheckingIfPortsOfRelevantServicesAreOpen.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCheckingIfPortsOfRelevantServicesAreOpen.setStatus(_B)
ntxTrapProtectedVMsMayNotBeRecoverable=NotificationType((1,3,6,1,4,1,41263,1758))
ntxTrapProtectedVMsMayNotBeRecoverable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectedVMsMayNotBeRecoverable.setStatus(_B)
ntxTrapExternallyRegisteredAlert=NotificationType((1,3,6,1,4,1,41263,1759))
ntxTrapExternallyRegisteredAlert.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapExternallyRegisteredAlert.setStatus(_B)
ntxTrapInvalidBreakReplicationTimeout=NotificationType((1,3,6,1,4,1,41263,1760))
ntxTrapInvalidBreakReplicationTimeout.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapInvalidBreakReplicationTimeout.setStatus(_B)
ntxTrapBridgevSwitchConfigurationDoesNotMatchNSProtoInZookeeper=NotificationType((1,3,6,1,4,1,41263,1761))
ntxTrapBridgevSwitchConfigurationDoesNotMatchNSProtoInZookeeper.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapBridgevSwitchConfigurationDoesNotMatchNSProtoInZookeeper.setStatus(_B)
ntxTrapActiveDirectoryDCsRunningOnCluster=NotificationType((1,3,6,1,4,1,41263,1762))
ntxTrapActiveDirectoryDCsRunningOnCluster.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapActiveDirectoryDCsRunningOnCluster.setStatus(_B)
ntxTrapDNSServersRunningOnCluster=NotificationType((1,3,6,1,4,1,41263,1763))
ntxTrapDNSServersRunningOnCluster.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDNSServersRunningOnCluster.setStatus(_B)
ntxTrapCPUUsageIsHighOnCVM=NotificationType((1,3,6,1,4,1,41263,1764))
ntxTrapCPUUsageIsHighOnCVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCPUUsageIsHighOnCVM.setStatus(_B)
ntxTrapSMARTParametersOfDiskAreOutOfRange=NotificationType((1,3,6,1,4,1,41263,1765))
ntxTrapSMARTParametersOfDiskAreOutOfRange.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSMARTParametersOfDiskAreOutOfRange.setStatus(_B)
ntxTrapMinimumNOSAndFoundationVersionsAreNotSatisfied=NotificationType((1,3,6,1,4,1,41263,1766))
ntxTrapMinimumNOSAndFoundationVersionsAreNotSatisfied.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMinimumNOSAndFoundationVersionsAreNotSatisfied.setStatus(_B)
ntxTrapPCVMSystemRootPartitionSpaceUsageHigh=NotificationType((1,3,6,1,4,1,41263,1767))
ntxTrapPCVMSystemRootPartitionSpaceUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPCVMSystemRootPartitionSpaceUsageHigh.setStatus(_B)
ntxTrapA300430=NotificationType((1,3,6,1,4,1,41263,1768))
ntxTrapA300430.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA300430.setStatus(_B)
ntxTrapCVMPythonServicesRestartingFrequently=NotificationType((1,3,6,1,4,1,41263,1769))
ntxTrapCVMPythonServicesRestartingFrequently.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMPythonServicesRestartingFrequently.setStatus(_B)
ntxTrapSnapshotReplicationToRemoteSiteIsLagging=NotificationType((1,3,6,1,4,1,41263,1770))
ntxTrapSnapshotReplicationToRemoteSiteIsLagging.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSnapshotReplicationToRemoteSiteIsLagging.setStatus(_B)
ntxTrapSMARTParametersOfDiskhostAreOutOfRange=NotificationType((1,3,6,1,4,1,41263,1771))
ntxTrapSMARTParametersOfDiskhostAreOutOfRange.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSMARTParametersOfDiskhostAreOutOfRange.setStatus(_B)
ntxTrapOneOrMoreCassandraNodesHaveInvalidTokens=NotificationType((1,3,6,1,4,1,41263,1772))
ntxTrapOneOrMoreCassandraNodesHaveInvalidTokens.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapOneOrMoreCassandraNodesHaveInvalidTokens.setStatus(_B)
ntxTrapSecureBootFeatureStatus=NotificationType((1,3,6,1,4,1,41263,1773))
ntxTrapSecureBootFeatureStatus.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSecureBootFeatureStatus.setStatus(_B)
ntxTrapVMHasBeenRecoveredAtAnAlternatePath=NotificationType((1,3,6,1,4,1,41263,1774))
ntxTrapVMHasBeenRecoveredAtAnAlternatePath.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMHasBeenRecoveredAtAnAlternatePath.setStatus(_B)
ntxTrapInvalidHybridNodesConfigurationForErasureCoding=NotificationType((1,3,6,1,4,1,41263,1775))
ntxTrapInvalidHybridNodesConfigurationForErasureCoding.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapInvalidHybridNodesConfigurationForErasureCoding.setStatus(_B)
ntxTrapPlannedFailoverOrUnplannedFailoverOperationsWillFail=NotificationType((1,3,6,1,4,1,41263,1776))
ntxTrapPlannedFailoverOrUnplannedFailoverOperationsWillFail.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPlannedFailoverOrUnplannedFailoverOperationsWillFail.setStatus(_B)
ntxTrapFileServerManagerUpgradeFailed=NotificationType((1,3,6,1,4,1,41263,1777))
ntxTrapFileServerManagerUpgradeFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerManagerUpgradeFailed.setStatus(_B)
ntxTrapSEDKeysUnavailable=NotificationType((1,3,6,1,4,1,41263,1778))
ntxTrapSEDKeysUnavailable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSEDKeysUnavailable.setStatus(_B)
ntxTrapSWEncryptionKeysFromkmsnameAreUnavailable=NotificationType((1,3,6,1,4,1,41263,1779))
ntxTrapSWEncryptionKeysFromkmsnameAreUnavailable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSWEncryptionKeysFromkmsnameAreUnavailable.setStatus(_B)
ntxTrapOVAUploadInterrupted=NotificationType((1,3,6,1,4,1,41263,1780))
ntxTrapOVAUploadInterrupted.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapOVAUploadInterrupted.setStatus(_B)
ntxTrapCVMOrPrismCentralVMRAMUsageHigh=NotificationType((1,3,6,1,4,1,41263,1781))
ntxTrapCVMOrPrismCentralVMRAMUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMOrPrismCentralVMRAMUsageHigh.setStatus(_B)
ntxTrapPrismCentralVMCPULoadHigh=NotificationType((1,3,6,1,4,1,41263,1782))
ntxTrapPrismCentralVMCPULoadHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPrismCentralVMCPULoadHigh.setStatus(_B)
ntxTrapPrismCentralVMDiskUsageHigh=NotificationType((1,3,6,1,4,1,41263,1783))
ntxTrapPrismCentralVMDiskUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPrismCentralVMDiskUsageHigh.setStatus(_B)
ntxTrapPrismCentralVMSystemRootPartitionSpaceUsageHigh=NotificationType((1,3,6,1,4,1,41263,1784))
ntxTrapPrismCentralVMSystemRootPartitionSpaceUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPrismCentralVMSystemRootPartitionSpaceUsageHigh.setStatus(_B)
ntxTrapPrismCentralVMLimitCheck=NotificationType((1,3,6,1,4,1,41263,1785))
ntxTrapPrismCentralVMLimitCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPrismCentralVMLimitCheck.setStatus(_B)
ntxTrapCoreDumpsAreEnabledOnThisCVMOrPrismCentralVM=NotificationType((1,3,6,1,4,1,41263,1786))
ntxTrapCoreDumpsAreEnabledOnThisCVMOrPrismCentralVM.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCoreDumpsAreEnabledOnThisCVMOrPrismCentralVM.setStatus(_B)
ntxTrapClusterDoesNotSupportSynchronousReplication=NotificationType((1,3,6,1,4,1,41263,1787))
ntxTrapClusterDoesNotSupportSynchronousReplication.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapClusterDoesNotSupportSynchronousReplication.setStatus(_B)
ntxTrapPrismCentralVMHomePartitionDiskUsageHigh=NotificationType((1,3,6,1,4,1,41263,1788))
ntxTrapPrismCentralVMHomePartitionDiskUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPrismCentralVMHomePartitionDiskUsageHigh.setStatus(_B)
ntxTrapFilesLicenseInvalid=NotificationType((1,3,6,1,4,1,41263,1789))
ntxTrapFilesLicenseInvalid.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFilesLicenseInvalid.setStatus(_B)
ntxTrapSATAControllerStatusIsBad=NotificationType((1,3,6,1,4,1,41263,1790))
ntxTrapSATAControllerStatusIsBad.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSATAControllerStatusIsBad.setStatus(_B)
ntxTrapFileSystemInconsistenciesAreDetected=NotificationType((1,3,6,1,4,1,41263,1791))
ntxTrapFileSystemInconsistenciesAreDetected.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileSystemInconsistenciesAreDetected.setStatus(_B)
ntxTrapSameTimezoneCheck=NotificationType((1,3,6,1,4,1,41263,1792))
ntxTrapSameTimezoneCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSameTimezoneCheck.setStatus(_B)
ntxTrapStoragePoolSpaceUsageExceededTheConfiguredThreshold=NotificationType((1,3,6,1,4,1,41263,1793))
ntxTrapStoragePoolSpaceUsageExceededTheConfiguredThreshold.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapStoragePoolSpaceUsageExceededTheConfiguredThreshold.setStatus(_B)
ntxTrapHypervisorDiskUsageIsAboveTheRecommendedThreshold=NotificationType((1,3,6,1,4,1,41263,1794))
ntxTrapHypervisorDiskUsageIsAboveTheRecommendedThreshold.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHypervisorDiskUsageIsAboveTheRecommendedThreshold.setStatus(_B)
ntxTrapInvalidSSDHDDDriveCombination=NotificationType((1,3,6,1,4,1,41263,1795))
ntxTrapInvalidSSDHDDDriveCombination.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapInvalidSSDHDDDriveCombination.setStatus(_B)
ntxTrapNodeMaintenanceModeFailure=NotificationType((1,3,6,1,4,1,41263,1796))
ntxTrapNodeMaintenanceModeFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNodeMaintenanceModeFailure.setStatus(_B)
ntxTrapDiskFailedMarkedOffline=NotificationType((1,3,6,1,4,1,41263,1797))
ntxTrapDiskFailedMarkedOffline.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDiskFailedMarkedOffline.setStatus(_B)
ntxTrapVirtualIPCheck=NotificationType((1,3,6,1,4,1,41263,1798))
ntxTrapVirtualIPCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVirtualIPCheck.setStatus(_B)
ntxTrapInsufficientHostBandwidth=NotificationType((1,3,6,1,4,1,41263,1799))
ntxTrapInsufficientHostBandwidth.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapInsufficientHostBandwidth.setStatus(_B)
ntxTrapOrphanedVSSCopiesAreDetected=NotificationType((1,3,6,1,4,1,41263,1800))
ntxTrapOrphanedVSSCopiesAreDetected.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapOrphanedVSSCopiesAreDetected.setStatus(_B)
ntxTrapStorageContainerSpaceUsageExceeded=NotificationType((1,3,6,1,4,1,41263,1801))
ntxTrapStorageContainerSpaceUsageExceeded.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapStorageContainerSpaceUsageExceeded.setStatus(_B)
ntxTrapTwoNodeClusterStateChanged=NotificationType((1,3,6,1,4,1,41263,1802))
ntxTrapTwoNodeClusterStateChanged.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTwoNodeClusterStateChanged.setStatus(_B)
ntxTrapStateChangedForTwoNodeCluster=NotificationType((1,3,6,1,4,1,41263,1803))
ntxTrapStateChangedForTwoNodeCluster.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapStateChangedForTwoNodeCluster.setStatus(_B)
ntxTrapInsufficientSpaceForUVMsDeployedOnPC=NotificationType((1,3,6,1,4,1,41263,1804))
ntxTrapInsufficientSpaceForUVMsDeployedOnPC.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapInsufficientSpaceForUVMsDeployedOnPC.setStatus(_B)
ntxTrapLicensingWorkflowIsIncomplete=NotificationType((1,3,6,1,4,1,41263,1805))
ntxTrapLicensingWorkflowIsIncomplete.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapLicensingWorkflowIsIncomplete.setStatus(_B)
ntxTrapInconsistentBridgevSwitchConfiguration=NotificationType((1,3,6,1,4,1,41263,1806))
ntxTrapInconsistentBridgevSwitchConfiguration.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapInconsistentBridgevSwitchConfiguration.setStatus(_B)
ntxTrapPowerCycleVMsBeforePerformingUpgradeOrMigrateOperation=NotificationType((1,3,6,1,4,1,41263,1807))
ntxTrapPowerCycleVMsBeforePerformingUpgradeOrMigrateOperation.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPowerCycleVMsBeforePerformingUpgradeOrMigrateOperation.setStatus(_B)
ntxTrapStorageContainersIsareNotMountedOnAllNodes=NotificationType((1,3,6,1,4,1,41263,1808))
ntxTrapStorageContainersIsareNotMountedOnAllNodes.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapStorageContainersIsareNotMountedOnAllNodes.setStatus(_B)
ntxTrapVMRecoveryStorageContainersIsareNotMountedOnAllHosts=NotificationType((1,3,6,1,4,1,41263,1809))
ntxTrapVMRecoveryStorageContainersIsareNotMountedOnAllHosts.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMRecoveryStorageContainersIsareNotMountedOnAllHosts.setStatus(_B)
ntxTrapFlowPolicyhitLoggingIsNotFunctional=NotificationType((1,3,6,1,4,1,41263,1810))
ntxTrapFlowPolicyhitLoggingIsNotFunctional.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFlowPolicyhitLoggingIsNotFunctional.setStatus(_B)
ntxTrapEpochSaaSServiceConnectivityLost=NotificationType((1,3,6,1,4,1,41263,1811))
ntxTrapEpochSaaSServiceConnectivityLost.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEpochSaaSServiceConnectivityLost.setStatus(_B)
ntxTrapIDFirewallLostConnectivityToDomainController=NotificationType((1,3,6,1,4,1,41263,1812))
ntxTrapIDFirewallLostConnectivityToDomainController.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIDFirewallLostConnectivityToDomainController.setStatus(_B)
ntxTrapEpochDataCollectorUpgradeAvailable=NotificationType((1,3,6,1,4,1,41263,1813))
ntxTrapEpochDataCollectorUpgradeAvailable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEpochDataCollectorUpgradeAvailable.setStatus(_B)
ntxTrapA803005=NotificationType((1,3,6,1,4,1,41263,1814))
ntxTrapA803005.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA803005.setStatus(_B)
ntxTrapIDFirewallUnableToLocateMappedActiveDirectoryObject=NotificationType((1,3,6,1,4,1,41263,1815))
ntxTrapIDFirewallUnableToLocateMappedActiveDirectoryObject.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapIDFirewallUnableToLocateMappedActiveDirectoryObject.setStatus(_B)
ntxTrapSkippedReplicationOfSnapshotForProtectionDomain=NotificationType((1,3,6,1,4,1,41263,1816))
ntxTrapSkippedReplicationOfSnapshotForProtectionDomain.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSkippedReplicationOfSnapshotForProtectionDomain.setStatus(_B)
ntxTrapInconsistentFileGroupsInTheSystem=NotificationType((1,3,6,1,4,1,41263,1817))
ntxTrapInconsistentFileGroupsInTheSystem.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapInconsistentFileGroupsInTheSystem.setStatus(_B)
ntxTrapVMRestorationFailed=NotificationType((1,3,6,1,4,1,41263,1818))
ntxTrapVMRestorationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMRestorationFailed.setStatus(_B)
ntxTrapMetadataServiceRestartingFrequentlyDueToLongGCPauses=NotificationType((1,3,6,1,4,1,41263,1819))
ntxTrapMetadataServiceRestartingFrequentlyDueToLongGCPauses.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetadataServiceRestartingFrequentlyDueToLongGCPauses.setStatus(_B)
ntxTrapA130206=NotificationType((1,3,6,1,4,1,41263,1820))
ntxTrapA130206.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA130206.setStatus(_B)
ntxTrapSomeOfTheVMsInTheRecoveryPlanAreUnprotected=NotificationType((1,3,6,1,4,1,41263,1821))
ntxTrapSomeOfTheVMsInTheRecoveryPlanAreUnprotected.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSomeOfTheVMsInTheRecoveryPlanAreUnprotected.setStatus(_B)
ntxTrapRemoteSiteIsIncompatibleForReplication=NotificationType((1,3,6,1,4,1,41263,1822))
ntxTrapRemoteSiteIsIncompatibleForReplication.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemoteSiteIsIncompatibleForReplication.setStatus(_B)
ntxTrapFileServerContainerHasUnexpectedFiles=NotificationType((1,3,6,1,4,1,41263,1823))
ntxTrapFileServerContainerHasUnexpectedFiles.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapFileServerContainerHasUnexpectedFiles.setStatus(_B)
ntxTrapControllerVMTimeNotSynchronizedWithExternalServers=NotificationType((1,3,6,1,4,1,41263,1824))
ntxTrapControllerVMTimeNotSynchronizedWithExternalServers.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapControllerVMTimeNotSynchronizedWithExternalServers.setStatus(_B)
ntxTrapHypervisorTimeNotSynchronisedWithAnyExternalServers=NotificationType((1,3,6,1,4,1,41263,1825))
ntxTrapHypervisorTimeNotSynchronisedWithAnyExternalServers.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHypervisorTimeNotSynchronisedWithAnyExternalServers.setStatus(_B)
ntxTrapA110454=NotificationType((1,3,6,1,4,1,41263,1826))
ntxTrapA110454.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA110454.setStatus(_B)
ntxTrapNearSyncReplicationOfProtectionDomainHasNotProgressed=NotificationType((1,3,6,1,4,1,41263,1827))
ntxTrapNearSyncReplicationOfProtectionDomainHasNotProgressed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNearSyncReplicationOfProtectionDomainHasNotProgressed.setStatus(_B)
ntxTrapPrismCentralVMTypeOrAnnotationNotSet=NotificationType((1,3,6,1,4,1,41263,1828))
ntxTrapPrismCentralVMTypeOrAnnotationNotSet.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPrismCentralVMTypeOrAnnotationNotSet.setStatus(_B)
ntxTrapA200309=NotificationType((1,3,6,1,4,1,41263,1829))
ntxTrapA200309.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA200309.setStatus(_B)
ntxTrapPrismCentralVCPUAvailabilityCheck=NotificationType((1,3,6,1,4,1,41263,1830))
ntxTrapPrismCentralVCPUAvailabilityCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPrismCentralVCPUAvailabilityCheck.setStatus(_B)
ntxTrapPrismCentralMemoryAvailabilityCheck=NotificationType((1,3,6,1,4,1,41263,1831))
ntxTrapPrismCentralMemoryAvailabilityCheck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPrismCentralMemoryAvailabilityCheck.setStatus(_B)
ntxTrapPrismCentralUpgradesAreDisabledOncvmip=NotificationType((1,3,6,1,4,1,41263,1832))
ntxTrapPrismCentralUpgradesAreDisabledOncvmip.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapPrismCentralUpgradesAreDisabledOncvmip.setStatus(_B)
ntxTrapHighNumberOfCorrectableUECCErrorsFound=NotificationType((1,3,6,1,4,1,41263,1833))
ntxTrapHighNumberOfCorrectableUECCErrorsFound.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHighNumberOfCorrectableUECCErrorsFound.setStatus(_B)
ntxTrapTemperatureOfRAIDCardIsOutOfAboveThreshold=NotificationType((1,3,6,1,4,1,41263,1834))
ntxTrapTemperatureOfRAIDCardIsOutOfAboveThreshold.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTemperatureOfRAIDCardIsOutOfAboveThreshold.setStatus(_B)
ntxTrapCVMIPAddressIsUnreachable=NotificationType((1,3,6,1,4,1,41263,1835))
ntxTrapCVMIPAddressIsUnreachable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapCVMIPAddressIsUnreachable.setStatus(_B)
ntxTrapA1191=NotificationType((1,3,6,1,4,1,41263,1836))
ntxTrapA1191.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA1191.setStatus(_B)
ntxTrapDegradedRecoveryPoint=NotificationType((1,3,6,1,4,1,41263,1837))
ntxTrapDegradedRecoveryPoint.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDegradedRecoveryPoint.setStatus(_B)
ntxTrapDIMMHPPRFailureEventFound=NotificationType((1,3,6,1,4,1,41263,1838))
ntxTrapDIMMHPPRFailureEventFound.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDIMMHPPRFailureEventFound.setStatus(_B)
ntxTrapM60GPUConfigurationIncorrectOnTheNode=NotificationType((1,3,6,1,4,1,41263,1839))
ntxTrapM60GPUConfigurationIncorrectOnTheNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapM60GPUConfigurationIncorrectOnTheNode.setStatus(_B)
ntxTrapM10GPUConfigurationIncorrectOnTheNode=NotificationType((1,3,6,1,4,1,41263,1840))
ntxTrapM10GPUConfigurationIncorrectOnTheNode.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapM10GPUConfigurationIncorrectOnTheNode.setStatus(_B)
ntxTrapHostBootDiskRequiresAttention=NotificationType((1,3,6,1,4,1,41263,1841))
ntxTrapHostBootDiskRequiresAttention.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapHostBootDiskRequiresAttention.setStatus(_B)
ntxTrapA130177=NotificationType((1,3,6,1,4,1,41263,1842))
ntxTrapA130177.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA130177.setStatus(_B)
ntxTrapA130173=NotificationType((1,3,6,1,4,1,41263,1843))
ntxTrapA130173.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA130173.setStatus(_B)
ntxTrapProtectionDomainActivationFailed=NotificationType((1,3,6,1,4,1,41263,1844))
ntxTrapProtectionDomainActivationFailed.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectionDomainActivationFailed.setStatus(_B)
ntxTrapAssociatedEntitiesAreNotProtectedTogether=NotificationType((1,3,6,1,4,1,41263,1845))
ntxTrapAssociatedEntitiesAreNotProtectedTogether.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapAssociatedEntitiesAreNotProtectedTogether.setStatus(_B)
ntxTrapEntityConflictInConsistencyGroups=NotificationType((1,3,6,1,4,1,41263,1846))
ntxTrapEntityConflictInConsistencyGroups.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapEntityConflictInConsistencyGroups.setStatus(_B)
ntxTrapVMSyncRepContainerNotFound=NotificationType((1,3,6,1,4,1,41263,1847))
ntxTrapVMSyncRepContainerNotFound.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMSyncRepContainerNotFound.setStatus(_B)
ntxTrapRemoteSiteIsUnreachable=NotificationType((1,3,6,1,4,1,41263,1848))
ntxTrapRemoteSiteIsUnreachable.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRemoteSiteIsUnreachable.setStatus(_B)
ntxTrapNFSMetadataUsageHigh=NotificationType((1,3,6,1,4,1,41263,1849))
ntxTrapNFSMetadataUsageHigh.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNFSMetadataUsageHigh.setStatus(_B)
ntxTrapSSDTierSizeIsSmallOnOneOrMoreNodes=NotificationType((1,3,6,1,4,1,41263,1850))
ntxTrapSSDTierSizeIsSmallOnOneOrMoreNodes.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSSDTierSizeIsSmallOnOneOrMoreNodes.setStatus(_B)
ntxTrapClusterIsSusceptibleToCopyUpBlockMapIssue=NotificationType((1,3,6,1,4,1,41263,1851))
ntxTrapClusterIsSusceptibleToCopyUpBlockMapIssue.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapClusterIsSusceptibleToCopyUpBlockMapIssue.setStatus(_B)
ntxTrapMemoryOvercommitFailure=NotificationType((1,3,6,1,4,1,41263,1852))
ntxTrapMemoryOvercommitFailure.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMemoryOvercommitFailure.setStatus(_B)
ntxTrapProtectedVMIsNotCapableOfBackupAndRecovery=NotificationType((1,3,6,1,4,1,41263,1853))
ntxTrapProtectedVMIsNotCapableOfBackupAndRecovery.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectedVMIsNotCapableOfBackupAndRecovery.setStatus(_B)
ntxTrapProtectedVMsNotFound=NotificationType((1,3,6,1,4,1,41263,1854))
ntxTrapProtectedVMsNotFound.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapProtectedVMsNotFound.setStatus(_B)
ntxTrapDuplicateDiskIDsPresentInDifferentNodesOfTheSameCluster=NotificationType((1,3,6,1,4,1,41263,1855))
ntxTrapDuplicateDiskIDsPresentInDifferentNodesOfTheSameCluster.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapDuplicateDiskIDsPresentInDifferentNodesOfTheSameCluster.setStatus(_B)
ntxTrapRecoveryPointExpiredPriorToStartOfReplication=NotificationType((1,3,6,1,4,1,41263,1856))
ntxTrapRecoveryPointExpiredPriorToStartOfReplication.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapRecoveryPointExpiredPriorToStartOfReplication.setStatus(_B)
ntxTrapTooManySnapshotsInTheSystem=NotificationType((1,3,6,1,4,1,41263,1857))
ntxTrapTooManySnapshotsInTheSystem.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapTooManySnapshotsInTheSystem.setStatus(_B)
ntxTrapA150003=NotificationType((1,3,6,1,4,1,41263,1858))
ntxTrapA150003.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapA150003.setStatus(_B)
ntxTrapInvalidRoutesReceivedFromOnpremVPNGateway=NotificationType((1,3,6,1,4,1,41263,1859))
ntxTrapInvalidRoutesReceivedFromOnpremVPNGateway.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapInvalidRoutesReceivedFromOnpremVPNGateway.setStatus(_B)
ntxTrapVMRenamedOnRestoration=NotificationType((1,3,6,1,4,1,41263,1860))
ntxTrapVMRenamedOnRestoration.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVMRenamedOnRestoration.setStatus(_B)
ntxTrapSecondaryProtectionDomainsNotInSyncWithPrimary=NotificationType((1,3,6,1,4,1,41263,1861))
ntxTrapSecondaryProtectionDomainsNotInSyncWithPrimary.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapSecondaryProtectionDomainsNotInSyncWithPrimary.setStatus(_B)
ntxTrapMetroConnectivityLost=NotificationType((1,3,6,1,4,1,41263,1862))
ntxTrapMetroConnectivityLost.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapMetroConnectivityLost.setStatus(_B)
ntxTrapNodeRemovalStuck=NotificationType((1,3,6,1,4,1,41263,1863))
ntxTrapNodeRemovalStuck.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapNodeRemovalStuck.setStatus(_B)
ntxTrapVGSyncRepContainerNotFound=NotificationType((1,3,6,1,4,1,41263,1864))
ntxTrapVGSyncRepContainerNotFound.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapVGSyncRepContainerNotFound.setStatus(_B)
ntxTrapLatestSnapshotOfProtectionDomainIsMissingEntities=NotificationType((1,3,6,1,4,1,41263,1865))
ntxTrapLatestSnapshotOfProtectionDomainIsMissingEntities.setObjects(*((_A,_D),(_A,_C),(_A,_E),(_A,_F),(_A,_G),(_A,_H),(_A,_I),(_A,_J),(_A,_K)))
if mibBuilder.loadTexts:ntxTrapLatestSnapshotOfProtectionDomainIsMissingEntities.setStatus(_B)
mibBuilder.exportSymbols(_A,**{'nutanix':nutanix,'softwareVersionTable':softwareVersionTable,'svtEntry':svtEntry,_Q:svtIndex,'svtControllerVMId':svtControllerVMId,'svtNutanixBootstrap':svtNutanixBootstrap,'svtNutanixInfrastructure':svtNutanixInfrastructure,'svtNutanixCore':svtNutanixCore,'svtNutanixToolchain':svtNutanixToolchain,'svtNutanixServiceability':svtNutanixServiceability,'svtLinuxKernel':svtLinuxKernel,'serviceStatusTable':serviceStatusTable,'sstEntry':sstEntry,_R:sstIndex,'sstControllerVMId':sstControllerVMId,'sstControllerVMStatus':sstControllerVMStatus,'sstZeusStatus':sstZeusStatus,'sstScavengerStatus':sstScavengerStatus,'sstMedusaStatus':sstMedusaStatus,'sstPithosStatus':sstPithosStatus,'sstStargateStatus':sstStargateStatus,'sstChronosStatus':sstChronosStatus,'sstCuratorStatus':sstCuratorStatus,'sstPrismStatus':sstPrismStatus,'sstAlertManagerStatus':sstAlertManagerStatus,'sstStatsAggregatorStatus':sstStatsAggregatorStatus,'sstSysStatCollectorStatus':sstSysStatCollectorStatus,'diskStatusTable':diskStatusTable,'dstEntry':dstEntry,_S:dstIndex,'dstDiskId':dstDiskId,'dstControllerVMId':dstControllerVMId,'dstSerial':dstSerial,'dstNumRawBytes':dstNumRawBytes,'dstNumTotalBytes':dstNumTotalBytes,'dstNumFreeBytes':dstNumFreeBytes,'dstNumTotalInodes':dstNumTotalInodes,'dstNumFreeInodes':dstNumFreeInodes,'dstAverageLatency':dstAverageLatency,'dstIOBandwidth':dstIOBandwidth,'dstNumberIops':dstNumberIops,'dstState':dstState,'controllerVMResourceTable':controllerVMResourceTable,'crtEntry':crtEntry,_T:crtIndex,'crtControllerVMId':crtControllerVMId,'crtMemory':crtMemory,'crtNumCpus':crtNumCpus,'crtName':crtName,'storagePoolInformationTable':storagePoolInformationTable,'spitEntry':spitEntry,_U:spitIndex,'spitStoragePoolId':spitStoragePoolId,'spitStoragePoolName':spitStoragePoolName,'spitTotalCapacity':spitTotalCapacity,'spitUsedCapacity':spitUsedCapacity,'spitIOPerSecond':spitIOPerSecond,'spitAvgLatencyUsecs':spitAvgLatencyUsecs,'spitIOBandwidth':spitIOBandwidth,'containerInformationTable':containerInformationTable,'citEntry':citEntry,_V:citIndex,'citContainerId':citContainerId,'citContainerName':citContainerName,'citTotalCapacity':citTotalCapacity,'citUsedCapacity':citUsedCapacity,'citIOPerSecond':citIOPerSecond,'citAvgLatencyUsecs':citAvgLatencyUsecs,'citIOBandwidth':citIOBandwidth,'hypervisorInformationTable':hypervisorInformationTable,'hypervisorEntry':hypervisorEntry,_W:hypervisorIndex,'hypervisorId':hypervisorId,'hypervisorName':hypervisorName,'hypervisorVmCount':hypervisorVmCount,'hypervisorCpuCount':hypervisorCpuCount,'hypervisorCpuUsagePercent':hypervisorCpuUsagePercent,'hypervisorMemory':hypervisorMemory,'hypervisorMemoryUsagePercent':hypervisorMemoryUsagePercent,'hypervisorReadIOPerSecond':hypervisorReadIOPerSecond,'hypervisorWriteIOPerSecond':hypervisorWriteIOPerSecond,'hypervisorAverageLatency':hypervisorAverageLatency,'hypervisorIOBandwidth':hypervisorIOBandwidth,'hypervisorRxBytes':hypervisorRxBytes,'hypervisorTxBytes':hypervisorTxBytes,'hypervisorRxDropCount':hypervisorRxDropCount,'hypervisorTxDropCount':hypervisorTxDropCount,'vmInformationTable':vmInformationTable,'vmEntry':vmEntry,_X:vmIndex,'vmId':vmId,'vmName':vmName,'vmHypervisorId':vmHypervisorId,'vmPowerState':vmPowerState,'vmCpuCount':vmCpuCount,'vmCpuUsagePercent':vmCpuUsagePercent,'vmMemory':vmMemory,'vmMemoryUsagePercent':vmMemoryUsagePercent,'vmReadIOPerSecond':vmReadIOPerSecond,'vmWriteIOPerSecond':vmWriteIOPerSecond,'vmAverageLatency':vmAverageLatency,'vmIOBandwidth':vmIOBandwidth,'vmRxBytes':vmRxBytes,'vmTxBytes':vmTxBytes,'vmRxDropCount':vmRxDropCount,'vmTxDropCount':vmTxDropCount,'controllerStatusTable':controllerStatusTable,'cstEntry':cstEntry,_Y:cstIndex,'cstControllerVMId':cstControllerVMId,'cstControllerVMStatus':cstControllerVMStatus,'cstDataServiceStatus':cstDataServiceStatus,'cstMetadataServiceStatus':cstMetadataServiceStatus,'clusterName':clusterName,'clusterVersion':clusterVersion,'clusterStatus':clusterStatus,'clusterTotalStorageCapacity':clusterTotalStorageCapacity,'clusterUsedStorageCapacity':clusterUsedStorageCapacity,'clusterIops':clusterIops,'clusterLatency':clusterLatency,'clusterIOBandwidth':clusterIOBandwidth,'ntxTrap':ntxTrap,_Z:ntxTrapName,'ntxTrapResolved':ntxTrapResolved,'ntxAlert':ntxAlert,_D:ntxAlertCreationTime,_C:ntxAlertDisplayMsg,_E:ntxAlertTitle,_F:ntxAlertSeverity,_H:ntxAlertUuid,_a:ntxAlertResolvedTime,_G:ntxAlertClusterName,_I:ntxAlertSourceEntityUuid,_J:ntxAlertSourceEntityName,_K:ntxAlertSourceEntityType,'ntxTrapClusterRunningOutOfStorageCapacitylowRunway':ntxTrapClusterRunningOutOfStorageCapacitylowRunway,'ntxTrapClusterRunningOutOfCPUCapacitylowRunway':ntxTrapClusterRunningOutOfCPUCapacitylowRunway,'ntxTrapNodeRunningOutOfCPUCapacitylowRunway':ntxTrapNodeRunningOutOfCPUCapacitylowRunway,'ntxTrapClusterRunningOutOfMemoryCapacitylowRunway':ntxTrapClusterRunningOutOfMemoryCapacitylowRunway,'ntxTrapNodeRunningOutOfMemoryCapacitylowRunway':ntxTrapNodeRunningOutOfMemoryCapacitylowRunway,'ntxTrapStorageContainerRunningOutOfStorageCapacitylowRunway':ntxTrapStorageContainerRunningOutOfStorageCapacitylowRunway,'ntxTrapTestAlertTitle':ntxTrapTestAlertTitle,'ntxTrapMetadataDriveAutoAddDisabled':ntxTrapMetadataDriveAutoAddDisabled,'ntxTrapNodeDetachedFromMetadataRing':ntxTrapNodeDetachedFromMetadataRing,'ntxTrapMetadataDynamicRingChangeOperationStuck':ntxTrapMetadataDynamicRingChangeOperationStuck,'ntxTrapMetadataDynamicRingChangeOperationTooSlow':ntxTrapMetadataDynamicRingChangeOperationTooSlow,'ntxTrapMetadataDriveFailed':ntxTrapMetadataDriveFailed,'ntxTrapLargeMetadataSizeDetected':ntxTrapLargeMetadataSizeDetected,'ntxTrapMetadataDriveMarkedToBeAutoAdded':ntxTrapMetadataDriveMarkedToBeAutoAdded,'ntxTrapMetadataDriveDetached':ntxTrapMetadataDriveDetached,'ntxTrapMetadataRingImbalance':ntxTrapMetadataRingImbalance,'ntxTrapCassandraWaitingForDiskReplacement':ntxTrapCassandraWaitingForDiskReplacement,'ntxTrapCloudApplianceDeploymentFailed':ntxTrapCloudApplianceDeploymentFailed,'ntxTrapUnableToRemountDatastore':ntxTrapUnableToRemountDatastore,'ntxTrapRemountedDatastore':ntxTrapRemountedDatastore,'ntxTrapFailedToAllocateSnapshotReserveOnTheRemoteSite':ntxTrapFailedToAllocateSnapshotReserveOnTheRemoteSite,'ntxTrapFailedToAllocateSnapshotReserve':ntxTrapFailedToAllocateSnapshotReserve,'ntxTrapMetroTakeoverOldPrimarySiteIsHostingVMs':ntxTrapMetroTakeoverOldPrimarySiteIsHostingVMs,'ntxTrapProtectionDomainIsInDecoupledState':ntxTrapProtectionDomainIsInDecoupledState,'ntxTrapRemoteSiteLatencyIsHigh':ntxTrapRemoteSiteLatencyIsHigh,'ntxTrapFailedToUpdateMetroAvailabilityFailureHandling':ntxTrapFailedToUpdateMetroAvailabilityFailureHandling,'ntxTrapStretchConnectivityIsLost':ntxTrapStretchConnectivityIsLost,'ntxTrapVMRegistrationWarning':ntxTrapVMRegistrationWarning,'ntxTrapVMRenamedOnConversion':ntxTrapVMRenamedOnConversion,'ntxTrapAuthenticationFailedInWitness':ntxTrapAuthenticationFailedInWitness,'ntxTrapWitnessIsNotConfigured':ntxTrapWitnessIsNotConfigured,'ntxTrapWitnessIsNotReachable':ntxTrapWitnessIsNotReachable,'ntxTrapCuratorJobRunningTooLong':ntxTrapCuratorJobRunningTooLong,'ntxTrapCuratorScanFailure':ntxTrapCuratorScanFailure,'ntxTrapFileServerSpaceUsageHigh':ntxTrapFileServerSpaceUsageHigh,'ntxTrapFileServerSpaceUsageCritical':ntxTrapFileServerSpaceUsageCritical,'ntxTrapFileServerUnreachable':ntxTrapFileServerUnreachable,'ntxTrapFileServerStorageIsNotAvailable':ntxTrapFileServerStorageIsNotAvailable,'ntxTrapFileServerScaleoutFailed':ntxTrapFileServerScaleoutFailed,'ntxTrapFileServerCouldNotJoinTheADDomain':ntxTrapFileServerCouldNotJoinTheADDomain,'ntxTrapNodeFailedToJoinDomain':ntxTrapNodeFailedToJoinDomain,'ntxTrapFileServerTimeDifferenceHigh':ntxTrapFileServerTimeDifferenceHigh,'ntxTrapFileServerStorageCleanupFailed':ntxTrapFileServerStorageCleanupFailed,'ntxTrapFileServerCannotConnectWithADServer':ntxTrapFileServerCannotConnectWithADServer,'ntxTrapFileServerPerformanceOptimizationRecommended':ntxTrapFileServerPerformanceOptimizationRecommended,'ntxTrapAppropriateSiteNotFoundInActiveDirectory':ntxTrapAppropriateSiteNotFoundInActiveDirectory,'ntxTrapFileServerDNSUpdatesPending':ntxTrapFileServerDNSUpdatesPending,'ntxTrapUserQuotaAssignmentFailed':ntxTrapUserQuotaAssignmentFailed,'ntxTrapShareUtilizationReachedConfiguredLimit':ntxTrapShareUtilizationReachedConfiguredLimit,'ntxTrapFileServerFailedToGetUpdatedCVMIPAddress':ntxTrapFileServerFailedToGetUpdatedCVMIPAddress,'ntxTrapFileServerActivationFailed':ntxTrapFileServerActivationFailed,'ntxTrapFailedToSetVMtoVMAntiaffinityRule':ntxTrapFailedToSetVMtoVMAntiaffinityRule,'ntxTrapFileServerHomeShareCreationFailed':ntxTrapFileServerHomeShareCreationFailed,'ntxTrapDiscoveryOfISCSITargetsFailed':ntxTrapDiscoveryOfISCSITargetsFailed,'ntxTrapFileServerUpgradeFailed':ntxTrapFileServerUpgradeFailed,'ntxTrapIncompatibleFileServerActivated':ntxTrapIncompatibleFileServerActivated,'ntxTrapFileServerInHeterogeneousState':ntxTrapFileServerInHeterogeneousState,'ntxTrapFailedToCorrectFileServerDataAndMetaDataInconsistencies':ntxTrapFailedToCorrectFileServerDataAndMetaDataInconsistencies,'ntxTrapFileServerShareDeletionFailed':ntxTrapFileServerShareDeletionFailed,'ntxTrapFileServerCompatibilityCheckSkipped':ntxTrapFileServerCompatibilityCheckSkipped,'ntxTrapSnapshotInvalidForClone':ntxTrapSnapshotInvalidForClone,'ntxTrapFileServerAntiVirusICAPServerDown':ntxTrapFileServerAntiVirusICAPServerDown,'ntxTrapFileServerAntiVirusAllICAPServersDown':ntxTrapFileServerAntiVirusAllICAPServersDown,'ntxTrapClusterInReadOnlyMode':ntxTrapClusterInReadOnlyMode,'ntxTrapStorageContainerSpaceUsageExceededAOSCheck':ntxTrapStorageContainerSpaceUsageExceededAOSCheck,'ntxTrapDiskDiagnosticFailure':ntxTrapDiskDiagnosticFailure,'ntxTrapNodeFailure':ntxTrapNodeFailure,'ntxTrapNodeInMaintenanceMode':ntxTrapNodeInMaintenanceMode,'ntxTrapNonSelfEncryptionDriveDiskInserted':ntxTrapNonSelfEncryptionDriveDiskInserted,'ntxTrapPhysicalDiskAddedToSlot':ntxTrapPhysicalDiskAddedToSlot,'ntxTrapPhysicalDiskDriveHasFailed':ntxTrapPhysicalDiskDriveHasFailed,'ntxTrapPhysicalDiskRemovedFromSlot':ntxTrapPhysicalDiskRemovedFromSlot,'ntxTrapSelfEncryptingDriveOperationFailure':ntxTrapSelfEncryptingDriveOperationFailure,'ntxTrapUnsupportedConfigurationForRedundancyFactor3':ntxTrapUnsupportedConfigurationForRedundancyFactor3,'ntxTrapCannotRemovePasswordProtectedDisks':ntxTrapCannotRemovePasswordProtectedDisks,'ntxTrapDiskBad':ntxTrapDiskBad,'ntxTrapDuplicateIPAddressDetected':ntxTrapDuplicateIPAddressDetected,'ntxTrapIPAddressNotHosted':ntxTrapIPAddressNotHosted,'ntxTrapSMTPError':ntxTrapSMTPError,'ntxTrapProtectionDomainReplicationFailure':ntxTrapProtectionDomainReplicationFailure,'ntxTrapProtectionDomainSnapshotFailure':ntxTrapProtectionDomainSnapshotFailure,'ntxTrapNutanixGuestToolsAgentIsNotReachableOnTheVM':ntxTrapNutanixGuestToolsAgentIsNotReachableOnTheVM,'ntxTrapMetroAvailabilityIsPromoted':ntxTrapMetroAvailabilityIsPromoted,'ntxTrapEntityRestoreAborted':ntxTrapEntityRestoreAborted,'ntxTrapProtectionDomainReceiveSnapshotFailure':ntxTrapProtectionDomainReceiveSnapshotFailure,'ntxTrapSecureTunnelToRemoteSiteDown':ntxTrapSecureTunnelToRemoteSiteDown,'ntxTrapProtectedVolumeGroupNotFound':ntxTrapProtectedVolumeGroupNotFound,'ntxTrapProtectionDomainActivation':ntxTrapProtectionDomainActivation,'ntxTrapDuplicateRemoteClusterID':ntxTrapDuplicateRemoteClusterID,'ntxTrapCloudRemoteSiteFailedToStart':ntxTrapCloudRemoteSiteFailedToStart,'ntxTrapRemoteSiteremotenameNetworkMappingMissing':ntxTrapRemoteSiteremotenameNetworkMappingMissing,'ntxTrapOperationForwardedToCloudRemoteFailed':ntxTrapOperationForwardedToCloudRemoteFailed,'ntxTrapRecoveryPointObjectiveCannotBeMet':ntxTrapRecoveryPointObjectiveCannotBeMet,'ntxTrapVStoreSnapshotStatus':ntxTrapVStoreSnapshotStatus,'ntxTrapProtectionDomainSnapshotOperationSkipped':ntxTrapProtectionDomainSnapshotOperationSkipped,'ntxTrapSkippedReplicationOfTheSnapshot':ntxTrapSkippedReplicationOfTheSnapshot,'ntxTrapFailedToSnapshotEntities':ntxTrapFailedToSnapshotEntities,'ntxTrapIncorrectClusterInformationInRemoteSite':ntxTrapIncorrectClusterInformationInRemoteSite,'ntxTrapVStoreIsBeingReplicatedToBackupOnlyRemoteSite':ntxTrapVStoreIsBeingReplicatedToBackupOnlyRemoteSite,'ntxTrapFailedToChangeStateOfOneOrMoreVMs':ntxTrapFailedToChangeStateOfOneOrMoreVMs,'ntxTrapRegistrationOfOneOrMoreVMsFailed':ntxTrapRegistrationOfOneOrMoreVMsFailed,'ntxTrapSelfServiceRestoreOperationFailed':ntxTrapSelfServiceRestoreOperationFailed,'ntxTrapMetadataVolumeSnapshotPersistentFailure':ntxTrapMetadataVolumeSnapshotPersistentFailure,'ntxTrapMetroAvailabilityIsDisabled':ntxTrapMetroAvailabilityIsDisabled,'ntxTrapApplicationconsistentSnapshotNotTakenForTheVM':ntxTrapApplicationconsistentSnapshotNotTakenForTheVM,'ntxTrapInvalidConsistencyGroup':ntxTrapInvalidConsistencyGroup,'ntxTrapFailedToReconfigureNutanixGuestToolsForTheRecoveredVM':ntxTrapFailedToReconfigureNutanixGuestToolsForTheRecoveredVM,'ntxTrapNutanixGuestToolsNotInstalled':ntxTrapNutanixGuestToolsNotInstalled,'ntxTrapRemoteSiteremotenameNetworkMappingInvalid':ntxTrapRemoteSiteremotenameNetworkMappingInvalid,'ntxTrapVSSSnapshotFailed':ntxTrapVSSSnapshotFailed,'ntxTrapAlertRaisedOnCloudRemoteSiteremotenamealertmessage':ntxTrapAlertRaisedOnCloudRemoteSiteremotenamealertmessage,'ntxTrapProtectedVmsNotFound':ntxTrapProtectedVmsNotFound,'ntxTrapProtectionDomainContainsMoreThanSpecifiedVMs':ntxTrapProtectionDomainContainsMoreThanSpecifiedVMs,'ntxTrapRelatedEntityProtectionStatus':ntxTrapRelatedEntityProtectionStatus,'ntxTrapNutanixGuestToolsIsNotSupportedOnRemoteSite':ntxTrapNutanixGuestToolsIsNotSupportedOnRemoteSite,'ntxTrapRemoteSiteOperationModeReadOnly':ntxTrapRemoteSiteOperationModeReadOnly,'ntxTrapRemoteSiteIsUnhealthy':ntxTrapRemoteSiteIsUnhealthy,'ntxTrapEntitiesRestoredButUnprotected':ntxTrapEntitiesRestoredButUnprotected,'ntxTrapProtectionDomainFullReplicationPerformed':ntxTrapProtectionDomainFullReplicationPerformed,'ntxTrapProtectedVMIsNotNutanixBackupAndRecoveryCompliant':ntxTrapProtectedVMIsNotNutanixBackupAndRecoveryCompliant,'ntxTrapProtectedVMRenamedDuringClone':ntxTrapProtectedVMRenamedDuringClone,'ntxTrapProtectedVolumeGroupsNotFound':ntxTrapProtectedVolumeGroupsNotFound,'ntxTrapVMRegistrationFailed':ntxTrapVMRegistrationFailed,'ntxTrapProtectionDomainReplicationExpired':ntxTrapProtectionDomainReplicationExpired,'ntxTrapVolumeGroupAttachmentsNotRestored':ntxTrapVolumeGroupAttachmentsNotRestored,'ntxTrapEntitiesSkippedDuringRestore':ntxTrapEntitiesSkippedDuringRestore,'ntxTrapProtectionDomainChangeModeFailure':ntxTrapProtectionDomainChangeModeFailure,'ntxTrapVSSSnapshotAborted':ntxTrapVSSSnapshotAborted,'ntxTrapExternalISCSIAttachmentsNotSnapshotted':ntxTrapExternalISCSIAttachmentsNotSnapshotted,'ntxTrapVMVirtualHardwareVersionNotCompatible':ntxTrapVMVirtualHardwareVersionNotCompatible,'ntxTrapVolumeGroupActionError':ntxTrapVolumeGroupActionError,'ntxTrapMetadataVolumeSnapshotTimeout':ntxTrapMetadataVolumeSnapshotTimeout,'ntxTrapSnapshotPartiallyCrashConsistent':ntxTrapSnapshotPartiallyCrashConsistent,'ntxTrapMetroAvailabilityPrechecksFailed':ntxTrapMetroAvailabilityPrechecksFailed,'ntxTrapProtectionDomainMightHaveSymlinks':ntxTrapProtectionDomainMightHaveSymlinks,'ntxTrapVSSSnapshotIsNotSupportedForTheVM':ntxTrapVSSSnapshotIsNotSupportedForTheVM,'ntxTrapSnapshotReserveOnSSDIsFull':ntxTrapSnapshotReserveOnSSDIsFull,'ntxTrapMetroAvailabilityConfigurationFailed':ntxTrapMetroAvailabilityConfigurationFailed,'ntxTrapStaleNFSMount':ntxTrapStaleNFSMount,'ntxTrapVSSSoftwareOrprefreezepostthawScriptsNotInstalled':ntxTrapVSSSoftwareOrprefreezepostthawScriptsNotInstalled,'ntxTrapProtectedVMNotFound':ntxTrapProtectedVMNotFound,'ntxTrapProtectionDomainTransitioningToLowerFrequencySnapshotting':ntxTrapProtectionDomainTransitioningToLowerFrequencySnapshotting,'ntxTrapSnapshotQueuedForReplicationsToRemoteSite':ntxTrapSnapshotQueuedForReplicationsToRemoteSite,'ntxTrapAgentVMRestorationFailure':ntxTrapAgentVMRestorationFailure,'ntxTrapCPSDeploymentEvaluationMode':ntxTrapCPSDeploymentEvaluationMode,'ntxTrapHAHostEvacuationFailure':ntxTrapHAHostEvacuationFailure,'ntxTrapFailureToRestartVMsForHAEvent':ntxTrapFailureToRestartVMsForHAEvent,'ntxTrapUpgradeBundleAvailable':ntxTrapUpgradeBundleAvailable,'ntxTrapVMActionError':ntxTrapVMActionError,'ntxTrapHAHealingFailure':ntxTrapHAHealingFailure,'ntxTrapVmHighAvailabilityFailure':ntxTrapVmHighAvailabilityFailure,'ntxTrapKerberosClockSkewFailure':ntxTrapKerberosClockSkewFailure,'ntxTrapStargateTemporarilyDown':ntxTrapStargateTemporarilyDown,'ntxTrapVMGroupSnapshotAndCurrentMismatch':ntxTrapVMGroupSnapshotAndCurrentMismatch,'ntxTrapCertificateCreationError':ntxTrapCertificateCreationError,'ntxTrapFingerprintingDisabled':ntxTrapFingerprintingDisabled,'ntxTrapSystemDefinedFlashModeUsageLimitExceeded':ntxTrapSystemDefinedFlashModeUsageLimitExceeded,'ntxTrapMetadataUsageHigh':ntxTrapMetadataUsageHigh,'ntxTrapNFSMetadataSizeOvershoot':ntxTrapNFSMetadataSizeOvershoot,'ntxTrapOnDiskDedupDisabled':ntxTrapOnDiskDedupDisabled,'ntxTrapSpaceReservationViolated':ntxTrapSpaceReservationViolated,'ntxTrapPossibleDegradedNode':ntxTrapPossibleDegradedNode,'ntxTrapDynamicSchedulingFailure':ntxTrapDynamicSchedulingFailure,'ntxTrapRecoveredVMDiskConfigurationUpdateFailed':ntxTrapRecoveredVMDiskConfigurationUpdateFailed,'ntxTrapISCSIConfigurationFailed':ntxTrapISCSIConfigurationFailed,'ntxTrapA130104':ntxTrapA130104,'ntxTrapExecutionOfThePostThawScriptFailed':ntxTrapExecutionOfThePostThawScriptFailed,'ntxTrapNutanixGuestToolsMountFailed':ntxTrapNutanixGuestToolsMountFailed,'ntxTrapVMForciblyPoweredOff':ntxTrapVMForciblyPoweredOff,'ntxTrapReportGenerationFailure':ntxTrapReportGenerationFailure,'ntxTrapSendReportThroughEmailFailure':ntxTrapSendReportThroughEmailFailure,'ntxTrapReportQuotaScanFailure':ntxTrapReportQuotaScanFailure,'ntxTrapCassandraServiceCrashed':ntxTrapCassandraServiceCrashed,'ntxTrapCassandraServiceIsRunningOutOfMemory':ntxTrapCassandraServiceIsRunningOutOfMemory,'ntxTrapMultipleCassandraNodesHaveSimilarTokens':ntxTrapMultipleCassandraNodesHaveSimilarTokens,'ntxTrapCloudClusterDoesNotHaveRecommendedConfigurationLocally':ntxTrapCloudClusterDoesNotHaveRecommendedConfigurationLocally,'ntxTrapAWSCloudInstanceNotConfiguredProperly':ntxTrapAWSCloudInstanceNotConfiguredProperly,'ntxTrapOldGenerationAWSInstanceConfigured':ntxTrapOldGenerationAWSInstanceConfigured,'ntxTrapAOSVersionOfCloudRemoteSiteIsLessThanSourceCluster':ntxTrapAOSVersionOfCloudRemoteSiteIsLessThanSourceCluster,'ntxTrapCloudClusterDoesNotHaveAllRecommendedGflagsSet':ntxTrapCloudClusterDoesNotHaveAllRecommendedGflagsSet,'ntxTrapEgroupCountOnCloudDiskIsHigherThanTheRecommendedThreshold':ntxTrapEgroupCountOnCloudDiskIsHigherThanTheRecommendedThreshold,'ntxTrapFileServerMutipleVMsOnSingleNodeCheck':ntxTrapFileServerMutipleVMsOnSingleNodeCheck,'ntxTrapFileServerServicesDownCheck':ntxTrapFileServerServicesDownCheck,'ntxTrapFileServerUnreachableCheck':ntxTrapFileServerUnreachableCheck,'ntxTrapFileServerDownCheck':ntxTrapFileServerDownCheck,'ntxTrapFileServerInvalidSnapshot':ntxTrapFileServerInvalidSnapshot,'ntxTrapFileServerEntitiesNotProtected':ntxTrapFileServerEntitiesNotProtected,'ntxTrapMultipleFileServerVersionsArePresentInTheCluster':ntxTrapMultipleFileServerVersionsArePresentInTheCluster,'ntxTrapFileServerUpgradeTaskHungForTooLong':ntxTrapFileServerUpgradeTaskHungForTooLong,'ntxTrapFileServerPDActivatesOnMultipleSites':ntxTrapFileServerPDActivatesOnMultipleSites,'ntxTrapFileServerPDEnabledOnNoncompatibleRemoteSite':ntxTrapFileServerPDEnabledOnNoncompatibleRemoteSite,'ntxTrapHardwareClockFailure':ntxTrapHardwareClockFailure,'ntxTrapWsmanConnectivityLost':ntxTrapWsmanConnectivityLost,'ntxTrapVMMigrationCompromised':ntxTrapVMMigrationCompromised,'ntxTrapCVMMemoryReservationIsIncorrectlyConfigured':ntxTrapCVMMemoryReservationIsIncorrectlyConfigured,'ntxTrapHostMissingCriticalWindowsUpdates':ntxTrapHostMissingCriticalWindowsUpdates,'ntxTrapHostdServiceNotRunning':ntxTrapHostdServiceNotRunning,'ntxTrapIncorrectKerberosSetup':ntxTrapIncorrectKerberosSetup,'ntxTrapUnableToConnectToVCenter':ntxTrapUnableToConnectToVCenter,'ntxTrapVMHasNonASCIIName':ntxTrapVMHasNonASCIIName,'ntxTrapFanSpeedLow':ntxTrapFanSpeedLow,'ntxTrapFanSpeedHigh':ntxTrapFanSpeedHigh,'ntxTrapRAMFault':ntxTrapRAMFault,'ntxTrapPowerSupplyDown':ntxTrapPowerSupplyDown,'ntxTrapCPUTemperatureHigh':ntxTrapCPUTemperatureHigh,'ntxTrapCPUTemperatureReadingError':ntxTrapCPUTemperatureReadingError,'ntxTrapCPUVoltageAbnormal':ntxTrapCPUVoltageAbnormal,'ntxTrapCPUVRMTemperatureHigh':ntxTrapCPUVRMTemperatureHigh,'ntxTrapRAMTemperatureHigh':ntxTrapRAMTemperatureHigh,'ntxTrapRAMVoltageAbnormal':ntxTrapRAMVoltageAbnormal,'ntxTrapRAMVRMTemperatureHigh':ntxTrapRAMVRMTemperatureHigh,'ntxTrapSystemTemperatureHigh':ntxTrapSystemTemperatureHigh,'ntxTrapGPUTemperatureHigh':ntxTrapGPUTemperatureHigh,'ntxTrapIPMIError':ntxTrapIPMIError,'ntxTrapGPUFault':ntxTrapGPUFault,'ntxTrapHighNumberOfCorrectableECCErrorsInLast1Day':ntxTrapHighNumberOfCorrectableECCErrorsInLast1Day,'ntxTrapHighNumberOfCorrectableECCErrorsInLast10Days':ntxTrapHighNumberOfCorrectableECCErrorsInLast10Days,'ntxTrapLicenseExpiry':ntxTrapLicenseExpiry,'ntxTrapLicenseFeatureViolation':ntxTrapLicenseFeatureViolation,'ntxTrapLicenseStandbyMode':ntxTrapLicenseStandbyMode,'ntxTrapLicenseNodeInvalid':ntxTrapLicenseNodeInvalid,'ntxTrapSecondaryPDsNotInSync':ntxTrapSecondaryPDsNotInSync,'ntxTrapNoCheckpointSnapshotsOnMetroPDInLastHour':ntxTrapNoCheckpointSnapshotsOnMetroPDInLastHour,'ntxTrapCVMTimeDifferenceHigh':ntxTrapCVMTimeDifferenceHigh,'ntxTrapIPMIIPNotReachable':ntxTrapIPMIIPNotReachable,'ntxTrapHostIPNotReachable':ntxTrapHostIPNotReachable,'ntxTrapCVMNICSpeedLow':ntxTrapCVMNICSpeedLow,'ntxTrapCVMNotUplinkedToActive10GbpsLink':ntxTrapCVMNotUplinkedToActive10GbpsLink,'ntxTrapNICErrorRateHigh':ntxTrapNICErrorRateHigh,'ntxTrapCVMHostSubnetMismatch':ntxTrapCVMHostSubnetMismatch,'ntxTrapNICLinkDown':ntxTrapNICLinkDown,'ntxTrapCVMIPAddressMismatch':ntxTrapCVMIPAddressMismatch,'ntxTrapZeusConfigMismatch':ntxTrapZeusConfigMismatch,'ntxTrapIPMIIPAddressMismatch':ntxTrapIPMIIPAddressMismatch,'ntxTrapJumboFramesEnabled':ntxTrapJumboFramesEnabled,'ntxTrapNICFlaps':ntxTrapNICFlaps,'ntxTrapIncorrectNTPConfiguration':ntxTrapIncorrectNTPConfiguration,'ntxTrapCVMIsUnreachable':ntxTrapCVMIsUnreachable,'ntxTrapNGTInstallationRequired':ntxTrapNGTInstallationRequired,'ntxTrapTooManyFilesInTheProtectionDomain':ntxTrapTooManyFilesInTheProtectionDomain,'ntxTrapTooManyFilesInTheConsistencyGroup':ntxTrapTooManyFilesInTheConsistencyGroup,'ntxTrapFoundOldClonesOnCluster':ntxTrapFoundOldClonesOnCluster,'ntxTrapTooManyClonesOnCluster':ntxTrapTooManyClonesOnCluster,'ntxTrapProtectingVMsThatAreUsingSharedVHDXDisksIsUnsupported':ntxTrapProtectingVMsThatAreUsingSharedVHDXDisksIsUnsupported,'ntxTrapSymlinksFoundOnMetrovstoreProtectedContainer':ntxTrapSymlinksFoundOnMetrovstoreProtectedContainer,'ntxTrapAgedThirdpartyBackupSnapshotsPresent':ntxTrapAgedThirdpartyBackupSnapshotsPresent,'ntxTrapProtectionDomainContainsMoreThanOneEntity':ntxTrapProtectionDomainContainsMoreThanOneEntity,'ntxTrapRemoteSiteConnectivityNotNormal':ntxTrapRemoteSiteConnectivityNotNormal,'ntxTrapCPUAverageLoadHighOnControllerVM':ntxTrapCPUAverageLoadHighOnControllerVM,'ntxTrapCPUAverageLoadCriticallyHighOnControllerVM':ntxTrapCPUAverageLoadCriticallyHighOnControllerVM,'ntxTrapControllerVMCertificateExpiring':ntxTrapControllerVMCertificateExpiring,'ntxTrapClusterCertificateExpiring':ntxTrapClusterCertificateExpiring,'ntxTrapRemoteSiteInsecure':ntxTrapRemoteSiteInsecure,'ntxTrapMixedSelfEncryptingDriveHardware':ntxTrapMixedSelfEncryptingDriveHardware,'ntxTrapKeyManagementServerUnavailable':ntxTrapKeyManagementServerUnavailable,'ntxTrapNumberOfOrphanedEgroupsIsOverTheRecommendedThreshold':ntxTrapNumberOfOrphanedEgroupsIsOverTheRecommendedThreshold,'ntxTrapCVMRAMUsageHigh':ntxTrapCVMRAMUsageHigh,'ntxTrapClusterServicesAreDown':ntxTrapClusterServicesAreDown,'ntxTrapKernelMemoryUsageHigh':ntxTrapKernelMemoryUsageHigh,'ntxTrapCVMServicesRestartingFrequently':ntxTrapCVMServicesRestartingFrequently,'ntxTrapClusterServiceRestartingFrequently':ntxTrapClusterServiceRestartingFrequently,'ntxTrapCVMConnectivityFailure':ntxTrapCVMConnectivityFailure,'ntxTrapStorageContainerReplicationFactorLow':ntxTrapStorageContainerReplicationFactorLow,'ntxTrapCVMRebooted':ntxTrapCVMRebooted,'ntxTrapRemoteSupportEnabled':ntxTrapRemoteSupportEnabled,'ntxTrapDatastoreVMCountHigh':ntxTrapDatastoreVMCountHigh,'ntxTrapHighVDiskCountInTheCluster':ntxTrapHighVDiskCountInTheCluster,'ntxTrapAllFlashNodesMixedWithNonallflashNodes':ntxTrapAllFlashNodesMixedWithNonallflashNodes,'ntxTrapHaswellAndBroadwellCPUsAreInTheSameChassis':ntxTrapHaswellAndBroadwellCPUsAreInTheSameChassis,'ntxTrapTimeSinceLastCuratorScanIsBeyondThreshold':ntxTrapTimeSinceLastCuratorScanIsBeyondThreshold,'ntxTrapSnapshotChainHeightExceedsThreshold':ntxTrapSnapshotChainHeightExceedsThreshold,'ntxTrapDIMMsOfDifferentTypesInOneMemoryChannel':ntxTrapDIMMsOfDifferentTypesInOneMemoryChannel,'ntxTrapZookeeperNotActiveOnAllCVMs':ntxTrapZookeeperNotActiveOnAllCVMs,'ntxTrapM60GPUConfigurationWrongOnTheNode':ntxTrapM60GPUConfigurationWrongOnTheNode,'ntxTrapM10GPUConfigurationWrongOnTheNode':ntxTrapM10GPUConfigurationWrongOnTheNode,'ntxTrapM10AndM60GPUsInstalledOnTheSameNode':ntxTrapM10AndM60GPUsInstalledOnTheSameNode,'ntxTrapPCVCPUAvailabilityCheck':ntxTrapPCVCPUAvailabilityCheck,'ntxTrapPCSufficientDiskSpaceCheck':ntxTrapPCSufficientDiskSpaceCheck,'ntxTrapPCMemoryAvailabilityCheck':ntxTrapPCMemoryAvailabilityCheck,'ntxTrapPCVMLimitCheck':ntxTrapPCVMLimitCheck,'ntxTrapStoragePoolSpaceUsageExceeded':ntxTrapStoragePoolSpaceUsageExceeded,'ntxTrapDiskInodeUsageHigh':ntxTrapDiskInodeUsageHigh,'ntxTrapDiskUnused':ntxTrapDiskUnused,'ntxTrapFusionIOWearHigh':ntxTrapFusionIOWearHigh,'ntxTrapFusionIOTemperatureHigh':ntxTrapFusionIOTemperatureHigh,'ntxTrapFusionIOReserveLow':ntxTrapFusionIOReserveLow,'ntxTrapFusionIODiskFailed':ntxTrapFusionIODiskFailed,'ntxTrapStorageContainerSpaceUsageExceededNCCCheck':ntxTrapStorageContainerSpaceUsageExceededNCCCheck,'ntxTrapDataDiskSpaceUsageHigh':ntxTrapDataDiskSpaceUsageHigh,'ntxTrapSystemPartitionsSpaceUsageHigh':ntxTrapSystemPartitionsSpaceUsageHigh,'ntxTrapStorageDeviceHealthBad':ntxTrapStorageDeviceHealthBad,'ntxTrapIntelSSDWearHigh':ntxTrapIntelSSDWearHigh,'ntxTrapIntelSSDTemperatureHigh':ntxTrapIntelSSDTemperatureHigh,'ntxTrapCVMBootRaidDegraded':ntxTrapCVMBootRaidDegraded,'ntxTrapAbnormalHostBootRAIDState':ntxTrapAbnormalHostBootRAIDState,'ntxTrapHypervisorDiskSpaceUsageHigh':ntxTrapHypervisorDiskSpaceUsageHigh,'ntxTrapInvalidDriveConfiguration':ntxTrapInvalidDriveConfiguration,'ntxTrapSATADOMHasFailed':ntxTrapSATADOMHasFailed,'ntxTrapSATADOMNotReachable':ntxTrapSATADOMNotReachable,'ntxTrapSATADOMHasWornOut':ntxTrapSATADOMHasWornOut,'ntxTrapSATADOMSL3IE3HasHighWear':ntxTrapSATADOMSL3IE3HasHighWear,'ntxTrapSATADOMNeedsFirmwareVersionUpgradeToS170119':ntxTrapSATADOMNeedsFirmwareVersionUpgradeToS170119,'ntxTrapmodelFirmwareVersionIsNotTheLatestFirmwareVersion':ntxTrapmodelFirmwareVersionIsNotTheLatestFirmwareVersion,'ntxTrapSATADOMHasGuestVM':ntxTrapSATADOMHasGuestVM,'ntxTrapSASConnectivityNotNormal':ntxTrapSASConnectivityNotNormal,'ntxTrapSamsungPM1633DriveHasWornOut':ntxTrapSamsungPM1633DriveHasWornOut,'ntxTrapToshibaPM3DriveHasWornOut':ntxTrapToshibaPM3DriveHasWornOut,'ntxTrapToshibaPM4DriveHasWornOut':ntxTrapToshibaPM4DriveHasWornOut,'ntxTrapSM863DriveHasWornOut':ntxTrapSM863DriveHasWornOut,'ntxTrapMicron5100DriveHasWornOut':ntxTrapMicron5100DriveHasWornOut,'ntxTrapIntelSSDS3610OnipaddressHasConfigurationProblems':ntxTrapIntelSSDS3610OnipaddressHasConfigurationProblems,'ntxTrapOfflineDiskInACluster':ntxTrapOfflineDiskInACluster,'ntxTrapNVMeDriveHasErrors':ntxTrapNVMeDriveHasErrors,'ntxTrapHypervisorBootDriveWearHigh':ntxTrapHypervisorBootDriveWearHigh,'ntxTrapVMIsProtectedInMultiplePDs':ntxTrapVMIsProtectedInMultiplePDs,'ntxTrapProtectedVMsNotOnNutanixStorage':ntxTrapProtectedVMsNotOnNutanixStorage,'ntxTrapClusterConnectivityStatus':ntxTrapClusterConnectivityStatus,'ntxTrapHighGarbageDueToErasureCoding':ntxTrapHighGarbageDueToErasureCoding,'ntxTrapA1175':ntxTrapA1175,'ntxTrapInvalidErasureCodeDelayParameter':ntxTrapInvalidErasureCodeDelayParameter,'ntxTrapFlashModeUsageLimitExceeded':ntxTrapFlashModeUsageLimitExceeded,'ntxTrapFlashmodeenabledVMPowerStatus':ntxTrapFlashmodeenabledVMPowerStatus,'ntxTrapStoragePoolFlashModeConfiguration':ntxTrapStoragePoolFlashModeConfiguration,'ntxTrapTestNotificationTitle':ntxTrapTestNotificationTitle,'ntxTrapIncompatibleFileServer':ntxTrapIncompatibleFileServer,'ntxTrapA1202':ntxTrapA1202,'ntxTrapFirmwareVersionOfSamsungPM1633DrivesIsOld':ntxTrapFirmwareVersionOfSamsungPM1633DrivesIsOld,'ntxTrapMoreThanOneTypeOfToshibaPM4DrivesInstalledOnTheNode':ntxTrapMoreThanOneTypeOfToshibaPM4DrivesInstalledOnTheNode,'ntxTrapA1200':ntxTrapA1200,'ntxTrapFirmwareVersionOfToshibaPM4DrivesIsOld':ntxTrapFirmwareVersionOfToshibaPM4DrivesIsOld,'ntxTrapFirmwareVersionOfSM863DrivesIsOld':ntxTrapFirmwareVersionOfSM863DrivesIsOld,'ntxTrapFewerThanTwoNonSamsungPM863aDrivesInstalledOnTheNode':ntxTrapFewerThanTwoNonSamsungPM863aDrivesInstalledOnTheNode,'ntxTrapFirmwareVersionOfPM863aDrivesIsOld':ntxTrapFirmwareVersionOfPM863aDrivesIsOld,'ntxTrapPM863aDriveHasWornOut':ntxTrapPM863aDriveHasWornOut,'ntxTrapOfflineDiskInCluster':ntxTrapOfflineDiskInCluster,'ntxTrapMetadataDisksNotMountedOnCVM':ntxTrapMetadataDisksNotMountedOnCVM,'ntxTrapFileServerUpgradeTaskIsNotProgressing':ntxTrapFileServerUpgradeTaskIsNotProgressing,'ntxTrapA130129':ntxTrapA130129,'ntxTrapA130118':ntxTrapA130118,'ntxTrapFileServerCloneFailed':ntxTrapFileServerCloneFailed,'ntxTrapFileServerRenameFailed':ntxTrapFileServerRenameFailed,'ntxTrapA130097':ntxTrapA130097,'ntxTrapA130095':ntxTrapA130095,'ntxTrapA130131':ntxTrapA130131,'ntxTrapA130137':ntxTrapA130137,'ntxTrapA106030':ntxTrapA106030,'ntxTrapA106033':ntxTrapA106033,'ntxTrapA111047':ntxTrapA111047,'ntxTrapA110219':ntxTrapA110219,'ntxTrapA110251':ntxTrapA110251,'ntxTrapA111044':ntxTrapA111044,'ntxTrapMaximumConnectionsLimitReachedOnAFileServerVM':ntxTrapMaximumConnectionsLimitReachedOnAFileServerVM,'ntxTrapFailedToAddOneOrMoreFileServerAdministratorUsersOrGroups':ntxTrapFailedToAddOneOrMoreFileServerAdministratorUsersOrGroups,'ntxTrapUserDefinedAlert':ntxTrapUserDefinedAlert,'ntxTrapFileServerNetworkChangeFailed':ntxTrapFileServerNetworkChangeFailed,'ntxTrapSnapshotCreationDelayed':ntxTrapSnapshotCreationDelayed,'ntxTrapA130146':ntxTrapA130146,'ntxTrapA130143':ntxTrapA130143,'ntxTrapA130144':ntxTrapA130144,'ntxTrapFoundationVersionsInconsistent':ntxTrapFoundationVersionsInconsistent,'ntxTrapMetadataDiskUsageIsHigherThanTheSpecifiedLimit':ntxTrapMetadataDiskUsageIsHigherThanTheSpecifiedLimit,'ntxTrapVolumeGroupSpaceUsageExceeded':ntxTrapVolumeGroupSpaceUsageExceeded,'ntxTrapVSSContainersHaveHighFileCount':ntxTrapVSSContainersHaveHighFileCount,'ntxTrapCVMIpAddressIsUnreachable':ntxTrapCVMIpAddressIsUnreachable,'ntxTrapIncorrectClusterInformationInTheRemoteSite':ntxTrapIncorrectClusterInformationInTheRemoteSite,'ntxTrapProtectionDomainActivationMayFailAsConflictingFilesExist':ntxTrapProtectionDomainActivationMayFailAsConflictingFilesExist,'ntxTrapVNUMAVMPinningFailure':ntxTrapVNUMAVMPinningFailure,'ntxTrapGuestPowerOperationThroughNGTFailed':ntxTrapGuestPowerOperationThroughNGTFailed,'ntxTrapMellanoxNICNotInstalledOrWithWrongTypeOnHostMachine':ntxTrapMellanoxNICNotInstalledOrWithWrongTypeOnHostMachine,'ntxTrapNonComplianceWithHostAffinityPolicies':ntxTrapNonComplianceWithHostAffinityPolicies,'ntxTrapPolicyNotApplicableToAnyHost':ntxTrapPolicyNotApplicableToAnyHost,'ntxTrapTheClusterIsNotSynchronizingTimeWithAnyExternalServers':ntxTrapTheClusterIsNotSynchronizingTimeWithAnyExternalServers,'ntxTrapTheHypervisorIsNotSynchronizingTimeWithAnyExternalServers':ntxTrapTheHypervisorIsNotSynchronizingTimeWithAnyExternalServers,'ntxTrapProtectionDomainActivationOrMigrationFailure':ntxTrapProtectionDomainActivationOrMigrationFailure,'ntxTrapProtectionDomainContainsMoreThanTheSpecifiedVMs':ntxTrapProtectionDomainContainsMoreThanTheSpecifiedVMs,'ntxTrapSATADOMML3SEHasHighWear':ntxTrapSATADOMML3SEHasHighWear,'ntxTrapFileServerAntiVirusScanQueueFullOnFSVM':ntxTrapFileServerAntiVirusScanQueueFullOnFSVM,'ntxTrapFileServerAntiVirusScanQueuePilingUpOnFSVM':ntxTrapFileServerAntiVirusScanQueuePilingUpOnFSVM,'ntxTrapFileServerAntiVirusExcessiveQuarantinedUnquarantinedFiles':ntxTrapFileServerAntiVirusExcessiveQuarantinedUnquarantinedFiles,'ntxTrapA160048':ntxTrapA160048,'ntxTrapFailedToTakeTheApplicationconsistentSnapshotForTheVM':ntxTrapFailedToTakeTheApplicationconsistentSnapshotForTheVM,'ntxTrapRemovalOfTheTemporaryHypervisorSnapshotFailedForTheVM':ntxTrapRemovalOfTheTemporaryHypervisorSnapshotFailedForTheVM,'ntxTrapCloudDiskUsageIsNearingTheThreshold':ntxTrapCloudDiskUsageIsNearingTheThreshold,'ntxTrapDIMMsHaveInvalidPartNumber':ntxTrapDIMMsHaveInvalidPartNumber,'ntxTrapAzureCloudControllerVMHasSmallerDisks':ntxTrapAzureCloudControllerVMHasSmallerDisks,'ntxTrapFirmwareVersionOfSM863OrSM863aDrivesIsOld':ntxTrapFirmwareVersionOfSM863OrSM863aDrivesIsOld,'ntxTrapM2Micron5100HostBootDriveHasWornOut':ntxTrapM2Micron5100HostBootDriveHasWornOut,'ntxTrapM2IntelS3520HostBootDriveHasWornOut':ntxTrapM2IntelS3520HostBootDriveHasWornOut,'ntxTrapClusterInOverrideMode':ntxTrapClusterInOverrideMode,'ntxTrapMultipleVcentersDiscovered':ntxTrapMultipleVcentersDiscovered,'ntxTrapProtectionRuleTestAlertTitle':ntxTrapProtectionRuleTestAlertTitle,'ntxTrapExternalClientAuthentication':ntxTrapExternalClientAuthentication,'ntxTrapTwoNodeClusterStateChangeToclusteroperationmode':ntxTrapTwoNodeClusterStateChangeToclusteroperationmode,'ntxTrapWitnessIsUnreachableFromNode':ntxTrapWitnessIsUnreachableFromNode,'ntxTrapTwoNodeClusterChangedStateToStandaloneMode':ntxTrapTwoNodeClusterChangedStateToStandaloneMode,'ntxTrapTwoNodeClusterStateChangeTostate':ntxTrapTwoNodeClusterStateChangeTostate,'ntxTrapTwoNodeClusterStateChangeToStandaloneMode':ntxTrapTwoNodeClusterStateChangeToStandaloneMode,'ntxTrapRecoveryPlanExecutionFailed':ntxTrapRecoveryPlanExecutionFailed,'ntxTrapXiPaymentMissed':ntxTrapXiPaymentMissed,'ntxTrapFreeXiAccountExpired':ntxTrapFreeXiAccountExpired,'ntxTrapXiSubscriptionExpired':ntxTrapXiSubscriptionExpired,'ntxTrapEntitySyncFailure':ntxTrapEntitySyncFailure,'ntxTrapNucalmInternalServiceHasStoppedWorking':ntxTrapNucalmInternalServiceHasStoppedWorking,'ntxTrapEpsilonInternalServiceHasStoppedWorking':ntxTrapEpsilonInternalServiceHasStoppedWorking,'ntxTrapProtectionRuleConflictOccurred':ntxTrapProtectionRuleConflictOccurred,'ntxTrapDomainFaultToleranceIsReducedForMetadata':ntxTrapDomainFaultToleranceIsReducedForMetadata,'ntxTrapVMProtectionFailed':ntxTrapVMProtectionFailed,'ntxTrapVMRecoveryPointReplicationFailed':ntxTrapVMRecoveryPointReplicationFailed,'ntxTrapVMRecoveryPointCreationFailed':ntxTrapVMRecoveryPointCreationFailed,'ntxTrapMicrosegmentationControlPlaneFailed':ntxTrapMicrosegmentationControlPlaneFailed,'ntxTrapMicrosegmentationRuleFailed':ntxTrapMicrosegmentationRuleFailed,'ntxTrapDriveRemovalStuck':ntxTrapDriveRemovalStuck,'ntxTrapFileServerNTPServersConnectivityFailure':ntxTrapFileServerNTPServersConnectivityFailure,'ntxTrapFileServerTimeIsOutOfSyncWithTheActiveDirectory':ntxTrapFileServerTimeIsOutOfSyncWithTheActiveDirectory,'ntxTrapFileServerDNSResolverIPConnectivityFailure':ntxTrapFileServerDNSResolverIPConnectivityFailure,'ntxTrapFileServerUserManagementConfigurationFailed':ntxTrapFileServerUserManagementConfigurationFailed,'ntxTraphomePartitionUsageOnAFileServerVMHigherThanThreshold':ntxTraphomePartitionUsageOnAFileServerVMHigherThanThreshold,'ntxTrapFileServerDNSRecordsCannotBeRefreshed':ntxTrapFileServerDNSRecordsCannotBeRefreshed,'ntxTrapFileServerShareBackupDiffPathTranslationFailed':ntxTrapFileServerShareBackupDiffPathTranslationFailed,'ntxTrapFileServerPartnerServerConnectivityDown':ntxTrapFileServerPartnerServerConnectivityDown,'ntxTrapFileServerPDActionToIncompatibleRemoteSiteAOS':ntxTrapFileServerPDActionToIncompatibleRemoteSiteAOS,'ntxTrapFileServerServicesGotInterrupted':ntxTrapFileServerServicesGotInterrupted,'ntxTrapCommonPortGroupBetweenESXiHostsIsAbsent':ntxTrapCommonPortGroupBetweenESXiHostsIsAbsent,'ntxTrapFailedToReceiveSnapshotForTheProtectionDomain':ntxTrapFailedToReceiveSnapshotForTheProtectionDomain,'ntxTrapHostNetworkUplinkConfigurationFailed':ntxTrapHostNetworkUplinkConfigurationFailed,'ntxTrapRestartVMsBeforePerformingUpgradeOrMigrateOperation':ntxTrapRestartVMsBeforePerformingUpgradeOrMigrateOperation,'ntxTrapOplogEpisodeCountCheck':ntxTrapOplogEpisodeCountCheck,'ntxTrapCerebroStatsCollectorFailed':ntxTrapCerebroStatsCollectorFailed,'ntxTrapLatencyBetweenCVMsIsHigh':ntxTrapLatencyBetweenCVMsIsHigh,'ntxTrapLicenseInvalid':ntxTrapLicenseInvalid,'ntxTrapRemoteSiteAOSNotCompatibleWithFileServerVersion':ntxTrapRemoteSiteAOSNotCompatibleWithFileServerVersion,'ntxTrapA106043':ntxTrapA106043,'ntxTrapFirmwareVersionOfIntelS4600DrivesIsOld':ntxTrapFirmwareVersionOfIntelS4600DrivesIsOld,'ntxTrapIntelS4600DriveHasWornOut':ntxTrapIntelS4600DriveHasWornOut,'ntxTrapHostBootDiskSerialNumberHasChanged':ntxTrapHostBootDiskSerialNumberHasChanged,'ntxTrapSataControllerStatusIsBad':ntxTrapSataControllerStatusIsBad,'ntxTrapSamsung863Or863aOnipaddressHasConfigurationProblems':ntxTrapSamsung863Or863aOnipaddressHasConfigurationProblems,'ntxTrapHypervisorBootDriveRAIDIsInAnUnhealthyState':ntxTrapHypervisorBootDriveRAIDIsInAnUnhealthyState,'ntxTrapCVMPortGroupRenamed':ntxTrapCVMPortGroupRenamed,'ntxTrapA106453':ntxTrapA106453,'ntxTrapActiveDirectoryDCsAndorDNSServersRunningOnCluster':ntxTrapActiveDirectoryDCsAndorDNSServersRunningOnCluster,'ntxTrappowersourceDown':ntxTrappowersourceDown,'ntxTrapCPUTemperatureLow':ntxTrapCPUTemperatureLow,'ntxTrapRAMTemperatureLow':ntxTrapRAMTemperatureLow,'ntxTrapSystemTemperatureLow':ntxTrapSystemTemperatureLow,'ntxTrapIPMISELLogFetchFail':ntxTrapIPMISELLogFetchFail,'ntxTrapIPMISELLogPowerFailure':ntxTrapIPMISELLogPowerFailure,'ntxTrapAggressiveBreakReplicationTimeout':ntxTrapAggressiveBreakReplicationTimeout,'ntxTrapCVMOrPCVMRAMUsageHigh':ntxTrapCVMOrPCVMRAMUsageHigh,'ntxTrapCVMOrPCVMCPULoadHigh':ntxTrapCVMOrPCVMCPULoadHigh,'ntxTrapCVMRenamedIncorrectly':ntxTrapCVMRenamedIncorrectly,'ntxTrapPCVMDiskUsageHigh':ntxTrapPCVMDiskUsageHigh,'ntxTrapvmtypeVirtualIPCheck':ntxTrapvmtypeVirtualIPCheck,'ntxTrapvmtypeSameTimezoneCheck':ntxTrapvmtypeSameTimezoneCheck,'ntxTrapDIMMConfigurationIsWrong':ntxTrapDIMMConfigurationIsWrong,'ntxTrapP40GPUConfigurationWrongOnTheNode':ntxTrapP40GPUConfigurationWrongOnTheNode,'ntxTrapP40GPUBMCVersionIsOldOnTheNode':ntxTrapP40GPUBMCVersionIsOldOnTheNode,'ntxTrapMemoryConfigurationInconsistent':ntxTrapMemoryConfigurationInconsistent,'ntxTrapEntityCountExceededTheMaximumLimit':ntxTrapEntityCountExceededTheMaximumLimit,'ntxTrapAOSUpgradesAreDisabledOncvmip':ntxTrapAOSUpgradesAreDisabledOncvmip,'ntxTrapFirmwareUpgradesAreDisabledOncvmip':ntxTrapFirmwareUpgradesAreDisabledOncvmip,'ntxTrapHypervisorDiskdevnameSpaceUsageHigh':ntxTrapHypervisorDiskdevnameSpaceUsageHigh,'ntxTrapCVMPasswordlessSSHToHost':ntxTrapCVMPasswordlessSSHToHost,'ntxTrapCPUsOfDifferentTypesOrModelsAreInTheSameChassis':ntxTrapCPUsOfDifferentTypesOrModelsAreInTheSameChassis,'ntxTrapRecoveryPointReplicationSkipped':ntxTrapRecoveryPointReplicationSkipped,'ntxTrapNetworkCreationFailureForRecoveryPlan':ntxTrapNetworkCreationFailureForRecoveryPlan,'ntxTrapVirtualIPAddressNotConfiguredOnTheRemoteCluster':ntxTrapVirtualIPAddressNotConfiguredOnTheRemoteCluster,'ntxTrapEntityCountExceedDiscovered':ntxTrapEntityCountExceedDiscovered,'ntxTrapVMReplicationFailure':ntxTrapVMReplicationFailure,'ntxTrapVMReplicationExpired':ntxTrapVMReplicationExpired,'ntxTrapApplicationConsistentRecoveryPointFailed':ntxTrapApplicationConsistentRecoveryPointFailed,'ntxTrapReplicationTimeExceededTheRPOLimit':ntxTrapReplicationTimeExceededTheRPOLimit,'ntxTrapNGTOnVMvmnameWasNotReachable':ntxTrapNGTOnVMvmnameWasNotReachable,'ntxTrapVMReplicationHasNotProgressed':ntxTrapVMReplicationHasNotProgressed,'ntxTrapVSSProviderOrprefreezepostthawScriptsNotInstalled':ntxTrapVSSProviderOrprefreezepostthawScriptsNotInstalled,'ntxTrapPartialRecoveryPoint':ntxTrapPartialRecoveryPoint,'ntxTrapPulseCannotConnectToRESTServerEndpoint':ntxTrapPulseCannotConnectToRESTServerEndpoint,'ntxTrapJumboFramesEnabledForNICnicnameOnservicevmexternalip':ntxTrapJumboFramesEnabledForNICnicnameOnservicevmexternalip,'ntxTrapUnableToRetrieveTheAvailabilityZoneEndpoint':ntxTrapUnableToRetrieveTheAvailabilityZoneEndpoint,'ntxTrapRecoveryPointReplicationFailed':ntxTrapRecoveryPointReplicationFailed,'ntxTrapUnableToCommunicateWithTheDataCenterManager':ntxTrapUnableToCommunicateWithTheDataCenterManager,'ntxTrapRemoteSiteInSameVCenterDatacenter':ntxTrapRemoteSiteInSameVCenterDatacenter,'ntxTrapV100GPUConfigurationWrongOnTheNode':ntxTrapV100GPUConfigurationWrongOnTheNode,'ntxTrapApplicationsArchiveReadyForDownload':ntxTrapApplicationsArchiveReadyForDownload,'ntxTrapMoreThanOneTypeOfGPUsInstalledOnTheSameNode':ntxTrapMoreThanOneTypeOfGPUsInstalledOnTheSameNode,'ntxTrapVmRegisteredWithoutNetwork':ntxTrapVmRegisteredWithoutNetwork,'ntxTrapAlertEmailFailure':ntxTrapAlertEmailFailure,'ntxTrapNICRXCRCErrorRateHigh':ntxTrapNICRXCRCErrorRateHigh,'ntxTrapNICRXMissedErrorRateHigh':ntxTrapNICRXMissedErrorRateHigh,'ntxTrapEntityUnprotectionFailed':ntxTrapEntityUnprotectionFailed,'ntxTrapAvailabilityZoneValidationFailed':ntxTrapAvailabilityZoneValidationFailed,'ntxTrapInvalidNetworkMappingForRecoveryPlanrecoveryplanname':ntxTrapInvalidNetworkMappingForRecoveryPlanrecoveryplanname,'ntxTrapDataProtectionTasksAreNotProgressing':ntxTrapDataProtectionTasksAreNotProgressing,'ntxTrapIncorrectClusterInformationInTheRemoteSiteremotename':ntxTrapIncorrectClusterInformationInTheRemoteSiteremotename,'ntxTrapVCenterNotRegistered':ntxTrapVCenterNotRegistered,'ntxTrapNGTUpdateAvailable':ntxTrapNGTUpdateAvailable,'ntxTrapDuplicateCVMIPAddressDetected':ntxTrapDuplicateCVMIPAddressDetected,'ntxTrapMTUConfigurationAcrossControllerVMsIsNotConsistent':ntxTrapMTUConfigurationAcrossControllerVMsIsNotConsistent,'ntxTrapMultipleCpuunblockProcessesRunning':ntxTrapMultipleCpuunblockProcessesRunning,'ntxTrapRecoveryLocationOperationChangedToReadOnlyMode':ntxTrapRecoveryLocationOperationChangedToReadOnlyMode,'ntxTrapA130181':ntxTrapA130181,'ntxTrapAvailabilityZoneConnectionFailure':ntxTrapAvailabilityZoneConnectionFailure,'ntxTrapPEPCConnectionFailure':ntxTrapPEPCConnectionFailure,'ntxTrapNutanixGuestToolsNotUpgraded':ntxTrapNutanixGuestToolsNotUpgraded,'ntxTrapFileServerMultipleVMsOnSingleNodeCheck':ntxTrapFileServerMultipleVMsOnSingleNodeCheck,'ntxTrapShareUsageReachingToConfiguredLimit':ntxTrapShareUsageReachingToConfiguredLimit,'ntxTrapProtectedVMsNotRecoverable':ntxTrapProtectedVMsNotRecoverable,'ntxTrapEntitySyncFailureForProtectionRule':ntxTrapEntitySyncFailureForProtectionRule,'ntxTrapEntitySyncFailureForRecoveryPlan':ntxTrapEntitySyncFailureForRecoveryPlan,'ntxTrapDataAtRestEncryptionKeyBackupWarning':ntxTrapDataAtRestEncryptionKeyBackupWarning,'ntxTrapLocalKeyManagerMasterKeyRotationWarning':ntxTrapLocalKeyManagerMasterKeyRotationWarning,'ntxTrapPulseCannotConnectToRESTServerEndpointOnFileServer':ntxTrapPulseCannotConnectToRESTServerEndpointOnFileServer,'ntxTrapDetectedIncompatibleAHVVersion':ntxTrapDetectedIncompatibleAHVVersion,'ntxTrapNucalmLicenseIsOvershooting':ntxTrapNucalmLicenseIsOvershooting,'ntxTrapA300409':ntxTrapA300409,'ntxTrapValidationFailedForRecoveryPlanrecoveryplanname':ntxTrapValidationFailedForRecoveryPlanrecoveryplanname,'ntxTrapoperationtypeFailedForRecoveryPlanrecoveryplanname':ntxTrapoperationtypeFailedForRecoveryPlanrecoveryplanname,'ntxTrapA300402':ntxTrapA300402,'ntxTrapEntitySyncFailureForAvailabilityZone':ntxTrapEntitySyncFailureForAvailabilityZone,'ntxTrapRemoteAvailabilityZoneLatencyIsHigh':ntxTrapRemoteAvailabilityZoneLatencyIsHigh,'ntxTrapTheFrequencyOfCPUcpuidOnHosthostipIsExtremelyLow':ntxTrapTheFrequencyOfCPUcpuidOnHosthostipIsExtremelyLow,'ntxTrapCalmLicenseExpiry':ntxTrapCalmLicenseExpiry,'ntxTrapPCVMCPULoadHigh':ntxTrapPCVMCPULoadHigh,'ntxTrapNodeMarkedToBeAutoAddedToMetadataRing':ntxTrapNodeMarkedToBeAutoAddedToMetadataRing,'ntxTrapAutomaticAdditionOfNodeToMetadataRingDisabled':ntxTrapAutomaticAdditionOfNodeToMetadataRingDisabled,'ntxTrapNodeMarkedToBeDetachedFromMetadataRing':ntxTrapNodeMarkedToBeDetachedFromMetadataRing,'ntxTrapNodeForwardingMetadataRequests':ntxTrapNodeForwardingMetadataRequests,'ntxTrapRecoveryPlansHaveConflictingNetworkMappings':ntxTrapRecoveryPlansHaveConflictingNetworkMappings,'ntxTrapVMRecoveryMayFail':ntxTrapVMRecoveryMayFail,'ntxTrapNutanixCalmLicenseViolation':ntxTrapNutanixCalmLicenseViolation,'ntxTrapTranslatedAddressesRetrievalFailureInNGT':ntxTrapTranslatedAddressesRetrievalFailureInNGT,'ntxTrapStoragePoolUsageReachingItsLimit':ntxTrapStoragePoolUsageReachingItsLimit,'ntxTrapTargetCouldNotBeFoundForReplication':ntxTrapTargetCouldNotBeFoundForReplication,'ntxTrapClusterJoinToDomainFailure':ntxTrapClusterJoinToDomainFailure,'ntxTrapUnplannedFailoverAndFailbackCanCauseFullReplication':ntxTrapUnplannedFailoverAndFailbackCanCauseFullReplication,'ntxTrapEntitySyncFailureForTheProtectionPolicy':ntxTrapEntitySyncFailureForTheProtectionPolicy,'ntxTrapEntitySyncFailureForTheRecoveryPlan':ntxTrapEntitySyncFailureForTheRecoveryPlan,'ntxTrapEntitySyncFailureForTheAvailabilityZone':ntxTrapEntitySyncFailureForTheAvailabilityZone,'ntxTrapDeleteTheFailedOverVMsOnThePrimaryLocation':ntxTrapDeleteTheFailedOverVMsOnThePrimaryLocation,'ntxTrapVMvmnameMemoryOverprovisioned':ntxTrapVMvmnameMemoryOverprovisioned,'ntxTrapVMvmnameMemoryConstrained':ntxTrapVMvmnameMemoryConstrained,'ntxTrapVMvmnameCPUOverprovisioned':ntxTrapVMvmnameCPUOverprovisioned,'ntxTrapVMvmnameCPUConstrained':ntxTrapVMvmnameCPUConstrained,'ntxTrapVMvmnameInactive':ntxTrapVMvmnameInactive,'ntxTrapVMBullyvmname':ntxTrapVMBullyvmname,'ntxTrapNutanixGuestToolsFailedToInitiateVMReboot':ntxTrapNutanixGuestToolsFailedToInitiateVMReboot,'ntxTrapMultipleRecoveryPlansHaveCategorycategory':ntxTrapMultipleRecoveryPlansHaveCategorycategory,'ntxTrapFloatingIPfloatingipIsAssociatedWithMultipleVMs':ntxTrapFloatingIPfloatingipIsAssociatedWithMultipleVMs,'ntxTrapRemoteReplicationIsLaggingForProtectionDomainSnapshot':ntxTrapRemoteReplicationIsLaggingForProtectionDomainSnapshot,'ntxTrapSameVMsPresentInMultipleStagesOfTheRecoveryPlan':ntxTrapSameVMsPresentInMultipleStagesOfTheRecoveryPlan,'ntxTrapZookeeperAliasIsIncorrectlyConfiguredInTheCluster':ntxTrapZookeeperAliasIsIncorrectlyConfiguredInTheCluster,'ntxTrapValidationFailedForTheRecoveryPlan':ntxTrapValidationFailedForTheRecoveryPlan,'ntxTrapNetworkCreationFailureForTheRecoveryPlan':ntxTrapNetworkCreationFailureForTheRecoveryPlan,'ntxTrapValidationFailedForTheRecoveryPlanrecoveryplanname':ntxTrapValidationFailedForTheRecoveryPlanrecoveryplanname,'ntxTrapVirtualIPAddressNotConfiguredOnTheCluster':ntxTrapVirtualIPAddressNotConfiguredOnTheCluster,'ntxTrapNGTOnVMvmnameIsNotReachable':ntxTrapNGTOnVMvmnameIsNotReachable,'ntxTrapCVMNICLinkDown':ntxTrapCVMNICLinkDown,'ntxTrapA300417':ntxTrapA300417,'ntxTrapConflictingNgtPolicies':ntxTrapConflictingNgtPolicies,'ntxTrapSystemTemperatureReadingError':ntxTrapSystemTemperatureReadingError,'ntxTrapMultipleRecoveryPlansAreAssociatedWithCategorycategory':ntxTrapMultipleRecoveryPlansAreAssociatedWithCategorycategory,'ntxTrapA300412':ntxTrapA300412,'ntxTrapA110401':ntxTrapA110401,'ntxTrapA300418':ntxTrapA300418,'ntxTrapA300416':ntxTrapA300416,'ntxTrapVMsArePartOfMultipleStagesInTheRecoveryPlanrecoveryplan':ntxTrapVMsArePartOfMultipleStagesInTheRecoveryPlanrecoveryplan,'ntxTrapA300414':ntxTrapA300414,'ntxTrapKaranServicesAreUnreachable':ntxTrapKaranServicesAreUnreachable,'ntxTrapDataserviceIPIsUnreachable':ntxTrapDataserviceIPIsUnreachable,'ntxTrapUSBBootDeviceMissingOnNode':ntxTrapUSBBootDeviceMissingOnNode,'ntxTrapVSSSnapshotOfContainerShareFailed':ntxTrapVSSSnapshotOfContainerShareFailed,'ntxTrapPrismIsRestartingFrequently':ntxTrapPrismIsRestartingFrequently,'ntxTrapRecoveryPlanValidationFailedWithWarnings':ntxTrapRecoveryPlanValidationFailedWithWarnings,'ntxTrapRecoveryPlanValidationFailedWithErrors':ntxTrapRecoveryPlanValidationFailedWithErrors,'ntxTrapRecoveryPlanExecutionFailureDueToValidationErrors':ntxTrapRecoveryPlanExecutionFailureDueToValidationErrors,'ntxTrapInvalidNetworkSettingsForTheRecoveryPlan':ntxTrapInvalidNetworkSettingsForTheRecoveryPlan,'ntxTrapRecoveryPlanExecutionFailure':ntxTrapRecoveryPlanExecutionFailure,'ntxTrapSubnetsDeletionFailureForTheRecoveryPlan':ntxTrapSubnetsDeletionFailureForTheRecoveryPlan,'ntxTrapFloatingIPsDeallocationFailed':ntxTrapFloatingIPsDeallocationFailed,'ntxTrapSubnetCreationFailureForTheRecoveryPlan':ntxTrapSubnetCreationFailureForTheRecoveryPlan,'ntxTrapFloatingIPsAllocationFailed':ntxTrapFloatingIPsAllocationFailed,'ntxTrapFailoverOrFailbackOperationsAreNotPossible':ntxTrapFailoverOrFailbackOperationsAreNotPossible,'ntxTrapValidationWarningsFoundDuringRecoveryPlanExecution':ntxTrapValidationWarningsFoundDuringRecoveryPlanExecution,'ntxTrapNodeRemovalFailure':ntxTrapNodeRemovalFailure,'ntxTrapConflictingNGTPolicies':ntxTrapConflictingNGTPolicies,'ntxTrapVmRestorationFailed':ntxTrapVmRestorationFailed,'ntxTrapRecoveryLocationIsInReadOnlyMode':ntxTrapRecoveryLocationIsInReadOnlyMode,'ntxTrapNGTOnVMIsNotReachable':ntxTrapNGTOnVMIsNotReachable,'ntxTrapNutanixGuestToolsNotInstalledOnTheVM':ntxTrapNutanixGuestToolsNotInstalledOnTheVM,'ntxTrapFullReplicationStartedForTheVM':ntxTrapFullReplicationStartedForTheVM,'ntxTrapReplicationTimeExceededTheRPO':ntxTrapReplicationTimeExceededTheRPO,'ntxTrapNutanixVSSProviderOrprefreezepostthawScriptsNotInstalled':ntxTrapNutanixVSSProviderOrprefreezepostthawScriptsNotInstalled,'ntxTrapFailedToFindTheTargetClusterForReplication':ntxTrapFailedToFindTheTargetClusterForReplication,'ntxTrapVMVirtualHardwareVersionIncompatible':ntxTrapVMVirtualHardwareVersionIncompatible,'ntxTrapVMMigrationFailed':ntxTrapVMMigrationFailed,'ntxTrapVMRegisteredWithoutAnyNetwork':ntxTrapVMRegisteredWithoutAnyNetwork,'ntxTrapProtectedVMNotRecoverable':ntxTrapProtectedVMNotRecoverable,'ntxTrapBackgroundEncryptionStuck':ntxTrapBackgroundEncryptionStuck,'ntxTrapMaximumConnectionsLimitAboutToReachOnAFileServerVM':ntxTrapMaximumConnectionsLimitAboutToReachOnAFileServerVM,'ntxTrapVSSSnapshotIsNotSupportedForSomeVMs':ntxTrapVSSSnapshotIsNotSupportedForSomeVMs,'ntxTrapA110262':ntxTrapA110262,'ntxTrapIncorrectvmtypeNTPConfiguration':ntxTrapIncorrectvmtypeNTPConfiguration,'ntxTrapThevmtypeIsNotSynchronizingTimeWithAnyExternalServers':ntxTrapThevmtypeIsNotSynchronizingTimeWithAnyExternalServers,'ntxTrapA103095':ntxTrapA103095,'ntxTrapFirmwareVersionOfIntelS4600DrivesIsOldOrInvalid':ntxTrapFirmwareVersionOfIntelS4600DrivesIsOldOrInvalid,'ntxTrapRemotenameConnectivityStatus':ntxTrapRemotenameConnectivityStatus,'ntxTrapIncompleteMetroSetup':ntxTrapIncompleteMetroSetup,'ntxTrapA101047':ntxTrapA101047,'ntxTrapP4GPUConfigurationWrongOnTheNode':ntxTrapP4GPUConfigurationWrongOnTheNode,'ntxTrapPCVMTypeOrAnnotationNotSet':ntxTrapPCVMTypeOrAnnotationNotSet,'ntxTrapFailedToConfigureHostForAtlasNetworking':ntxTrapFailedToConfigureHostForAtlasNetworking,'ntxTrapFailedToReserveHostMemoryForAtlasNetworking':ntxTrapFailedToReserveHostMemoryForAtlasNetworking,'ntxTrapRecoveryPlanExecutionExceededTheTimeLimit':ntxTrapRecoveryPlanExecutionExceededTheTimeLimit,'ntxTrapAHVPrismElementDetached':ntxTrapAHVPrismElementDetached,'ntxTrapBeamIsNotReachable':ntxTrapBeamIsNotReachable,'ntxTrapAHVPrismElementAttached':ntxTrapAHVPrismElementAttached,'ntxTrapVPNIPSECTunnelBetweenOnpremAndXiDatacenterIsDown':ntxTrapVPNIPSECTunnelBetweenOnpremAndXiDatacenterIsDown,'ntxTrapEBGPSessionBetweenOnpremAndXiDatacenterIsDown':ntxTrapEBGPSessionBetweenOnpremAndXiDatacenterIsDown,'ntxTrapMaximumVPNBGPRouteLimitReached':ntxTrapMaximumVPNBGPRouteLimitReached,'ntxTrapDomainFaultToleranceIsLowForMetadata':ntxTrapDomainFaultToleranceIsLowForMetadata,'ntxTrapRecoveryLocationIsNotInGoodState':ntxTrapRecoveryLocationIsNotInGoodState,'ntxTrapA110264':ntxTrapA110264,'ntxTrapFlowControlPlaneFailed':ntxTrapFlowControlPlaneFailed,'ntxTrapFlowRuleFailed':ntxTrapFlowRuleFailed,'ntxTrapAnalyticsVMComponentFailure':ntxTrapAnalyticsVMComponentFailure,'ntxTrapAnalyticsVMHighCPUUsage':ntxTrapAnalyticsVMHighCPUUsage,'ntxTrapAnalyticsVMHighDiskUsage':ntxTrapAnalyticsVMHighDiskUsage,'ntxTrapAnalyticsVMLowMemoryAvailable':ntxTrapAnalyticsVMLowMemoryAvailable,'ntxTrapDuplicateIPAddressDetectedForAFileServerVM':ntxTrapDuplicateIPAddressDetectedForAFileServerVM,'ntxTrapFileServerUniqueFsidFailure':ntxTrapFileServerUniqueFsidFailure,'ntxTrapUnequalDiskSizeOfPCVMs':ntxTrapUnequalDiskSizeOfPCVMs,'ntxTrapHighTimeDifferenceBetweenPCAndRegisteredPEs':ntxTrapHighTimeDifferenceBetweenPCAndRegisteredPEs,'ntxTrapPrismCentralVersionEOL':ntxTrapPrismCentralVersionEOL,'ntxTrapPEPCIncompatibleAOSVersions':ntxTrapPEPCIncompatibleAOSVersions,'ntxTrapAplosGatewayIsDown':ntxTrapAplosGatewayIsDown,'ntxTrapAplosEngineIsDown':ntxTrapAplosEngineIsDown,'ntxTrapStorageContainersAreNotMountedOnAllNodes':ntxTrapStorageContainersAreNotMountedOnAllNodes,'ntxTrapOldEntityCentricThirdPartyBackupSnapshotsPresent':ntxTrapOldEntityCentricThirdPartyBackupSnapshotsPresent,'ntxTrapUnsupportedSFPIsInstalledOnHostMachine':ntxTrapUnsupportedSFPIsInstalledOnHostMachine,'ntxTrapMultipleRecoveryPlansAssociatedWithACategory':ntxTrapMultipleRecoveryPlansAssociatedWithACategory,'ntxTrapVMsArePartOfMultipleStagesInRecoveryPlan':ntxTrapVMsArePartOfMultipleStagesInRecoveryPlan,'ntxTrapTestFailoverOnRecoveryPlanHasNotBeenExecutedRecently':ntxTrapTestFailoverOnRecoveryPlanHasNotBeenExecutedRecently,'ntxTrapNumberOfVMsInRecoveryPlanExceedsTheThreshold':ntxTrapNumberOfVMsInRecoveryPlanExceedsTheThreshold,'ntxTrapSATADOMNeedsFirmwareUpgrade':ntxTrapSATADOMNeedsFirmwareUpgrade,'ntxTrapVCenterServerNotRegistered':ntxTrapVCenterServerNotRegistered,'ntxTrapDetectedOlderAHVVersion':ntxTrapDetectedOlderAHVVersion,'ntxTrapNoProtectionPolicyFoundForVMsInRecoveryPlan':ntxTrapNoProtectionPolicyFoundForVMsInRecoveryPlan,'ntxTrapVMsNotCleanedUpFollowingTheTestFailoverForRecoveryPlan':ntxTrapVMsNotCleanedUpFollowingTheTestFailoverForRecoveryPlan,'ntxTrapPowerSupplyStatusUnavailable':ntxTrapPowerSupplyStatusUnavailable,'ntxTrapCVMTimeAndIPMISELTimeDoNotMatch':ntxTrapCVMTimeAndIPMISELTimeDoNotMatch,'ntxTrapProtectionPolicyMaxVMsPerCategoryCheckFailed':ntxTrapProtectionPolicyMaxVMsPerCategoryCheckFailed,'ntxTrapPulseIsDisabled':ntxTrapPulseIsDisabled,'ntxTrapAOSVersionEOL':ntxTrapAOSVersionEOL,'ntxTrapDIMMsOfDifferentManufacturersInOneMemoryChannel':ntxTrapDIMMsOfDifferentManufacturersInOneMemoryChannel,'ntxTrapPrismCentralUsingDefaultPassword':ntxTrapPrismCentralUsingDefaultPassword,'ntxTrapCVMUsingDefaultPassword':ntxTrapCVMUsingDefaultPassword,'ntxTrapHostUsingDefaultPassword':ntxTrapHostUsingDefaultPassword,'ntxTrapIPMIUsingDefaultPassword':ntxTrapIPMIUsingDefaultPassword,'ntxTrapSM883DriveHasWornOut':ntxTrapSM883DriveHasWornOut,'ntxTrapFewerThanTwoNonSamsungPM883DrivesInstalledOnTheNode':ntxTrapFewerThanTwoNonSamsungPM883DrivesInstalledOnTheNode,'ntxTrapPM883DriveHasWornOut':ntxTrapPM883DriveHasWornOut,'ntxTrapCalmVersionMismatch':ntxTrapCalmVersionMismatch,'ntxTrapEpsilonVersionMismatch':ntxTrapEpsilonVersionMismatch,'ntxTrapCalmShowbackIsUnableToReachBeamService':ntxTrapCalmShowbackIsUnableToReachBeamService,'ntxTrapFileAnalyticsVMComponentFailure':ntxTrapFileAnalyticsVMComponentFailure,'ntxTrapFileAnalyticsVMHighCPUUsage':ntxTrapFileAnalyticsVMHighCPUUsage,'ntxTrapFileAnalyticsVMHighDiskUsage':ntxTrapFileAnalyticsVMHighDiskUsage,'ntxTrapFileAnalyticsVMLowMemoryAvailable':ntxTrapFileAnalyticsVMLowMemoryAvailable,'ntxTrapFileServerVMTimeDriftFromNTPServers':ntxTrapFileServerVMTimeDriftFromNTPServers,'ntxTrapFileServerServiceInCrashLoop':ntxTrapFileServerServiceInCrashLoop,'ntxTrapFileServerUpgradeTaskStuck':ntxTrapFileServerUpgradeTaskStuck,'ntxTrapFilesClusterHATakeoverFailure':ntxTrapFilesClusterHATakeoverFailure,'ntxTrapFileServerAlert':ntxTrapFileServerAlert,'ntxTrapFlowModeChangeFailed':ntxTrapFlowModeChangeFailed,'ntxTrapOVSServiceRestart':ntxTrapOVSServiceRestart,'ntxTrapRemoteSubnetIsNotConfiguredAppropriately':ntxTrapRemoteSubnetIsNotConfiguredAppropriately,'ntxTrapA130204':ntxTrapA130204,'ntxTrapA130205':ntxTrapA130205,'ntxTrapHostingOfVirtualIPOfTheNetworkSegmentationDRServiceFailed':ntxTrapHostingOfVirtualIPOfTheNetworkSegmentationDRServiceFailed,'ntxTrapFailureToCopyImageToCluster':ntxTrapFailureToCopyImageToCluster,'ntxTrapIDFirewallConnectivityaccessLossToAD':ntxTrapIDFirewallConnectivityaccessLossToAD,'ntxTrapEpochSaaSConnectivityIsLost':ntxTrapEpochSaaSConnectivityIsLost,'ntxTrapIDFirewallUnableToLocateMappedADObject':ntxTrapIDFirewallUnableToLocateMappedADObject,'ntxTrapSecurityPlanningIsDisabled':ntxTrapSecurityPlanningIsDisabled,'ntxTrapEpochDataCollectorNeedsUpgrade':ntxTrapEpochDataCollectorNeedsUpgrade,'ntxTrapIDFirewallUnableToRecoverStateFromADAfterDisconnect':ntxTrapIDFirewallUnableToRecoverStateFromADAfterDisconnect,'ntxTrapNGTCDROMNotUnmountedOnTheVM':ntxTrapNGTCDROMNotUnmountedOnTheVM,'ntxTrapFloatingIPsDeallocationFailedAfterFailbackFromXi':ntxTrapFloatingIPsDeallocationFailedAfterFailbackFromXi,'ntxTrapTomcatIsRestartingFrequently':ntxTrapTomcatIsRestartingFrequently,'ntxTrapExternalRepositoryAccessFailure':ntxTrapExternalRepositoryAccessFailure,'ntxTrapIOFailuresToADataSourceInAnExternalRepository':ntxTrapIOFailuresToADataSourceInAnExternalRepository,'ntxTrapUnequalDiskSizeOfPrismCentralVMs':ntxTrapUnequalDiskSizeOfPrismCentralVMs,'ntxTrapPCUpgradesAreDisabledOncvmip':ntxTrapPCUpgradesAreDisabledOncvmip,'ntxTrapCalmTrialLicenseExpiry':ntxTrapCalmTrialLicenseExpiry,'ntxTrapSystemNonRootPartitionsSpaceUsageHigh':ntxTrapSystemNonRootPartitionsSpaceUsageHigh,'ntxTrapSystemRootPartitionSpaceUsageHigh':ntxTrapSystemRootPartitionSpaceUsageHigh,'ntxTrapscratchLocationSpaceUsageIsHigh':ntxTrapscratchLocationSpaceUsageIsHigh,'ntxTrapFreeBlockCountOfSATADOMHasGoneBelowThreshold':ntxTrapFreeBlockCountOfSATADOMHasGoneBelowThreshold,'ntxTrapToshibaPM5DriveHasWornOut':ntxTrapToshibaPM5DriveHasWornOut,'ntxTrapMoreThanOneTypeOfToshibaPM5DrivesInstalledOnTheNode':ntxTrapMoreThanOneTypeOfToshibaPM5DrivesInstalledOnTheNode,'ntxTrapBootDriveIsInDegradedState':ntxTrapBootDriveIsInDegradedState,'ntxTrapTemperatureOfM2DiskIsOutOfRange':ntxTrapTemperatureOfM2DiskIsOutOfRange,'ntxTrapM2DiskReturnedUECCErrors':ntxTrapM2DiskReturnedUECCErrors,'ntxTrapM2DiskHasWornOut':ntxTrapM2DiskHasWornOut,'ntxTrapFirmwareOfRaidM2DiskNeedsToBeUpgraded':ntxTrapFirmwareOfRaidM2DiskNeedsToBeUpgraded,'ntxTrapRAIDCardBIOSOrFirmwareOrBootLoaderNeedsToBeUpdated':ntxTrapRAIDCardBIOSOrFirmwareOrBootLoaderNeedsToBeUpdated,'ntxTrapDiskFirmwareNeedsUpgrade':ntxTrapDiskFirmwareNeedsUpgrade,'ntxTrapFlowPolicyhitLoggingDisabled':ntxTrapFlowPolicyhitLoggingDisabled,'ntxTrapLatencyBetweenvmtypes':ntxTrapLatencyBetweenvmtypes,'ntxTrapCVMdestipIsUnreachable':ntxTrapCVMdestipIsUnreachable,'ntxTrapComputeonlyMinimumBandwidthCheck':ntxTrapComputeonlyMinimumBandwidthCheck,'ntxTrapFileServerVMDownCheck':ntxTrapFileServerVMDownCheck,'ntxTrapFileServerVMHardwareClockTimezoneNotSupported':ntxTrapFileServerVMHardwareClockTimezoneNotSupported,'ntxTrapNutanixFilesVersionEOL':ntxTrapNutanixFilesVersionEOL,'ntxTrapFileServerContainerDedupCheck':ntxTrapFileServerContainerDedupCheck,'ntxTrapCheckingIfTargetClusterVersionIsGreaterThan512':ntxTrapCheckingIfTargetClusterVersionIsGreaterThan512,'ntxTrapCheckingIfPortsOfRelevantServicesAreOpenOrNot':ntxTrapCheckingIfPortsOfRelevantServicesAreOpenOrNot,'ntxTrapA110022':ntxTrapA110022,'ntxTrapCheckingIfDRServicesAreReachableOrNot':ntxTrapCheckingIfDRServicesAreReachableOrNot,'ntxTrapHighNumberOfCorrectableECCErrorsFound':ntxTrapHighNumberOfCorrectableECCErrorsFound,'ntxTrapPowerSuppliesOfDifferentTypesDetectedOnANode':ntxTrapPowerSuppliesOfDifferentTypesDetectedOnANode,'ntxTrapPowerSupplyStatusDownUnretrievable':ntxTrapPowerSupplyStatusDownUnretrievable,'ntxTrapProtectedVMNameTooLongOrContainsRestrictedCharacters':ntxTrapProtectedVMNameTooLongOrContainsRestrictedCharacters,'ntxTrapDetectedSnapshotsOnClusterWithHighDensityNodes':ntxTrapDetectedSnapshotsOnClusterWithHighDensityNodes,'ntxTrapDataProtectionIsConfiguredOnClusterWithHighDensityNodes':ntxTrapDataProtectionIsConfiguredOnClusterWithHighDensityNodes,'ntxTrapA110452':ntxTrapA110452,'ntxTrapA110453':ntxTrapA110453,'ntxTrapNetworkIsNotProperlyConfiguredOnTheHost':ntxTrapNetworkIsNotProperlyConfiguredOnTheHost,'ntxTrapDisconnectedAvailabilityZonesAreAffectingSomeEntities':ntxTrapDisconnectedAvailabilityZonesAreAffectingSomeEntities,'ntxTrapRecoveryPlanHasMultipleAvailabilityZoneOrders':ntxTrapRecoveryPlanHasMultipleAvailabilityZoneOrders,'ntxTrapRecoveryPlanContainsVMsWithUnsupportedCHDRVMConfiguration':ntxTrapRecoveryPlanContainsVMsWithUnsupportedCHDRVMConfiguration,'ntxTrapA300426':ntxTrapA300426,'ntxTrapA300428':ntxTrapA300428,'ntxTrapvmtypeRebooted':ntxTrapvmtypeRebooted,'ntxTrapNodeIsInDegradedState':ntxTrapNodeIsInDegradedState,'ntxTrapComputeonlyClusterSizingHyperconvergedNodeCountCheck':ntxTrapComputeonlyClusterSizingHyperconvergedNodeCountCheck,'ntxTrapA405001':ntxTrapA405001,'ntxTrapComputeonlyClusterSizingCVMSizeCheck':ntxTrapComputeonlyClusterSizingCVMSizeCheck,'ntxTrapCalmContainersAreUnhealthy':ntxTrapCalmContainersAreUnhealthy,'ntxTrapHealthWarningsDetectedInMetadataService':ntxTrapHealthWarningsDetectedInMetadataService,'ntxTrapProtectedVMsNotCBRCapable':ntxTrapProtectedVMsNotCBRCapable,'ntxTrapAutoSupportCheckFails':ntxTrapAutoSupportCheckFails,'ntxTrapCoreDumpsAreEnabledOnThisCVMOrPCVM':ntxTrapCoreDumpsAreEnabledOnThisCVMOrPCVM,'ntxTrapUnequalMetadataPartitionSizesAcrossPrismCentralVMs':ntxTrapUnequalMetadataPartitionSizesAcrossPrismCentralVMs,'ntxTrapFileServerCloneGracePeriodCheck':ntxTrapFileServerCloneGracePeriodCheck,'ntxTrapVMRecoveryStorageContainerIsNotMountedOnAllHosts':ntxTrapVMRecoveryStorageContainerIsNotMountedOnAllHosts,'ntxTrapOpenflowTableGettingFull':ntxTrapOpenflowTableGettingFull,'ntxTrapNumberOfDatastoresConfiguredIsHigherThanESXiMaxConnPerIP':ntxTrapNumberOfDatastoresConfiguredIsHigherThanESXiMaxConnPerIP,'ntxTrapA110021':ntxTrapA110021,'ntxTrapCheckingIfPortsOfRelevantServicesAreOpen':ntxTrapCheckingIfPortsOfRelevantServicesAreOpen,'ntxTrapProtectedVMsMayNotBeRecoverable':ntxTrapProtectedVMsMayNotBeRecoverable,'ntxTrapExternallyRegisteredAlert':ntxTrapExternallyRegisteredAlert,'ntxTrapInvalidBreakReplicationTimeout':ntxTrapInvalidBreakReplicationTimeout,'ntxTrapBridgevSwitchConfigurationDoesNotMatchNSProtoInZookeeper':ntxTrapBridgevSwitchConfigurationDoesNotMatchNSProtoInZookeeper,'ntxTrapActiveDirectoryDCsRunningOnCluster':ntxTrapActiveDirectoryDCsRunningOnCluster,'ntxTrapDNSServersRunningOnCluster':ntxTrapDNSServersRunningOnCluster,'ntxTrapCPUUsageIsHighOnCVM':ntxTrapCPUUsageIsHighOnCVM,'ntxTrapSMARTParametersOfDiskAreOutOfRange':ntxTrapSMARTParametersOfDiskAreOutOfRange,'ntxTrapMinimumNOSAndFoundationVersionsAreNotSatisfied':ntxTrapMinimumNOSAndFoundationVersionsAreNotSatisfied,'ntxTrapPCVMSystemRootPartitionSpaceUsageHigh':ntxTrapPCVMSystemRootPartitionSpaceUsageHigh,'ntxTrapA300430':ntxTrapA300430,'ntxTrapCVMPythonServicesRestartingFrequently':ntxTrapCVMPythonServicesRestartingFrequently,'ntxTrapSnapshotReplicationToRemoteSiteIsLagging':ntxTrapSnapshotReplicationToRemoteSiteIsLagging,'ntxTrapSMARTParametersOfDiskhostAreOutOfRange':ntxTrapSMARTParametersOfDiskhostAreOutOfRange,'ntxTrapOneOrMoreCassandraNodesHaveInvalidTokens':ntxTrapOneOrMoreCassandraNodesHaveInvalidTokens,'ntxTrapSecureBootFeatureStatus':ntxTrapSecureBootFeatureStatus,'ntxTrapVMHasBeenRecoveredAtAnAlternatePath':ntxTrapVMHasBeenRecoveredAtAnAlternatePath,'ntxTrapInvalidHybridNodesConfigurationForErasureCoding':ntxTrapInvalidHybridNodesConfigurationForErasureCoding,'ntxTrapPlannedFailoverOrUnplannedFailoverOperationsWillFail':ntxTrapPlannedFailoverOrUnplannedFailoverOperationsWillFail,'ntxTrapFileServerManagerUpgradeFailed':ntxTrapFileServerManagerUpgradeFailed,'ntxTrapSEDKeysUnavailable':ntxTrapSEDKeysUnavailable,'ntxTrapSWEncryptionKeysFromkmsnameAreUnavailable':ntxTrapSWEncryptionKeysFromkmsnameAreUnavailable,'ntxTrapOVAUploadInterrupted':ntxTrapOVAUploadInterrupted,'ntxTrapCVMOrPrismCentralVMRAMUsageHigh':ntxTrapCVMOrPrismCentralVMRAMUsageHigh,'ntxTrapPrismCentralVMCPULoadHigh':ntxTrapPrismCentralVMCPULoadHigh,'ntxTrapPrismCentralVMDiskUsageHigh':ntxTrapPrismCentralVMDiskUsageHigh,'ntxTrapPrismCentralVMSystemRootPartitionSpaceUsageHigh':ntxTrapPrismCentralVMSystemRootPartitionSpaceUsageHigh,'ntxTrapPrismCentralVMLimitCheck':ntxTrapPrismCentralVMLimitCheck,'ntxTrapCoreDumpsAreEnabledOnThisCVMOrPrismCentralVM':ntxTrapCoreDumpsAreEnabledOnThisCVMOrPrismCentralVM,'ntxTrapClusterDoesNotSupportSynchronousReplication':ntxTrapClusterDoesNotSupportSynchronousReplication,'ntxTrapPrismCentralVMHomePartitionDiskUsageHigh':ntxTrapPrismCentralVMHomePartitionDiskUsageHigh,'ntxTrapFilesLicenseInvalid':ntxTrapFilesLicenseInvalid,'ntxTrapSATAControllerStatusIsBad':ntxTrapSATAControllerStatusIsBad,'ntxTrapFileSystemInconsistenciesAreDetected':ntxTrapFileSystemInconsistenciesAreDetected,'ntxTrapSameTimezoneCheck':ntxTrapSameTimezoneCheck,'ntxTrapStoragePoolSpaceUsageExceededTheConfiguredThreshold':ntxTrapStoragePoolSpaceUsageExceededTheConfiguredThreshold,'ntxTrapHypervisorDiskUsageIsAboveTheRecommendedThreshold':ntxTrapHypervisorDiskUsageIsAboveTheRecommendedThreshold,'ntxTrapInvalidSSDHDDDriveCombination':ntxTrapInvalidSSDHDDDriveCombination,'ntxTrapNodeMaintenanceModeFailure':ntxTrapNodeMaintenanceModeFailure,'ntxTrapDiskFailedMarkedOffline':ntxTrapDiskFailedMarkedOffline,'ntxTrapVirtualIPCheck':ntxTrapVirtualIPCheck,'ntxTrapInsufficientHostBandwidth':ntxTrapInsufficientHostBandwidth,'ntxTrapOrphanedVSSCopiesAreDetected':ntxTrapOrphanedVSSCopiesAreDetected,'ntxTrapStorageContainerSpaceUsageExceeded':ntxTrapStorageContainerSpaceUsageExceeded,'ntxTrapTwoNodeClusterStateChanged':ntxTrapTwoNodeClusterStateChanged,'ntxTrapStateChangedForTwoNodeCluster':ntxTrapStateChangedForTwoNodeCluster,'ntxTrapInsufficientSpaceForUVMsDeployedOnPC':ntxTrapInsufficientSpaceForUVMsDeployedOnPC,'ntxTrapLicensingWorkflowIsIncomplete':ntxTrapLicensingWorkflowIsIncomplete,'ntxTrapInconsistentBridgevSwitchConfiguration':ntxTrapInconsistentBridgevSwitchConfiguration,'ntxTrapPowerCycleVMsBeforePerformingUpgradeOrMigrateOperation':ntxTrapPowerCycleVMsBeforePerformingUpgradeOrMigrateOperation,'ntxTrapStorageContainersIsareNotMountedOnAllNodes':ntxTrapStorageContainersIsareNotMountedOnAllNodes,'ntxTrapVMRecoveryStorageContainersIsareNotMountedOnAllHosts':ntxTrapVMRecoveryStorageContainersIsareNotMountedOnAllHosts,'ntxTrapFlowPolicyhitLoggingIsNotFunctional':ntxTrapFlowPolicyhitLoggingIsNotFunctional,'ntxTrapEpochSaaSServiceConnectivityLost':ntxTrapEpochSaaSServiceConnectivityLost,'ntxTrapIDFirewallLostConnectivityToDomainController':ntxTrapIDFirewallLostConnectivityToDomainController,'ntxTrapEpochDataCollectorUpgradeAvailable':ntxTrapEpochDataCollectorUpgradeAvailable,'ntxTrapA803005':ntxTrapA803005,'ntxTrapIDFirewallUnableToLocateMappedActiveDirectoryObject':ntxTrapIDFirewallUnableToLocateMappedActiveDirectoryObject,'ntxTrapSkippedReplicationOfSnapshotForProtectionDomain':ntxTrapSkippedReplicationOfSnapshotForProtectionDomain,'ntxTrapInconsistentFileGroupsInTheSystem':ntxTrapInconsistentFileGroupsInTheSystem,'ntxTrapVMRestorationFailed':ntxTrapVMRestorationFailed,'ntxTrapMetadataServiceRestartingFrequentlyDueToLongGCPauses':ntxTrapMetadataServiceRestartingFrequentlyDueToLongGCPauses,'ntxTrapA130206':ntxTrapA130206,'ntxTrapSomeOfTheVMsInTheRecoveryPlanAreUnprotected':ntxTrapSomeOfTheVMsInTheRecoveryPlanAreUnprotected,'ntxTrapRemoteSiteIsIncompatibleForReplication':ntxTrapRemoteSiteIsIncompatibleForReplication,'ntxTrapFileServerContainerHasUnexpectedFiles':ntxTrapFileServerContainerHasUnexpectedFiles,'ntxTrapControllerVMTimeNotSynchronizedWithExternalServers':ntxTrapControllerVMTimeNotSynchronizedWithExternalServers,'ntxTrapHypervisorTimeNotSynchronisedWithAnyExternalServers':ntxTrapHypervisorTimeNotSynchronisedWithAnyExternalServers,'ntxTrapA110454':ntxTrapA110454,'ntxTrapNearSyncReplicationOfProtectionDomainHasNotProgressed':ntxTrapNearSyncReplicationOfProtectionDomainHasNotProgressed,'ntxTrapPrismCentralVMTypeOrAnnotationNotSet':ntxTrapPrismCentralVMTypeOrAnnotationNotSet,'ntxTrapA200309':ntxTrapA200309,'ntxTrapPrismCentralVCPUAvailabilityCheck':ntxTrapPrismCentralVCPUAvailabilityCheck,'ntxTrapPrismCentralMemoryAvailabilityCheck':ntxTrapPrismCentralMemoryAvailabilityCheck,'ntxTrapPrismCentralUpgradesAreDisabledOncvmip':ntxTrapPrismCentralUpgradesAreDisabledOncvmip,'ntxTrapHighNumberOfCorrectableUECCErrorsFound':ntxTrapHighNumberOfCorrectableUECCErrorsFound,'ntxTrapTemperatureOfRAIDCardIsOutOfAboveThreshold':ntxTrapTemperatureOfRAIDCardIsOutOfAboveThreshold,'ntxTrapCVMIPAddressIsUnreachable':ntxTrapCVMIPAddressIsUnreachable,'ntxTrapA1191':ntxTrapA1191,'ntxTrapDegradedRecoveryPoint':ntxTrapDegradedRecoveryPoint,'ntxTrapDIMMHPPRFailureEventFound':ntxTrapDIMMHPPRFailureEventFound,'ntxTrapM60GPUConfigurationIncorrectOnTheNode':ntxTrapM60GPUConfigurationIncorrectOnTheNode,'ntxTrapM10GPUConfigurationIncorrectOnTheNode':ntxTrapM10GPUConfigurationIncorrectOnTheNode,'ntxTrapHostBootDiskRequiresAttention':ntxTrapHostBootDiskRequiresAttention,'ntxTrapA130177':ntxTrapA130177,'ntxTrapA130173':ntxTrapA130173,'ntxTrapProtectionDomainActivationFailed':ntxTrapProtectionDomainActivationFailed,'ntxTrapAssociatedEntitiesAreNotProtectedTogether':ntxTrapAssociatedEntitiesAreNotProtectedTogether,'ntxTrapEntityConflictInConsistencyGroups':ntxTrapEntityConflictInConsistencyGroups,'ntxTrapVMSyncRepContainerNotFound':ntxTrapVMSyncRepContainerNotFound,'ntxTrapRemoteSiteIsUnreachable':ntxTrapRemoteSiteIsUnreachable,'ntxTrapNFSMetadataUsageHigh':ntxTrapNFSMetadataUsageHigh,'ntxTrapSSDTierSizeIsSmallOnOneOrMoreNodes':ntxTrapSSDTierSizeIsSmallOnOneOrMoreNodes,'ntxTrapClusterIsSusceptibleToCopyUpBlockMapIssue':ntxTrapClusterIsSusceptibleToCopyUpBlockMapIssue,'ntxTrapMemoryOvercommitFailure':ntxTrapMemoryOvercommitFailure,'ntxTrapProtectedVMIsNotCapableOfBackupAndRecovery':ntxTrapProtectedVMIsNotCapableOfBackupAndRecovery,'ntxTrapProtectedVMsNotFound':ntxTrapProtectedVMsNotFound,'ntxTrapDuplicateDiskIDsPresentInDifferentNodesOfTheSameCluster':ntxTrapDuplicateDiskIDsPresentInDifferentNodesOfTheSameCluster,'ntxTrapRecoveryPointExpiredPriorToStartOfReplication':ntxTrapRecoveryPointExpiredPriorToStartOfReplication,'ntxTrapTooManySnapshotsInTheSystem':ntxTrapTooManySnapshotsInTheSystem,'ntxTrapA150003':ntxTrapA150003,'ntxTrapInvalidRoutesReceivedFromOnpremVPNGateway':ntxTrapInvalidRoutesReceivedFromOnpremVPNGateway,'ntxTrapVMRenamedOnRestoration':ntxTrapVMRenamedOnRestoration,'ntxTrapSecondaryProtectionDomainsNotInSyncWithPrimary':ntxTrapSecondaryProtectionDomainsNotInSyncWithPrimary,'ntxTrapMetroConnectivityLost':ntxTrapMetroConnectivityLost,'ntxTrapNodeRemovalStuck':ntxTrapNodeRemovalStuck,'ntxTrapVGSyncRepContainerNotFound':ntxTrapVGSyncRepContainerNotFound,'ntxTrapLatestSnapshotOfProtectionDomainIsMissingEntities':ntxTrapLatestSnapshotOfProtectionDomainIsMissingEntities})