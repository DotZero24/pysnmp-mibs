#
# PySNMP MIB module OS-PROV-TAGS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/rob/Code/pysnmp-mibs/mibs/mrv/OS-PROV-TAGS-MIB
# Produced by pysmi-1.1.12 at Mon Aug  4 17:02:17 2025
# On host macmini.vegmond.io platform Darwin version 24.5.0 by user rob
# Using Python version 3.12.8 (main, Dec  3 2024, 18:42:41) [Clang 16.0.0 (clang-1600.0.26.4)]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
VlanIdOrNone, = mibBuilder.importSymbols("IEEE8021-CFM-MIB", "VlanIdOrNone")
oaOptiSwitch, PortIndex, TagList, EntryValidator = mibBuilder.importSymbols("OS-COMMON-TC-MIB", "oaOptiSwitch", "PortIndex", "TagList", "EntryValidator")
osEthServId, = mibBuilder.importSymbols("OS-ETH-SERV-MIB", "osEthServId")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, Integer32, Gauge32, ModuleIdentity, TimeTicks, NotificationType, Counter32, Bits, IpAddress, iso, ObjectIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "Integer32", "Gauge32", "ModuleIdentity", "TimeTicks", "NotificationType", "Counter32", "Bits", "IpAddress", "iso", "ObjectIdentity", "Counter64")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
osProvTags = ModuleIdentity((1, 3, 6, 1, 4, 1, 6926, 2, 9))
osProvTags.setRevisions(('2020-07-26 00:00', '2010-10-26 00:00',))
if mibBuilder.loadTexts: osProvTags.setLastUpdated('202007260000Z')
if mibBuilder.loadTexts: osProvTags.setOrganization('MRV Communications, Inc.')
class TagAction(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ValueRangeConstraint(4096, 4096), )
osProvTagsObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1))
osProvTagsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 9, 100))
osProvTagsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 9, 100, 1))
osProvTagsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 9, 100, 2))
osProvTagsTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 3), )
if mibBuilder.loadTexts: osProvTagsTable.setStatus('current')
osProvTagsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 3, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"), (0, "OS-PROV-TAGS-MIB", "osProvTagsDir"), (0, "OS-PROV-TAGS-MIB", "osProvTagsRxTag"))
if mibBuilder.loadTexts: osProvTagsEntry.setStatus('current')
osProvTagsDir = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 3, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(2, 3))).clone(namedValues=NamedValues(("ingress", 2), ("egress", 3))))
if mibBuilder.loadTexts: osProvTagsDir.setStatus('current')
osProvTagsRxTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ValueRangeConstraint(4096, 4096), ValueRangeConstraint(4097, 4097), )))
if mibBuilder.loadTexts: osProvTagsRxTag.setStatus('current')
osProvTagsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 3, 1, 10), TagAction()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osProvTagsAction.setStatus('current')
osProvTagsAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 3, 1, 98), EntryValidator()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osProvTagsAdminStatus.setStatus('current')
osEvcUniExceptionPortTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 4), )
if mibBuilder.loadTexts: osEvcUniExceptionPortTable.setStatus('current')
osEvcUniExceptionPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 4, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"), (0, "OS-PROV-TAGS-MIB", "osEvcUniExceptionPortId"))
if mibBuilder.loadTexts: osEvcUniExceptionPortEntry.setStatus('current')
osEvcUniExceptionPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 4, 1, 3), PortIndex())
if mibBuilder.loadTexts: osEvcUniExceptionPortId.setStatus('current')
osEvcUniExceptionPortTxSVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 4, 1, 5), VlanIdOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEvcUniExceptionPortTxSVlan.setStatus('current')
osEvcUniExceptionPortRxSVlans = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 4, 1, 6), TagList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEvcUniExceptionPortRxSVlans.setStatus('current')
osEvcUniExceptionPortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 4, 1, 10), EntryValidator()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEvcUniExceptionPortAdminStatus.setStatus('current')
osEvcNniExceptionPortTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 5), )
if mibBuilder.loadTexts: osEvcNniExceptionPortTable.setStatus('current')
osEvcNniExceptionPortEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 5, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"), (0, "OS-PROV-TAGS-MIB", "osEvcNniExceptionPortId"), (0, "OS-PROV-TAGS-MIB", "osProvTagsDir"), (0, "OS-PROV-TAGS-MIB", "osProvTagsRxTag"))
if mibBuilder.loadTexts: osEvcNniExceptionPortEntry.setStatus('current')
osEvcNniExceptionPortId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 5, 1, 3), PortIndex())
if mibBuilder.loadTexts: osEvcNniExceptionPortId.setStatus('current')
osEvcNniExceptionPortTagsAction = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 5, 1, 6), TagAction()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEvcNniExceptionPortTagsAction.setStatus('current')
osEvcNniExceptionPortAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 9, 1, 5, 1, 10), EntryValidator()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEvcNniExceptionPortAdminStatus.setStatus('current')
osProvTagsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6926, 2, 9, 100, 1, 1)).setObjects(("OS-PROV-TAGS-MIB", "osProvTagsMandatoryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    osProvTagsMIBCompliance = osProvTagsMIBCompliance.setStatus('current')
osProvTagsMandatoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6926, 2, 9, 100, 2, 1)).setObjects(("OS-PROV-TAGS-MIB", "osProvTagsAction"), ("OS-PROV-TAGS-MIB", "osProvTagsAdminStatus"), ("OS-PROV-TAGS-MIB", "osEvcUniExceptionPortTxSVlan"), ("OS-PROV-TAGS-MIB", "osEvcUniExceptionPortRxSVlans"), ("OS-PROV-TAGS-MIB", "osEvcUniExceptionPortAdminStatus"), ("OS-PROV-TAGS-MIB", "osEvcNniExceptionPortTagsAction"), ("OS-PROV-TAGS-MIB", "osEvcNniExceptionPortAdminStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    osProvTagsMandatoryGroup = osProvTagsMandatoryGroup.setStatus('current')
mibBuilder.exportSymbols("OS-PROV-TAGS-MIB", osProvTagsEntry=osProvTagsEntry, PYSNMP_MODULE_ID=osProvTags, osProvTagsAdminStatus=osProvTagsAdminStatus, osEvcNniExceptionPortTable=osEvcNniExceptionPortTable, osEvcUniExceptionPortRxSVlans=osEvcUniExceptionPortRxSVlans, osEvcUniExceptionPortTxSVlan=osEvcUniExceptionPortTxSVlan, osProvTags=osProvTags, osProvTagsTable=osProvTagsTable, osProvTagsMIBCompliance=osProvTagsMIBCompliance, osProvTagsMIBGroups=osProvTagsMIBGroups, osProvTagsObjects=osProvTagsObjects, TagAction=TagAction, osEvcNniExceptionPortTagsAction=osEvcNniExceptionPortTagsAction, osProvTagsAction=osProvTagsAction, osProvTagsConformance=osProvTagsConformance, osEvcNniExceptionPortEntry=osEvcNniExceptionPortEntry, osEvcNniExceptionPortId=osEvcNniExceptionPortId, osEvcUniExceptionPortEntry=osEvcUniExceptionPortEntry, osEvcNniExceptionPortAdminStatus=osEvcNniExceptionPortAdminStatus, osEvcUniExceptionPortAdminStatus=osEvcUniExceptionPortAdminStatus, osProvTagsDir=osProvTagsDir, osProvTagsRxTag=osProvTagsRxTag, osProvTagsMIBCompliances=osProvTagsMIBCompliances, osEvcUniExceptionPortId=osEvcUniExceptionPortId, osEvcUniExceptionPortTable=osEvcUniExceptionPortTable, osProvTagsMandatoryGroup=osProvTagsMandatoryGroup)
