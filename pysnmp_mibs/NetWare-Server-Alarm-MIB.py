_AX='pollingLoops'
_AW='synchronizationRadius'
_AV='volumePercentage'
_AU='eipAddress'
_AT='exceptionName'
_AS='numberOfResources'
_AR='packetSize1'
_AQ='packetSize'
_AP='fileSize2'
_AO='fileSize1'
_AN='fileValue'
_AM='socketNumber1'
_AL='internalNetworkAddress1'
_AK='internalNetworkAddress'
_AJ='auditEventNumber'
_AI='numberOfTransactions'
_AH='taskNumber'
_AG='numberOfBlocks'
_AF='blockNumber1'
_AE='interruptNumber'
_AD='userName1'
_AC='diskSpace'
_AB='NotificationType'
_AA='Integer32'
_A9='cmmndLnPrmtr'
_A8='callBackNumber'
_A7='protocolName'
_A6='macAddress2'
_A5='macAddress1'
_A4='blockNumber'
_A3='mediaLabel'
_A2='numberOfFailedRecordLockRequests'
_A1='numberOfFailedFileLockRequests'
_A0='resourceDescription'
_z='resourceName'
_y='numberOfConnections'
_x='domainName'
_w='routerName'
_v='memoryAddress'
_u='iTimerTicks'
_t='iHopsCount'
_s='objectName'
_r='socketNumber'
_q='numberOfPackets'
_p='numberOfFailedMemoryAllocAttempts'
_o='OctetString'
_n='iRamLength'
_m='iRamStart'
_l='nlmSeverity'
_k='lanDriverName'
_j='ncpSubFunctionNumber'
_i='ncpFunctionNumber'
_h='errorNumber'
_g='networkAddress1'
_f='diskName'
_e='fileMiscInfo1'
_d='fileMiscInfo'
_c='accountName'
_b='codeOffset'
_a='processName'
_Z='serverName1'
_Y='pathName'
_X='szReason'
_W='message'
_V='fileName'
_U='boardNumber'
_T='fileSize'
_S='volumeNumber'
_R='connectionNumber'
_Q='fileOffset'
_P='partitionNumber'
_O='dataStreamNumber'
_N='nlmName'
_M='pathFileName'
_L='macAddress'
_K='networkAddress'
_J='deviceName'
_I='InternationalDisplayString'
_H='stationNumber'
_G='volumeName'
_F='userName'
_E='mandatory'
_D='not-accessible'
_C='trapTime'
_B='serverName'
_A='NetWare-Server-Alarm-MIB'
if'mibBuilder'not in globals():import sys;sys.stderr.write(__doc__);sys.exit(1)
Integer,OctetString,ObjectIdentifier=mibBuilder.importSymbols('ASN1','Integer',_o,'ObjectIdentifier')
NamedValues,=mibBuilder.importSymbols('ASN1-ENUMERATION','NamedValues')
ConstraintsIntersection,ConstraintsUnion,SingleValueConstraint,ValueRangeConstraint,ValueSizeConstraint=mibBuilder.importSymbols('ASN1-REFINEMENT','ConstraintsIntersection','ConstraintsUnion','SingleValueConstraint','ValueRangeConstraint','ValueSizeConstraint')
InternationalDisplayString,=mibBuilder.importSymbols('HOST-RESOURCES-MIB',_I)
ModuleCompliance,NotificationGroup=mibBuilder.importSymbols('SNMPv2-CONF','ModuleCompliance','NotificationGroup')
Bits,Counter32,Counter64,Gauge32,Integer32,IpAddress,ModuleIdentity,MibIdentifier,NotificationType,ObjectIdentity,MibScalar,MibTable,MibTableRow,MibTableColumn,NotificationType,TimeTicks,Unsigned32,enterprises,iso=mibBuilder.importSymbols('SNMPv2-SMI','Bits','Counter32','Counter64','Gauge32',_AA,'IpAddress','ModuleIdentity','MibIdentifier',_AB,'ObjectIdentity','MibScalar','MibTable','MibTableRow','MibTableColumn',_AB,'TimeTicks','Unsigned32','enterprises','iso')
DisplayString,PhysAddress,TextualConvention=mibBuilder.importSymbols('SNMPv2-TC','DisplayString','PhysAddress','TextualConvention')
class NetNumber(OctetString):subtypeSpec=OctetString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(4,4));fixedLength=4
_Novell_ObjectIdentity=ObjectIdentity
novell=_Novell_ObjectIdentity((1,3,6,1,4,1,23))
_MibDoc_ObjectIdentity=ObjectIdentity
mibDoc=_MibDoc_ObjectIdentity((1,3,6,1,4,1,23,2))
_Nwalarm_mib_ObjectIdentity=ObjectIdentity
nwalarm_mib=_Nwalarm_mib_ObjectIdentity((1,3,6,1,4,1,23,2,10))
_Trapinfo_ObjectIdentity=ObjectIdentity
trapinfo=_Trapinfo_ObjectIdentity((1,3,6,1,4,1,23,2,10,1))
_MemoryAddress_Type=Integer32
_MemoryAddress_Object=MibScalar
memoryAddress=_MemoryAddress_Object((1,3,6,1,4,1,23,2,10,1,1),_MemoryAddress_Type())
memoryAddress.setMaxAccess(_D)
if mibBuilder.loadTexts:memoryAddress.setStatus(_E)
_AuditEventNumber_Type=Integer32
_AuditEventNumber_Object=MibScalar
auditEventNumber=_AuditEventNumber_Object((1,3,6,1,4,1,23,2,10,1,2),_AuditEventNumber_Type())
auditEventNumber.setMaxAccess(_D)
if mibBuilder.loadTexts:auditEventNumber.setStatus(_E)
_BlockNumber_Type=Integer32
_BlockNumber_Object=MibScalar
blockNumber=_BlockNumber_Object((1,3,6,1,4,1,23,2,10,1,3),_BlockNumber_Type())
blockNumber.setMaxAccess(_D)
if mibBuilder.loadTexts:blockNumber.setStatus(_E)
_NumberOfBlocks_Type=Integer32
_NumberOfBlocks_Object=MibScalar
numberOfBlocks=_NumberOfBlocks_Object((1,3,6,1,4,1,23,2,10,1,4),_NumberOfBlocks_Type())
numberOfBlocks.setMaxAccess(_D)
if mibBuilder.loadTexts:numberOfBlocks.setStatus(_E)
_PacketSize_Type=Integer32
_PacketSize_Object=MibScalar
packetSize=_PacketSize_Object((1,3,6,1,4,1,23,2,10,1,5),_PacketSize_Type())
packetSize.setMaxAccess(_D)
if mibBuilder.loadTexts:packetSize.setStatus(_E)
_BoardNumber_Type=Integer32
_BoardNumber_Object=MibScalar
boardNumber=_BoardNumber_Object((1,3,6,1,4,1,23,2,10,1,6),_BoardNumber_Type())
boardNumber.setMaxAccess(_D)
if mibBuilder.loadTexts:boardNumber.setStatus(_E)
_CodeOffset_Type=Integer32
_CodeOffset_Object=MibScalar
codeOffset=_CodeOffset_Object((1,3,6,1,4,1,23,2,10,1,7),_CodeOffset_Type())
codeOffset.setMaxAccess(_D)
if mibBuilder.loadTexts:codeOffset.setStatus(_E)
_ConnectionNumber_Type=Integer32
_ConnectionNumber_Object=MibScalar
connectionNumber=_ConnectionNumber_Object((1,3,6,1,4,1,23,2,10,1,8),_ConnectionNumber_Type())
connectionNumber.setMaxAccess(_D)
if mibBuilder.loadTexts:connectionNumber.setStatus(_E)
_DataStreamNumber_Type=Integer32
_DataStreamNumber_Object=MibScalar
dataStreamNumber=_DataStreamNumber_Object((1,3,6,1,4,1,23,2,10,1,9),_DataStreamNumber_Type())
dataStreamNumber.setMaxAccess(_D)
if mibBuilder.loadTexts:dataStreamNumber.setStatus(_E)
_DiskSpace_Type=Integer32
_DiskSpace_Object=MibScalar
diskSpace=_DiskSpace_Object((1,3,6,1,4,1,23,2,10,1,10),_DiskSpace_Type())
diskSpace.setMaxAccess(_D)
if mibBuilder.loadTexts:diskSpace.setStatus(_E)
class _DomainName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,32))
_DomainName_Type.__name__=_I
_DomainName_Object=MibScalar
domainName=_DomainName_Object((1,3,6,1,4,1,23,2,10,1,11),_DomainName_Type())
domainName.setMaxAccess(_D)
if mibBuilder.loadTexts:domainName.setStatus(_E)
class _ResourceDescription_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,32))
_ResourceDescription_Type.__name__=_I
_ResourceDescription_Object=MibScalar
resourceDescription=_ResourceDescription_Object((1,3,6,1,4,1,23,2,10,1,12),_ResourceDescription_Type())
resourceDescription.setMaxAccess(_D)
if mibBuilder.loadTexts:resourceDescription.setStatus(_E)
class _DeviceName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,64))
_DeviceName_Type.__name__=_I
_DeviceName_Object=MibScalar
deviceName=_DeviceName_Object((1,3,6,1,4,1,23,2,10,1,13),_DeviceName_Type())
deviceName.setMaxAccess(_D)
if mibBuilder.loadTexts:deviceName.setStatus(_E)
_DosType_Type=Integer32
_DosType_Object=MibScalar
dosType=_DosType_Object((1,3,6,1,4,1,23,2,10,1,14),_DosType_Type())
dosType.setMaxAccess(_D)
if mibBuilder.loadTexts:dosType.setStatus(_E)
_ErrorNumber_Type=Integer32
_ErrorNumber_Object=MibScalar
errorNumber=_ErrorNumber_Object((1,3,6,1,4,1,23,2,10,1,15),_ErrorNumber_Type())
errorNumber.setMaxAccess(_D)
if mibBuilder.loadTexts:errorNumber.setStatus(_E)
class _ExceptionName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,32))
_ExceptionName_Type.__name__=_I
_ExceptionName_Object=MibScalar
exceptionName=_ExceptionName_Object((1,3,6,1,4,1,23,2,10,1,16),_ExceptionName_Type())
exceptionName.setMaxAccess(_D)
if mibBuilder.loadTexts:exceptionName.setStatus(_E)
_EipAddress_Type=Integer32
_EipAddress_Object=MibScalar
eipAddress=_EipAddress_Object((1,3,6,1,4,1,23,2,10,1,17),_EipAddress_Type())
eipAddress.setMaxAccess(_D)
if mibBuilder.loadTexts:eipAddress.setStatus(_E)
class _FileName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,32))
_FileName_Type.__name__=_I
_FileName_Object=MibScalar
fileName=_FileName_Object((1,3,6,1,4,1,23,2,10,1,18),_FileName_Type())
fileName.setMaxAccess(_D)
if mibBuilder.loadTexts:fileName.setStatus(_E)
class _PathName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(2,124))
_PathName_Type.__name__=_I
_PathName_Object=MibScalar
pathName=_PathName_Object((1,3,6,1,4,1,23,2,10,1,19),_PathName_Type())
pathName.setMaxAccess(_D)
if mibBuilder.loadTexts:pathName.setStatus(_E)
_FileOffset_Type=Integer32
_FileOffset_Object=MibScalar
fileOffset=_FileOffset_Object((1,3,6,1,4,1,23,2,10,1,20),_FileOffset_Type())
fileOffset.setMaxAccess(_D)
if mibBuilder.loadTexts:fileOffset.setStatus(_E)
_NcpFunctionNumber_Type=Integer32
_NcpFunctionNumber_Object=MibScalar
ncpFunctionNumber=_NcpFunctionNumber_Object((1,3,6,1,4,1,23,2,10,1,21),_NcpFunctionNumber_Type())
ncpFunctionNumber.setMaxAccess(_D)
if mibBuilder.loadTexts:ncpFunctionNumber.setStatus(_E)
_FileSize_Type=Integer32
_FileSize_Object=MibScalar
fileSize=_FileSize_Object((1,3,6,1,4,1,23,2,10,1,22),_FileSize_Type())
fileSize.setMaxAccess(_D)
if mibBuilder.loadTexts:fileSize.setStatus(_E)
_FileValue_Type=Integer32
_FileValue_Object=MibScalar
fileValue=_FileValue_Object((1,3,6,1,4,1,23,2,10,1,23),_FileValue_Type())
fileValue.setMaxAccess(_D)
if mibBuilder.loadTexts:fileValue.setStatus(_E)
_FileLength_Type=Integer32
_FileLength_Object=MibScalar
fileLength=_FileLength_Object((1,3,6,1,4,1,23,2,10,1,24),_FileLength_Type())
fileLength.setMaxAccess(_D)
if mibBuilder.loadTexts:fileLength.setStatus(_E)
_InterruptNumber_Type=Integer32
_InterruptNumber_Object=MibScalar
interruptNumber=_InterruptNumber_Object((1,3,6,1,4,1,23,2,10,1,25),_InterruptNumber_Type())
interruptNumber.setMaxAccess(_D)
if mibBuilder.loadTexts:interruptNumber.setStatus(_E)
class _NlmName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,128))
_NlmName_Type.__name__=_I
_NlmName_Object=MibScalar
nlmName=_NlmName_Object((1,3,6,1,4,1,23,2,10,1,26),_NlmName_Type())
nlmName.setMaxAccess(_D)
if mibBuilder.loadTexts:nlmName.setStatus(_E)
class _MediaLabel_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,64))
_MediaLabel_Type.__name__=_I
_MediaLabel_Object=MibScalar
mediaLabel=_MediaLabel_Object((1,3,6,1,4,1,23,2,10,1,27),_MediaLabel_Type())
mediaLabel.setMaxAccess(_D)
if mibBuilder.loadTexts:mediaLabel.setStatus(_E)
class _Message_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,512))
_Message_Type.__name__=_I
_Message_Object=MibScalar
message=_Message_Object((1,3,6,1,4,1,23,2,10,1,28),_Message_Type())
message.setMaxAccess(_D)
if mibBuilder.loadTexts:message.setStatus(_E)
_NumberOfFailedMemoryAllocAttempts_Type=Integer32
_NumberOfFailedMemoryAllocAttempts_Object=MibScalar
numberOfFailedMemoryAllocAttempts=_NumberOfFailedMemoryAllocAttempts_Object((1,3,6,1,4,1,23,2,10,1,29),_NumberOfFailedMemoryAllocAttempts_Type())
numberOfFailedMemoryAllocAttempts.setMaxAccess(_D)
if mibBuilder.loadTexts:numberOfFailedMemoryAllocAttempts.setStatus(_E)
_NumberOfResources_Type=Integer32
_NumberOfResources_Object=MibScalar
numberOfResources=_NumberOfResources_Object((1,3,6,1,4,1,23,2,10,1,30),_NumberOfResources_Type())
numberOfResources.setMaxAccess(_D)
if mibBuilder.loadTexts:numberOfResources.setStatus(_E)
_NetworkAddress_Type=NetNumber
_NetworkAddress_Object=MibScalar
networkAddress=_NetworkAddress_Object((1,3,6,1,4,1,23,2,10,1,31),_NetworkAddress_Type())
networkAddress.setMaxAccess(_D)
if mibBuilder.loadTexts:networkAddress.setStatus(_E)
_NumberOfFailedFileLockRequests_Type=Integer32
_NumberOfFailedFileLockRequests_Object=MibScalar
numberOfFailedFileLockRequests=_NumberOfFailedFileLockRequests_Object((1,3,6,1,4,1,23,2,10,1,32),_NumberOfFailedFileLockRequests_Type())
numberOfFailedFileLockRequests.setMaxAccess(_D)
if mibBuilder.loadTexts:numberOfFailedFileLockRequests.setStatus(_E)
class _ProcessName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,16))
_ProcessName_Type.__name__=_I
_ProcessName_Object=MibScalar
processName=_ProcessName_Object((1,3,6,1,4,1,23,2,10,1,33),_ProcessName_Type())
processName.setMaxAccess(_D)
if mibBuilder.loadTexts:processName.setStatus(_E)
_PartitionNumber_Type=Integer32
_PartitionNumber_Object=MibScalar
partitionNumber=_PartitionNumber_Object((1,3,6,1,4,1,23,2,10,1,34),_PartitionNumber_Type())
partitionNumber.setMaxAccess(_D)
if mibBuilder.loadTexts:partitionNumber.setStatus(_E)
class _ProtocolName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,16))
_ProtocolName_Type.__name__=_I
_ProtocolName_Object=MibScalar
protocolName=_ProtocolName_Object((1,3,6,1,4,1,23,2,10,1,35),_ProtocolName_Type())
protocolName.setMaxAccess(_D)
if mibBuilder.loadTexts:protocolName.setStatus(_E)
_NumberOfPackets_Type=Integer32
_NumberOfPackets_Object=MibScalar
numberOfPackets=_NumberOfPackets_Object((1,3,6,1,4,1,23,2,10,1,36),_NumberOfPackets_Type())
numberOfPackets.setMaxAccess(_D)
if mibBuilder.loadTexts:numberOfPackets.setStatus(_E)
class _ResourceName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,32))
_ResourceName_Type.__name__=_I
_ResourceName_Object=MibScalar
resourceName=_ResourceName_Object((1,3,6,1,4,1,23,2,10,1,37),_ResourceName_Type())
resourceName.setMaxAccess(_D)
if mibBuilder.loadTexts:resourceName.setStatus(_E)
_NumberOfFailedRecordLockRequests_Type=Integer32
_NumberOfFailedRecordLockRequests_Object=MibScalar
numberOfFailedRecordLockRequests=_NumberOfFailedRecordLockRequests_Object((1,3,6,1,4,1,23,2,10,1,38),_NumberOfFailedRecordLockRequests_Type())
numberOfFailedRecordLockRequests.setMaxAccess(_D)
if mibBuilder.loadTexts:numberOfFailedRecordLockRequests.setStatus(_E)
class _ServerName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,48))
_ServerName_Type.__name__=_I
_ServerName_Object=MibScalar
serverName=_ServerName_Object((1,3,6,1,4,1,23,2,10,1,39),_ServerName_Type())
serverName.setMaxAccess(_D)
if mibBuilder.loadTexts:serverName.setStatus(_E)
_StationNumber_Type=Integer32
_StationNumber_Object=MibScalar
stationNumber=_StationNumber_Object((1,3,6,1,4,1,23,2,10,1,40),_StationNumber_Type())
stationNumber.setMaxAccess(_D)
if mibBuilder.loadTexts:stationNumber.setStatus(_E)
_NetworkAddress1_Type=NetNumber
_NetworkAddress1_Object=MibScalar
networkAddress1=_NetworkAddress1_Object((1,3,6,1,4,1,23,2,10,1,41),_NetworkAddress1_Type())
networkAddress1.setMaxAccess(_D)
if mibBuilder.loadTexts:networkAddress1.setStatus(_E)
_NcpSubFunctionNumber_Type=Integer32
_NcpSubFunctionNumber_Object=MibScalar
ncpSubFunctionNumber=_NcpSubFunctionNumber_Object((1,3,6,1,4,1,23,2,10,1,42),_NcpSubFunctionNumber_Type())
ncpSubFunctionNumber.setMaxAccess(_D)
if mibBuilder.loadTexts:ncpSubFunctionNumber.setStatus(_E)
class _NlmSeverity_Type(Integer32):subtypeSpec=Integer32.subtypeSpec;subtypeSpec+=ConstraintsUnion(SingleValueConstraint(*(1,2,3,4,5,6)));namedValues=NamedValues(*(('informational',1),('warning',2),('recoverable',3),('critical',4),('fatal',5),('operationAborted',6)))
_NlmSeverity_Type.__name__=_AA
_NlmSeverity_Object=MibScalar
nlmSeverity=_NlmSeverity_Object((1,3,6,1,4,1,23,2,10,1,43),_NlmSeverity_Type())
nlmSeverity.setMaxAccess(_D)
if mibBuilder.loadTexts:nlmSeverity.setStatus(_E)
_TrapTime_Type=Integer32
_TrapTime_Object=MibScalar
trapTime=_TrapTime_Object((1,3,6,1,4,1,23,2,10,1,44),_TrapTime_Type())
trapTime.setMaxAccess(_D)
if mibBuilder.loadTexts:trapTime.setStatus(_E)
_TaskNumber_Type=Integer32
_TaskNumber_Object=MibScalar
taskNumber=_TaskNumber_Object((1,3,6,1,4,1,23,2,10,1,45),_TaskNumber_Type())
taskNumber.setMaxAccess(_D)
if mibBuilder.loadTexts:taskNumber.setStatus(_E)
_NumberOfTransactions_Type=Integer32
_NumberOfTransactions_Object=MibScalar
numberOfTransactions=_NumberOfTransactions_Object((1,3,6,1,4,1,23,2,10,1,46),_NumberOfTransactions_Type())
numberOfTransactions.setMaxAccess(_D)
if mibBuilder.loadTexts:numberOfTransactions.setStatus(_E)
_ServerTime_Type=Integer32
_ServerTime_Object=MibScalar
serverTime=_ServerTime_Object((1,3,6,1,4,1,23,2,10,1,47),_ServerTime_Type())
serverTime.setMaxAccess(_D)
if mibBuilder.loadTexts:serverTime.setStatus(_E)
class _PathFileName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(2,124))
_PathFileName_Type.__name__=_I
_PathFileName_Object=MibScalar
pathFileName=_PathFileName_Object((1,3,6,1,4,1,23,2,10,1,48),_PathFileName_Type())
pathFileName.setMaxAccess(_D)
if mibBuilder.loadTexts:pathFileName.setStatus(_E)
class _UserName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,48))
_UserName_Type.__name__=_I
_UserName_Object=MibScalar
userName=_UserName_Object((1,3,6,1,4,1,23,2,10,1,49),_UserName_Type())
userName.setMaxAccess(_D)
if mibBuilder.loadTexts:userName.setStatus(_E)
class _VolumeName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,16))
_VolumeName_Type.__name__=_I
_VolumeName_Object=MibScalar
volumeName=_VolumeName_Object((1,3,6,1,4,1,23,2,10,1,50),_VolumeName_Type())
volumeName.setMaxAccess(_D)
if mibBuilder.loadTexts:volumeName.setStatus(_E)
_VolumeNumber_Type=Integer32
_VolumeNumber_Object=MibScalar
volumeNumber=_VolumeNumber_Object((1,3,6,1,4,1,23,2,10,1,51),_VolumeNumber_Type())
volumeNumber.setMaxAccess(_D)
if mibBuilder.loadTexts:volumeNumber.setStatus(_E)
class _LanDriverName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,256))
_LanDriverName_Type.__name__=_I
_LanDriverName_Object=MibScalar
lanDriverName=_LanDriverName_Object((1,3,6,1,4,1,23,2,10,1,52),_LanDriverName_Type())
lanDriverName.setMaxAccess(_D)
if mibBuilder.loadTexts:lanDriverName.setStatus(_E)
class _RouterName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,48))
_RouterName_Type.__name__=_I
_RouterName_Object=MibScalar
routerName=_RouterName_Object((1,3,6,1,4,1,23,2,10,1,53),_RouterName_Type())
routerName.setMaxAccess(_D)
if mibBuilder.loadTexts:routerName.setStatus(_E)
class _MacAddress_Type(OctetString):subtypeSpec=OctetString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(6,6));fixedLength=6
_MacAddress_Type.__name__=_o
_MacAddress_Object=MibScalar
macAddress=_MacAddress_Object((1,3,6,1,4,1,23,2,10,1,54),_MacAddress_Type())
macAddress.setMaxAccess(_D)
if mibBuilder.loadTexts:macAddress.setStatus(_E)
class _MacAddress1_Type(OctetString):subtypeSpec=OctetString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(6,6));fixedLength=6
_MacAddress1_Type.__name__=_o
_MacAddress1_Object=MibScalar
macAddress1=_MacAddress1_Object((1,3,6,1,4,1,23,2,10,1,55),_MacAddress1_Type())
macAddress1.setMaxAccess(_D)
if mibBuilder.loadTexts:macAddress1.setStatus(_E)
_NumberOfConnections_Type=Integer32
_NumberOfConnections_Object=MibScalar
numberOfConnections=_NumberOfConnections_Object((1,3,6,1,4,1,23,2,10,1,56),_NumberOfConnections_Type())
numberOfConnections.setMaxAccess(_D)
if mibBuilder.loadTexts:numberOfConnections.setStatus(_E)
_SocketNumber_Type=Integer32
_SocketNumber_Object=MibScalar
socketNumber=_SocketNumber_Object((1,3,6,1,4,1,23,2,10,1,57),_SocketNumber_Type())
socketNumber.setMaxAccess(_D)
if mibBuilder.loadTexts:socketNumber.setStatus(_E)
class _AccountName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,48))
_AccountName_Type.__name__=_I
_AccountName_Object=MibScalar
accountName=_AccountName_Object((1,3,6,1,4,1,23,2,10,1,58),_AccountName_Type())
accountName.setMaxAccess(_D)
if mibBuilder.loadTexts:accountName.setStatus(_E)
_FileMiscInfo_Type=Integer32
_FileMiscInfo_Object=MibScalar
fileMiscInfo=_FileMiscInfo_Object((1,3,6,1,4,1,23,2,10,1,59),_FileMiscInfo_Type())
fileMiscInfo.setMaxAccess(_D)
if mibBuilder.loadTexts:fileMiscInfo.setStatus(_E)
class _CallBackNumber_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,20))
_CallBackNumber_Type.__name__=_I
_CallBackNumber_Object=MibScalar
callBackNumber=_CallBackNumber_Object((1,3,6,1,4,1,23,2,10,1,60),_CallBackNumber_Type())
callBackNumber.setMaxAccess(_D)
if mibBuilder.loadTexts:callBackNumber.setStatus(_E)
class _BaudRate_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(11,11));fixedLength=11
_BaudRate_Type.__name__=_I
_BaudRate_Object=MibScalar
baudRate=_BaudRate_Object((1,3,6,1,4,1,23,2,10,1,61),_BaudRate_Type())
baudRate.setMaxAccess(_D)
if mibBuilder.loadTexts:baudRate.setStatus(_E)
class _ObjectName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,256))
_ObjectName_Type.__name__=_I
_ObjectName_Object=MibScalar
objectName=_ObjectName_Object((1,3,6,1,4,1,23,2,10,1,62),_ObjectName_Type())
objectName.setMaxAccess(_D)
if mibBuilder.loadTexts:objectName.setStatus(_E)
class _UserName1_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,48))
_UserName1_Type.__name__=_I
_UserName1_Object=MibScalar
userName1=_UserName1_Object((1,3,6,1,4,1,23,2,10,1,63),_UserName1_Type())
userName1.setMaxAccess(_D)
if mibBuilder.loadTexts:userName1.setStatus(_E)
_DosType1_Type=Integer32
_DosType1_Object=MibScalar
dosType1=_DosType1_Object((1,3,6,1,4,1,23,2,10,1,64),_DosType1_Type())
dosType1.setMaxAccess(_D)
if mibBuilder.loadTexts:dosType1.setStatus(_E)
_BlockNumber1_Type=Integer32
_BlockNumber1_Object=MibScalar
blockNumber1=_BlockNumber1_Object((1,3,6,1,4,1,23,2,10,1,65),_BlockNumber1_Type())
blockNumber1.setMaxAccess(_D)
if mibBuilder.loadTexts:blockNumber1.setStatus(_E)
_InternalNetworkAddress_Type=NetNumber
_InternalNetworkAddress_Object=MibScalar
internalNetworkAddress=_InternalNetworkAddress_Object((1,3,6,1,4,1,23,2,10,1,66),_InternalNetworkAddress_Type())
internalNetworkAddress.setMaxAccess(_D)
if mibBuilder.loadTexts:internalNetworkAddress.setStatus(_E)
_InternalNetworkAddress1_Type=NetNumber
_InternalNetworkAddress1_Object=MibScalar
internalNetworkAddress1=_InternalNetworkAddress1_Object((1,3,6,1,4,1,23,2,10,1,67),_InternalNetworkAddress1_Type())
internalNetworkAddress1.setMaxAccess(_D)
if mibBuilder.loadTexts:internalNetworkAddress1.setStatus(_E)
class _MacAddress2_Type(OctetString):subtypeSpec=OctetString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(6,6));fixedLength=6
_MacAddress2_Type.__name__=_o
_MacAddress2_Object=MibScalar
macAddress2=_MacAddress2_Object((1,3,6,1,4,1,23,2,10,1,68),_MacAddress2_Type())
macAddress2.setMaxAccess(_D)
if mibBuilder.loadTexts:macAddress2.setStatus(_E)
class _ServerName1_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,48))
_ServerName1_Type.__name__=_I
_ServerName1_Object=MibScalar
serverName1=_ServerName1_Object((1,3,6,1,4,1,23,2,10,1,69),_ServerName1_Type())
serverName1.setMaxAccess(_D)
if mibBuilder.loadTexts:serverName1.setStatus(_E)
_SocketNumber1_Type=Integer32
_SocketNumber1_Object=MibScalar
socketNumber1=_SocketNumber1_Object((1,3,6,1,4,1,23,2,10,1,70),_SocketNumber1_Type())
socketNumber1.setMaxAccess(_D)
if mibBuilder.loadTexts:socketNumber1.setStatus(_E)
_FileMiscInfo1_Type=Integer32
_FileMiscInfo1_Object=MibScalar
fileMiscInfo1=_FileMiscInfo1_Object((1,3,6,1,4,1,23,2,10,1,71),_FileMiscInfo1_Type())
fileMiscInfo1.setMaxAccess(_D)
if mibBuilder.loadTexts:fileMiscInfo1.setStatus(_E)
_FileSize1_Type=Integer32
_FileSize1_Object=MibScalar
fileSize1=_FileSize1_Object((1,3,6,1,4,1,23,2,10,1,72),_FileSize1_Type())
fileSize1.setMaxAccess(_D)
if mibBuilder.loadTexts:fileSize1.setStatus(_E)
_FileSize2_Type=Integer32
_FileSize2_Object=MibScalar
fileSize2=_FileSize2_Object((1,3,6,1,4,1,23,2,10,1,73),_FileSize2_Type())
fileSize2.setMaxAccess(_D)
if mibBuilder.loadTexts:fileSize2.setStatus(_E)
_PacketSize1_Type=Integer32
_PacketSize1_Object=MibScalar
packetSize1=_PacketSize1_Object((1,3,6,1,4,1,23,2,10,1,74),_PacketSize1_Type())
packetSize1.setMaxAccess(_D)
if mibBuilder.loadTexts:packetSize1.setStatus(_E)
class _DiskName_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,64))
_DiskName_Type.__name__=_I
_DiskName_Object=MibScalar
diskName=_DiskName_Object((1,3,6,1,4,1,23,2,10,1,75),_DiskName_Type())
diskName.setMaxAccess(_D)
if mibBuilder.loadTexts:diskName.setStatus(_E)
class _Reason_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,35))
_Reason_Type.__name__=_I
_Reason_Object=MibScalar
reason=_Reason_Object((1,3,6,1,4,1,23,2,10,1,76),_Reason_Type())
reason.setMaxAccess(_D)
if mibBuilder.loadTexts:reason.setStatus(_E)
_MaximumPercent_Type=Integer32
_MaximumPercent_Object=MibScalar
maximumPercent=_MaximumPercent_Object((1,3,6,1,4,1,23,2,10,1,77),_MaximumPercent_Type())
maximumPercent.setMaxAccess(_D)
if mibBuilder.loadTexts:maximumPercent.setStatus(_E)
_IRamLength_Type=Integer32
_IRamLength_Object=MibScalar
iRamLength=_IRamLength_Object((1,3,6,1,4,1,23,2,10,1,78),_IRamLength_Type())
iRamLength.setMaxAccess(_D)
if mibBuilder.loadTexts:iRamLength.setStatus(_E)
_ITimerTicks_Type=Integer32
_ITimerTicks_Object=MibScalar
iTimerTicks=_ITimerTicks_Object((1,3,6,1,4,1,23,2,10,1,79),_ITimerTicks_Type())
iTimerTicks.setMaxAccess(_D)
if mibBuilder.loadTexts:iTimerTicks.setStatus(_E)
_PollingLoops_Type=Integer32
_PollingLoops_Object=MibScalar
pollingLoops=_PollingLoops_Object((1,3,6,1,4,1,23,2,10,1,80),_PollingLoops_Type())
pollingLoops.setMaxAccess(_D)
if mibBuilder.loadTexts:pollingLoops.setStatus(_E)
_IHopsCount_Type=Integer32
_IHopsCount_Object=MibScalar
iHopsCount=_IHopsCount_Object((1,3,6,1,4,1,23,2,10,1,81),_IHopsCount_Type())
iHopsCount.setMaxAccess(_D)
if mibBuilder.loadTexts:iHopsCount.setStatus(_E)
_SynchronizationRadius_Type=Integer32
_SynchronizationRadius_Object=MibScalar
synchronizationRadius=_SynchronizationRadius_Object((1,3,6,1,4,1,23,2,10,1,82),_SynchronizationRadius_Type())
synchronizationRadius.setMaxAccess(_D)
if mibBuilder.loadTexts:synchronizationRadius.setStatus(_E)
class _CmmndLnPrmtr_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,256))
_CmmndLnPrmtr_Type.__name__=_I
_CmmndLnPrmtr_Object=MibScalar
cmmndLnPrmtr=_CmmndLnPrmtr_Object((1,3,6,1,4,1,23,2,10,1,83),_CmmndLnPrmtr_Type())
cmmndLnPrmtr.setMaxAccess(_D)
if mibBuilder.loadTexts:cmmndLnPrmtr.setStatus(_E)
_VolumePercentage_Type=Integer32
_VolumePercentage_Object=MibScalar
volumePercentage=_VolumePercentage_Object((1,3,6,1,4,1,23,2,10,1,84),_VolumePercentage_Type())
volumePercentage.setMaxAccess(_D)
if mibBuilder.loadTexts:volumePercentage.setStatus(_E)
class _SzReason_Type(InternationalDisplayString):subtypeSpec=InternationalDisplayString.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueSizeConstraint(1,35))
_SzReason_Type.__name__=_I
_SzReason_Object=MibScalar
szReason=_SzReason_Object((1,3,6,1,4,1,23,2,10,1,85),_SzReason_Type())
szReason.setMaxAccess(_D)
if mibBuilder.loadTexts:szReason.setStatus(_E)
_IRamStart_Type=Integer32
_IRamStart_Object=MibScalar
iRamStart=_IRamStart_Object((1,3,6,1,4,1,23,2,10,1,86),_IRamStart_Type())
iRamStart.setMaxAccess(_D)
if mibBuilder.loadTexts:iRamStart.setStatus(_E)
outOfShortTermMemoryRequestFailed=NotificationType((1,3,6,1,4,1,23,2,10,0,1))
outOfShortTermMemoryRequestFailed.setObjects(*((_A,_B),(_A,_C),(_A,_p)))
if mibBuilder.loadTexts:outOfShortTermMemoryRequestFailed.setStatus('')
errWritingToTheExtendedDirSpace=NotificationType((1,3,6,1,4,1,23,2,10,0,2))
errWritingToTheExtendedDirSpace.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:errWritingToTheExtendedDirSpace.setStatus('')
errWritingToFile=NotificationType((1,3,6,1,4,1,23,2,10,0,3))
errWritingToFile.setObjects(*((_A,_B),(_A,_C),(_A,_O)))
if mibBuilder.loadTexts:errWritingToFile.setStatus('')
errWritingToFileUsr=NotificationType((1,3,6,1,4,1,23,2,10,0,4))
errWritingToFileUsr.setObjects(*((_A,_B),(_A,_C),(_A,_O),(_A,_F),(_A,_H)))
if mibBuilder.loadTexts:errWritingToFileUsr.setStatus('')
errWritingToFileDataStream=NotificationType((1,3,6,1,4,1,23,2,10,0,5))
errWritingToFileDataStream.setObjects(*((_A,_B),(_A,_C),(_A,_V),(_A,_O),(_A,_G),(_A,_Y)))
if mibBuilder.loadTexts:errWritingToFileDataStream.setStatus('')
errWritingToFileDataStreamUsr=NotificationType((1,3,6,1,4,1,23,2,10,0,6))
errWritingToFileDataStreamUsr.setObjects(*((_A,_B),(_A,_C),(_A,_V),(_A,_O),(_A,_F),(_A,_H),(_A,_G),(_A,_Y)))
if mibBuilder.loadTexts:errWritingToFileDataStreamUsr.setStatus('')
fileReaderrSrvrNofileName=NotificationType((1,3,6,1,4,1,23,2,10,0,7))
fileReaderrSrvrNofileName.setObjects(*((_A,_B),(_A,_C),(_A,_Q),(_A,_O)))
if mibBuilder.loadTexts:fileReaderrSrvrNofileName.setStatus('')
fileReaderrUsrNofileName=NotificationType((1,3,6,1,4,1,23,2,10,0,8))
fileReaderrUsrNofileName.setObjects(*((_A,_B),(_A,_C),(_A,_Q),(_A,_O),(_A,_F),(_A,_H)))
if mibBuilder.loadTexts:fileReaderrUsrNofileName.setStatus('')
fileReaderrDSSrvr=NotificationType((1,3,6,1,4,1,23,2,10,0,9))
fileReaderrDSSrvr.setObjects(*((_A,_B),(_A,_C),(_A,_V),(_A,_Q),(_A,_O),(_A,_G),(_A,_Y)))
if mibBuilder.loadTexts:fileReaderrDSSrvr.setStatus('')
fileReaderrDSUsr=NotificationType((1,3,6,1,4,1,23,2,10,0,10))
fileReaderrDSUsr.setObjects(*((_A,_B),(_A,_C),(_A,_V),(_A,_Q),(_A,_O),(_A,_F),(_A,_H),(_A,_G),(_A,_Y)))
if mibBuilder.loadTexts:fileReaderrDSUsr.setStatus('')
fileWritePreReaderrSrvr=NotificationType((1,3,6,1,4,1,23,2,10,0,11))
fileWritePreReaderrSrvr.setObjects(*((_A,_B),(_A,_C),(_A,_Q),(_A,_O)))
if mibBuilder.loadTexts:fileWritePreReaderrSrvr.setStatus('')
fileWritePreReaderrUsr=NotificationType((1,3,6,1,4,1,23,2,10,0,12))
fileWritePreReaderrUsr.setObjects(*((_A,_B),(_A,_C),(_A,_Q),(_A,_O),(_A,_F),(_A,_H)))
if mibBuilder.loadTexts:fileWritePreReaderrUsr.setStatus('')
fileWritePreReaderrDSSrvr=NotificationType((1,3,6,1,4,1,23,2,10,0,13))
fileWritePreReaderrDSSrvr.setObjects(*((_A,_B),(_A,_C),(_A,_V),(_A,_Q),(_A,_O),(_A,_G),(_A,_Y)))
if mibBuilder.loadTexts:fileWritePreReaderrDSSrvr.setStatus('')
fileWritePreReaderrDSUsr=NotificationType((1,3,6,1,4,1,23,2,10,0,14))
fileWritePreReaderrDSUsr.setObjects(*((_A,_B),(_A,_C),(_A,_V),(_A,_Q),(_A,_O),(_A,_F),(_A,_H),(_A,_G),(_A,_Y)))
if mibBuilder.loadTexts:fileWritePreReaderrDSUsr.setStatus('')
cacheMemAllocExceededMinLeftLimit=NotificationType((1,3,6,1,4,1,23,2,10,0,15))
cacheMemAllocExceededMinLeftLimit.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:cacheMemAllocExceededMinLeftLimit.setStatus('')
cacheMemAllocOutOfMem=NotificationType((1,3,6,1,4,1,23,2,10,0,16))
cacheMemAllocOutOfMem.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:cacheMemAllocOutOfMem.setStatus('')
numberOfCacheBuffersGettingLow=NotificationType((1,3,6,1,4,1,23,2,10,0,17))
numberOfCacheBuffersGettingLow.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:numberOfCacheBuffersGettingLow.setStatus('')
volOfDiskSpace=NotificationType((1,3,6,1,4,1,23,2,10,0,18))
volOfDiskSpace.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:volOfDiskSpace.setStatus('')
volOfDiskSpaceNoPurge=NotificationType((1,3,6,1,4,1,23,2,10,0,19))
volOfDiskSpaceNoPurge.setObjects(*((_A,_B),(_A,_C),(_A,_G),(_A,_AC)))
if mibBuilder.loadTexts:volOfDiskSpaceNoPurge.setStatus('')
volAlmostOutOfDiskSpace=NotificationType((1,3,6,1,4,1,23,2,10,0,20))
volAlmostOutOfDiskSpace.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:volAlmostOutOfDiskSpace.setStatus('')
errWritingFatTables=NotificationType((1,3,6,1,4,1,23,2,10,0,21))
errWritingFatTables.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:errWritingFatTables.setStatus('')
errWritingDirectoryBlk=NotificationType((1,3,6,1,4,1,23,2,10,0,22))
errWritingDirectoryBlk.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:errWritingDirectoryBlk.setStatus('')
dirCopyReadErr=NotificationType((1,3,6,1,4,1,23,2,10,0,23))
dirCopyReadErr.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:dirCopyReadErr.setStatus('')
errReadingBothCopiesofDir=NotificationType((1,3,6,1,4,1,23,2,10,0,24))
errReadingBothCopiesofDir.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:errReadingBothCopiesofDir.setStatus('')
allocateDirEntryWriteError=NotificationType((1,3,6,1,4,1,23,2,10,0,25))
allocateDirEntryWriteError.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:allocateDirEntryWriteError.setStatus('')
errExpandingDirDuetoWriteErr=NotificationType((1,3,6,1,4,1,23,2,10,0,26))
errExpandingDirDuetoWriteErr.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:errExpandingDirDuetoWriteErr.setStatus('')
dirReachedItsLimit=NotificationType((1,3,6,1,4,1,23,2,10,0,27))
dirReachedItsLimit.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:dirReachedItsLimit.setStatus('')
errExpandingNoDiskSpace=NotificationType((1,3,6,1,4,1,23,2,10,0,28))
errExpandingNoDiskSpace.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:errExpandingNoDiskSpace.setStatus('')
errExpandingNoMemSpace=NotificationType((1,3,6,1,4,1,23,2,10,0,29))
errExpandingNoMemSpace.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:errExpandingNoMemSpace.setStatus('')
dirSizeGettingTooLrgeForMem=NotificationType((1,3,6,1,4,1,23,2,10,0,30))
dirSizeGettingTooLrgeForMem.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:dirSizeGettingTooLrgeForMem.setStatus('')
lanReceiveBuffLimitReached=NotificationType((1,3,6,1,4,1,23,2,10,0,31))
lanReceiveBuffLimitReached.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:lanReceiveBuffLimitReached.setStatus('')
connTerminatedByWatchDog=NotificationType((1,3,6,1,4,1,23,2,10,0,32))
connTerminatedByWatchDog.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_H)))
if mibBuilder.loadTexts:connTerminatedByWatchDog.setStatus('')
copyrightViolation=NotificationType((1,3,6,1,4,1,23,2,10,0,33))
copyrightViolation.setObjects(*((_A,_B),(_A,_C),(_A,_K),(_A,_L)))
if mibBuilder.loadTexts:copyrightViolation.setStatus('')
writeFault=NotificationType((1,3,6,1,4,1,23,2,10,0,34))
writeFault.setObjects(*((_A,_B),(_A,_C),(_A,_a),(_A,_N),(_A,_b),(_A,_v)))
if mibBuilder.loadTexts:writeFault.setStatus('')
readFault=NotificationType((1,3,6,1,4,1,23,2,10,0,35))
readFault.setObjects(*((_A,_B),(_A,_C),(_A,_a),(_A,_N),(_A,_b),(_A,_v)))
if mibBuilder.loadTexts:readFault.setStatus('')
ipxReceivedIncomPacket=NotificationType((1,3,6,1,4,1,23,2,10,0,36))
ipxReceivedIncomPacket.setObjects(*((_A,_B),(_A,_C),(_A,_K),(_A,_L),(_A,_q)))
if mibBuilder.loadTexts:ipxReceivedIncomPacket.setStatus('')
unableToCreateVOLERR=NotificationType((1,3,6,1,4,1,23,2,10,0,37))
unableToCreateVOLERR.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:unableToCreateVOLERR.setStatus('')
unableToWriteVOLERR=NotificationType((1,3,6,1,4,1,23,2,10,0,38))
unableToWriteVOLERR.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:unableToWriteVOLERR.setStatus('')
volOprDespiteDeviceDriveDeact=NotificationType((1,3,6,1,4,1,23,2,10,0,39))
volOprDespiteDeviceDriveDeact.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:volOprDespiteDeviceDriveDeact.setStatus('')
loginDisabledByUser=NotificationType((1,3,6,1,4,1,23,2,10,0,40))
loginDisabledByUser.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_H)))
if mibBuilder.loadTexts:loginDisabledByUser.setStatus('')
loginEnabledByUser=NotificationType((1,3,6,1,4,1,23,2,10,0,41))
loginEnabledByUser.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_H)))
if mibBuilder.loadTexts:loginEnabledByUser.setStatus('')
clrStnByConsole=NotificationType((1,3,6,1,4,1,23,2,10,0,42))
clrStnByConsole.setObjects(*((_A,_B),(_A,_C),(_A,_H)))
if mibBuilder.loadTexts:clrStnByConsole.setStatus('')
clrStnByUsr=NotificationType((1,3,6,1,4,1,23,2,10,0,43))
clrStnByUsr.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_R),(_A,_AD),(_A,_H)))
if mibBuilder.loadTexts:clrStnByUsr.setStatus('')
fileServerDowned=NotificationType((1,3,6,1,4,1,23,2,10,0,44))
fileServerDowned.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_H)))
if mibBuilder.loadTexts:fileServerDowned.setStatus('')
errOpeningRIPSocket=NotificationType((1,3,6,1,4,1,23,2,10,0,45))
errOpeningRIPSocket.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:errOpeningRIPSocket.setStatus('')
rtrConfigErr=NotificationType((1,3,6,1,4,1,23,2,10,0,46))
rtrConfigErr.setObjects(*((_A,_B),(_A,_C),(_A,_L),(_A,_K),(_A,_g)))
if mibBuilder.loadTexts:rtrConfigErr.setStatus('')
lanDriverLoopBack=NotificationType((1,3,6,1,4,1,23,2,10,0,47))
lanDriverLoopBack.setObjects(*((_A,_B),(_A,_C),(_A,_K)))
if mibBuilder.loadTexts:lanDriverLoopBack.setStatus('')
dupInternetAddr=NotificationType((1,3,6,1,4,1,23,2,10,0,48))
dupInternetAddr.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:dupInternetAddr.setStatus('')
lanBdUnreachable=NotificationType((1,3,6,1,4,1,23,2,10,0,49))
lanBdUnreachable.setObjects(*((_A,_B),(_A,_C),(_A,_K)))
if mibBuilder.loadTexts:lanBdUnreachable.setStatus('')
ipxUnbndRequest=NotificationType((1,3,6,1,4,1,23,2,10,0,50))
ipxUnbndRequest.setObjects(*((_A,_B),(_A,_C),(_A,_K)))
if mibBuilder.loadTexts:ipxUnbndRequest.setStatus('')
errOpeningSAPSocket=NotificationType((1,3,6,1,4,1,23,2,10,0,51))
errOpeningSAPSocket.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:errOpeningSAPSocket.setStatus('')
rtrClaimingSameInterAddr=NotificationType((1,3,6,1,4,1,23,2,10,0,52))
rtrClaimingSameInterAddr.setObjects(*((_A,_B),(_A,_C),(_A,_w)))
if mibBuilder.loadTexts:rtrClaimingSameInterAddr.setStatus('')
spuriousInt=NotificationType((1,3,6,1,4,1,23,2,10,0,53))
spuriousInt.setObjects(*((_A,_B),(_A,_C),(_A,_AE)))
if mibBuilder.loadTexts:spuriousInt.setStatus('')
checksumInvalid=NotificationType((1,3,6,1,4,1,23,2,10,0,54))
checksumInvalid.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_K),(_A,_L)))
if mibBuilder.loadTexts:checksumInvalid.setStatus('')
prmyPicLostInterrupt=NotificationType((1,3,6,1,4,1,23,2,10,0,55))
prmyPicLostInterrupt.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:prmyPicLostInterrupt.setStatus('')
scndryPicLostInterrupt=NotificationType((1,3,6,1,4,1,23,2,10,0,56))
scndryPicLostInterrupt.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:scndryPicLostInterrupt.setStatus('')
exception=NotificationType((1,3,6,1,4,1,23,2,10,0,57))
exception.setObjects(*((_A,_B),(_A,_C),(_A,_x),(_A,_a),(_A,_N),(_A,_b)))
if mibBuilder.loadTexts:exception.setStatus('')
invalidScreenID=NotificationType((1,3,6,1,4,1,23,2,10,0,58))
invalidScreenID.setObjects(*((_A,_B),(_A,_C),(_A,_N),(_A,_b)))
if mibBuilder.loadTexts:invalidScreenID.setStatus('')
prssDidNotRelqhCntlFqtly=NotificationType((1,3,6,1,4,1,23,2,10,0,59))
prssDidNotRelqhCntlFqtly.setObjects(*((_A,_B),(_A,_C),(_A,_a),(_A,_N),(_A,_b)))
if mibBuilder.loadTexts:prssDidNotRelqhCntlFqtly.setStatus('')
fileSrvrUsrDeleted=NotificationType((1,3,6,1,4,1,23,2,10,0,60))
fileSrvrUsrDeleted.setObjects(*((_A,_B),(_A,_C),(_A,_F)))
if mibBuilder.loadTexts:fileSrvrUsrDeleted.setStatus('')
usrAcctDeletedByAUsr=NotificationType((1,3,6,1,4,1,23,2,10,0,61))
usrAcctDeletedByAUsr.setObjects(*((_A,_B),(_A,_C),(_A,_c),(_A,_F),(_A,_H),(_A,_y)))
if mibBuilder.loadTexts:usrAcctDeletedByAUsr.setStatus('')
invalidResourceTag=NotificationType((1,3,6,1,4,1,23,2,10,0,62))
invalidResourceTag.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:invalidResourceTag.setStatus('')
diskDeactivatedUnknownReason=NotificationType((1,3,6,1,4,1,23,2,10,0,63))
diskDeactivatedUnknownReason.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:diskDeactivatedUnknownReason.setStatus('')
diskDeactivatedDriverUnload=NotificationType((1,3,6,1,4,1,23,2,10,0,64))
diskDeactivatedDriverUnload.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:diskDeactivatedDriverUnload.setStatus('')
diskDeactivatedDeviceFailure=NotificationType((1,3,6,1,4,1,23,2,10,0,65))
diskDeactivatedDeviceFailure.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:diskDeactivatedDeviceFailure.setStatus('')
diskDeactivatedUsrRequest=NotificationType((1,3,6,1,4,1,23,2,10,0,66))
diskDeactivatedUsrRequest.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:diskDeactivatedUsrRequest.setStatus('')
diskDeactivatedMediaDismount=NotificationType((1,3,6,1,4,1,23,2,10,0,67))
diskDeactivatedMediaDismount.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:diskDeactivatedMediaDismount.setStatus('')
diskDeactivatedEOM=NotificationType((1,3,6,1,4,1,23,2,10,0,68))
diskDeactivatedEOM.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:diskDeactivatedEOM.setStatus('')
diskDeactivatedServerDown=NotificationType((1,3,6,1,4,1,23,2,10,0,69))
diskDeactivatedServerDown.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:diskDeactivatedServerDown.setStatus('')
diskDeactivatedServerFailure=NotificationType((1,3,6,1,4,1,23,2,10,0,70))
diskDeactivatedServerFailure.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:diskDeactivatedServerFailure.setStatus('')
moduleDidNotReleaseOneResource=NotificationType((1,3,6,1,4,1,23,2,10,0,71))
moduleDidNotReleaseOneResource.setObjects(*((_A,_B),(_A,_C),(_A,_N),(_A,_z),(_A,_A0)))
if mibBuilder.loadTexts:moduleDidNotReleaseOneResource.setStatus('')
mirroredPartNotAllSync=NotificationType((1,3,6,1,4,1,23,2,10,0,72))
mirroredPartNotAllSync.setObjects(*((_A,_B),(_A,_C),(_A,_P)))
if mibBuilder.loadTexts:mirroredPartNotAllSync.setStatus('')
allMirroredPartAreSync=NotificationType((1,3,6,1,4,1,23,2,10,0,73))
allMirroredPartAreSync.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:allMirroredPartAreSync.setStatus('')
partitionsSync=NotificationType((1,3,6,1,4,1,23,2,10,0,74))
partitionsSync.setObjects(*((_A,_B),(_A,_C),(_A,_P)))
if mibBuilder.loadTexts:partitionsSync.setStatus('')
partitionsUnSync=NotificationType((1,3,6,1,4,1,23,2,10,0,75))
partitionsUnSync.setObjects(*((_A,_B),(_A,_C),(_A,_P)))
if mibBuilder.loadTexts:partitionsUnSync.setStatus('')
remirroringPart=NotificationType((1,3,6,1,4,1,23,2,10,0,76))
remirroringPart.setObjects(*((_A,_B),(_A,_C),(_A,_P)))
if mibBuilder.loadTexts:remirroringPart.setStatus('')
abortRemirrorPart=NotificationType((1,3,6,1,4,1,23,2,10,0,77))
abortRemirrorPart.setObjects(*((_A,_B),(_A,_C),(_A,_P)))
if mibBuilder.loadTexts:abortRemirrorPart.setStatus('')
mirrorInconsistencies=NotificationType((1,3,6,1,4,1,23,2,10,0,78))
mirrorInconsistencies.setObjects(*((_A,_B),(_A,_C),(_A,_P)))
if mibBuilder.loadTexts:mirrorInconsistencies.setStatus('')
systemFileLockThresholdReached=NotificationType((1,3,6,1,4,1,23,2,10,0,79))
systemFileLockThresholdReached.setObjects(*((_A,_B),(_A,_C),(_A,_A1)))
if mibBuilder.loadTexts:systemFileLockThresholdReached.setStatus('')
stationFileLockThresholdReached=NotificationType((1,3,6,1,4,1,23,2,10,0,80))
stationFileLockThresholdReached.setObjects(*((_A,_B),(_A,_C),(_A,_H),(_A,_A1)))
if mibBuilder.loadTexts:stationFileLockThresholdReached.setStatus('')
systemRecordLockThresholdReached=NotificationType((1,3,6,1,4,1,23,2,10,0,81))
systemRecordLockThresholdReached.setObjects(*((_A,_B),(_A,_C),(_A,_A2)))
if mibBuilder.loadTexts:systemRecordLockThresholdReached.setStatus('')
stationRecordLockThresholdReached=NotificationType((1,3,6,1,4,1,23,2,10,0,82))
stationRecordLockThresholdReached.setObjects(*((_A,_B),(_A,_C),(_A,_H),(_A,_A2)))
if mibBuilder.loadTexts:stationRecordLockThresholdReached.setStatus('')
errorOpeningNetAcctData=NotificationType((1,3,6,1,4,1,23,2,10,0,83))
errorOpeningNetAcctData.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:errorOpeningNetAcctData.setStatus('')
ncpSearchLimitExecBySrvr=NotificationType((1,3,6,1,4,1,23,2,10,0,84))
ncpSearchLimitExecBySrvr.setObjects(*((_A,_B),(_A,_C),(_A,_R),(_A,_F)))
if mibBuilder.loadTexts:ncpSearchLimitExecBySrvr.setStatus('')
ncpSearchLimitExecByStation=NotificationType((1,3,6,1,4,1,23,2,10,0,85))
ncpSearchLimitExecByStation.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:ncpSearchLimitExecByStation.setStatus('')
insertMediaAck=NotificationType((1,3,6,1,4,1,23,2,10,0,86))
insertMediaAck.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:insertMediaAck.setStatus('')
insertMediaAborted=NotificationType((1,3,6,1,4,1,23,2,10,0,87))
insertMediaAborted.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:insertMediaAborted.setStatus('')
remMediaAck=NotificationType((1,3,6,1,4,1,23,2,10,0,88))
remMediaAck.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:remMediaAck.setStatus('')
remMediaAborted=NotificationType((1,3,6,1,4,1,23,2,10,0,89))
remMediaAborted.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:remMediaAborted.setStatus('')
insertDSMediaInto=NotificationType((1,3,6,1,4,1,23,2,10,0,90))
insertDSMediaInto.setObjects(*((_A,_B),(_A,_C),(_A,_A3),(_A,_J)))
if mibBuilder.loadTexts:insertDSMediaInto.setStatus('')
removeMediaFrom=NotificationType((1,3,6,1,4,1,23,2,10,0,91))
removeMediaFrom.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:removeMediaFrom.setStatus('')
redirectBlk=NotificationType((1,3,6,1,4,1,23,2,10,0,92))
redirectBlk.setObjects(*((_A,_B),(_A,_C),(_A,_A4),(_A,_AF),(_A,_P)))
if mibBuilder.loadTexts:redirectBlk.setStatus('')
couldNotRedirectBlk=NotificationType((1,3,6,1,4,1,23,2,10,0,93))
couldNotRedirectBlk.setObjects(*((_A,_B),(_A,_C),(_A,_A4),(_A,_P)))
if mibBuilder.loadTexts:couldNotRedirectBlk.setStatus('')
outOfHotFixBlks=NotificationType((1,3,6,1,4,1,23,2,10,0,94))
outOfHotFixBlks.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:outOfHotFixBlks.setStatus('')
fewRedirectionBlks=NotificationType((1,3,6,1,4,1,23,2,10,0,95))
fewRedirectionBlks.setObjects(*((_A,_B),(_A,_C),(_A,_AG)))
if mibBuilder.loadTexts:fewRedirectionBlks.setStatus('')
redirectInconsistNoFix=NotificationType((1,3,6,1,4,1,23,2,10,0,96))
redirectInconsistNoFix.setObjects(*((_A,_B),(_A,_C),(_A,_P)))
if mibBuilder.loadTexts:redirectInconsistNoFix.setStatus('')
redirectInconsistFix=NotificationType((1,3,6,1,4,1,23,2,10,0,97))
redirectInconsistFix.setObjects(*((_A,_B),(_A,_C),(_A,_P)))
if mibBuilder.loadTexts:redirectInconsistFix.setStatus('')
invalidResourceTagPassed=NotificationType((1,3,6,1,4,1,23,2,10,0,98))
invalidResourceTagPassed.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:invalidResourceTagPassed.setStatus('')
checkAddHardware=NotificationType((1,3,6,1,4,1,23,2,10,0,99))
checkAddHardware.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:checkAddHardware.setStatus('')
removeHardwareOptions=NotificationType((1,3,6,1,4,1,23,2,10,0,100))
removeHardwareOptions.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:removeHardwareOptions.setStatus('')
errUnloadKilledNlm=NotificationType((1,3,6,1,4,1,23,2,10,0,101))
errUnloadKilledNlm.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:errUnloadKilledNlm.setStatus('')
invldRrceTagPsedToCreatePrss=NotificationType((1,3,6,1,4,1,23,2,10,0,102))
invldRrceTagPsedToCreatePrss.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:invldRrceTagPsedToCreatePrss.setStatus('')
createPrssReqtdStackTooSmall=NotificationType((1,3,6,1,4,1,23,2,10,0,103))
createPrssReqtdStackTooSmall.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:createPrssReqtdStackTooSmall.setStatus('')
createPrssUnableToAllocPrssCntlBlk=NotificationType((1,3,6,1,4,1,23,2,10,0,104))
createPrssUnableToAllocPrssCntlBlk.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:createPrssUnableToAllocPrssCntlBlk.setStatus('')
filePreservationErrorDuringErase=NotificationType((1,3,6,1,4,1,23,2,10,0,105))
filePreservationErrorDuringErase.setObjects(*((_A,_B),(_A,_C),(_A,_G),(_A,_M)))
if mibBuilder.loadTexts:filePreservationErrorDuringErase.setStatus('')
filePreservationErrorInsuffSpace=NotificationType((1,3,6,1,4,1,23,2,10,0,106))
filePreservationErrorInsuffSpace.setObjects(*((_A,_B),(_A,_C),(_A,_G),(_A,_M)))
if mibBuilder.loadTexts:filePreservationErrorInsuffSpace.setStatus('')
mlidResetLanBd=NotificationType((1,3,6,1,4,1,23,2,10,0,107))
mlidResetLanBd.setObjects(*((_A,_B),(_A,_C),(_A,_K),(_A,_L),(_A,_r)))
if mibBuilder.loadTexts:mlidResetLanBd.setStatus('')
requestedRtrReset=NotificationType((1,3,6,1,4,1,23,2,10,0,108))
requestedRtrReset.setObjects(*((_A,_B),(_A,_C),(_A,_K),(_A,_L),(_A,_r)))
if mibBuilder.loadTexts:requestedRtrReset.setStatus('')
volContainstheWrongDOSType=NotificationType((1,3,6,1,4,1,23,2,10,0,109))
volContainstheWrongDOSType.setObjects(*((_A,_B),(_A,_C),(_A,_G),(_A,'dosType'),(_A,'dosType1')))
if mibBuilder.loadTexts:volContainstheWrongDOSType.setStatus('')
originalNameSpaceNotFound=NotificationType((1,3,6,1,4,1,23,2,10,0,110))
originalNameSpaceNotFound.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:originalNameSpaceNotFound.setStatus('')
rdTimeDataMigratorModuleChanged=NotificationType((1,3,6,1,4,1,23,2,10,0,111))
rdTimeDataMigratorModuleChanged.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:rdTimeDataMigratorModuleChanged.setStatus('')
errCreateOpenTTSLogFile=NotificationType((1,3,6,1,4,1,23,2,10,0,112))
errCreateOpenTTSLogFile.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:errCreateOpenTTSLogFile.setStatus('')
errWriteOpenTTSLogFile=NotificationType((1,3,6,1,4,1,23,2,10,0,113))
errWriteOpenTTSLogFile.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:errWriteOpenTTSLogFile.setStatus('')
ttsDownbyVolDismount=NotificationType((1,3,6,1,4,1,23,2,10,0,114))
ttsDownbyVolDismount.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:ttsDownbyVolDismount.setStatus('')
disableTTSbyUser=NotificationType((1,3,6,1,4,1,23,2,10,0,115))
disableTTSbyUser.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_H)))
if mibBuilder.loadTexts:disableTTSbyUser.setStatus('')
ttsDisabledByOperator=NotificationType((1,3,6,1,4,1,23,2,10,0,116))
ttsDisabledByOperator.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:ttsDisabledByOperator.setStatus('')
ttsDisErrReadTTSduringBackout=NotificationType((1,3,6,1,4,1,23,2,10,0,117))
ttsDisErrReadTTSduringBackout.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:ttsDisErrReadTTSduringBackout.setStatus('')
ttsDisErrWritingTTSduringBackout=NotificationType((1,3,6,1,4,1,23,2,10,0,118))
ttsDisErrWritingTTSduringBackout.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:ttsDisErrWritingTTSduringBackout.setStatus('')
ttsDisErrTooManyDefInfo=NotificationType((1,3,6,1,4,1,23,2,10,0,119))
ttsDisErrTooManyDefInfo.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:ttsDisErrTooManyDefInfo.setStatus('')
ttsDisErrWritingVolDefInfo=NotificationType((1,3,6,1,4,1,23,2,10,0,120))
ttsDisErrWritingVolDefInfo.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:ttsDisErrWritingVolDefInfo.setStatus('')
ttsDisErrRdBlkFlRecGen=NotificationType((1,3,6,1,4,1,23,2,10,0,121))
ttsDisErrRdBlkFlRecGen.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:ttsDisErrRdBlkFlRecGen.setStatus('')
ttsDisGrowMemTables=NotificationType((1,3,6,1,4,1,23,2,10,0,122))
ttsDisGrowMemTables.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:ttsDisGrowMemTables.setStatus('')
ttsDisErrAllDiskSpace=NotificationType((1,3,6,1,4,1,23,2,10,0,123))
ttsDisErrAllDiskSpace.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:ttsDisErrAllDiskSpace.setStatus('')
ttsDisDirErrOnBkFile=NotificationType((1,3,6,1,4,1,23,2,10,0,124))
ttsDisDirErrOnBkFile.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:ttsDisDirErrOnBkFile.setStatus('')
enableTTSByUser=NotificationType((1,3,6,1,4,1,23,2,10,0,125))
enableTTSByUser.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_H)))
if mibBuilder.loadTexts:enableTTSByUser.setStatus('')
transactionAbortedForStation=NotificationType((1,3,6,1,4,1,23,2,10,0,126))
transactionAbortedForStation.setObjects(*((_A,_B),(_A,_C),(_A,_H),(_A,_AH)))
if mibBuilder.loadTexts:transactionAbortedForStation.setStatus('')
ttsLimitExceeded=NotificationType((1,3,6,1,4,1,23,2,10,0,127))
ttsLimitExceeded.setObjects(*((_A,_B),(_A,_C),(_A,_AI)))
if mibBuilder.loadTexts:ttsLimitExceeded.setStatus('')
ttsNoMemForExpandingTxNodeTables=NotificationType((1,3,6,1,4,1,23,2,10,0,128))
ttsNoMemForExpandingTxNodeTables.setObjects(*((_A,_B),(_A,_C),(_A,_p)))
if mibBuilder.loadTexts:ttsNoMemForExpandingTxNodeTables.setStatus('')
auditEvent=NotificationType((1,3,6,1,4,1,23,2,10,0,129))
auditEvent.setObjects(*((_A,_B),(_A,_C),(_A,_AJ),(_A,_S)))
if mibBuilder.loadTexts:auditEvent.setStatus('')
auditAlertThresholdOverFlow=NotificationType((1,3,6,1,4,1,23,2,10,0,130))
auditAlertThresholdOverFlow.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:auditAlertThresholdOverFlow.setStatus('')
auditAlertInvalidConfigFile=NotificationType((1,3,6,1,4,1,23,2,10,0,131))
auditAlertInvalidConfigFile.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:auditAlertInvalidConfigFile.setStatus('')
auditAlertNoMemory=NotificationType((1,3,6,1,4,1,23,2,10,0,132))
auditAlertNoMemory.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:auditAlertNoMemory.setStatus('')
auditFileWriteError=NotificationType((1,3,6,1,4,1,23,2,10,0,133))
auditFileWriteError.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:auditFileWriteError.setStatus('')
auditFileFull=NotificationType((1,3,6,1,4,1,23,2,10,0,134))
auditFileFull.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:auditFileFull.setStatus('')
invalidConnTypetoAllocConn=NotificationType((1,3,6,1,4,1,23,2,10,0,135))
invalidConnTypetoAllocConn.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:invalidConnTypetoAllocConn.setStatus('')
invalidRsrcTagPassedtoAllocConn=NotificationType((1,3,6,1,4,1,23,2,10,0,136))
invalidRsrcTagPassedtoAllocConn.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:invalidRsrcTagPassedtoAllocConn.setStatus('')
outOfServerConn=NotificationType((1,3,6,1,4,1,23,2,10,0,137))
outOfServerConn.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:outOfServerConn.setStatus('')
connTerminated5MinNotice=NotificationType((1,3,6,1,4,1,23,2,10,0,138))
connTerminated5MinNotice.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_H)))
if mibBuilder.loadTexts:connTerminated5MinNotice.setStatus('')
usrAcctDisabledByAUsr=NotificationType((1,3,6,1,4,1,23,2,10,0,139))
usrAcctDisabledByAUsr.setObjects(*((_A,_B),(_A,_C),(_A,_c),(_A,_F),(_A,_H),(_A,_y)))
if mibBuilder.loadTexts:usrAcctDisabledByAUsr.setStatus('')
useOfUnEncryptedPwd=NotificationType((1,3,6,1,4,1,23,2,10,0,140))
useOfUnEncryptedPwd.setObjects(*((_A,_B),(_A,_C),(_A,_H)))
if mibBuilder.loadTexts:useOfUnEncryptedPwd.setStatus('')
supAcctLockoutClrdByConsole=NotificationType((1,3,6,1,4,1,23,2,10,0,141))
supAcctLockoutClrdByConsole.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:supAcctLockoutClrdByConsole.setStatus('')
systemTimeChangedByConsole=NotificationType((1,3,6,1,4,1,23,2,10,0,142))
systemTimeChangedByConsole.setObjects(*((_A,_B),(_A,_C),(_A,_F)))
if mibBuilder.loadTexts:systemTimeChangedByConsole.setStatus('')
systemTimeChangedByUser=NotificationType((1,3,6,1,4,1,23,2,10,0,143))
systemTimeChangedByUser.setObjects(*((_A,_B),(_A,_C),(_A,_H),(_A,_F)))
if mibBuilder.loadTexts:systemTimeChangedByUser.setStatus('')
volDismountedDueToDriveDeact=NotificationType((1,3,6,1,4,1,23,2,10,0,144))
volDismountedDueToDriveDeact.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:volDismountedDueToDriveDeact.setStatus('')
rtrFalsehood=NotificationType((1,3,6,1,4,1,23,2,10,0,145))
rtrFalsehood.setObjects(*((_A,_B),(_A,_C),(_A,_AK),(_A,_L),(_A,_AL),(_A,_A5),(_A,_A6)))
if mibBuilder.loadTexts:rtrFalsehood.setStatus('')
srvrAddrChanged=NotificationType((1,3,6,1,4,1,23,2,10,0,146))
srvrAddrChanged.setObjects(*((_A,_B),(_A,_C),(_A,_Z),(_A,_K),(_A,_L),(_A,_r),(_A,_g),(_A,_A5),(_A,_AM),(_A,_A6)))
if mibBuilder.loadTexts:srvrAddrChanged.setStatus('')
extendFileHasNoOwnerToCharge=NotificationType((1,3,6,1,4,1,23,2,10,0,147))
extendFileHasNoOwnerToCharge.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_R),(_A,_M)))
if mibBuilder.loadTexts:extendFileHasNoOwnerToCharge.setStatus('')
rtrConfigErr3=NotificationType((1,3,6,1,4,1,23,2,10,0,148))
rtrConfigErr3.setObjects(*((_A,_B),(_A,_C),(_A,_L),(_A,_K),(_A,_g)))
if mibBuilder.loadTexts:rtrConfigErr3.setStatus('')
rtrConfigErr2=NotificationType((1,3,6,1,4,1,23,2,10,0,149))
rtrConfigErr2.setObjects(*((_A,_B),(_A,_C),(_A,_L),(_A,_w),(_A,_K),(_A,_g)))
if mibBuilder.loadTexts:rtrConfigErr2.setStatus('')
dataMgrtrNotLoadedWhenRequested=NotificationType((1,3,6,1,4,1,23,2,10,0,150))
dataMgrtrNotLoadedWhenRequested.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:dataMgrtrNotLoadedWhenRequested.setStatus('')
noSpecificSupportModulesLoaded=NotificationType((1,3,6,1,4,1,23,2,10,0,151))
noSpecificSupportModulesLoaded.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:noSpecificSupportModulesLoaded.setStatus('')
notEnoughRAMForComp=NotificationType((1,3,6,1,4,1,23,2,10,0,152))
notEnoughRAMForComp.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:notEnoughRAMForComp.setStatus('')
diskErrorCompression=NotificationType((1,3,6,1,4,1,23,2,10,0,153))
diskErrorCompression.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:diskErrorCompression.setStatus('')
compressErrorHoleCountMismatch=NotificationType((1,3,6,1,4,1,23,2,10,0,154))
compressErrorHoleCountMismatch.setObjects(*((_A,_B),(_A,_C),(_A,_M),(_A,_S),(_A,_T),(_A,_d),(_A,_e)))
if mibBuilder.loadTexts:compressErrorHoleCountMismatch.setStatus('')
unknownErrorCompression=NotificationType((1,3,6,1,4,1,23,2,10,0,155))
unknownErrorCompression.setObjects(*((_A,_B),(_A,_C),(_A,_h)))
if mibBuilder.loadTexts:unknownErrorCompression.setStatus('')
insufficientSpaceForDecompression=NotificationType((1,3,6,1,4,1,23,2,10,0,156))
insufficientSpaceForDecompression.setObjects(*((_A,_B),(_A,_C),(_A,_M),(_A,_H)))
if mibBuilder.loadTexts:insufficientSpaceForDecompression.setStatus('')
decompUnknownCompVersion=NotificationType((1,3,6,1,4,1,23,2,10,0,157))
decompUnknownCompVersion.setObjects(*((_A,_B),(_A,_C),(_A,_M),(_A,_H)))
if mibBuilder.loadTexts:decompUnknownCompVersion.setStatus('')
unknownErrorDecomp=NotificationType((1,3,6,1,4,1,23,2,10,0,158))
unknownErrorDecomp.setObjects(*((_A,_B),(_A,_C),(_A,_h)))
if mibBuilder.loadTexts:unknownErrorDecomp.setStatus('')
insufficientDecompError=NotificationType((1,3,6,1,4,1,23,2,10,0,159))
insufficientDecompError.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:insufficientDecompError.setStatus('')
compFileCorrupted=NotificationType((1,3,6,1,4,1,23,2,10,0,160))
compFileCorrupted.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:compFileCorrupted.setStatus('')
rejectedIncompleteNCP=NotificationType((1,3,6,1,4,1,23,2,10,0,161))
rejectedIncompleteNCP.setObjects(*((_A,_B),(_A,_C),(_A,_H),(_A,_i),(_A,_j)))
if mibBuilder.loadTexts:rejectedIncompleteNCP.setStatus('')
stationUsedABadPacket=NotificationType((1,3,6,1,4,1,23,2,10,0,162))
stationUsedABadPacket.setObjects(*((_A,_B),(_A,_C),(_A,_H),(_A,_i),(_A,_j)))
if mibBuilder.loadTexts:stationUsedABadPacket.setStatus('')
rejectedNCPBadSubfunctionLngth=NotificationType((1,3,6,1,4,1,23,2,10,0,163))
rejectedNCPBadSubfunctionLngth.setObjects(*((_A,_B),(_A,_C),(_A,_H),(_A,_i),(_A,_j)))
if mibBuilder.loadTexts:rejectedNCPBadSubfunctionLngth.setStatus('')
processedNCPBadSubfunctionLngth=NotificationType((1,3,6,1,4,1,23,2,10,0,164))
processedNCPBadSubfunctionLngth.setObjects(*((_A,_B),(_A,_C),(_A,_H),(_A,_i),(_A,_j)))
if mibBuilder.loadTexts:processedNCPBadSubfunctionLngth.setStatus('')
compFilePathCorrupted=NotificationType((1,3,6,1,4,1,23,2,10,0,165))
compFilePathCorrupted.setObjects(*((_A,_B),(_A,_C),(_A,_M)))
if mibBuilder.loadTexts:compFilePathCorrupted.setStatus('')
compFileInUse=NotificationType((1,3,6,1,4,1,23,2,10,0,166))
compFileInUse.setObjects(*((_A,_B),(_A,_C),(_A,_M),(_A,_H)))
if mibBuilder.loadTexts:compFileInUse.setStatus('')
nlmNoPriority=NotificationType((1,3,6,1,4,1,23,2,10,0,167))
nlmNoPriority.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:nlmNoPriority.setStatus('')
workToDo=NotificationType((1,3,6,1,4,1,23,2,10,0,168))
workToDo.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:workToDo.setStatus('')
compErrTempFileErr=NotificationType((1,3,6,1,4,1,23,2,10,0,169))
compErrTempFileErr.setObjects(*((_A,_B),(_A,_C),(_A,_M),(_A,_S),(_A,_T),(_A,_Q),(_A,_AN)))
if mibBuilder.loadTexts:compErrTempFileErr.setStatus('')
compErrLngthTotMismatch=NotificationType((1,3,6,1,4,1,23,2,10,0,170))
compErrLngthTotMismatch.setObjects(*((_A,_B),(_A,_C),(_A,_M),(_A,_S),(_A,_T),(_A,_d),(_A,_e)))
if mibBuilder.loadTexts:compErrLngthTotMismatch.setStatus('')
compErrOffsetTotalsMismatch=NotificationType((1,3,6,1,4,1,23,2,10,0,171))
compErrOffsetTotalsMismatch.setObjects(*((_A,_B),(_A,_C),(_A,_M),(_A,_S),(_A,_T),(_A,_d),(_A,_e)))
if mibBuilder.loadTexts:compErrOffsetTotalsMismatch.setStatus('')
compErrDataCodeCountMismatch=NotificationType((1,3,6,1,4,1,23,2,10,0,172))
compErrDataCodeCountMismatch.setObjects(*((_A,_B),(_A,_C),(_A,_M),(_A,_S),(_A,_T),(_A,_d),(_A,_e)))
if mibBuilder.loadTexts:compErrDataCodeCountMismatch.setStatus('')
compErrLthOffsetCodeCountMismatch=NotificationType((1,3,6,1,4,1,23,2,10,0,173))
compErrLthOffsetCodeCountMismatch.setObjects(*((_A,_B),(_A,_C),(_A,_M),(_A,_S),(_A,_T),(_A,_d),(_A,_e)))
if mibBuilder.loadTexts:compErrLthOffsetCodeCountMismatch.setStatus('')
compErrLgrLngthCodeCountMismatch=NotificationType((1,3,6,1,4,1,23,2,10,0,174))
compErrLgrLngthCodeCountMismatch.setObjects(*((_A,_B),(_A,_C),(_A,_W)))
if mibBuilder.loadTexts:compErrLgrLngthCodeCountMismatch.setStatus('')
compErrReadZeroBytesInt=NotificationType((1,3,6,1,4,1,23,2,10,0,175))
compErrReadZeroBytesInt.setObjects(*((_A,_B),(_A,_C),(_A,_S),(_A,_T),(_A,_M),(_A,_Q)))
if mibBuilder.loadTexts:compErrReadZeroBytesInt.setStatus('')
compErrTreeTooBig=NotificationType((1,3,6,1,4,1,23,2,10,0,176))
compErrTreeTooBig.setObjects(*((_A,_B),(_A,_C),(_A,_M),(_A,_S),(_A,_T)))
if mibBuilder.loadTexts:compErrTreeTooBig.setStatus('')
compErrMatchSizeFail=NotificationType((1,3,6,1,4,1,23,2,10,0,177))
compErrMatchSizeFail.setObjects(*((_A,_B),(_A,_C),(_A,_M),(_A,_S),(_A,_T),(_A,_AO),(_A,_AP)))
if mibBuilder.loadTexts:compErrMatchSizeFail.setStatus('')
signatureInvalid=NotificationType((1,3,6,1,4,1,23,2,10,0,178))
signatureInvalid.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_K),(_A,_L)))
if mibBuilder.loadTexts:signatureInvalid.setStatus('')
licenseInvalid=NotificationType((1,3,6,1,4,1,23,2,10,0,179))
licenseInvalid.setObjects(*((_A,_B),(_A,_C),(_A,_W)))
if mibBuilder.loadTexts:licenseInvalid.setStatus('')
deactHotFix=NotificationType((1,3,6,1,4,1,23,2,10,0,180))
deactHotFix.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:deactHotFix.setStatus('')
unknownDecompressErrorWithName=NotificationType((1,3,6,1,4,1,23,2,10,0,181))
unknownDecompressErrorWithName.setObjects(*((_A,_B),(_A,_C),(_A,_h),(_A,_M)))
if mibBuilder.loadTexts:unknownDecompressErrorWithName.setStatus('')
insufficientRamToDecompWithName=NotificationType((1,3,6,1,4,1,23,2,10,0,182))
insufficientRamToDecompWithName.setObjects(*((_A,_B),(_A,_C),(_A,_M)))
if mibBuilder.loadTexts:insufficientRamToDecompWithName.setStatus('')
decompressUnderFreePercentage=NotificationType((1,3,6,1,4,1,23,2,10,0,183))
decompressUnderFreePercentage.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:decompressUnderFreePercentage.setStatus('')
negPktLargeBuffer=NotificationType((1,3,6,1,4,1,23,2,10,0,184))
negPktLargeBuffer.setObjects(*((_A,_B),(_A,_C),(_A,_R),(_A,_AQ),(_A,_AR)))
if mibBuilder.loadTexts:negPktLargeBuffer.setStatus('')
loginDisabledByConsole=NotificationType((1,3,6,1,4,1,23,2,10,0,185))
loginDisabledByConsole.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:loginDisabledByConsole.setStatus('')
loginEnabledByConsole=NotificationType((1,3,6,1,4,1,23,2,10,0,186))
loginEnabledByConsole.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:loginEnabledByConsole.setStatus('')
growableStackNotAllocated=NotificationType((1,3,6,1,4,1,23,2,10,0,187))
growableStackNotAllocated.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:growableStackNotAllocated.setStatus('')
insertDSMediaAck=NotificationType((1,3,6,1,4,1,23,2,10,0,188))
insertDSMediaAck.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:insertDSMediaAck.setStatus('')
insertMagazineAck=NotificationType((1,3,6,1,4,1,23,2,10,0,189))
insertMagazineAck.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:insertMagazineAck.setStatus('')
insertDSMediaAborted=NotificationType((1,3,6,1,4,1,23,2,10,0,190))
insertDSMediaAborted.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:insertDSMediaAborted.setStatus('')
insertMagazineAborted=NotificationType((1,3,6,1,4,1,23,2,10,0,191))
insertMagazineAborted.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:insertMagazineAborted.setStatus('')
remDSMediaAck=NotificationType((1,3,6,1,4,1,23,2,10,0,192))
remDSMediaAck.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:remDSMediaAck.setStatus('')
remMagazineAck=NotificationType((1,3,6,1,4,1,23,2,10,0,193))
remMagazineAck.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:remMagazineAck.setStatus('')
remDSMediaAborted=NotificationType((1,3,6,1,4,1,23,2,10,0,194))
remDSMediaAborted.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:remDSMediaAborted.setStatus('')
remMagazineAborted=NotificationType((1,3,6,1,4,1,23,2,10,0,195))
remMagazineAborted.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:remMagazineAborted.setStatus('')
insertMagazineInto=NotificationType((1,3,6,1,4,1,23,2,10,0,196))
insertMagazineInto.setObjects(*((_A,_B),(_A,_C),(_A,_A3),(_A,_J)))
if mibBuilder.loadTexts:insertMagazineInto.setStatus('')
removeDSMediaFrom=NotificationType((1,3,6,1,4,1,23,2,10,0,197))
removeDSMediaFrom.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:removeDSMediaFrom.setStatus('')
removeMagazineFrom=NotificationType((1,3,6,1,4,1,23,2,10,0,198))
removeMagazineFrom.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:removeMagazineFrom.setStatus('')
moduleDidNotReleaseResources=NotificationType((1,3,6,1,4,1,23,2,10,0,199))
moduleDidNotReleaseResources.setObjects(*((_A,_B),(_A,_C),(_A,_AS),(_A,_N),(_A,_z),(_A,_A0)))
if mibBuilder.loadTexts:moduleDidNotReleaseResources.setStatus('')
opnBinderyFailSinceVolNotMounted=NotificationType((1,3,6,1,4,1,23,2,10,0,200))
opnBinderyFailSinceVolNotMounted.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:opnBinderyFailSinceVolNotMounted.setStatus('')
binderyOpnReqtdByUsrFailed=NotificationType((1,3,6,1,4,1,23,2,10,0,201))
binderyOpnReqtdByUsrFailed.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_H)))
if mibBuilder.loadTexts:binderyOpnReqtdByUsrFailed.setStatus('')
binderyOpnReqtdBySrvr=NotificationType((1,3,6,1,4,1,23,2,10,0,202))
binderyOpnReqtdBySrvr.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:binderyOpnReqtdBySrvr.setStatus('')
binderyOpnReqtdByUsR=NotificationType((1,3,6,1,4,1,23,2,10,0,203))
binderyOpnReqtdByUsR.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_H)))
if mibBuilder.loadTexts:binderyOpnReqtdByUsR.setStatus('')
binderyClosedBySrvr=NotificationType((1,3,6,1,4,1,23,2,10,0,204))
binderyClosedBySrvr.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:binderyClosedBySrvr.setStatus('')
binderyClosedByUsr=NotificationType((1,3,6,1,4,1,23,2,10,0,205))
binderyClosedByUsr.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_H)))
if mibBuilder.loadTexts:binderyClosedByUsr.setStatus('')
intruderLockout=NotificationType((1,3,6,1,4,1,23,2,10,0,206))
intruderLockout.setObjects(*((_A,_B),(_A,_C),(_A,_c),(_A,_K),(_A,_L)))
if mibBuilder.loadTexts:intruderLockout.setStatus('')
dsOpenFailed=NotificationType((1,3,6,1,4,1,23,2,10,0,207))
dsOpenFailed.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:dsOpenFailed.setStatus('')
dsOpenFailedInconsistentDatabase=NotificationType((1,3,6,1,4,1,23,2,10,0,208))
dsOpenFailedInconsistentDatabase.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:dsOpenFailedInconsistentDatabase.setStatus('')
dsopenSucceeded=NotificationType((1,3,6,1,4,1,23,2,10,0,209))
dsopenSucceeded.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:dsopenSucceeded.setStatus('')
dsCloseSucceeded=NotificationType((1,3,6,1,4,1,23,2,10,0,210))
dsCloseSucceeded.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:dsCloseSucceeded.setStatus('')
skulkingError=NotificationType((1,3,6,1,4,1,23,2,10,0,211))
skulkingError.setObjects(*((_A,_B),(_A,_C),(_A,_h)))
if mibBuilder.loadTexts:skulkingError.setStatus('')
dsIntruderNoAddr=NotificationType((1,3,6,1,4,1,23,2,10,0,212))
dsIntruderNoAddr.setObjects(*((_A,_B),(_A,_C),(_A,_c)))
if mibBuilder.loadTexts:dsIntruderNoAddr.setStatus('')
domainQuarantined=NotificationType((1,3,6,1,4,1,23,2,10,0,213))
domainQuarantined.setObjects(*((_A,_B),(_A,_C),(_A,_AT),(_A,_x),(_A,_a),(_A,_N),(_A,_AU)))
if mibBuilder.loadTexts:domainQuarantined.setStatus('')
commandProcess=NotificationType((1,3,6,1,4,1,23,2,10,0,214))
commandProcess.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:commandProcess.setStatus('')
remoteConnGranted=NotificationType((1,3,6,1,4,1,23,2,10,0,215))
remoteConnGranted.setObjects(*((_A,_B),(_A,_C),(_A,_K),(_A,_L)))
if mibBuilder.loadTexts:remoteConnGranted.setStatus('')
remoteConnCleared=NotificationType((1,3,6,1,4,1,23,2,10,0,216))
remoteConnCleared.setObjects(*((_A,_B),(_A,_C),(_A,_K),(_A,_L)))
if mibBuilder.loadTexts:remoteConnCleared.setStatus('')
remoteConnRefused=NotificationType((1,3,6,1,4,1,23,2,10,0,217))
remoteConnRefused.setObjects(*((_A,_B),(_A,_C),(_A,_K),(_A,_L)))
if mibBuilder.loadTexts:remoteConnRefused.setStatus('')
translatorUp=NotificationType((1,3,6,1,4,1,23,2,10,0,218))
translatorUp.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:translatorUp.setStatus('')
translatorDown=NotificationType((1,3,6,1,4,1,23,2,10,0,219))
translatorDown.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:translatorDown.setStatus('')
volAnyMounted=NotificationType((1,3,6,1,4,1,23,2,10,0,220))
volAnyMounted.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:volAnyMounted.setStatus('')
volAnyDismounted=NotificationType((1,3,6,1,4,1,23,2,10,0,221))
volAnyDismounted.setObjects(*((_A,_B),(_A,_C),(_A,_G)))
if mibBuilder.loadTexts:volAnyDismounted.setStatus('')
serverDownatServer=NotificationType((1,3,6,1,4,1,23,2,10,0,222))
serverDownatServer.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:serverDownatServer.setStatus('')
protocolBound=NotificationType((1,3,6,1,4,1,23,2,10,0,223))
protocolBound.setObjects(*((_A,_B),(_A,_C),(_A,_k),(_A,_U),(_A,_A7)))
if mibBuilder.loadTexts:protocolBound.setStatus('')
protocolUnBound=NotificationType((1,3,6,1,4,1,23,2,10,0,224))
protocolUnBound.setObjects(*((_A,_B),(_A,_C),(_A,_k),(_A,_U),(_A,_A7)))
if mibBuilder.loadTexts:protocolUnBound.setStatus('')
moduleLoad=NotificationType((1,3,6,1,4,1,23,2,10,0,225))
moduleLoad.setObjects(*((_A,_B),(_A,_C),(_A,_N)))
if mibBuilder.loadTexts:moduleLoad.setStatus('')
moduleUnLoad=NotificationType((1,3,6,1,4,1,23,2,10,0,226))
moduleUnLoad.setObjects(*((_A,_B),(_A,_C),(_A,_N)))
if mibBuilder.loadTexts:moduleUnLoad.setStatus('')
mlidRegister=NotificationType((1,3,6,1,4,1,23,2,10,0,227))
mlidRegister.setObjects(*((_A,_B),(_A,_C),(_A,_U),(_A,_k)))
if mibBuilder.loadTexts:mlidRegister.setStatus('')
mlidUnRegister=NotificationType((1,3,6,1,4,1,23,2,10,0,228))
mlidUnRegister.setObjects(*((_A,_B),(_A,_C),(_A,_U),(_A,_k)))
if mibBuilder.loadTexts:mlidUnRegister.setStatus('')
clearConnection=NotificationType((1,3,6,1,4,1,23,2,10,0,229))
clearConnection.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_R)))
if mibBuilder.loadTexts:clearConnection.setStatus('')
loginConnection=NotificationType((1,3,6,1,4,1,23,2,10,0,230))
loginConnection.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_R)))
if mibBuilder.loadTexts:loginConnection.setStatus('')
nlmAlertCritical=NotificationType((1,3,6,1,4,1,23,2,10,0,231))
nlmAlertCritical.setObjects(*((_A,_B),(_A,_C),(_A,_N),(_A,_l),(_A,_W)))
if mibBuilder.loadTexts:nlmAlertCritical.setStatus('')
logoutConnection=NotificationType((1,3,6,1,4,1,23,2,10,0,232))
logoutConnection.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_R)))
if mibBuilder.loadTexts:logoutConnection.setStatus('')
usrAcctDeletedByAUsrSingleConn=NotificationType((1,3,6,1,4,1,23,2,10,0,233))
usrAcctDeletedByAUsrSingleConn.setObjects(*((_A,_B),(_A,_C),(_A,_c),(_A,_F),(_A,_H)))
if mibBuilder.loadTexts:usrAcctDeletedByAUsrSingleConn.setStatus('')
compErrReadZeroBytesOrig=NotificationType((1,3,6,1,4,1,23,2,10,0,234))
compErrReadZeroBytesOrig.setObjects(*((_A,_B),(_A,_C),(_A,_S),(_A,_T),(_A,_V),(_A,_Q)))
if mibBuilder.loadTexts:compErrReadZeroBytesOrig.setStatus('')
diskDeactivated=NotificationType((1,3,6,1,4,1,23,2,10,0,235))
diskDeactivated.setObjects(*((_A,_B),(_A,_C),(_A,_f),(_A,'reason')))
if mibBuilder.loadTexts:diskDeactivated.setStatus('')
diskMounted=NotificationType((1,3,6,1,4,1,23,2,10,0,236))
diskMounted.setObjects(*((_A,_B),(_A,_C),(_A,_f)))
if mibBuilder.loadTexts:diskMounted.setStatus('')
redirectBlockMismatch=NotificationType((1,3,6,1,4,1,23,2,10,0,237))
redirectBlockMismatch.setObjects(*((_A,_B),(_A,_C),(_A,_P),(_A,_q)))
if mibBuilder.loadTexts:redirectBlockMismatch.setStatus('')
shortTermMemoryLimitExceeded=NotificationType((1,3,6,1,4,1,23,2,10,0,238))
shortTermMemoryLimitExceeded.setObjects(*((_A,_B),(_A,_C),(_A,_p)))
if mibBuilder.loadTexts:shortTermMemoryLimitExceeded.setStatus('')
semipermanentMemoryExhausted=NotificationType((1,3,6,1,4,1,23,2,10,0,239))
semipermanentMemoryExhausted.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:semipermanentMemoryExhausted.setStatus('')
diskDismounted=NotificationType((1,3,6,1,4,1,23,2,10,0,240))
diskDismounted.setObjects(*((_A,_B),(_A,_C),(_A,_f)))
if mibBuilder.loadTexts:diskDismounted.setStatus('')
diskAdded=NotificationType((1,3,6,1,4,1,23,2,10,0,241))
diskAdded.setObjects(*((_A,_B),(_A,_C),(_A,_f)))
if mibBuilder.loadTexts:diskAdded.setStatus('')
diskActivated=NotificationType((1,3,6,1,4,1,23,2,10,0,242))
diskActivated.setObjects(*((_A,_B),(_A,_C),(_A,_f)))
if mibBuilder.loadTexts:diskActivated.setStatus('')
generalTTSfailures=NotificationType((1,3,6,1,4,1,23,2,10,0,243))
generalTTSfailures.setObjects(*((_A,_B),(_A,_C),(_A,_W)))
if mibBuilder.loadTexts:generalTTSfailures.setStatus('')
mirroredPartNotAllSynced=NotificationType((1,3,6,1,4,1,23,2,10,0,244))
mirroredPartNotAllSynced.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:mirroredPartNotAllSynced.setStatus('')
reqtdRtrReset311=NotificationType((1,3,6,1,4,1,23,2,10,0,245))
reqtdRtrReset311.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:reqtdRtrReset311.setStatus('')
invalidSignatureString=NotificationType((1,3,6,1,4,1,23,2,10,0,246))
invalidSignatureString.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_K),(_A,_L)))
if mibBuilder.loadTexts:invalidSignatureString.setStatus('')
invalidDuplicateSignature=NotificationType((1,3,6,1,4,1,23,2,10,0,247))
invalidDuplicateSignature.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_K),(_A,_L)))
if mibBuilder.loadTexts:invalidDuplicateSignature.setStatus('')
invalidPburstSignature=NotificationType((1,3,6,1,4,1,23,2,10,0,248))
invalidPburstSignature.setObjects(*((_A,_B),(_A,_C),(_A,_F),(_A,_K),(_A,_L)))
if mibBuilder.loadTexts:invalidPburstSignature.setStatus('')
failedToDeleteMigrateFile=NotificationType((1,3,6,1,4,1,23,2,10,0,249))
failedToDeleteMigrateFile.setObjects(*((_A,_B),(_A,_C),(_A,_G),(_A,_M)))
if mibBuilder.loadTexts:failedToDeleteMigrateFile.setStatus('')
unsignedRemoteConnectionRefused=NotificationType((1,3,6,1,4,1,23,2,10,0,250))
unsignedRemoteConnectionRefused.setObjects(*((_A,_B),(_A,_C),(_A,_K),(_A,_L)))
if mibBuilder.loadTexts:unsignedRemoteConnectionRefused.setStatus('')
unsignedRemoteConnectionGranted=NotificationType((1,3,6,1,4,1,23,2,10,0,251))
unsignedRemoteConnectionGranted.setObjects(*((_A,_B),(_A,_C),(_A,_K),(_A,_L)))
if mibBuilder.loadTexts:unsignedRemoteConnectionGranted.setStatus('')
responsePacketNotAllocated=NotificationType((1,3,6,1,4,1,23,2,10,0,252))
responsePacketNotAllocated.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:responsePacketNotAllocated.setStatus('')
wsNotLocated=NotificationType((1,3,6,1,4,1,23,2,10,0,253))
wsNotLocated.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:wsNotLocated.setStatus('')
remoteConnectionTimedOut=NotificationType((1,3,6,1,4,1,23,2,10,0,254))
remoteConnectionTimedOut.setObjects(*((_A,_B),(_A,_C),(_A,_F)))
if mibBuilder.loadTexts:remoteConnectionTimedOut.setStatus('')
modemConnectionCleared=NotificationType((1,3,6,1,4,1,23,2,10,0,255))
modemConnectionCleared.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:modemConnectionCleared.setStatus('')
remoteConnectionClearedNameKnown=NotificationType((1,3,6,1,4,1,23,2,10,0,256))
remoteConnectionClearedNameKnown.setObjects(*((_A,_B),(_A,_C),(_A,_F)))
if mibBuilder.loadTexts:remoteConnectionClearedNameKnown.setStatus('')
callBackNumberNotReceived=NotificationType((1,3,6,1,4,1,23,2,10,0,257))
callBackNumberNotReceived.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:callBackNumberNotReceived.setStatus('')
nlmUnableToOpenListFile=NotificationType((1,3,6,1,4,1,23,2,10,0,258))
nlmUnableToOpenListFile.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:nlmUnableToOpenListFile.setStatus('')
nlmUnableToReadListFile=NotificationType((1,3,6,1,4,1,23,2,10,0,259))
nlmUnableToReadListFile.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:nlmUnableToReadListFile.setStatus('')
unauthorizedCallBackNumber=NotificationType((1,3,6,1,4,1,23,2,10,0,260))
unauthorizedCallBackNumber.setObjects(*((_A,_B),(_A,_C),(_A,_A8)))
if mibBuilder.loadTexts:unauthorizedCallBackNumber.setStatus('')
modemClearedAndCallBackAttempted=NotificationType((1,3,6,1,4,1,23,2,10,0,261))
modemClearedAndCallBackAttempted.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:modemClearedAndCallBackAttempted.setStatus('')
attmptngToEstblshCallBckConnectn=NotificationType((1,3,6,1,4,1,23,2,10,0,262))
attmptngToEstblshCallBckConnectn.setObjects(*((_A,_B),(_A,_C),(_A,_A8)))
if mibBuilder.loadTexts:attmptngToEstblshCallBckConnectn.setStatus('')
remoteConnectionRefusedNameKnown=NotificationType((1,3,6,1,4,1,23,2,10,0,263))
remoteConnectionRefusedNameKnown.setObjects(*((_A,_B),(_A,_C),(_A,_F)))
if mibBuilder.loadTexts:remoteConnectionRefusedNameKnown.setStatus('')
remoteConnectionGrantedNameKnown=NotificationType((1,3,6,1,4,1,23,2,10,0,264))
remoteConnectionGrantedNameKnown.setObjects(*((_A,_B),(_A,_C),(_A,_F)))
if mibBuilder.loadTexts:remoteConnectionGrantedNameKnown.setStatus('')
modemConnectionEstablished=NotificationType((1,3,6,1,4,1,23,2,10,0,265))
modemConnectionEstablished.setObjects(*((_A,_B),(_A,_C),(_A,'baudRate')))
if mibBuilder.loadTexts:modemConnectionEstablished.setStatus('')
dsAuditFileWriteError=NotificationType((1,3,6,1,4,1,23,2,10,0,266))
dsAuditFileWriteError.setObjects(*((_A,_B),(_A,_C),(_A,_s)))
if mibBuilder.loadTexts:dsAuditFileWriteError.setStatus('')
dsAuditFileFull=NotificationType((1,3,6,1,4,1,23,2,10,0,267))
dsAuditFileFull.setObjects(*((_A,_B),(_A,_C),(_A,_s)))
if mibBuilder.loadTexts:dsAuditFileFull.setStatus('')
dsAuditFileThresholdOverflow=NotificationType((1,3,6,1,4,1,23,2,10,0,268))
dsAuditFileThresholdOverflow.setObjects(*((_A,_B),(_A,_C),(_A,_s)))
if mibBuilder.loadTexts:dsAuditFileThresholdOverflow.setStatus('')
dsAuditMemoryAllocation=NotificationType((1,3,6,1,4,1,23,2,10,0,269))
dsAuditMemoryAllocation.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:dsAuditMemoryAllocation.setStatus('')
serverUp=NotificationType((1,3,6,1,4,1,23,2,10,0,270))
serverUp.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:serverUp.setStatus('')
volRestrictedSpace=NotificationType((1,3,6,1,4,1,23,2,10,0,271))
volRestrictedSpace.setObjects(*((_A,_B),(_A,_C),(_A,_G),(_A,_AV)))
if mibBuilder.loadTexts:volRestrictedSpace.setStatus('')
cannotInitialize=NotificationType((1,3,6,1,4,1,23,2,10,0,272))
cannotInitialize.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:cannotInitialize.setStatus('')
cannotStart=NotificationType((1,3,6,1,4,1,23,2,10,0,273))
cannotStart.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:cannotStart.setStatus('')
noSAPSocketTag=NotificationType((1,3,6,1,4,1,23,2,10,0,274))
noSAPSocketTag.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:noSAPSocketTag.setStatus('')
noSAPSocket=NotificationType((1,3,6,1,4,1,23,2,10,0,275))
noSAPSocket.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:noSAPSocket.setStatus('')
noSetableParameterTag=NotificationType((1,3,6,1,4,1,23,2,10,0,276))
noSetableParameterTag.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:noSetableParameterTag.setStatus('')
noTimerTag=NotificationType((1,3,6,1,4,1,23,2,10,0,277))
noTimerTag.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:noTimerTag.setStatus('')
noAllocTag=NotificationType((1,3,6,1,4,1,23,2,10,0,278))
noAllocTag.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:noAllocTag.setStatus('')
noResourceTag=NotificationType((1,3,6,1,4,1,23,2,10,0,279))
noResourceTag.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:noResourceTag.setStatus('')
noProcessTag=NotificationType((1,3,6,1,4,1,23,2,10,0,280))
noProcessTag.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:noProcessTag.setStatus('')
noEventTag=NotificationType((1,3,6,1,4,1,23,2,10,0,281))
noEventTag.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:noEventTag.setStatus('')
noGlobalInfo=NotificationType((1,3,6,1,4,1,23,2,10,0,282))
noGlobalInfo.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:noGlobalInfo.setStatus('')
noParseCommandLine=NotificationType((1,3,6,1,4,1,23,2,10,0,283))
noParseCommandLine.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:noParseCommandLine.setStatus('')
noTimeSyncNCPVariable=NotificationType((1,3,6,1,4,1,23,2,10,0,284))
noTimeSyncNCPVariable.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:noTimeSyncNCPVariable.setStatus('')
cantAllocateMainStack=NotificationType((1,3,6,1,4,1,23,2,10,0,285))
cantAllocateMainStack.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:cantAllocateMainStack.setStatus('')
cantCreateMainProcess=NotificationType((1,3,6,1,4,1,23,2,10,0,286))
cantCreateMainProcess.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:cantCreateMainProcess.setStatus('')
syncRadiusLess=NotificationType((1,3,6,1,4,1,23,2,10,0,287))
syncRadiusLess.setObjects(*((_A,_B),(_A,_C),(_A,_AW)))
if mibBuilder.loadTexts:syncRadiusLess.setStatus('')
unrecognizedCommandLinePrmtr=NotificationType((1,3,6,1,4,1,23,2,10,0,288))
unrecognizedCommandLinePrmtr.setObjects(*((_A,_B),(_A,_C),(_A,_A9)))
if mibBuilder.loadTexts:unrecognizedCommandLinePrmtr.setStatus('')
unrecognizedCommandLineOption=NotificationType((1,3,6,1,4,1,23,2,10,0,289))
unrecognizedCommandLineOption.setObjects(*((_A,_B),(_A,_C),(_A,_A9)))
if mibBuilder.loadTexts:unrecognizedCommandLineOption.setStatus('')
serverPolled=NotificationType((1,3,6,1,4,1,23,2,10,0,290))
serverPolled.setObjects(*((_A,_B),(_A,_C),(_A,_Z)))
if mibBuilder.loadTexts:serverPolled.setStatus('')
singleSrvrIncompatible=NotificationType((1,3,6,1,4,1,23,2,10,0,291))
singleSrvrIncompatible.setObjects(*((_A,_B),(_A,_C),(_A,_Z)))
if mibBuilder.loadTexts:singleSrvrIncompatible.setStatus('')
timeSyncLost=NotificationType((1,3,6,1,4,1,23,2,10,0,292))
timeSyncLost.setObjects(*((_A,_B),(_A,_C),(_A,_AX)))
if mibBuilder.loadTexts:timeSyncLost.setStatus('')
timeSyncEstablished=NotificationType((1,3,6,1,4,1,23,2,10,0,293))
timeSyncEstablished.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:timeSyncEstablished.setStatus('')
connTerminated=NotificationType((1,3,6,1,4,1,23,2,10,0,294))
connTerminated.setObjects(*((_A,_B),(_A,_C),(_A,_R)))
if mibBuilder.loadTexts:connTerminated.setStatus('')
connClearedByUsr=NotificationType((1,3,6,1,4,1,23,2,10,0,295))
connClearedByUsr.setObjects(*((_A,_B),(_A,_C),(_A,_R),(_A,_H),(_A,_F)))
if mibBuilder.loadTexts:connClearedByUsr.setStatus('')
loginDisabled=NotificationType((1,3,6,1,4,1,23,2,10,0,296))
loginDisabled.setObjects(*((_A,_B),(_A,_C),(_A,_R),(_A,_F)))
if mibBuilder.loadTexts:loginDisabled.setStatus('')
downFileServer=NotificationType((1,3,6,1,4,1,23,2,10,0,297))
downFileServer.setObjects(*((_A,_B),(_A,_C),(_A,_H),(_A,_F)))
if mibBuilder.loadTexts:downFileServer.setStatus('')
loginEnabled=NotificationType((1,3,6,1,4,1,23,2,10,0,298))
loginEnabled.setObjects(*((_A,_B),(_A,_C),(_A,_R),(_A,_F)))
if mibBuilder.loadTexts:loginEnabled.setStatus('')
errLogTransferErr=NotificationType((1,3,6,1,4,1,23,2,10,0,299))
errLogTransferErr.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:errLogTransferErr.setStatus('')
faultInConsoleCommandHandler=NotificationType((1,3,6,1,4,1,23,2,10,0,300))
faultInConsoleCommandHandler.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:faultInConsoleCommandHandler.setStatus('')
commLinkActivated=NotificationType((1,3,6,1,4,1,23,2,10,0,301))
commLinkActivated.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:commLinkActivated.setStatus('')
commLinkFailure=NotificationType((1,3,6,1,4,1,23,2,10,0,302))
commLinkFailure.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:commLinkFailure.setStatus('')
commLinkDeactivated=NotificationType((1,3,6,1,4,1,23,2,10,0,303))
commLinkDeactivated.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:commLinkDeactivated.setStatus('')
srvrAttemptedToSync=NotificationType((1,3,6,1,4,1,23,2,10,0,304))
srvrAttemptedToSync.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:srvrAttemptedToSync.setStatus('')
commLinkBrokeOK=NotificationType((1,3,6,1,4,1,23,2,10,0,305))
commLinkBrokeOK.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:commLinkBrokeOK.setStatus('')
syncStartingAmSecondarySrvr=NotificationType((1,3,6,1,4,1,23,2,10,0,306))
syncStartingAmSecondarySrvr.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:syncStartingAmSecondarySrvr.setStatus('')
badSrvrInitMsg=NotificationType((1,3,6,1,4,1,23,2,10,0,307))
badSrvrInitMsg.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:badSrvrInitMsg.setStatus('')
commLinkInitFailed=NotificationType((1,3,6,1,4,1,23,2,10,0,308))
commLinkInitFailed.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:commLinkInitFailed.setStatus('')
failedDuringSync=NotificationType((1,3,6,1,4,1,23,2,10,0,309))
failedDuringSync.setObjects(*((_A,_B),(_A,_C),(_A,_X)))
if mibBuilder.loadTexts:failedDuringSync.setStatus('')
commDriverLoadedDuringActivate=NotificationType((1,3,6,1,4,1,23,2,10,0,310))
commDriverLoadedDuringActivate.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:commDriverLoadedDuringActivate.setStatus('')
errWritingStatusDump=NotificationType((1,3,6,1,4,1,23,2,10,0,311))
errWritingStatusDump.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:errWritingStatusDump.setStatus('')
commDriverFailureOnPrimary=NotificationType((1,3,6,1,4,1,23,2,10,0,312))
commDriverFailureOnPrimary.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:commDriverFailureOnPrimary.setStatus('')
commDriverFailureOnSecondary=NotificationType((1,3,6,1,4,1,23,2,10,0,313))
commDriverFailureOnSecondary.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:commDriverFailureOnSecondary.setStatus('')
errFinishingGeneratingStatusDump=NotificationType((1,3,6,1,4,1,23,2,10,0,314))
errFinishingGeneratingStatusDump.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:errFinishingGeneratingStatusDump.setStatus('')
sFTIIWhatToDoReasonString=NotificationType((1,3,6,1,4,1,23,2,10,0,315))
sFTIIWhatToDoReasonString.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:sFTIIWhatToDoReasonString.setStatus('')
sFTIIErrorUnexpected=NotificationType((1,3,6,1,4,1,23,2,10,0,316))
sFTIIErrorUnexpected.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:sFTIIErrorUnexpected.setStatus('')
syncErrorGeneratedFromCustomSrvr=NotificationType((1,3,6,1,4,1,23,2,10,0,317))
syncErrorGeneratedFromCustomSrvr.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:syncErrorGeneratedFromCustomSrvr.setStatus('')
srvrLinkHasPluggedPacket=NotificationType((1,3,6,1,4,1,23,2,10,0,318))
srvrLinkHasPluggedPacket.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:srvrLinkHasPluggedPacket.setStatus('')
srvrToBeRevived=NotificationType((1,3,6,1,4,1,23,2,10,0,319))
srvrToBeRevived.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:srvrToBeRevived.setStatus('')
srvrsAreSyncedThisIsThePrimary=NotificationType((1,3,6,1,4,1,23,2,10,0,320))
srvrsAreSyncedThisIsThePrimary.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:srvrsAreSyncedThisIsThePrimary.setStatus('')
srvrCantRouteViaIPXToSecondary=NotificationType((1,3,6,1,4,1,23,2,10,0,321))
srvrCantRouteViaIPXToSecondary.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:srvrCantRouteViaIPXToSecondary.setStatus('')
srvrIPXRouteInfoToSecondary=NotificationType((1,3,6,1,4,1,23,2,10,0,322))
srvrIPXRouteInfoToSecondary.setObjects(*((_A,_B),(_A,_C),(_A,_U),(_A,_t),(_A,_L)))
if mibBuilder.loadTexts:srvrIPXRouteInfoToSecondary.setStatus('')
errGivingRAMtoMSEngine=NotificationType((1,3,6,1,4,1,23,2,10,0,323))
errGivingRAMtoMSEngine.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:errGivingRAMtoMSEngine.setStatus('')
moreRAMgivenToMSEngine=NotificationType((1,3,6,1,4,1,23,2,10,0,324))
moreRAMgivenToMSEngine.setObjects(*((_A,_B),(_A,_C),(_A,_m),(_A,_n)))
if mibBuilder.loadTexts:moreRAMgivenToMSEngine.setStatus('')
srvrsAreSyncedThisIsTheSecondary=NotificationType((1,3,6,1,4,1,23,2,10,0,325))
srvrsAreSyncedThisIsTheSecondary.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:srvrsAreSyncedThisIsTheSecondary.setStatus('')
srvrCantRouteViaIPXToPrimary=NotificationType((1,3,6,1,4,1,23,2,10,0,326))
srvrCantRouteViaIPXToPrimary.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:srvrCantRouteViaIPXToPrimary.setStatus('')
srvrIPXRouteInfoToPrimary=NotificationType((1,3,6,1,4,1,23,2,10,0,327))
srvrIPXRouteInfoToPrimary.setObjects(*((_A,_B),(_A,_C),(_A,_U),(_A,_t),(_A,_L)))
if mibBuilder.loadTexts:srvrIPXRouteInfoToPrimary.setStatus('')
priSrvrFailedButSecDown=NotificationType((1,3,6,1,4,1,23,2,10,0,328))
priSrvrFailedButSecDown.setObjects(*((_A,_B),(_A,_C),(_A,_X)))
if mibBuilder.loadTexts:priSrvrFailedButSecDown.setStatus('')
priSrvrFailedNewPri=NotificationType((1,3,6,1,4,1,23,2,10,0,329))
priSrvrFailedNewPri.setObjects(*((_A,_B),(_A,_C),(_A,_X)))
if mibBuilder.loadTexts:priSrvrFailedNewPri.setStatus('')
numMemSegsExceedLimit=NotificationType((1,3,6,1,4,1,23,2,10,0,330))
numMemSegsExceedLimit.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:numMemSegsExceedLimit.setStatus('')
numScreenExceedsLimit=NotificationType((1,3,6,1,4,1,23,2,10,0,331))
numScreenExceedsLimit.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:numScreenExceedsLimit.setStatus('')
iOVersionMismatch=NotificationType((1,3,6,1,4,1,23,2,10,0,332))
iOVersionMismatch.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:iOVersionMismatch.setStatus('')
srvrProtectLevelNoMatch=NotificationType((1,3,6,1,4,1,23,2,10,0,333))
srvrProtectLevelNoMatch.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:srvrProtectLevelNoMatch.setStatus('')
srvrScreenAddressMismatch=NotificationType((1,3,6,1,4,1,23,2,10,0,334))
srvrScreenAddressMismatch.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:srvrScreenAddressMismatch.setStatus('')
iOEngineNotLoadedAtSameAddress=NotificationType((1,3,6,1,4,1,23,2,10,0,335))
iOEngineNotLoadedAtSameAddress.setObjects(*((_A,_B),(_A,_C),(_A,_m),(_A,_n)))
if mibBuilder.loadTexts:iOEngineNotLoadedAtSameAddress.setStatus('')
bothSrvrHaveActiveMSEngines=NotificationType((1,3,6,1,4,1,23,2,10,0,336))
bothSrvrHaveActiveMSEngines.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:bothSrvrHaveActiveMSEngines.setStatus('')
noActiveMSEngineOnServers=NotificationType((1,3,6,1,4,1,23,2,10,0,337))
noActiveMSEngineOnServers.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:noActiveMSEngineOnServers.setStatus('')
secSrvrMissingRAM=NotificationType((1,3,6,1,4,1,23,2,10,0,338))
secSrvrMissingRAM.setObjects(*((_A,_B),(_A,_C),(_A,_m),(_A,_n)))
if mibBuilder.loadTexts:secSrvrMissingRAM.setStatus('')
bothSrvrHaveSameIPXAddr=NotificationType((1,3,6,1,4,1,23,2,10,0,339))
bothSrvrHaveSameIPXAddr.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:bothSrvrHaveSameIPXAddr.setStatus('')
iOEngIPXAddrMatchesMSEngine=NotificationType((1,3,6,1,4,1,23,2,10,0,340))
iOEngIPXAddrMatchesMSEngine.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:iOEngIPXAddrMatchesMSEngine.setStatus('')
iOEnginesMismatchLANRxBufferSize=NotificationType((1,3,6,1,4,1,23,2,10,0,341))
iOEnginesMismatchLANRxBufferSize.setObjects(*((_A,_B),(_A,_C),(_A,_m),(_A,_n)))
if mibBuilder.loadTexts:iOEnginesMismatchLANRxBufferSize.setStatus('')
iOEnginesHaveSameName=NotificationType((1,3,6,1,4,1,23,2,10,0,342))
iOEnginesHaveSameName.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:iOEnginesHaveSameName.setStatus('')
noMemoryForIOEngineName=NotificationType((1,3,6,1,4,1,23,2,10,0,343))
noMemoryForIOEngineName.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:noMemoryForIOEngineName.setStatus('')
srvrToSrvrLinkBeginSync=NotificationType((1,3,6,1,4,1,23,2,10,0,344))
srvrToSrvrLinkBeginSync.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:srvrToSrvrLinkBeginSync.setStatus('')
mSEngineActivated=NotificationType((1,3,6,1,4,1,23,2,10,0,345))
mSEngineActivated.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:mSEngineActivated.setStatus('')
mSEngActivatedWillSyncWithOther=NotificationType((1,3,6,1,4,1,23,2,10,0,346))
mSEngActivatedWillSyncWithOther.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:mSEngActivatedWillSyncWithOther.setStatus('')
iOtoMSCommBeingUnloaded=NotificationType((1,3,6,1,4,1,23,2,10,0,347))
iOtoMSCommBeingUnloaded.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:iOtoMSCommBeingUnloaded.setStatus('')
sFTIIIOutOfMsgCodes=NotificationType((1,3,6,1,4,1,23,2,10,0,348))
sFTIIIOutOfMsgCodes.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:sFTIIIOutOfMsgCodes.setStatus('')
secIOEngSupportModulesNotLoaded=NotificationType((1,3,6,1,4,1,23,2,10,0,349))
secIOEngSupportModulesNotLoaded.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:secIOEngSupportModulesNotLoaded.setStatus('')
errXferDumpToSystem=NotificationType((1,3,6,1,4,1,23,2,10,0,350))
errXferDumpToSystem.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:errXferDumpToSystem.setStatus('')
failureCheckingPrimarySrvr=NotificationType((1,3,6,1,4,1,23,2,10,0,351))
failureCheckingPrimarySrvr.setObjects(*((_A,_B),(_A,_C),(_A,_X)))
if mibBuilder.loadTexts:failureCheckingPrimarySrvr.setStatus('')
errStarting2ndProcessor=NotificationType((1,3,6,1,4,1,23,2,10,0,352))
errStarting2ndProcessor.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:errStarting2ndProcessor.setStatus('')
srvrFailure=NotificationType((1,3,6,1,4,1,23,2,10,0,353))
srvrFailure.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:srvrFailure.setStatus('')
srvsSyncing=NotificationType((1,3,6,1,4,1,23,2,10,0,354))
srvsSyncing.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:srvsSyncing.setStatus('')
mSLBoardNumberConnEstablished=NotificationType((1,3,6,1,4,1,23,2,10,0,355))
mSLBoardNumberConnEstablished.setObjects(*((_A,_B),(_A,_C),(_A,_U)))
if mibBuilder.loadTexts:mSLBoardNumberConnEstablished.setStatus('')
secSrvrLANIsBetter=NotificationType((1,3,6,1,4,1,23,2,10,0,356))
secSrvrLANIsBetter.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:secSrvrLANIsBetter.setStatus('')
iPXreturningStatusPackets=NotificationType((1,3,6,1,4,1,23,2,10,0,357))
iPXreturningStatusPackets.setObjects(*((_A,_B),(_A,_C),(_A,_K)))
if mibBuilder.loadTexts:iPXreturningStatusPackets.setStatus('')
iPXnotReturningStatCheckPackets=NotificationType((1,3,6,1,4,1,23,2,10,0,358))
iPXnotReturningStatCheckPackets.setObjects(*((_A,_B),(_A,_C),(_A,_K)))
if mibBuilder.loadTexts:iPXnotReturningStatCheckPackets.setStatus('')
iPXnotReturningStatPcktLANJammed=NotificationType((1,3,6,1,4,1,23,2,10,0,359))
iPXnotReturningStatPcktLANJammed.setObjects(*((_A,_B),(_A,_C),(_A,_K)))
if mibBuilder.loadTexts:iPXnotReturningStatPcktLANJammed.setStatus('')
failReasonByOtherSrvr=NotificationType((1,3,6,1,4,1,23,2,10,0,360))
failReasonByOtherSrvr.setObjects(*((_A,_B),(_A,_C),(_A,_Z)))
if mibBuilder.loadTexts:failReasonByOtherSrvr.setStatus('')
iPXInternetIsJammed=NotificationType((1,3,6,1,4,1,23,2,10,0,361))
iPXInternetIsJammed.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:iPXInternetIsJammed.setStatus('')
iPXTooSlowForSecSrvr=NotificationType((1,3,6,1,4,1,23,2,10,0,362))
iPXTooSlowForSecSrvr.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:iPXTooSlowForSecSrvr.setStatus('')
otherSrvrTooManyHops=NotificationType((1,3,6,1,4,1,23,2,10,0,363))
otherSrvrTooManyHops.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:otherSrvrTooManyHops.setStatus('')
iPXappearsDown=NotificationType((1,3,6,1,4,1,23,2,10,0,364))
iPXappearsDown.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:iPXappearsDown.setStatus('')
iPXFoundRouteToOtherSrvr=NotificationType((1,3,6,1,4,1,23,2,10,0,365))
iPXFoundRouteToOtherSrvr.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:iPXFoundRouteToOtherSrvr.setStatus('')
iPXNewRouteToSecSrvr=NotificationType((1,3,6,1,4,1,23,2,10,0,366))
iPXNewRouteToSecSrvr.setObjects(*((_A,_B),(_A,_C),(_A,_U),(_A,_t),(_A,_L)))
if mibBuilder.loadTexts:iPXNewRouteToSecSrvr.setStatus('')
iPXLostRoute=NotificationType((1,3,6,1,4,1,23,2,10,0,367))
iPXLostRoute.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:iPXLostRoute.setStatus('')
secSrvrGoingToDie=NotificationType((1,3,6,1,4,1,23,2,10,0,368))
secSrvrGoingToDie.setObjects(*((_A,_B),(_A,_C),(_A,_X),(_A,_u)))
if mibBuilder.loadTexts:secSrvrGoingToDie.setStatus('')
priSrvrDyingTimerReStart=NotificationType((1,3,6,1,4,1,23,2,10,0,369))
priSrvrDyingTimerReStart.setObjects(*((_A,_B),(_A,_C),(_A,_X),(_A,_u)))
if mibBuilder.loadTexts:priSrvrDyingTimerReStart.setStatus('')
priSrvrDying=NotificationType((1,3,6,1,4,1,23,2,10,0,370))
priSrvrDying.setObjects(*((_A,_B),(_A,_C),(_A,_X),(_A,_u)))
if mibBuilder.loadTexts:priSrvrDying.setStatus('')
noMemForOtherIOEngScreen=NotificationType((1,3,6,1,4,1,23,2,10,0,371))
noMemForOtherIOEngScreen.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:noMemForOtherIOEngScreen.setStatus('')
timesyncErrorMsg=NotificationType((1,3,6,1,4,1,23,2,10,0,372))
timesyncErrorMsg.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:timesyncErrorMsg.setStatus('')
dsAlertSetServerDown=NotificationType((1,3,6,1,4,1,23,2,10,0,373))
dsAlertSetServerDown.setObjects(*((_A,_B),(_A,_C),(_A,_Z)))
if mibBuilder.loadTexts:dsAlertSetServerDown.setStatus('')
dsAlertSetServerUp=NotificationType((1,3,6,1,4,1,23,2,10,0,374))
dsAlertSetServerUp.setObjects(*((_A,_B),(_A,_C),(_A,_Z)))
if mibBuilder.loadTexts:dsAlertSetServerUp.setStatus('')
redirectTableMismatch=NotificationType((1,3,6,1,4,1,23,2,10,0,375))
redirectTableMismatch.setObjects(*((_A,_B),(_A,_C),(_A,_P),(_A,_q)))
if mibBuilder.loadTexts:redirectTableMismatch.setStatus('')
nlmAlertMajor=NotificationType((1,3,6,1,4,1,23,2,10,0,376))
nlmAlertMajor.setObjects(*((_A,_B),(_A,_C),(_A,_N),(_A,_l),(_A,_W)))
if mibBuilder.loadTexts:nlmAlertMajor.setStatus('')
nlmAlertMinor=NotificationType((1,3,6,1,4,1,23,2,10,0,377))
nlmAlertMinor.setObjects(*((_A,_B),(_A,_C),(_A,_N),(_A,_l),(_A,_W)))
if mibBuilder.loadTexts:nlmAlertMinor.setStatus('')
nlmAlertInformational=NotificationType((1,3,6,1,4,1,23,2,10,0,378))
nlmAlertInformational.setObjects(*((_A,_B),(_A,_C),(_A,_N),(_A,_l),(_A,_W)))
if mibBuilder.loadTexts:nlmAlertInformational.setStatus('')
mibBuilder.exportSymbols(_A,**{'NetNumber':NetNumber,'novell':novell,'mibDoc':mibDoc,'nwalarm-mib':nwalarm_mib,'outOfShortTermMemoryRequestFailed':outOfShortTermMemoryRequestFailed,'errWritingToTheExtendedDirSpace':errWritingToTheExtendedDirSpace,'errWritingToFile':errWritingToFile,'errWritingToFileUsr':errWritingToFileUsr,'errWritingToFileDataStream':errWritingToFileDataStream,'errWritingToFileDataStreamUsr':errWritingToFileDataStreamUsr,'fileReaderrSrvrNofileName':fileReaderrSrvrNofileName,'fileReaderrUsrNofileName':fileReaderrUsrNofileName,'fileReaderrDSSrvr':fileReaderrDSSrvr,'fileReaderrDSUsr':fileReaderrDSUsr,'fileWritePreReaderrSrvr':fileWritePreReaderrSrvr,'fileWritePreReaderrUsr':fileWritePreReaderrUsr,'fileWritePreReaderrDSSrvr':fileWritePreReaderrDSSrvr,'fileWritePreReaderrDSUsr':fileWritePreReaderrDSUsr,'cacheMemAllocExceededMinLeftLimit':cacheMemAllocExceededMinLeftLimit,'cacheMemAllocOutOfMem':cacheMemAllocOutOfMem,'numberOfCacheBuffersGettingLow':numberOfCacheBuffersGettingLow,'volOfDiskSpace':volOfDiskSpace,'volOfDiskSpaceNoPurge':volOfDiskSpaceNoPurge,'volAlmostOutOfDiskSpace':volAlmostOutOfDiskSpace,'errWritingFatTables':errWritingFatTables,'errWritingDirectoryBlk':errWritingDirectoryBlk,'dirCopyReadErr':dirCopyReadErr,'errReadingBothCopiesofDir':errReadingBothCopiesofDir,'allocateDirEntryWriteError':allocateDirEntryWriteError,'errExpandingDirDuetoWriteErr':errExpandingDirDuetoWriteErr,'dirReachedItsLimit':dirReachedItsLimit,'errExpandingNoDiskSpace':errExpandingNoDiskSpace,'errExpandingNoMemSpace':errExpandingNoMemSpace,'dirSizeGettingTooLrgeForMem':dirSizeGettingTooLrgeForMem,'lanReceiveBuffLimitReached':lanReceiveBuffLimitReached,'connTerminatedByWatchDog':connTerminatedByWatchDog,'copyrightViolation':copyrightViolation,'writeFault':writeFault,'readFault':readFault,'ipxReceivedIncomPacket':ipxReceivedIncomPacket,'unableToCreateVOLERR':unableToCreateVOLERR,'unableToWriteVOLERR':unableToWriteVOLERR,'volOprDespiteDeviceDriveDeact':volOprDespiteDeviceDriveDeact,'loginDisabledByUser':loginDisabledByUser,'loginEnabledByUser':loginEnabledByUser,'clrStnByConsole':clrStnByConsole,'clrStnByUsr':clrStnByUsr,'fileServerDowned':fileServerDowned,'errOpeningRIPSocket':errOpeningRIPSocket,'rtrConfigErr':rtrConfigErr,'lanDriverLoopBack':lanDriverLoopBack,'dupInternetAddr':dupInternetAddr,'lanBdUnreachable':lanBdUnreachable,'ipxUnbndRequest':ipxUnbndRequest,'errOpeningSAPSocket':errOpeningSAPSocket,'rtrClaimingSameInterAddr':rtrClaimingSameInterAddr,'spuriousInt':spuriousInt,'checksumInvalid':checksumInvalid,'prmyPicLostInterrupt':prmyPicLostInterrupt,'scndryPicLostInterrupt':scndryPicLostInterrupt,'exception':exception,'invalidScreenID':invalidScreenID,'prssDidNotRelqhCntlFqtly':prssDidNotRelqhCntlFqtly,'fileSrvrUsrDeleted':fileSrvrUsrDeleted,'usrAcctDeletedByAUsr':usrAcctDeletedByAUsr,'invalidResourceTag':invalidResourceTag,'diskDeactivatedUnknownReason':diskDeactivatedUnknownReason,'diskDeactivatedDriverUnload':diskDeactivatedDriverUnload,'diskDeactivatedDeviceFailure':diskDeactivatedDeviceFailure,'diskDeactivatedUsrRequest':diskDeactivatedUsrRequest,'diskDeactivatedMediaDismount':diskDeactivatedMediaDismount,'diskDeactivatedEOM':diskDeactivatedEOM,'diskDeactivatedServerDown':diskDeactivatedServerDown,'diskDeactivatedServerFailure':diskDeactivatedServerFailure,'moduleDidNotReleaseOneResource':moduleDidNotReleaseOneResource,'mirroredPartNotAllSync':mirroredPartNotAllSync,'allMirroredPartAreSync':allMirroredPartAreSync,'partitionsSync':partitionsSync,'partitionsUnSync':partitionsUnSync,'remirroringPart':remirroringPart,'abortRemirrorPart':abortRemirrorPart,'mirrorInconsistencies':mirrorInconsistencies,'systemFileLockThresholdReached':systemFileLockThresholdReached,'stationFileLockThresholdReached':stationFileLockThresholdReached,'systemRecordLockThresholdReached':systemRecordLockThresholdReached,'stationRecordLockThresholdReached':stationRecordLockThresholdReached,'errorOpeningNetAcctData':errorOpeningNetAcctData,'ncpSearchLimitExecBySrvr':ncpSearchLimitExecBySrvr,'ncpSearchLimitExecByStation':ncpSearchLimitExecByStation,'insertMediaAck':insertMediaAck,'insertMediaAborted':insertMediaAborted,'remMediaAck':remMediaAck,'remMediaAborted':remMediaAborted,'insertDSMediaInto':insertDSMediaInto,'removeMediaFrom':removeMediaFrom,'redirectBlk':redirectBlk,'couldNotRedirectBlk':couldNotRedirectBlk,'outOfHotFixBlks':outOfHotFixBlks,'fewRedirectionBlks':fewRedirectionBlks,'redirectInconsistNoFix':redirectInconsistNoFix,'redirectInconsistFix':redirectInconsistFix,'invalidResourceTagPassed':invalidResourceTagPassed,'checkAddHardware':checkAddHardware,'removeHardwareOptions':removeHardwareOptions,'errUnloadKilledNlm':errUnloadKilledNlm,'invldRrceTagPsedToCreatePrss':invldRrceTagPsedToCreatePrss,'createPrssReqtdStackTooSmall':createPrssReqtdStackTooSmall,'createPrssUnableToAllocPrssCntlBlk':createPrssUnableToAllocPrssCntlBlk,'filePreservationErrorDuringErase':filePreservationErrorDuringErase,'filePreservationErrorInsuffSpace':filePreservationErrorInsuffSpace,'mlidResetLanBd':mlidResetLanBd,'requestedRtrReset':requestedRtrReset,'volContainstheWrongDOSType':volContainstheWrongDOSType,'originalNameSpaceNotFound':originalNameSpaceNotFound,'rdTimeDataMigratorModuleChanged':rdTimeDataMigratorModuleChanged,'errCreateOpenTTSLogFile':errCreateOpenTTSLogFile,'errWriteOpenTTSLogFile':errWriteOpenTTSLogFile,'ttsDownbyVolDismount':ttsDownbyVolDismount,'disableTTSbyUser':disableTTSbyUser,'ttsDisabledByOperator':ttsDisabledByOperator,'ttsDisErrReadTTSduringBackout':ttsDisErrReadTTSduringBackout,'ttsDisErrWritingTTSduringBackout':ttsDisErrWritingTTSduringBackout,'ttsDisErrTooManyDefInfo':ttsDisErrTooManyDefInfo,'ttsDisErrWritingVolDefInfo':ttsDisErrWritingVolDefInfo,'ttsDisErrRdBlkFlRecGen':ttsDisErrRdBlkFlRecGen,'ttsDisGrowMemTables':ttsDisGrowMemTables,'ttsDisErrAllDiskSpace':ttsDisErrAllDiskSpace,'ttsDisDirErrOnBkFile':ttsDisDirErrOnBkFile,'enableTTSByUser':enableTTSByUser,'transactionAbortedForStation':transactionAbortedForStation,'ttsLimitExceeded':ttsLimitExceeded,'ttsNoMemForExpandingTxNodeTables':ttsNoMemForExpandingTxNodeTables,'auditEvent':auditEvent,'auditAlertThresholdOverFlow':auditAlertThresholdOverFlow,'auditAlertInvalidConfigFile':auditAlertInvalidConfigFile,'auditAlertNoMemory':auditAlertNoMemory,'auditFileWriteError':auditFileWriteError,'auditFileFull':auditFileFull,'invalidConnTypetoAllocConn':invalidConnTypetoAllocConn,'invalidRsrcTagPassedtoAllocConn':invalidRsrcTagPassedtoAllocConn,'outOfServerConn':outOfServerConn,'connTerminated5MinNotice':connTerminated5MinNotice,'usrAcctDisabledByAUsr':usrAcctDisabledByAUsr,'useOfUnEncryptedPwd':useOfUnEncryptedPwd,'supAcctLockoutClrdByConsole':supAcctLockoutClrdByConsole,'systemTimeChangedByConsole':systemTimeChangedByConsole,'systemTimeChangedByUser':systemTimeChangedByUser,'volDismountedDueToDriveDeact':volDismountedDueToDriveDeact,'rtrFalsehood':rtrFalsehood,'srvrAddrChanged':srvrAddrChanged,'extendFileHasNoOwnerToCharge':extendFileHasNoOwnerToCharge,'rtrConfigErr3':rtrConfigErr3,'rtrConfigErr2':rtrConfigErr2,'dataMgrtrNotLoadedWhenRequested':dataMgrtrNotLoadedWhenRequested,'noSpecificSupportModulesLoaded':noSpecificSupportModulesLoaded,'notEnoughRAMForComp':notEnoughRAMForComp,'diskErrorCompression':diskErrorCompression,'compressErrorHoleCountMismatch':compressErrorHoleCountMismatch,'unknownErrorCompression':unknownErrorCompression,'insufficientSpaceForDecompression':insufficientSpaceForDecompression,'decompUnknownCompVersion':decompUnknownCompVersion,'unknownErrorDecomp':unknownErrorDecomp,'insufficientDecompError':insufficientDecompError,'compFileCorrupted':compFileCorrupted,'rejectedIncompleteNCP':rejectedIncompleteNCP,'stationUsedABadPacket':stationUsedABadPacket,'rejectedNCPBadSubfunctionLngth':rejectedNCPBadSubfunctionLngth,'processedNCPBadSubfunctionLngth':processedNCPBadSubfunctionLngth,'compFilePathCorrupted':compFilePathCorrupted,'compFileInUse':compFileInUse,'nlmNoPriority':nlmNoPriority,'workToDo':workToDo,'compErrTempFileErr':compErrTempFileErr,'compErrLngthTotMismatch':compErrLngthTotMismatch,'compErrOffsetTotalsMismatch':compErrOffsetTotalsMismatch,'compErrDataCodeCountMismatch':compErrDataCodeCountMismatch,'compErrLthOffsetCodeCountMismatch':compErrLthOffsetCodeCountMismatch,'compErrLgrLngthCodeCountMismatch':compErrLgrLngthCodeCountMismatch,'compErrReadZeroBytesInt':compErrReadZeroBytesInt,'compErrTreeTooBig':compErrTreeTooBig,'compErrMatchSizeFail':compErrMatchSizeFail,'signatureInvalid':signatureInvalid,'licenseInvalid':licenseInvalid,'deactHotFix':deactHotFix,'unknownDecompressErrorWithName':unknownDecompressErrorWithName,'insufficientRamToDecompWithName':insufficientRamToDecompWithName,'decompressUnderFreePercentage':decompressUnderFreePercentage,'negPktLargeBuffer':negPktLargeBuffer,'loginDisabledByConsole':loginDisabledByConsole,'loginEnabledByConsole':loginEnabledByConsole,'growableStackNotAllocated':growableStackNotAllocated,'insertDSMediaAck':insertDSMediaAck,'insertMagazineAck':insertMagazineAck,'insertDSMediaAborted':insertDSMediaAborted,'insertMagazineAborted':insertMagazineAborted,'remDSMediaAck':remDSMediaAck,'remMagazineAck':remMagazineAck,'remDSMediaAborted':remDSMediaAborted,'remMagazineAborted':remMagazineAborted,'insertMagazineInto':insertMagazineInto,'removeDSMediaFrom':removeDSMediaFrom,'removeMagazineFrom':removeMagazineFrom,'moduleDidNotReleaseResources':moduleDidNotReleaseResources,'opnBinderyFailSinceVolNotMounted':opnBinderyFailSinceVolNotMounted,'binderyOpnReqtdByUsrFailed':binderyOpnReqtdByUsrFailed,'binderyOpnReqtdBySrvr':binderyOpnReqtdBySrvr,'binderyOpnReqtdByUsR':binderyOpnReqtdByUsR,'binderyClosedBySrvr':binderyClosedBySrvr,'binderyClosedByUsr':binderyClosedByUsr,'intruderLockout':intruderLockout,'dsOpenFailed':dsOpenFailed,'dsOpenFailedInconsistentDatabase':dsOpenFailedInconsistentDatabase,'dsopenSucceeded':dsopenSucceeded,'dsCloseSucceeded':dsCloseSucceeded,'skulkingError':skulkingError,'dsIntruderNoAddr':dsIntruderNoAddr,'domainQuarantined':domainQuarantined,'commandProcess':commandProcess,'remoteConnGranted':remoteConnGranted,'remoteConnCleared':remoteConnCleared,'remoteConnRefused':remoteConnRefused,'translatorUp':translatorUp,'translatorDown':translatorDown,'volAnyMounted':volAnyMounted,'volAnyDismounted':volAnyDismounted,'serverDownatServer':serverDownatServer,'protocolBound':protocolBound,'protocolUnBound':protocolUnBound,'moduleLoad':moduleLoad,'moduleUnLoad':moduleUnLoad,'mlidRegister':mlidRegister,'mlidUnRegister':mlidUnRegister,'clearConnection':clearConnection,'loginConnection':loginConnection,'nlmAlertCritical':nlmAlertCritical,'logoutConnection':logoutConnection,'usrAcctDeletedByAUsrSingleConn':usrAcctDeletedByAUsrSingleConn,'compErrReadZeroBytesOrig':compErrReadZeroBytesOrig,'diskDeactivated':diskDeactivated,'diskMounted':diskMounted,'redirectBlockMismatch':redirectBlockMismatch,'shortTermMemoryLimitExceeded':shortTermMemoryLimitExceeded,'semipermanentMemoryExhausted':semipermanentMemoryExhausted,'diskDismounted':diskDismounted,'diskAdded':diskAdded,'diskActivated':diskActivated,'generalTTSfailures':generalTTSfailures,'mirroredPartNotAllSynced':mirroredPartNotAllSynced,'reqtdRtrReset311':reqtdRtrReset311,'invalidSignatureString':invalidSignatureString,'invalidDuplicateSignature':invalidDuplicateSignature,'invalidPburstSignature':invalidPburstSignature,'failedToDeleteMigrateFile':failedToDeleteMigrateFile,'unsignedRemoteConnectionRefused':unsignedRemoteConnectionRefused,'unsignedRemoteConnectionGranted':unsignedRemoteConnectionGranted,'responsePacketNotAllocated':responsePacketNotAllocated,'wsNotLocated':wsNotLocated,'remoteConnectionTimedOut':remoteConnectionTimedOut,'modemConnectionCleared':modemConnectionCleared,'remoteConnectionClearedNameKnown':remoteConnectionClearedNameKnown,'callBackNumberNotReceived':callBackNumberNotReceived,'nlmUnableToOpenListFile':nlmUnableToOpenListFile,'nlmUnableToReadListFile':nlmUnableToReadListFile,'unauthorizedCallBackNumber':unauthorizedCallBackNumber,'modemClearedAndCallBackAttempted':modemClearedAndCallBackAttempted,'attmptngToEstblshCallBckConnectn':attmptngToEstblshCallBckConnectn,'remoteConnectionRefusedNameKnown':remoteConnectionRefusedNameKnown,'remoteConnectionGrantedNameKnown':remoteConnectionGrantedNameKnown,'modemConnectionEstablished':modemConnectionEstablished,'dsAuditFileWriteError':dsAuditFileWriteError,'dsAuditFileFull':dsAuditFileFull,'dsAuditFileThresholdOverflow':dsAuditFileThresholdOverflow,'dsAuditMemoryAllocation':dsAuditMemoryAllocation,'serverUp':serverUp,'volRestrictedSpace':volRestrictedSpace,'cannotInitialize':cannotInitialize,'cannotStart':cannotStart,'noSAPSocketTag':noSAPSocketTag,'noSAPSocket':noSAPSocket,'noSetableParameterTag':noSetableParameterTag,'noTimerTag':noTimerTag,'noAllocTag':noAllocTag,'noResourceTag':noResourceTag,'noProcessTag':noProcessTag,'noEventTag':noEventTag,'noGlobalInfo':noGlobalInfo,'noParseCommandLine':noParseCommandLine,'noTimeSyncNCPVariable':noTimeSyncNCPVariable,'cantAllocateMainStack':cantAllocateMainStack,'cantCreateMainProcess':cantCreateMainProcess,'syncRadiusLess':syncRadiusLess,'unrecognizedCommandLinePrmtr':unrecognizedCommandLinePrmtr,'unrecognizedCommandLineOption':unrecognizedCommandLineOption,'serverPolled':serverPolled,'singleSrvrIncompatible':singleSrvrIncompatible,'timeSyncLost':timeSyncLost,'timeSyncEstablished':timeSyncEstablished,'connTerminated':connTerminated,'connClearedByUsr':connClearedByUsr,'loginDisabled':loginDisabled,'downFileServer':downFileServer,'loginEnabled':loginEnabled,'errLogTransferErr':errLogTransferErr,'faultInConsoleCommandHandler':faultInConsoleCommandHandler,'commLinkActivated':commLinkActivated,'commLinkFailure':commLinkFailure,'commLinkDeactivated':commLinkDeactivated,'srvrAttemptedToSync':srvrAttemptedToSync,'commLinkBrokeOK':commLinkBrokeOK,'syncStartingAmSecondarySrvr':syncStartingAmSecondarySrvr,'badSrvrInitMsg':badSrvrInitMsg,'commLinkInitFailed':commLinkInitFailed,'failedDuringSync':failedDuringSync,'commDriverLoadedDuringActivate':commDriverLoadedDuringActivate,'errWritingStatusDump':errWritingStatusDump,'commDriverFailureOnPrimary':commDriverFailureOnPrimary,'commDriverFailureOnSecondary':commDriverFailureOnSecondary,'errFinishingGeneratingStatusDump':errFinishingGeneratingStatusDump,'sFTIIWhatToDoReasonString':sFTIIWhatToDoReasonString,'sFTIIErrorUnexpected':sFTIIErrorUnexpected,'syncErrorGeneratedFromCustomSrvr':syncErrorGeneratedFromCustomSrvr,'srvrLinkHasPluggedPacket':srvrLinkHasPluggedPacket,'srvrToBeRevived':srvrToBeRevived,'srvrsAreSyncedThisIsThePrimary':srvrsAreSyncedThisIsThePrimary,'srvrCantRouteViaIPXToSecondary':srvrCantRouteViaIPXToSecondary,'srvrIPXRouteInfoToSecondary':srvrIPXRouteInfoToSecondary,'errGivingRAMtoMSEngine':errGivingRAMtoMSEngine,'moreRAMgivenToMSEngine':moreRAMgivenToMSEngine,'srvrsAreSyncedThisIsTheSecondary':srvrsAreSyncedThisIsTheSecondary,'srvrCantRouteViaIPXToPrimary':srvrCantRouteViaIPXToPrimary,'srvrIPXRouteInfoToPrimary':srvrIPXRouteInfoToPrimary,'priSrvrFailedButSecDown':priSrvrFailedButSecDown,'priSrvrFailedNewPri':priSrvrFailedNewPri,'numMemSegsExceedLimit':numMemSegsExceedLimit,'numScreenExceedsLimit':numScreenExceedsLimit,'iOVersionMismatch':iOVersionMismatch,'srvrProtectLevelNoMatch':srvrProtectLevelNoMatch,'srvrScreenAddressMismatch':srvrScreenAddressMismatch,'iOEngineNotLoadedAtSameAddress':iOEngineNotLoadedAtSameAddress,'bothSrvrHaveActiveMSEngines':bothSrvrHaveActiveMSEngines,'noActiveMSEngineOnServers':noActiveMSEngineOnServers,'secSrvrMissingRAM':secSrvrMissingRAM,'bothSrvrHaveSameIPXAddr':bothSrvrHaveSameIPXAddr,'iOEngIPXAddrMatchesMSEngine':iOEngIPXAddrMatchesMSEngine,'iOEnginesMismatchLANRxBufferSize':iOEnginesMismatchLANRxBufferSize,'iOEnginesHaveSameName':iOEnginesHaveSameName,'noMemoryForIOEngineName':noMemoryForIOEngineName,'srvrToSrvrLinkBeginSync':srvrToSrvrLinkBeginSync,'mSEngineActivated':mSEngineActivated,'mSEngActivatedWillSyncWithOther':mSEngActivatedWillSyncWithOther,'iOtoMSCommBeingUnloaded':iOtoMSCommBeingUnloaded,'sFTIIIOutOfMsgCodes':sFTIIIOutOfMsgCodes,'secIOEngSupportModulesNotLoaded':secIOEngSupportModulesNotLoaded,'errXferDumpToSystem':errXferDumpToSystem,'failureCheckingPrimarySrvr':failureCheckingPrimarySrvr,'errStarting2ndProcessor':errStarting2ndProcessor,'srvrFailure':srvrFailure,'srvsSyncing':srvsSyncing,'mSLBoardNumberConnEstablished':mSLBoardNumberConnEstablished,'secSrvrLANIsBetter':secSrvrLANIsBetter,'iPXreturningStatusPackets':iPXreturningStatusPackets,'iPXnotReturningStatCheckPackets':iPXnotReturningStatCheckPackets,'iPXnotReturningStatPcktLANJammed':iPXnotReturningStatPcktLANJammed,'failReasonByOtherSrvr':failReasonByOtherSrvr,'iPXInternetIsJammed':iPXInternetIsJammed,'iPXTooSlowForSecSrvr':iPXTooSlowForSecSrvr,'otherSrvrTooManyHops':otherSrvrTooManyHops,'iPXappearsDown':iPXappearsDown,'iPXFoundRouteToOtherSrvr':iPXFoundRouteToOtherSrvr,'iPXNewRouteToSecSrvr':iPXNewRouteToSecSrvr,'iPXLostRoute':iPXLostRoute,'secSrvrGoingToDie':secSrvrGoingToDie,'priSrvrDyingTimerReStart':priSrvrDyingTimerReStart,'priSrvrDying':priSrvrDying,'noMemForOtherIOEngScreen':noMemForOtherIOEngScreen,'timesyncErrorMsg':timesyncErrorMsg,'dsAlertSetServerDown':dsAlertSetServerDown,'dsAlertSetServerUp':dsAlertSetServerUp,'redirectTableMismatch':redirectTableMismatch,'nlmAlertMajor':nlmAlertMajor,'nlmAlertMinor':nlmAlertMinor,'nlmAlertInformational':nlmAlertInformational,'trapinfo':trapinfo,_v:memoryAddress,_AJ:auditEventNumber,_A4:blockNumber,_AG:numberOfBlocks,_AQ:packetSize,_U:boardNumber,_b:codeOffset,_R:connectionNumber,_O:dataStreamNumber,_AC:diskSpace,_x:domainName,_A0:resourceDescription,_J:deviceName,'dosType':dosType,_h:errorNumber,_AT:exceptionName,_AU:eipAddress,_V:fileName,_Y:pathName,_Q:fileOffset,_i:ncpFunctionNumber,_T:fileSize,_AN:fileValue,'fileLength':fileLength,_AE:interruptNumber,_N:nlmName,_A3:mediaLabel,_W:message,_p:numberOfFailedMemoryAllocAttempts,_AS:numberOfResources,_K:networkAddress,_A1:numberOfFailedFileLockRequests,_a:processName,_P:partitionNumber,_A7:protocolName,_q:numberOfPackets,_z:resourceName,_A2:numberOfFailedRecordLockRequests,_B:serverName,_H:stationNumber,_g:networkAddress1,_j:ncpSubFunctionNumber,_l:nlmSeverity,_C:trapTime,_AH:taskNumber,_AI:numberOfTransactions,'serverTime':serverTime,_M:pathFileName,_F:userName,_G:volumeName,_S:volumeNumber,_k:lanDriverName,_w:routerName,_L:macAddress,_A5:macAddress1,_y:numberOfConnections,_r:socketNumber,_c:accountName,_d:fileMiscInfo,_A8:callBackNumber,'baudRate':baudRate,_s:objectName,_AD:userName1,'dosType1':dosType1,_AF:blockNumber1,_AK:internalNetworkAddress,_AL:internalNetworkAddress1,_A6:macAddress2,_Z:serverName1,_AM:socketNumber1,_e:fileMiscInfo1,_AO:fileSize1,_AP:fileSize2,_AR:packetSize1,_f:diskName,'reason':reason,'maximumPercent':maximumPercent,_n:iRamLength,_u:iTimerTicks,_AX:pollingLoops,_t:iHopsCount,_AW:synchronizationRadius,_A9:cmmndLnPrmtr,_AV:volumePercentage,_X:szReason,_m:iRamStart})