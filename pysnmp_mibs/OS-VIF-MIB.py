#
# PySNMP MIB module OS-VIF-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/rob/Code/pysnmp-mibs/mibs/mrv/OS-VIF-MIB
# Produced by pysmi-1.1.12 at Mon Aug  4 17:02:32 2025
# On host macmini.vegmond.io platform Darwin version 24.5.0 by user rob
# Using Python version 3.12.8 (main, Dec  3 2024, 18:42:41) [Clang 16.0.0 (clang-1600.0.26.4)]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
VlanIdOrNone, = mibBuilder.importSymbols("IEEE8021-CFM-MIB", "VlanIdOrNone")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
InetAddressType, InetAddress, InetAddressPrefixLength = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressType", "InetAddress", "InetAddressPrefixLength")
PortList, oaOptiSwitch = mibBuilder.importSymbols("OS-COMMON-TC-MIB", "PortList", "oaOptiSwitch")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, Integer32, Gauge32, ModuleIdentity, TimeTicks, NotificationType, Counter32, Bits, IpAddress, iso, ObjectIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "Integer32", "Gauge32", "ModuleIdentity", "TimeTicks", "NotificationType", "Counter32", "Bits", "IpAddress", "iso", "ObjectIdentity", "Counter64")
TextualConvention, DisplayString, TruthValue, MacAddress = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "MacAddress")
osVif = ModuleIdentity((1, 3, 6, 1, 4, 1, 6926, 2, 2))
osVif.setRevisions(('2020-08-27 00:00', '2019-12-26 00:00', '2019-03-11 00:00', '2017-10-15 00:00', '2014-10-21 00:00', '2012-05-23 00:00', '2008-01-08 00:00',))
if mibBuilder.loadTexts: osVif.setLastUpdated('202008270000Z')
if mibBuilder.loadTexts: osVif.setOrganization('MRV Communications, Inc.')
osVifNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 2, 0))
osVifGen = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 2, 1))
osVifMflgCfg = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 2, 11))
osVifConfigGrp = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 2, 99))
osVifConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 2, 101))
osVifMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 2, 101, 1))
osVifMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 2, 101, 2))
class IfnDevNo(TextualConvention, Unsigned32):
    status = 'current'
    displayHint = 'd'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 4095)

class VifEntryValidator(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2))
    namedValues = NamedValues(("valid", 1), ("invalid", 2))

class IfRowValidator(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(2, 3, 4, 5, 6))
    namedValues = NamedValues(("nothing", 2), ("delete", 3), ("create", 4), ("enable", 5), ("disable", 6))

osVifAddrTypesSupported = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 2, 1, 2), Bits().clone(namedValues=NamedValues(("ipv4", 0), ("ipv6", 1), ("ipv4z", 2), ("ipv6z", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osVifAddrTypesSupported.setStatus('current')
osVifLastError = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 2, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osVifLastError.setStatus('current')
osVifMflgMac = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 2, 1, 5), MacAddress()).setMaxAccess("accessiblefornotify")
if mibBuilder.loadTexts: osVifMflgMac.setStatus('current')
osVifMflgDetectOnly = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 2, 11, 1), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osVifMflgDetectOnly.setStatus('current')
osVifMflgTrustedPorts = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 2, 11, 2), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osVifMflgTrustedPorts.setStatus('current')
osVifMflgRecoveryDelay = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 2, 11, 3), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 60000), )).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osVifMflgRecoveryDelay.setStatus('current')
osVifMflgPortThreshold = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 2, 11, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 200), )).clone(20)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osVifMflgPortThreshold.setStatus('current')
osVifMflgPbEnabled = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 2, 11, 5), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osVifMflgPbEnabled.setStatus('current')
osVifMflgVbEnabled = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 2, 11, 6), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osVifMflgVbEnabled.setStatus('current')
osVifMflgEnabled = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 2, 11, 7), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osVifMflgEnabled.setStatus('current')
osVifTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2), )
if mibBuilder.loadTexts: osVifTable.setStatus('current')
osVifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1), ).setIndexNames((0, "OS-VIF-MIB", "osVifDevNo"))
if mibBuilder.loadTexts: osVifEntry.setStatus('current')
osVifDevNo = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 1), IfnDevNo())
if mibBuilder.loadTexts: osVifDevNo.setStatus('current')
osVifTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 2), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osVifTag.setStatus('current')
osVifPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 3), PortList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osVifPortList.setStatus('current')
osVifName = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osVifName.setStatus('current')
osVifDescr = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 80))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osVifDescr.setStatus('current')
osVifMtuProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 8)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osVifMtuProfile.setStatus('current')
osVifAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 7), IfRowValidator()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osVifAdminStatus.setStatus('current')
osVifLocked = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 8), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osVifLocked.setStatus('current')
osVifLastChange = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 9), TimeTicks()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osVifLastChange.setStatus('current')
osVifOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("active", 2), ("inactive", 3), ("activeAndDisabled", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osVifOperState.setStatus('current')
osVifIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 11), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osVifIfIndex.setStatus('current')
osVifIspTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 12), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osVifIspTag.setStatus('current')
osVifIspPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 13), PortList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osVifIspPortList.setStatus('current')
osVifMflgThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 200), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osVifMflgThreshold.setStatus('current')
osVifIsolatedPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 15), PortList()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osVifIsolatedPorts.setStatus('current')
osVifRecoverPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 16), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osVifRecoverPorts.setStatus('current')
osVifNatPfExternalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 17), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osVifNatPfExternalMode.setStatus('current')
osVifNatPfInternalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 2, 1, 18), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osVifNatPfInternalMode.setStatus('current')
osVifSlaTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 2, 3), )
if mibBuilder.loadTexts: osVifSlaTable.setStatus('current')
osVifSlaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 2, 3, 1), )
osVifEntry.registerAugmentions(("OS-VIF-MIB", "osVifSlaEntry"))
osVifSlaEntry.setIndexNames(*osVifEntry.getIndexNames())
if mibBuilder.loadTexts: osVifSlaEntry.setStatus('current')
osVifSlaSlaAvailable = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 3, 1, 8), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2))).clone(namedValues=NamedValues(("inService", 0), ("serviceTurnUp", 1), ("disabled", 2))).clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osVifSlaSlaAvailable.setStatus('current')
osVifSlaRespMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 3, 1, 9), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osVifSlaRespMac.setStatus('current')
osVifIpTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 2, 4), )
if mibBuilder.loadTexts: osVifIpTable.setStatus('current')
osVifIpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 2, 4, 1), ).setIndexNames((0, "OS-VIF-MIB", "osVifDevNo"), (0, "OS-VIF-MIB", "osVifAddressType"), (0, "OS-VIF-MIB", "osVifAddress"), (0, "OS-VIF-MIB", "osVifPrefixLength"))
if mibBuilder.loadTexts: osVifIpEntry.setStatus('current')
osVifAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 4, 1, 3), InetAddressType())
if mibBuilder.loadTexts: osVifAddressType.setStatus('current')
osVifAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 4, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: osVifAddress.setStatus('current')
osVifPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 4, 1, 5), InetAddressPrefixLength())
if mibBuilder.loadTexts: osVifPrefixLength.setStatus('current')
osVifIpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 4, 1, 6), VifEntryValidator()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osVifIpAdminStatus.setStatus('current')
osVifMgmtTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 2, 5), )
if mibBuilder.loadTexts: osVifMgmtTable.setStatus('current')
osVifMgmtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 2, 5, 1), ).setIndexNames((0, "OS-VIF-MIB", "osVifDevNo"), (0, "OS-VIF-MIB", "osVifMgmtProtocol"), (0, "OS-VIF-MIB", "osVifMgmtAddressType"), (0, "OS-VIF-MIB", "osVifMgmtAddress"), (0, "OS-VIF-MIB", "osVifMgmtPrefixLength"))
if mibBuilder.loadTexts: osVifMgmtEntry.setStatus('current')
osVifMgmtProtocol = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 5, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(22, 23, 69, 80, 161, 514, 830))).clone(namedValues=NamedValues(("ssh", 22), ("telnet", 23), ("tftp", 69), ("http", 80), ("snmp", 161), ("syslog", 514), ("netconf", 830))))
if mibBuilder.loadTexts: osVifMgmtProtocol.setStatus('current')
osVifMgmtAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 5, 1, 3), InetAddressType())
if mibBuilder.loadTexts: osVifMgmtAddressType.setStatus('current')
osVifMgmtAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 5, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )))
if mibBuilder.loadTexts: osVifMgmtAddress.setStatus('current')
osVifMgmtPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 5, 1, 5), InetAddressPrefixLength())
if mibBuilder.loadTexts: osVifMgmtPrefixLength.setStatus('current')
osVifMgmtAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 5, 1, 6), VifEntryValidator()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osVifMgmtAdminStatus.setStatus('current')
osDummyIfTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 2, 7), )
if mibBuilder.loadTexts: osDummyIfTable.setStatus('current')
osDummyIfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 2, 7, 1), ).setIndexNames((0, "OS-VIF-MIB", "osDummyIfDevNo"))
if mibBuilder.loadTexts: osDummyIfEntry.setStatus('current')
osDummyIfDevNo = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 7, 1, 1), IfnDevNo())
if mibBuilder.loadTexts: osDummyIfDevNo.setStatus('current')
osDummyIfIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 7, 1, 2), InterfaceIndex()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDummyIfIfIndex.setStatus('current')
osDummyIfAddressType = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 7, 1, 3), InetAddressType().clone('unknown')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDummyIfAddressType.setStatus('current')
osDummyIfAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 7, 1, 4), InetAddress().subtype(subtypeSpec=ConstraintsUnion(ValueSizeConstraint(4, 4), ValueSizeConstraint(16, 16), )).clone(hexValue="00000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDummyIfAddress.setStatus('current')
osDummyIfPrefixLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 7, 1, 5), InetAddressPrefixLength()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDummyIfPrefixLength.setStatus('current')
osDummyIfName = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 7, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 20))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDummyIfName.setStatus('current')
osDummyIfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 7, 1, 99), IfRowValidator().clone('enable')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDummyIfAdminStatus.setStatus('current')
osRtVifTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 2, 10), )
if mibBuilder.loadTexts: osRtVifTable.setStatus('current')
osRtVifEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 2, 10, 1), )
osVifEntry.registerAugmentions(("OS-VIF-MIB", "osRtVifEntry"))
osRtVifEntry.setIndexNames(*osVifEntry.getIndexNames())
if mibBuilder.loadTexts: osRtVifEntry.setStatus('current')
osRtVifLabelSwitching = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 2, 10, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 60000), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osRtVifLabelSwitching.setStatus('current')
osVifPortIsolation = NotificationType((1, 3, 6, 1, 4, 1, 6926, 2, 2, 0, 1)).setObjects(("OS-VIF-MIB", "osVifTag"), ("OS-VIF-MIB", "osVifMflgMac"))
if mibBuilder.loadTexts: osVifPortIsolation.setStatus('current')
osVifPortRecovery = NotificationType((1, 3, 6, 1, 4, 1, 6926, 2, 2, 0, 2)).setObjects(("OS-VIF-MIB", "osVifTag"))
if mibBuilder.loadTexts: osVifPortRecovery.setStatus('current')
osVifPortDetection = NotificationType((1, 3, 6, 1, 4, 1, 6926, 2, 2, 0, 3)).setObjects(("OS-VIF-MIB", "osVifTag"), ("OS-VIF-MIB", "osVifMflgMac"))
if mibBuilder.loadTexts: osVifPortDetection.setStatus('current')
osVifMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6926, 2, 2, 101, 1, 1)).setObjects(("OS-VIF-MIB", "osVifMandatoryGroup"), ("OS-VIF-MIB", "osVifNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    osVifMIBCompliance = osVifMIBCompliance.setStatus('current')
osVifMandatoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6926, 2, 2, 101, 2, 1)).setObjects(("OS-VIF-MIB", "osVifAddrTypesSupported"), ("OS-VIF-MIB", "osVifLastError"), ("OS-VIF-MIB", "osVifMflgMac"), ("OS-VIF-MIB", "osVifMflgDetectOnly"), ("OS-VIF-MIB", "osVifMflgTrustedPorts"), ("OS-VIF-MIB", "osVifMflgRecoveryDelay"), ("OS-VIF-MIB", "osVifMflgPortThreshold"), ("OS-VIF-MIB", "osVifMflgPbEnabled"), ("OS-VIF-MIB", "osVifMflgVbEnabled"), ("OS-VIF-MIB", "osVifMflgEnabled"), ("OS-VIF-MIB", "osVifTag"), ("OS-VIF-MIB", "osVifPortList"), ("OS-VIF-MIB", "osVifIspTag"), ("OS-VIF-MIB", "osVifIspPortList"), ("OS-VIF-MIB", "osVifName"), ("OS-VIF-MIB", "osVifDescr"), ("OS-VIF-MIB", "osVifMtuProfile"), ("OS-VIF-MIB", "osVifMflgThreshold"), ("OS-VIF-MIB", "osVifIsolatedPorts"), ("OS-VIF-MIB", "osVifRecoverPorts"), ("OS-VIF-MIB", "osVifNatPfExternalMode"), ("OS-VIF-MIB", "osVifNatPfInternalMode"), ("OS-VIF-MIB", "osVifAdminStatus"), ("OS-VIF-MIB", "osVifLocked"), ("OS-VIF-MIB", "osVifLastChange"), ("OS-VIF-MIB", "osVifOperState"), ("OS-VIF-MIB", "osVifIfIndex"), ("OS-VIF-MIB", "osVifSlaSlaAvailable"), ("OS-VIF-MIB", "osVifSlaRespMac"), ("OS-VIF-MIB", "osVifIpAdminStatus"), ("OS-VIF-MIB", "osVifMgmtAdminStatus"), ("OS-VIF-MIB", "osDummyIfIfIndex"), ("OS-VIF-MIB", "osDummyIfAddressType"), ("OS-VIF-MIB", "osDummyIfAddress"), ("OS-VIF-MIB", "osDummyIfPrefixLength"), ("OS-VIF-MIB", "osDummyIfName"), ("OS-VIF-MIB", "osDummyIfAdminStatus"), ("OS-VIF-MIB", "osRtVifLabelSwitching"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    osVifMandatoryGroup = osVifMandatoryGroup.setStatus('current')
osVifNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6926, 2, 2, 101, 2, 2)).setObjects(("OS-VIF-MIB", "osVifPortIsolation"), ("OS-VIF-MIB", "osVifPortRecovery"), ("OS-VIF-MIB", "osVifPortDetection"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    osVifNotificationsGroup = osVifNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("OS-VIF-MIB", osVifMgmtAdminStatus=osVifMgmtAdminStatus, osVifMgmtProtocol=osVifMgmtProtocol, osDummyIfAddress=osDummyIfAddress, osVifNotifications=osVifNotifications, osVifMflgVbEnabled=osVifMflgVbEnabled, osVifLastError=osVifLastError, osDummyIfPrefixLength=osDummyIfPrefixLength, osVifMgmtEntry=osVifMgmtEntry, osDummyIfTable=osDummyIfTable, osVifSlaSlaAvailable=osVifSlaSlaAvailable, osVif=osVif, osVifIsolatedPorts=osVifIsolatedPorts, osVifMflgPortThreshold=osVifMflgPortThreshold, osRtVifTable=osRtVifTable, osVifIspPortList=osVifIspPortList, osVifPortDetection=osVifPortDetection, osRtVifLabelSwitching=osRtVifLabelSwitching, osVifOperState=osVifOperState, osVifMflgPbEnabled=osVifMflgPbEnabled, osVifPortRecovery=osVifPortRecovery, osVifMtuProfile=osVifMtuProfile, osVifIfIndex=osVifIfIndex, osVifMgmtTable=osVifMgmtTable, osVifDescr=osVifDescr, osVifDevNo=osVifDevNo, osVifTag=osVifTag, osVifMgmtAddressType=osVifMgmtAddressType, osVifAddrTypesSupported=osVifAddrTypesSupported, osVifMIBCompliances=osVifMIBCompliances, osDummyIfAdminStatus=osDummyIfAdminStatus, osVifAdminStatus=osVifAdminStatus, osVifAddressType=osVifAddressType, osDummyIfName=osDummyIfName, IfnDevNo=IfnDevNo, osVifMIBGroups=osVifMIBGroups, osVifMflgEnabled=osVifMflgEnabled, osVifSlaRespMac=osVifSlaRespMac, osVifPortIsolation=osVifPortIsolation, osVifMgmtPrefixLength=osVifMgmtPrefixLength, osVifLastChange=osVifLastChange, osDummyIfEntry=osDummyIfEntry, osVifSlaTable=osVifSlaTable, PYSNMP_MODULE_ID=osVif, osVifConfigGrp=osVifConfigGrp, osVifMflgThreshold=osVifMflgThreshold, osVifAddress=osVifAddress, osVifMflgMac=osVifMflgMac, osVifNatPfExternalMode=osVifNatPfExternalMode, osVifIpEntry=osVifIpEntry, osDummyIfAddressType=osDummyIfAddressType, osVifNotificationsGroup=osVifNotificationsGroup, VifEntryValidator=VifEntryValidator, osVifGen=osVifGen, osVifMflgTrustedPorts=osVifMflgTrustedPorts, osVifIpTable=osVifIpTable, osVifPrefixLength=osVifPrefixLength, osVifEntry=osVifEntry, osVifName=osVifName, osVifMandatoryGroup=osVifMandatoryGroup, osVifMflgDetectOnly=osVifMflgDetectOnly, osVifLocked=osVifLocked, osVifMflgRecoveryDelay=osVifMflgRecoveryDelay, osVifNatPfInternalMode=osVifNatPfInternalMode, IfRowValidator=IfRowValidator, osVifMgmtAddress=osVifMgmtAddress, osVifIpAdminStatus=osVifIpAdminStatus, osVifPortList=osVifPortList, osVifMflgCfg=osVifMflgCfg, osVifTable=osVifTable, osVifIspTag=osVifIspTag, osVifConformance=osVifConformance, osRtVifEntry=osRtVifEntry, osVifRecoverPorts=osVifRecoverPorts, osVifSlaEntry=osVifSlaEntry, osDummyIfDevNo=osDummyIfDevNo, osDummyIfIfIndex=osDummyIfIfIndex, osVifMIBCompliance=osVifMIBCompliance)
