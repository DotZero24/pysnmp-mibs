# PySNMP SMI module. Autogenerated from smidump -f python APPC-MIB
# by libsmi2pysnmp-0.0.4-alpha at Tue Jun 28 11:30:36 2005,
# Python version (2, 4, 0, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pyasn1.type import constraint, namedval

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( snanauMIB, ) = mibBuilder.importSymbols("SNA-NAU-MIB", "snanauMIB")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Counter32, Gauge32, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibVariable, MibTable, MibTableRow, MibTableColumn, TimeTicks, TimeTicks, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Gauge32", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibVariable", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "TimeTicks", "mib-2")
( DateAndTime, DisplayString, InstancePointer, TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "DisplayString", "InstancePointer", "TextualConvention")

# Types

class SnaSenseData(DisplayString):
    subtypeSpec = DisplayString.subtypeSpec+constraint.ValueSizeConstraint(8,8)
    pass


# Objects

appcMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 34, 3))
appcObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1))
appcGlobal = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 1))
appcCntrlAdminGroup = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 1))
appcCntrlAdminStat = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 1, 1), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("notActive", 1), ("active", 2), ))).setMaxAccess("readwrite")
appcCntrlAdminRscv = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 1, 2), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("notActive", 1), ("active", 2), ))).setMaxAccess("readwrite")
appcCntrlAdminTrace = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 1, 3), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("notActive", 1), ("active", 2), ))).setMaxAccess("readwrite")
appcCntrlAdminTraceParm = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 1, 4), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 128))).setMaxAccess("readwrite")
appcCntrlOperGroup = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 2))
appcCntrlOperStat = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 2, 1), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("notActive", 1), ("active", 2), ))).setMaxAccess("readonly")
appcCntrlOperStatTime = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 2, 2), TimeTicks()).setMaxAccess("readonly")
appcCntrlOperRscv = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 2, 3), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("notActive", 1), ("active", 2), ))).setMaxAccess("readonly")
appcCntrlOperRscvTime = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 2, 4), TimeTicks()).setMaxAccess("readonly")
appcCntrlOperTrace = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 2, 5), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("notActive", 1), ("active", 2), ))).setMaxAccess("readonly")
appcCntrlOperTraceTime = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 2, 6), TimeTicks()).setMaxAccess("readonly")
appcCntrlOperTraceParm = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 2, 7), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 128))).setMaxAccess("readonly")
appcGlobalObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3))
appcUpTime = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 1), TimeTicks()).setMaxAccess("readonly")
appcDefaultModeName = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 2), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
appcDefaultLuName = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 3), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("readonly")
appcDefaultImplInbndPlu = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 4), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly")
appcDefaultMaxMcLlSndSize = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 5), Integer32()).setMaxAccess("readonly")
appcDefaultFileSpec = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 6), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 80))).setMaxAccess("readonly")
appcDefaultTpOperation = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 7), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(4,3,5,1,2,)).subtype(namedValues=namedval.NamedValues(("other", 1), ("queuedOperatorStarted", 2), ("queuedOperatorPreloaded", 3), ("queuedAmStarted", 4), ("nonqueuedAmStarted", 5), ))).setMaxAccess("readonly")
appcDefaultTpConvSecRqd = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 8), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly")
appcLocalCpName = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 9), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 17))).setMaxAccess("readonly")
appcActiveSessions = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 10), Gauge32()).setMaxAccess("readonly")
appcActiveHprSessions = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 3, 11), Gauge32()).setMaxAccess("readonly")
appcCnosControl = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4))
appcCnosCommand = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 1), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,3,)).subtype(namedValues=namedval.NamedValues(("initSesslimit", 1), ("changeSesslimit", 2), ("resetSesslimit", 3), ))).setMaxAccess("readwrite")
appcCnosMaxSessLimit = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 2), Integer32().clone(0)).setMaxAccess("readwrite")
appcCnosMinCwinLimit = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 3), Integer32().clone(0)).setMaxAccess("readwrite")
appcCnosMinClosLimit = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 4), Integer32().clone(0)).setMaxAccess("readwrite")
appcCnosDrainSelf = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 5), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), )).clone(1)).setMaxAccess("readwrite")
appcCnosDrainPart = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 6), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), )).clone(2)).setMaxAccess("readwrite")
appcCnosResponsible = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 7), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("source", 1), ("target", 2), )).clone(1)).setMaxAccess("readwrite")
appcCnosForce = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 8), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), )).clone(1)).setMaxAccess("readwrite")
appcCnosTargetLocLuName = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 9), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("readwrite")
appcCnosTargetParLuName = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 10), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("readwrite")
appcCnosTargetModeName = MibVariable((1, 3, 6, 1, 2, 1, 34, 3, 1, 1, 4, 11), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 8))).setMaxAccess("readwrite")
appcLu = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 2))
appcLluAdminTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1))
appcLluAdminEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1)).setIndexNames((0, "APPC-MIB", "appcLluAdminName"))
appcLluAdminName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 1)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcLluAdminDepType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 2)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("dependent", 1), ("independent", 2), ))).setMaxAccess("readonly"))
appcLluAdminLocalAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 3)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 1))).setMaxAccess("readonly"))
appcLluAdminSessLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 4)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcLluAdminBindRspMayQ = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 5)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly"))
appcLluAdminCompression = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 6)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,3,)).subtype(namedValues=namedval.NamedValues(("prohibited", 1), ("required", 2), ("negotiable", 3), ))).setMaxAccess("readonly"))
appcLluAdminInBoundCompLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 7)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,2,4,5,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("rle", 2), ("lz9", 3), ("lz10", 4), ("lz12", 5), ))).setMaxAccess("readonly"))
appcLluAdminOutBoundCompLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 8)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,2,4,5,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("rle", 2), ("lz9", 3), ("lz10", 4), ("lz12", 5), ))).setMaxAccess("readonly"))
appcLluAdminCompRleBeforeLZ = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 9)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly"))
appcLluAdminAlias = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 1, 1, 10)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 8))).setMaxAccess("readonly"))
appcLluOperTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2))
appcLluOperEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1)).setIndexNames((0, "APPC-MIB", "appcLluOperName"))
appcLluOperName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 1)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcLluOperDepType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 2)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("dependent", 1), ("independent", 2), ))).setMaxAccess("readonly"))
appcLluOperLocalAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 3)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 1))).setMaxAccess("readonly"))
appcLluOperSessLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 4)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcLluOperBindRspMayQ = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 5)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly"))
appcLluOperCompression = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 6)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,3,)).subtype(namedValues=namedval.NamedValues(("prohibited", 1), ("required", 2), ("negotiable", 3), ))).setMaxAccess("readonly"))
appcLluOperInBoundCompLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 7)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,2,4,5,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("rle", 2), ("lz9", 3), ("lz10", 4), ("lz12", 5), ))).setMaxAccess("readonly"))
appcLluOperOutBoundCompLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 8)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,2,4,5,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("rle", 2), ("lz9", 3), ("lz10", 4), ("lz12", 5), ))).setMaxAccess("readonly"))
appcLluOperCompRleBeforeLZ = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 9)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly"))
appcLluOperAlias = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 10)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 8))).setMaxAccess("readonly"))
appcLluOperActiveSessions = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 2, 1, 11)).setColumnInitializer(MibVariable((), Gauge32()).setMaxAccess("readonly"))
appcLuPairAdminTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3))
appcLuPairAdminEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1)).setIndexNames((0, "APPC-MIB", "appcLuPairAdminLocLuName"), (0, "APPC-MIB", "appcLuPairAdminParLuName"))
appcLuPairAdminLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1, 1)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcLuPairAdminParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1, 2)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcLuPairAdminParLuAlias = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1, 3)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 8))).setMaxAccess("readonly"))
appcLuPairAdminSessLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1, 4)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcLuPairAdminSessSec = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1, 5)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,2,1,)).subtype(namedValues=namedval.NamedValues(("required", 1), ("accepted", 2), ("notAllowed", 3), ))).setMaxAccess("readonly"))
appcLuPairAdminSecAccept = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1, 6)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,3,2,5,4,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("conversation", 2), ("alreadyVerified", 3), ("persistentVerification", 4), ("aVandpV", 5), ))).setMaxAccess("readonly"))
appcLuPairAdminLinkObjId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1, 7)).setColumnInitializer(MibVariable((), InstancePointer()).setMaxAccess("readonly"))
appcLuPairAdminParaSessSup = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 3, 1, 8)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly"))
appcLuPairOperTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4))
appcLuPairOperEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1)).setIndexNames((0, "APPC-MIB", "appcLuPairOperLocLuName"), (0, "APPC-MIB", "appcLuPairOperParLuName"))
appcLuPairOperLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 1)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcLuPairOperParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 2)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcLuPairOperParLuAlias = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 3)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 8))).setMaxAccess("readonly"))
appcLuPairOperSessLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 4)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcLuPairOperSessSec = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 5)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,2,1,)).subtype(namedValues=namedval.NamedValues(("required", 1), ("accepted", 2), ("notAllowed", 3), ))).setMaxAccess("readonly"))
appcLuPairOperSecAccept = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 6)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,3,2,5,4,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("conversation", 2), ("alreadyVerified", 3), ("persistentVerification", 4), ("aVandpV", 5), ))).setMaxAccess("readonly"))
appcLuPairOperLinkObjId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 7)).setColumnInitializer(MibVariable((), InstancePointer()).setMaxAccess("readonly"))
appcLuPairOperParaSessSup = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 8)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly"))
appcLuPairOperParaSessSupLS = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 9)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly"))
appcLuPairOperState = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 4, 1, 10)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("inactive", 1), ("active", 2), ))).setMaxAccess("readonly"))
appcModeAdminTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5))
appcModeAdminEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1)).setIndexNames((0, "APPC-MIB", "appcModeAdminLocLuName"), (0, "APPC-MIB", "appcModeAdminParLuName"), (0, "APPC-MIB", "appcModeAdminModeName"))
appcModeAdminLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 1)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcModeAdminParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 2)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcModeAdminModeName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 3)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 8))).setMaxAccess("noaccess"))
appcModeAdminCosName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 4)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 8))).setMaxAccess("readonly"))
appcModeAdminSessEndTpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 5)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 64))).setMaxAccess("readonly"))
appcModeAdminMaxSessLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 6)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeAdminMinCwinLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 7)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeAdminMinClosLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 8)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeAdminConWinAutoActLmt = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 9)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeAdminRecvPacWinSz = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 10)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeAdminSendPacWinSz = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 11)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeAdminPrefRecvRuSz = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 12)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeAdminPrefSendRuSz = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 13)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeAdminRecvRuSzUpBnd = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 14)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeAdminSendRuSzUpBnd = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 15)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeAdminRecvRuSzLoBnd = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 16)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeAdminSendRuSzLoBnd = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 17)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeAdminSingSessReinit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 18)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,4,2,5,1,)).subtype(namedValues=namedval.NamedValues(("notApplicable", 1), ("operatorControlled", 2), ("primaryOnly", 3), ("secondaryOnly", 4), ("primaryOrSecondary", 5), ))).setMaxAccess("readonly"))
appcModeAdminCompression = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 19)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,3,)).subtype(namedValues=namedval.NamedValues(("prohibited", 1), ("required", 2), ("negotiable", 3), ))).setMaxAccess("readonly"))
appcModeAdminInBoundCompLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 20)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,2,4,5,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("rle", 2), ("lz9", 3), ("lz10", 4), ("lz12", 5), ))).setMaxAccess("readonly"))
appcModeAdminOutBoundCompLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 21)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,2,4,5,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("rle", 2), ("lz9", 3), ("lz10", 4), ("lz12", 5), ))).setMaxAccess("readonly"))
appcModeAdminCompRleBeforeLZ = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 22)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly"))
appcModeAdminSyncLvl = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 23)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,3,2,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("noneConfirm", 2), ("noneConfirmSyncPoint", 3), ))).setMaxAccess("readonly"))
appcModeAdminCrypto = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 5, 1, 24)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,3,)).subtype(namedValues=namedval.NamedValues(("notSupported", 1), ("mandatory", 2), ("selective", 3), ))).setMaxAccess("readonly"))
appcModeOperTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6))
appcModeOperEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1)).setIndexNames((0, "APPC-MIB", "appcModeOperLocLuName"), (0, "APPC-MIB", "appcModeOperParLuName"), (0, "APPC-MIB", "appcModeOperModeName"))
appcModeOperLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 1)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcModeOperParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 2)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcModeOperModeName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 3)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 8))).setMaxAccess("noaccess"))
appcModeOperCosName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 4)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 8))).setMaxAccess("readonly"))
appcModeOperSessEndTpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 5)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 64))).setMaxAccess("readonly"))
appcModeOperSessLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 6)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeOperMaxSessLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 7)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeOperMinCwinLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 8)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeOperMinClosLimit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 9)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeOperConWinAutoActLmt = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 10)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeOperRecvPacWinSz = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 11)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeOperSendPacWinSz = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 12)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeOperPrefRecvRuSz = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 13)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeOperPrefSendRuSz = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 14)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeOperRecvRuSzUpBnd = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 15)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeOperSendRuSzUpBnd = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 16)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeOperRecvRuSzLoBnd = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 17)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeOperSendRuSzLoBnd = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 18)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcModeOperSingSessReinit = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 19)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,4,2,5,1,)).subtype(namedValues=namedval.NamedValues(("notApplicable", 1), ("operatorControlled", 2), ("primaryOnly", 3), ("secondaryOnly", 4), ("primaryOrSecondary", 5), ))).setMaxAccess("readonly"))
appcModeOperCompression = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 20)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,3,)).subtype(namedValues=namedval.NamedValues(("prohibited", 1), ("required", 2), ("negotiable", 3), ))).setMaxAccess("readonly"))
appcModeOperInBoundCompLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 21)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,2,4,5,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("rle", 2), ("lz9", 3), ("lz10", 4), ("lz12", 5), ))).setMaxAccess("readonly"))
appcModeOperOutBoundCompLevel = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 22)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,2,4,5,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("rle", 2), ("lz9", 3), ("lz10", 4), ("lz12", 5), ))).setMaxAccess("readonly"))
appcModeOperCompRleBeforeLZ = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 23)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly"))
appcModeOperSyncLvl = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 24)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,3,2,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("noneConfirm", 2), ("noneConfirmSyncPoint", 3), ))).setMaxAccess("readonly"))
appcModeOperCrypto = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 25)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,3,)).subtype(namedValues=namedval.NamedValues(("notSupported", 1), ("mandatory", 2), ("selective", 3), ))).setMaxAccess("readonly"))
appcModeOperSyncLvlLastStart = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 26)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,3,2,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("noneConfirm", 2), ("noneConfirmSyncPoint", 3), ))).setMaxAccess("readonly"))
appcModeOperCryptoLastStart = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 27)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,3,)).subtype(namedValues=namedval.NamedValues(("notSupported", 1), ("mandatory", 2), ("selective", 3), ))).setMaxAccess("readonly"))
appcModeOperCNOSNeg = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 28)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly"))
appcModeOperActCwin = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 29)).setColumnInitializer(MibVariable((), Gauge32()).setMaxAccess("readonly"))
appcModeOperActClos = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 30)).setColumnInitializer(MibVariable((), Gauge32()).setMaxAccess("readonly"))
appcModeOperPndCwin = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 31)).setColumnInitializer(MibVariable((), Gauge32()).setMaxAccess("readonly"))
appcModeOperPndClos = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 32)).setColumnInitializer(MibVariable((), Gauge32()).setMaxAccess("readonly"))
appcModeOperPtmCwin = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 33)).setColumnInitializer(MibVariable((), Gauge32()).setMaxAccess("readonly"))
appcModeOperPtmClos = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 34)).setColumnInitializer(MibVariable((), Gauge32()).setMaxAccess("readonly"))
appcModeOperDrainSelf = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 35)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly"))
appcModeOperDrainPart = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 2, 6, 1, 36)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly"))
appcTp = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 3))
appcTpAdminTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1))
appcTpAdminEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1)).setIndexNames((0, "APPC-MIB", "appcTpAdminLocLuName"), (0, "APPC-MIB", "appcTpAdminTpName"))
appcTpAdminLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 1)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcTpAdminTpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 2)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 64))).setMaxAccess("noaccess"))
appcTpAdminFileSpec = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 3)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 80))).setMaxAccess("readonly"))
appcTpAdminStartParm = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 4)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 128))).setMaxAccess("readonly"))
appcTpAdminTpOperation = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 5)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(4,3,5,1,2,)).subtype(namedValues=namedval.NamedValues(("other", 1), ("queuedOperatorStarted", 2), ("queuedOperatorPreloaded", 3), ("queuedAmStarted", 4), ("nonqueuedAmStarted", 5), ))).setMaxAccess("readonly"))
appcTpAdminInAttachTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 6)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcTpAdminRcvAllocTimeout = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 7)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcTpAdminSyncLvl = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 8)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,6,2,4,7,5,3,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("confirm", 2), ("noneAndConfirm", 3), ("syncpoint", 4), ("noneAndSyncpoint", 5), ("confirmAndSyncpoint", 6), ("all", 7), ))).setMaxAccess("readonly"))
appcTpAdminInstLmt = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 9)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcTpAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 10)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,3,2,)).subtype(namedValues=namedval.NamedValues(("enabled", 1), ("tempDisabled", 2), ("permDisabled", 3), ))).setMaxAccess("readonly"))
appcTpAdminLongRun = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 11)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly"))
appcTpAdminConvType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 12)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,3,)).subtype(namedValues=namedval.NamedValues(("basic", 1), ("mapped", 2), ("basicOrMapped", 3), ))).setMaxAccess("readonly"))
appcTpAdminConvDuplex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 13)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,3,2,)).subtype(namedValues=namedval.NamedValues(("half", 1), ("full", 2), ("halfOrFull", 3), ))).setMaxAccess("readonly"))
appcTpAdminConvSecReq = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 14)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly"))
appcTpAdminVerPip = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 15)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly"))
appcTpAdminPipSubNum = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 3, 1, 1, 16)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
appcSession = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 4))
appcActSessTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1))
appcActSessEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1)).setIndexNames((0, "APPC-MIB", "appcActSessLocLuName"), (0, "APPC-MIB", "appcActSessParLuName"), (0, "APPC-MIB", "appcActSessIndex"))
appcActSessLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 1)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcActSessParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 2)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcActSessIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 3)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("noaccess"))
appcActSessPcidCpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 4)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(3, 17))).setMaxAccess("readonly"))
appcActSessPcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 5)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(8, 8))).setMaxAccess("readonly"))
appcActSessPluIndicator = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 6)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("localLuIsPlu", 1), ("partnerLuIsPlu", 2), ))).setMaxAccess("readonly"))
appcActSessModeName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 7)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 8))).setMaxAccess("readonly"))
appcActSessCosName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 8)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 8))).setMaxAccess("readonly"))
appcActSessTransPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 9)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,5,1,4,2,)).subtype(namedValues=namedval.NamedValues(("unknown", 1), ("low", 2), ("medium", 3), ("high", 4), ("network", 5), ))).setMaxAccess("readonly"))
appcActSessEnhanceSecSup = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 10)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,3,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("level1", 2), ("level2", 3), ))).setMaxAccess("readonly"))
appcActSessSendPacingType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 11)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,3,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("fixed", 2), ("adaptive", 3), ))).setMaxAccess("readonly"))
appcActSessSendRpc = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 12)).setColumnInitializer(MibVariable((), Gauge32()).setMaxAccess("readonly"))
appcActSessSendNxWndwSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 13)).setColumnInitializer(MibVariable((), Gauge32()).setMaxAccess("readonly"))
appcActSessRecvPacingType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 14)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,3,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("fixed", 2), ("adaptive", 3), ))).setMaxAccess("readonly"))
appcActSessRecvRpc = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 15)).setColumnInitializer(MibVariable((), Gauge32()).setMaxAccess("readonly"))
appcActSessRecvNxWndwSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 16)).setColumnInitializer(MibVariable((), Gauge32()).setMaxAccess("readonly"))
appcActSessRscv = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 17)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 255))).setMaxAccess("readonly"))
appcActSessInUse = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 18)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), ))).setMaxAccess("readonly"))
appcActSessMaxSndRuSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 19)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 8192))).setMaxAccess("readonly"))
appcActSessMaxRcvRuSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 20)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 8192))).setMaxAccess("readonly"))
appcActSessSndPacingSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 21)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 63))).setMaxAccess("readonly"))
appcActSessRcvPacingSize = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 22)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 63))).setMaxAccess("readonly"))
appcActSessOperState = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 23)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(4,2,1,3,)).subtype(namedValues=namedval.NamedValues(("unbound", 1), ("pendingBind", 2), ("bound", 3), ("pendingUnbind", 4), ))).setMaxAccess("readwrite"))
appcActSessUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 24)).setColumnInitializer(MibVariable((), TimeTicks()).setMaxAccess("readonly"))
appcActSessRtpNceId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 25)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 8))).setMaxAccess("readonly"))
appcActSessRtpTcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 26)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(8, 8))).setMaxAccess("readonly"))
appcActSessLinkIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 1, 1, 27)).setColumnInitializer(MibVariable((), InstancePointer()).setMaxAccess("readonly"))
appcSessStatsTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2))
appcSessStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1)).setIndexNames((0, "APPC-MIB", "appcSessStatsLocLuName"), (0, "APPC-MIB", "appcSessStatsParLuName"), (0, "APPC-MIB", "appcSessStatsSessIndex"))
appcSessStatsLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 1)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcSessStatsParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 2)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcSessStatsSessIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 3)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("noaccess"))
appcSessStatsSentFmdBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 4)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
appcSessStatsSentNonFmdBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 5)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
appcSessStatsRcvdFmdBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 6)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
appcSessStatsRcvdNonFmdBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 7)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
appcSessStatsSentFmdRus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 8)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
appcSessStatsSentNonFmdRus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 9)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
appcSessStatsRcvdFmdRus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 10)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
appcSessStatsRcvdNonFmdRus = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 11)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
appcSessStatsCtrUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 2, 1, 12)).setColumnInitializer(MibVariable((), TimeTicks()).setMaxAccess("readonly"))
appcHistSessTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3))
appcHistSessEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1)).setIndexNames((0, "APPC-MIB", "appcHistSessIndex"))
appcHistSessIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 1)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("noaccess"))
appcHistSessTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 2)).setColumnInitializer(MibVariable((), DateAndTime()).setMaxAccess("readonly"))
appcHistSessType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 3)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,4,2,3,5,)).subtype(namedValues=namedval.NamedValues(("recvNegBindRsp", 1), ("sendNegBindRsp", 2), ("sessActRejected", 3), ("unbindSent", 4), ("unbindReceived", 5), ))).setMaxAccess("readonly"))
appcHistSessLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 4)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("readonly"))
appcHistSessParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 5)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(3, 17))).setMaxAccess("readonly"))
appcHistSessModeName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 6)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 8))).setMaxAccess("readonly"))
appcHistSessUnbindType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 7)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 1))).setMaxAccess("readonly"))
appcHistSessSenseData = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 8)).setColumnInitializer(MibVariable((), SnaSenseData()).setMaxAccess("readonly"))
appcHistSessComponentId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 9)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 32))).setMaxAccess("readonly"))
appcHistSessDetectModule = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 3, 1, 10)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 32))).setMaxAccess("readonly"))
appcSessRtpTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 4))
appcSessRtpEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 4, 1)).setIndexNames((0, "APPC-MIB", "appcSessRtpNceId"), (0, "APPC-MIB", "appcSessRtpTcid"))
appcSessRtpNceId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 4, 1, 1)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 8))).setMaxAccess("noaccess"))
appcSessRtpTcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 4, 1, 2)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(8, 8))).setMaxAccess("noaccess"))
appcSessRtpSessions = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 4, 4, 1, 3)).setColumnInitializer(MibVariable((), Gauge32()).setMaxAccess("readonly"))
appcConversation = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 5))
appcActiveConvTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1))
appcActiveConvEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1)).setIndexNames((0, "APPC-MIB", "appcActiveConvLocLuName"), (0, "APPC-MIB", "appcActiveConvParLuName"), (0, "APPC-MIB", "appcActiveConvSessIndex"))
appcActiveConvLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 1)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcActiveConvParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 2)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcActiveConvSessIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 3)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("noaccess"))
appcActiveConvId = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 4)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(4, 4))).setMaxAccess("readonly"))
appcActiveConvState = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 5)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,5,9,13,7,10,4,3,2,14,17,11,12,16,8,15,6,)).subtype(namedValues=namedval.NamedValues(("reset", 1), ("sendOnly", 10), ("receiveOnly", 11), ("deferReceive", 12), ("deferDeallocate", 13), ("syncpoint", 14), ("syncpointSend", 15), ("syncpointDeallocate", 16), ("backoutRequired", 17), ("send", 2), ("receive", 3), ("confirm", 4), ("confirmSend", 5), ("confirmDealloc", 6), ("pendingDeallocate", 7), ("pendingPost", 8), ("sendReceive", 9), ))).setMaxAccess("readonly"))
appcActiveConvType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 6)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("basic", 1), ("mapped", 2), ))).setMaxAccess("readonly"))
appcActiveConvCorrelator = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 7)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 8))).setMaxAccess("readonly"))
appcActiveConvSyncLvl = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 8)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,3,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("confirm", 2), ("syncpt", 3), ))).setMaxAccess("readonly"))
appcActiveConvSource = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 9)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("localLu", 1), ("partnerLu", 2), ))).setMaxAccess("readonly"))
appcActiveConvDuplex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 10)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("half", 1), ("full", 2), ))).setMaxAccess("readonly"))
appcActiveConvUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 11)).setColumnInitializer(MibVariable((), TimeTicks()).setMaxAccess("readonly"))
appcActiveConvSendBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 12)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
appcActiveConvRcvBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 13)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
appcActiveConvUserid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 14)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 10))).setMaxAccess("readonly"))
appcActiveConvPcidNauName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 15)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(3, 17))).setMaxAccess("readonly"))
appcActiveConvPcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 16)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(8, 8))).setMaxAccess("readonly"))
appcActiveConvModeName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 17)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 8))).setMaxAccess("readonly"))
appcActiveConvLuwIdName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 18)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("readonly"))
appcActiveConvLuwIdInstance = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 19)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 6))).setMaxAccess("readonly"))
appcActiveConvLuwIdSequence = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 20)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 2))).setMaxAccess("readonly"))
appcActiveConvTpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 1, 1, 21)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 64))).setMaxAccess("readonly"))
appcHistConvTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2))
appcHistConvEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1)).setIndexNames((0, "APPC-MIB", "appcHistConvIndex"))
appcHistConvIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 1)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("noaccess"))
appcHistConvEndTime = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 2)).setColumnInitializer(MibVariable((), DateAndTime()).setMaxAccess("readonly"))
appcHistConvLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 3)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("readonly"))
appcHistConvParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 4)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("readonly"))
appcHistConvTpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 5)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 64))).setMaxAccess("readonly"))
appcHistConvPcidNauName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 6)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(3, 17))).setMaxAccess("readonly"))
appcHistConvPcid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 7)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(8, 8))).setMaxAccess("readonly"))
appcHistConvSenseData = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 8)).setColumnInitializer(MibVariable((), SnaSenseData()).setMaxAccess("readonly"))
appcHistConvLogData = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 9)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 32))).setMaxAccess("readonly"))
appcHistConvEndedBy = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 5, 2, 1, 10)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("localLu", 1), ("partnerLu", 2), ))).setMaxAccess("readonly"))
appcCPIC = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 1, 6))
appcCpicAdminTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1))
appcCpicAdminEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1)).setIndexNames((0, "APPC-MIB", "appcCpicAdminLocLuName"), (0, "APPC-MIB", "appcCpicAdminSymbDestName"))
appcCpicAdminLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 1)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcCpicAdminSymbDestName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 2)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 8))).setMaxAccess("noaccess"))
appcCpicAdminParLuAlias = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 3)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 8))).setMaxAccess("readonly"))
appcCpicAdminParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 4)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("readonly"))
appcCpicAdminModeName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 5)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 8))).setMaxAccess("readonly"))
appcCpicAdminTpNameType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 6)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("normal", 1), ("snaServiceTp", 2), ))).setMaxAccess("readonly"))
appcCpicAdminTpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 7)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 64))).setMaxAccess("readonly"))
appcCpicAdminUserid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 8)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 10))).setMaxAccess("readonly"))
appcCpicAdminSecurity = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 1, 1, 9)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,4,3,5,6,2,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("same", 2), ("pgm", 3), ("pgmStrong", 4), ("distributed", 5), ("mutual", 6), ))).setMaxAccess("readonly"))
appcCpicOperTable = MibTable((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2))
appcCpicOperEntry = MibTableRow((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1)).setIndexNames((0, "APPC-MIB", "appcCpicOperLocLuName"), (0, "APPC-MIB", "appcCpicOperSymbDestName"))
appcCpicOperLocLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 1)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("noaccess"))
appcCpicOperSymbDestName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 2)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 8))).setMaxAccess("noaccess"))
appcCpicOperParLuAlias = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 3)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 8))).setMaxAccess("readonly"))
appcCpicOperParLuName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 4)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 17))).setMaxAccess("readonly"))
appcCpicOperModeName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 5)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 8))).setMaxAccess("readonly"))
appcCpicOperTpNameType = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 6)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("normal", 1), ("snaServiceTp", 2), ))).setMaxAccess("readonly"))
appcCpicOperTpName = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 7)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 64))).setMaxAccess("readonly"))
appcCpicOperUserid = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 8)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 10))).setMaxAccess("readonly"))
appcCpicOperSecurity = MibTableColumn((1, 3, 6, 1, 2, 1, 34, 3, 1, 6, 2, 1, 9)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,4,3,5,6,2,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("same", 2), ("pgm", 3), ("pgmStrong", 4), ("distributed", 5), ("mutual", 6), ))).setMaxAccess("readonly"))
appcConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 2))
appcCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 2, 1))
appcGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 34, 3, 2, 2))

# Augmentions

# Groups

appcTpConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 5)).setObjects(("APPC-MIB", "appcTpAdminInAttachTimeout"), ("APPC-MIB", "appcTpAdminConvSecReq"), ("APPC-MIB", "appcTpAdminSyncLvl"), ("APPC-MIB", "appcTpAdminStatus"), ("APPC-MIB", "appcTpAdminInstLmt"), ("APPC-MIB", "appcTpAdminVerPip"), ("APPC-MIB", "appcTpAdminRcvAllocTimeout"), ("APPC-MIB", "appcTpAdminFileSpec"), ("APPC-MIB", "appcTpAdminTpOperation"), ("APPC-MIB", "appcTpAdminLongRun"), ("APPC-MIB", "appcTpAdminStartParm"), ("APPC-MIB", "appcTpAdminConvType"), ("APPC-MIB", "appcTpAdminPipSubNum"), ("APPC-MIB", "appcTpAdminConvDuplex"), )
appcParLuConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 3)).setObjects(("APPC-MIB", "appcLuPairAdminSessLimit"), ("APPC-MIB", "appcLuPairAdminParLuAlias"), ("APPC-MIB", "appcLuPairOperParLuAlias"), ("APPC-MIB", "appcLuPairAdminSessSec"), ("APPC-MIB", "appcLuPairOperSessLimit"), ("APPC-MIB", "appcLuPairAdminParaSessSup"), ("APPC-MIB", "appcLuPairAdminSecAccept"), ("APPC-MIB", "appcLuPairAdminLinkObjId"), ("APPC-MIB", "appcLuPairOperState"), ("APPC-MIB", "appcLuPairOperSessSec"), ("APPC-MIB", "appcLuPairOperParaSessSupLS"), ("APPC-MIB", "appcLuPairOperSecAccept"), ("APPC-MIB", "appcLuPairOperLinkObjId"), ("APPC-MIB", "appcLuPairOperParaSessSup"), )
appcSessionConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 6)).setObjects(("APPC-MIB", "appcActSessSendPacingType"), ("APPC-MIB", "appcActSessMaxRcvRuSize"), ("APPC-MIB", "appcActSessRcvPacingSize"), ("APPC-MIB", "appcActSessCosName"), ("APPC-MIB", "appcActSessPluIndicator"), ("APPC-MIB", "appcActSessRecvPacingType"), ("APPC-MIB", "appcHistSessLocLuName"), ("APPC-MIB", "appcActSessRtpTcid"), ("APPC-MIB", "appcActSessRscv"), ("APPC-MIB", "appcHistSessType"), ("APPC-MIB", "appcActSessEnhanceSecSup"), ("APPC-MIB", "appcActSessTransPriority"), ("APPC-MIB", "appcSessStatsSentFmdRus"), ("APPC-MIB", "appcSessStatsSentNonFmdBytes"), ("APPC-MIB", "appcActSessLinkIndex"), ("APPC-MIB", "appcSessStatsRcvdFmdBytes"), ("APPC-MIB", "appcSessStatsCtrUpTime"), ("APPC-MIB", "appcHistSessTime"), ("APPC-MIB", "appcActSessMaxSndRuSize"), ("APPC-MIB", "appcActSessPcidCpName"), ("APPC-MIB", "appcActSessModeName"), ("APPC-MIB", "appcHistSessUnbindType"), ("APPC-MIB", "appcSessStatsRcvdNonFmdBytes"), ("APPC-MIB", "appcActSessInUse"), ("APPC-MIB", "appcHistSessSenseData"), ("APPC-MIB", "appcSessStatsRcvdFmdRus"), ("APPC-MIB", "appcActSessSndPacingSize"), ("APPC-MIB", "appcActSessPcid"), ("APPC-MIB", "appcActSessSendNxWndwSize"), ("APPC-MIB", "appcHistSessModeName"), ("APPC-MIB", "appcActSessUpTime"), ("APPC-MIB", "appcActSessRtpNceId"), ("APPC-MIB", "appcActSessRecvRpc"), ("APPC-MIB", "appcHistSessDetectModule"), ("APPC-MIB", "appcSessStatsRcvdNonFmdRus"), ("APPC-MIB", "appcActSessSendRpc"), ("APPC-MIB", "appcSessStatsSentNonFmdRus"), ("APPC-MIB", "appcSessStatsSentFmdBytes"), ("APPC-MIB", "appcSessRtpSessions"), ("APPC-MIB", "appcActSessOperState"), ("APPC-MIB", "appcHistSessComponentId"), ("APPC-MIB", "appcHistSessParLuName"), ("APPC-MIB", "appcActSessRecvNxWndwSize"), )
appcModeConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 4)).setObjects(("APPC-MIB", "appcModeOperSingSessReinit"), ("APPC-MIB", "appcModeOperCompression"), ("APPC-MIB", "appcModeAdminPrefRecvRuSz"), ("APPC-MIB", "appcModeOperPtmClos"), ("APPC-MIB", "appcModeOperMaxSessLimit"), ("APPC-MIB", "appcModeAdminPrefSendRuSz"), ("APPC-MIB", "appcModeOperRecvRuSzUpBnd"), ("APPC-MIB", "appcModeOperMinClosLimit"), ("APPC-MIB", "appcModeOperSessEndTpName"), ("APPC-MIB", "appcModeOperSessLimit"), ("APPC-MIB", "appcModeAdminMinClosLimit"), ("APPC-MIB", "appcModeOperPrefSendRuSz"), ("APPC-MIB", "appcModeAdminCompRleBeforeLZ"), ("APPC-MIB", "appcModeOperSendRuSzUpBnd"), ("APPC-MIB", "appcModeOperCompRleBeforeLZ"), ("APPC-MIB", "appcModeOperPrefRecvRuSz"), ("APPC-MIB", "appcModeOperRecvRuSzLoBnd"), ("APPC-MIB", "appcModeOperPndCwin"), ("APPC-MIB", "appcModeAdminSendPacWinSz"), ("APPC-MIB", "appcModeAdminRecvRuSzLoBnd"), ("APPC-MIB", "appcModeOperActCwin"), ("APPC-MIB", "appcModeOperInBoundCompLevel"), ("APPC-MIB", "appcModeOperSendPacWinSz"), ("APPC-MIB", "appcModeOperConWinAutoActLmt"), ("APPC-MIB", "appcModeAdminSendRuSzUpBnd"), ("APPC-MIB", "appcModeOperCrypto"), ("APPC-MIB", "appcModeOperCosName"), ("APPC-MIB", "appcModeOperDrainSelf"), ("APPC-MIB", "appcModeOperCNOSNeg"), ("APPC-MIB", "appcModeAdminCrypto"), ("APPC-MIB", "appcModeOperDrainPart"), ("APPC-MIB", "appcModeAdminOutBoundCompLevel"), ("APPC-MIB", "appcModeAdminSessEndTpName"), ("APPC-MIB", "appcModeOperSyncLvlLastStart"), ("APPC-MIB", "appcModeOperCryptoLastStart"), ("APPC-MIB", "appcModeAdminRecvRuSzUpBnd"), ("APPC-MIB", "appcModeAdminConWinAutoActLmt"), ("APPC-MIB", "appcModeAdminCosName"), ("APPC-MIB", "appcModeAdminSendRuSzLoBnd"), ("APPC-MIB", "appcModeAdminSingSessReinit"), ("APPC-MIB", "appcModeAdminCompression"), ("APPC-MIB", "appcModeOperMinCwinLimit"), ("APPC-MIB", "appcModeAdminInBoundCompLevel"), ("APPC-MIB", "appcModeOperOutBoundCompLevel"), ("APPC-MIB", "appcModeAdminMaxSessLimit"), ("APPC-MIB", "appcModeOperPndClos"), ("APPC-MIB", "appcModeOperActClos"), ("APPC-MIB", "appcModeOperSyncLvl"), ("APPC-MIB", "appcModeOperPtmCwin"), ("APPC-MIB", "appcModeAdminMinCwinLimit"), ("APPC-MIB", "appcModeAdminRecvPacWinSz"), ("APPC-MIB", "appcModeAdminSyncLvl"), ("APPC-MIB", "appcModeOperRecvPacWinSz"), ("APPC-MIB", "appcModeOperSendRuSzLoBnd"), )
appcConversationConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 10)).setObjects(("APPC-MIB", "appcActiveConvUserid"), ("APPC-MIB", "appcActiveConvLuwIdSequence"), ("APPC-MIB", "appcActiveConvTpName"), ("APPC-MIB", "appcHistConvEndedBy"), ("APPC-MIB", "appcActiveConvState"), ("APPC-MIB", "appcHistConvSenseData"), ("APPC-MIB", "appcHistConvParLuName"), ("APPC-MIB", "appcActiveConvLuwIdName"), ("APPC-MIB", "appcActiveConvDuplex"), ("APPC-MIB", "appcHistConvPcid"), ("APPC-MIB", "appcHistConvEndTime"), ("APPC-MIB", "appcActiveConvPcidNauName"), ("APPC-MIB", "appcActiveConvSyncLvl"), ("APPC-MIB", "appcActiveConvLuwIdInstance"), ("APPC-MIB", "appcActiveConvSource"), ("APPC-MIB", "appcActiveConvPcid"), ("APPC-MIB", "appcActiveConvType"), ("APPC-MIB", "appcHistConvLogData"), ("APPC-MIB", "appcActiveConvSendBytes"), ("APPC-MIB", "appcActiveConvUpTime"), ("APPC-MIB", "appcHistConvPcidNauName"), ("APPC-MIB", "appcActiveConvRcvBytes"), ("APPC-MIB", "appcHistConvTpName"), ("APPC-MIB", "appcActiveConvModeName"), ("APPC-MIB", "appcActiveConvId"), ("APPC-MIB", "appcHistConvLocLuName"), ("APPC-MIB", "appcActiveConvCorrelator"), )
appcCpicConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 9)).setObjects(("APPC-MIB", "appcCpicAdminTpName"), ("APPC-MIB", "appcCpicAdminParLuName"), ("APPC-MIB", "appcCpicOperSecurity"), ("APPC-MIB", "appcCpicOperTpName"), ("APPC-MIB", "appcCpicAdminTpNameType"), ("APPC-MIB", "appcCpicOperModeName"), ("APPC-MIB", "appcCpicAdminModeName"), ("APPC-MIB", "appcCpicAdminParLuAlias"), ("APPC-MIB", "appcCpicOperParLuAlias"), ("APPC-MIB", "appcCpicOperTpNameType"), ("APPC-MIB", "appcCpicAdminUserid"), ("APPC-MIB", "appcCpicOperUserid"), ("APPC-MIB", "appcCpicOperParLuName"), ("APPC-MIB", "appcCpicAdminSecurity"), )
appcControlConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 7)).setObjects(("APPC-MIB", "appcCntrlAdminStat"), ("APPC-MIB", "appcCntrlOperTrace"), ("APPC-MIB", "appcCntrlAdminTraceParm"), ("APPC-MIB", "appcCntrlAdminTrace"), ("APPC-MIB", "appcCntrlOperRscvTime"), ("APPC-MIB", "appcCntrlOperStatTime"), ("APPC-MIB", "appcCntrlOperTraceTime"), ("APPC-MIB", "appcCntrlOperStat"), ("APPC-MIB", "appcCntrlAdminRscv"), ("APPC-MIB", "appcCntrlOperTraceParm"), ("APPC-MIB", "appcCntrlOperRscv"), )
appcLluConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 2)).setObjects(("APPC-MIB", "appcLluOperOutBoundCompLevel"), ("APPC-MIB", "appcLluOperAlias"), ("APPC-MIB", "appcLluAdminBindRspMayQ"), ("APPC-MIB", "appcLluOperCompRleBeforeLZ"), ("APPC-MIB", "appcLluAdminDepType"), ("APPC-MIB", "appcLluOperCompression"), ("APPC-MIB", "appcLluOperLocalAddress"), ("APPC-MIB", "appcLluAdminCompression"), ("APPC-MIB", "appcLluOperActiveSessions"), ("APPC-MIB", "appcLluAdminCompRleBeforeLZ"), ("APPC-MIB", "appcLluOperSessLimit"), ("APPC-MIB", "appcLluOperDepType"), ("APPC-MIB", "appcLluOperBindRspMayQ"), ("APPC-MIB", "appcLluAdminSessLimit"), ("APPC-MIB", "appcLluAdminLocalAddress"), ("APPC-MIB", "appcLluAdminInBoundCompLevel"), ("APPC-MIB", "appcLluAdminAlias"), ("APPC-MIB", "appcLluOperInBoundCompLevel"), ("APPC-MIB", "appcLluAdminOutBoundCompLevel"), )
appcCnosConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 8)).setObjects(("APPC-MIB", "appcCnosTargetModeName"), ("APPC-MIB", "appcCnosForce"), ("APPC-MIB", "appcCnosTargetLocLuName"), ("APPC-MIB", "appcCnosMinClosLimit"), ("APPC-MIB", "appcCnosTargetParLuName"), ("APPC-MIB", "appcCnosDrainPart"), ("APPC-MIB", "appcCnosResponsible"), ("APPC-MIB", "appcCnosDrainSelf"), ("APPC-MIB", "appcCnosMaxSessLimit"), ("APPC-MIB", "appcCnosCommand"), ("APPC-MIB", "appcCnosMinCwinLimit"), )
appcGlobalConfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 34, 3, 2, 2, 1)).setObjects(("APPC-MIB", "appcActiveSessions"), ("APPC-MIB", "appcDefaultTpOperation"), ("APPC-MIB", "appcDefaultMaxMcLlSndSize"), ("APPC-MIB", "appcDefaultImplInbndPlu"), ("APPC-MIB", "appcDefaultFileSpec"), ("APPC-MIB", "appcDefaultModeName"), ("APPC-MIB", "appcActiveHprSessions"), ("APPC-MIB", "appcLocalCpName"), ("APPC-MIB", "appcUpTime"), ("APPC-MIB", "appcDefaultLuName"), ("APPC-MIB", "appcDefaultTpConvSecRqd"), )

# Exports

# Types
mibBuilder.exportSymbols("APPC-MIB", SnaSenseData=SnaSenseData)

# Objects
mibBuilder.exportSymbols("APPC-MIB", appcMIB=appcMIB, appcObjects=appcObjects, appcGlobal=appcGlobal, appcCntrlAdminGroup=appcCntrlAdminGroup, appcCntrlAdminStat=appcCntrlAdminStat, appcCntrlAdminRscv=appcCntrlAdminRscv, appcCntrlAdminTrace=appcCntrlAdminTrace, appcCntrlAdminTraceParm=appcCntrlAdminTraceParm, appcCntrlOperGroup=appcCntrlOperGroup, appcCntrlOperStat=appcCntrlOperStat, appcCntrlOperStatTime=appcCntrlOperStatTime, appcCntrlOperRscv=appcCntrlOperRscv, appcCntrlOperRscvTime=appcCntrlOperRscvTime, appcCntrlOperTrace=appcCntrlOperTrace, appcCntrlOperTraceTime=appcCntrlOperTraceTime, appcCntrlOperTraceParm=appcCntrlOperTraceParm, appcGlobalObjects=appcGlobalObjects, appcUpTime=appcUpTime, appcDefaultModeName=appcDefaultModeName, appcDefaultLuName=appcDefaultLuName, appcDefaultImplInbndPlu=appcDefaultImplInbndPlu, appcDefaultMaxMcLlSndSize=appcDefaultMaxMcLlSndSize, appcDefaultFileSpec=appcDefaultFileSpec, appcDefaultTpOperation=appcDefaultTpOperation, appcDefaultTpConvSecRqd=appcDefaultTpConvSecRqd, appcLocalCpName=appcLocalCpName, appcActiveSessions=appcActiveSessions, appcActiveHprSessions=appcActiveHprSessions, appcCnosControl=appcCnosControl, appcCnosCommand=appcCnosCommand, appcCnosMaxSessLimit=appcCnosMaxSessLimit, appcCnosMinCwinLimit=appcCnosMinCwinLimit, appcCnosMinClosLimit=appcCnosMinClosLimit, appcCnosDrainSelf=appcCnosDrainSelf, appcCnosDrainPart=appcCnosDrainPart, appcCnosResponsible=appcCnosResponsible, appcCnosForce=appcCnosForce, appcCnosTargetLocLuName=appcCnosTargetLocLuName, appcCnosTargetParLuName=appcCnosTargetParLuName, appcCnosTargetModeName=appcCnosTargetModeName, appcLu=appcLu, appcLluAdminTable=appcLluAdminTable, appcLluAdminEntry=appcLluAdminEntry, appcLluAdminName=appcLluAdminName, appcLluAdminDepType=appcLluAdminDepType, appcLluAdminLocalAddress=appcLluAdminLocalAddress, appcLluAdminSessLimit=appcLluAdminSessLimit, appcLluAdminBindRspMayQ=appcLluAdminBindRspMayQ, appcLluAdminCompression=appcLluAdminCompression, appcLluAdminInBoundCompLevel=appcLluAdminInBoundCompLevel, appcLluAdminOutBoundCompLevel=appcLluAdminOutBoundCompLevel, appcLluAdminCompRleBeforeLZ=appcLluAdminCompRleBeforeLZ, appcLluAdminAlias=appcLluAdminAlias, appcLluOperTable=appcLluOperTable, appcLluOperEntry=appcLluOperEntry, appcLluOperName=appcLluOperName, appcLluOperDepType=appcLluOperDepType, appcLluOperLocalAddress=appcLluOperLocalAddress, appcLluOperSessLimit=appcLluOperSessLimit, appcLluOperBindRspMayQ=appcLluOperBindRspMayQ, appcLluOperCompression=appcLluOperCompression, appcLluOperInBoundCompLevel=appcLluOperInBoundCompLevel, appcLluOperOutBoundCompLevel=appcLluOperOutBoundCompLevel, appcLluOperCompRleBeforeLZ=appcLluOperCompRleBeforeLZ, appcLluOperAlias=appcLluOperAlias, appcLluOperActiveSessions=appcLluOperActiveSessions, appcLuPairAdminTable=appcLuPairAdminTable, appcLuPairAdminEntry=appcLuPairAdminEntry, appcLuPairAdminLocLuName=appcLuPairAdminLocLuName, appcLuPairAdminParLuName=appcLuPairAdminParLuName, appcLuPairAdminParLuAlias=appcLuPairAdminParLuAlias, appcLuPairAdminSessLimit=appcLuPairAdminSessLimit, appcLuPairAdminSessSec=appcLuPairAdminSessSec, appcLuPairAdminSecAccept=appcLuPairAdminSecAccept, appcLuPairAdminLinkObjId=appcLuPairAdminLinkObjId, appcLuPairAdminParaSessSup=appcLuPairAdminParaSessSup, appcLuPairOperTable=appcLuPairOperTable, appcLuPairOperEntry=appcLuPairOperEntry, appcLuPairOperLocLuName=appcLuPairOperLocLuName, appcLuPairOperParLuName=appcLuPairOperParLuName, appcLuPairOperParLuAlias=appcLuPairOperParLuAlias, appcLuPairOperSessLimit=appcLuPairOperSessLimit, appcLuPairOperSessSec=appcLuPairOperSessSec, appcLuPairOperSecAccept=appcLuPairOperSecAccept, appcLuPairOperLinkObjId=appcLuPairOperLinkObjId, appcLuPairOperParaSessSup=appcLuPairOperParaSessSup, appcLuPairOperParaSessSupLS=appcLuPairOperParaSessSupLS, appcLuPairOperState=appcLuPairOperState, appcModeAdminTable=appcModeAdminTable, appcModeAdminEntry=appcModeAdminEntry, appcModeAdminLocLuName=appcModeAdminLocLuName, appcModeAdminParLuName=appcModeAdminParLuName, appcModeAdminModeName=appcModeAdminModeName, appcModeAdminCosName=appcModeAdminCosName, appcModeAdminSessEndTpName=appcModeAdminSessEndTpName, appcModeAdminMaxSessLimit=appcModeAdminMaxSessLimit, appcModeAdminMinCwinLimit=appcModeAdminMinCwinLimit, appcModeAdminMinClosLimit=appcModeAdminMinClosLimit, appcModeAdminConWinAutoActLmt=appcModeAdminConWinAutoActLmt, appcModeAdminRecvPacWinSz=appcModeAdminRecvPacWinSz, appcModeAdminSendPacWinSz=appcModeAdminSendPacWinSz, appcModeAdminPrefRecvRuSz=appcModeAdminPrefRecvRuSz, appcModeAdminPrefSendRuSz=appcModeAdminPrefSendRuSz, appcModeAdminRecvRuSzUpBnd=appcModeAdminRecvRuSzUpBnd, appcModeAdminSendRuSzUpBnd=appcModeAdminSendRuSzUpBnd, appcModeAdminRecvRuSzLoBnd=appcModeAdminRecvRuSzLoBnd, appcModeAdminSendRuSzLoBnd=appcModeAdminSendRuSzLoBnd, appcModeAdminSingSessReinit=appcModeAdminSingSessReinit, appcModeAdminCompression=appcModeAdminCompression, appcModeAdminInBoundCompLevel=appcModeAdminInBoundCompLevel, appcModeAdminOutBoundCompLevel=appcModeAdminOutBoundCompLevel, appcModeAdminCompRleBeforeLZ=appcModeAdminCompRleBeforeLZ, appcModeAdminSyncLvl=appcModeAdminSyncLvl, appcModeAdminCrypto=appcModeAdminCrypto, appcModeOperTable=appcModeOperTable, appcModeOperEntry=appcModeOperEntry, appcModeOperLocLuName=appcModeOperLocLuName, appcModeOperParLuName=appcModeOperParLuName, appcModeOperModeName=appcModeOperModeName, appcModeOperCosName=appcModeOperCosName, appcModeOperSessEndTpName=appcModeOperSessEndTpName, appcModeOperSessLimit=appcModeOperSessLimit, appcModeOperMaxSessLimit=appcModeOperMaxSessLimit, appcModeOperMinCwinLimit=appcModeOperMinCwinLimit, appcModeOperMinClosLimit=appcModeOperMinClosLimit, appcModeOperConWinAutoActLmt=appcModeOperConWinAutoActLmt, appcModeOperRecvPacWinSz=appcModeOperRecvPacWinSz, appcModeOperSendPacWinSz=appcModeOperSendPacWinSz)
mibBuilder.exportSymbols("APPC-MIB", appcModeOperPrefRecvRuSz=appcModeOperPrefRecvRuSz, appcModeOperPrefSendRuSz=appcModeOperPrefSendRuSz, appcModeOperRecvRuSzUpBnd=appcModeOperRecvRuSzUpBnd, appcModeOperSendRuSzUpBnd=appcModeOperSendRuSzUpBnd, appcModeOperRecvRuSzLoBnd=appcModeOperRecvRuSzLoBnd, appcModeOperSendRuSzLoBnd=appcModeOperSendRuSzLoBnd, appcModeOperSingSessReinit=appcModeOperSingSessReinit, appcModeOperCompression=appcModeOperCompression, appcModeOperInBoundCompLevel=appcModeOperInBoundCompLevel, appcModeOperOutBoundCompLevel=appcModeOperOutBoundCompLevel, appcModeOperCompRleBeforeLZ=appcModeOperCompRleBeforeLZ, appcModeOperSyncLvl=appcModeOperSyncLvl, appcModeOperCrypto=appcModeOperCrypto, appcModeOperSyncLvlLastStart=appcModeOperSyncLvlLastStart, appcModeOperCryptoLastStart=appcModeOperCryptoLastStart, appcModeOperCNOSNeg=appcModeOperCNOSNeg, appcModeOperActCwin=appcModeOperActCwin, appcModeOperActClos=appcModeOperActClos, appcModeOperPndCwin=appcModeOperPndCwin, appcModeOperPndClos=appcModeOperPndClos, appcModeOperPtmCwin=appcModeOperPtmCwin, appcModeOperPtmClos=appcModeOperPtmClos, appcModeOperDrainSelf=appcModeOperDrainSelf, appcModeOperDrainPart=appcModeOperDrainPart, appcTp=appcTp, appcTpAdminTable=appcTpAdminTable, appcTpAdminEntry=appcTpAdminEntry, appcTpAdminLocLuName=appcTpAdminLocLuName, appcTpAdminTpName=appcTpAdminTpName, appcTpAdminFileSpec=appcTpAdminFileSpec, appcTpAdminStartParm=appcTpAdminStartParm, appcTpAdminTpOperation=appcTpAdminTpOperation, appcTpAdminInAttachTimeout=appcTpAdminInAttachTimeout, appcTpAdminRcvAllocTimeout=appcTpAdminRcvAllocTimeout, appcTpAdminSyncLvl=appcTpAdminSyncLvl, appcTpAdminInstLmt=appcTpAdminInstLmt, appcTpAdminStatus=appcTpAdminStatus, appcTpAdminLongRun=appcTpAdminLongRun, appcTpAdminConvType=appcTpAdminConvType, appcTpAdminConvDuplex=appcTpAdminConvDuplex, appcTpAdminConvSecReq=appcTpAdminConvSecReq, appcTpAdminVerPip=appcTpAdminVerPip, appcTpAdminPipSubNum=appcTpAdminPipSubNum, appcSession=appcSession, appcActSessTable=appcActSessTable, appcActSessEntry=appcActSessEntry, appcActSessLocLuName=appcActSessLocLuName, appcActSessParLuName=appcActSessParLuName, appcActSessIndex=appcActSessIndex, appcActSessPcidCpName=appcActSessPcidCpName, appcActSessPcid=appcActSessPcid, appcActSessPluIndicator=appcActSessPluIndicator, appcActSessModeName=appcActSessModeName, appcActSessCosName=appcActSessCosName, appcActSessTransPriority=appcActSessTransPriority, appcActSessEnhanceSecSup=appcActSessEnhanceSecSup, appcActSessSendPacingType=appcActSessSendPacingType, appcActSessSendRpc=appcActSessSendRpc, appcActSessSendNxWndwSize=appcActSessSendNxWndwSize, appcActSessRecvPacingType=appcActSessRecvPacingType, appcActSessRecvRpc=appcActSessRecvRpc, appcActSessRecvNxWndwSize=appcActSessRecvNxWndwSize, appcActSessRscv=appcActSessRscv, appcActSessInUse=appcActSessInUse, appcActSessMaxSndRuSize=appcActSessMaxSndRuSize, appcActSessMaxRcvRuSize=appcActSessMaxRcvRuSize, appcActSessSndPacingSize=appcActSessSndPacingSize, appcActSessRcvPacingSize=appcActSessRcvPacingSize, appcActSessOperState=appcActSessOperState, appcActSessUpTime=appcActSessUpTime, appcActSessRtpNceId=appcActSessRtpNceId, appcActSessRtpTcid=appcActSessRtpTcid, appcActSessLinkIndex=appcActSessLinkIndex, appcSessStatsTable=appcSessStatsTable, appcSessStatsEntry=appcSessStatsEntry, appcSessStatsLocLuName=appcSessStatsLocLuName, appcSessStatsParLuName=appcSessStatsParLuName, appcSessStatsSessIndex=appcSessStatsSessIndex, appcSessStatsSentFmdBytes=appcSessStatsSentFmdBytes, appcSessStatsSentNonFmdBytes=appcSessStatsSentNonFmdBytes, appcSessStatsRcvdFmdBytes=appcSessStatsRcvdFmdBytes, appcSessStatsRcvdNonFmdBytes=appcSessStatsRcvdNonFmdBytes, appcSessStatsSentFmdRus=appcSessStatsSentFmdRus, appcSessStatsSentNonFmdRus=appcSessStatsSentNonFmdRus, appcSessStatsRcvdFmdRus=appcSessStatsRcvdFmdRus, appcSessStatsRcvdNonFmdRus=appcSessStatsRcvdNonFmdRus, appcSessStatsCtrUpTime=appcSessStatsCtrUpTime, appcHistSessTable=appcHistSessTable, appcHistSessEntry=appcHistSessEntry, appcHistSessIndex=appcHistSessIndex, appcHistSessTime=appcHistSessTime, appcHistSessType=appcHistSessType, appcHistSessLocLuName=appcHistSessLocLuName, appcHistSessParLuName=appcHistSessParLuName, appcHistSessModeName=appcHistSessModeName, appcHistSessUnbindType=appcHistSessUnbindType, appcHistSessSenseData=appcHistSessSenseData, appcHistSessComponentId=appcHistSessComponentId, appcHistSessDetectModule=appcHistSessDetectModule, appcSessRtpTable=appcSessRtpTable, appcSessRtpEntry=appcSessRtpEntry, appcSessRtpNceId=appcSessRtpNceId, appcSessRtpTcid=appcSessRtpTcid, appcSessRtpSessions=appcSessRtpSessions, appcConversation=appcConversation, appcActiveConvTable=appcActiveConvTable, appcActiveConvEntry=appcActiveConvEntry, appcActiveConvLocLuName=appcActiveConvLocLuName, appcActiveConvParLuName=appcActiveConvParLuName, appcActiveConvSessIndex=appcActiveConvSessIndex, appcActiveConvId=appcActiveConvId, appcActiveConvState=appcActiveConvState, appcActiveConvType=appcActiveConvType, appcActiveConvCorrelator=appcActiveConvCorrelator, appcActiveConvSyncLvl=appcActiveConvSyncLvl, appcActiveConvSource=appcActiveConvSource, appcActiveConvDuplex=appcActiveConvDuplex, appcActiveConvUpTime=appcActiveConvUpTime, appcActiveConvSendBytes=appcActiveConvSendBytes, appcActiveConvRcvBytes=appcActiveConvRcvBytes, appcActiveConvUserid=appcActiveConvUserid, appcActiveConvPcidNauName=appcActiveConvPcidNauName, appcActiveConvPcid=appcActiveConvPcid, appcActiveConvModeName=appcActiveConvModeName, appcActiveConvLuwIdName=appcActiveConvLuwIdName, appcActiveConvLuwIdInstance=appcActiveConvLuwIdInstance, appcActiveConvLuwIdSequence=appcActiveConvLuwIdSequence, appcActiveConvTpName=appcActiveConvTpName, appcHistConvTable=appcHistConvTable)
mibBuilder.exportSymbols("APPC-MIB", appcHistConvEntry=appcHistConvEntry, appcHistConvIndex=appcHistConvIndex, appcHistConvEndTime=appcHistConvEndTime, appcHistConvLocLuName=appcHistConvLocLuName, appcHistConvParLuName=appcHistConvParLuName, appcHistConvTpName=appcHistConvTpName, appcHistConvPcidNauName=appcHistConvPcidNauName, appcHistConvPcid=appcHistConvPcid, appcHistConvSenseData=appcHistConvSenseData, appcHistConvLogData=appcHistConvLogData, appcHistConvEndedBy=appcHistConvEndedBy, appcCPIC=appcCPIC, appcCpicAdminTable=appcCpicAdminTable, appcCpicAdminEntry=appcCpicAdminEntry, appcCpicAdminLocLuName=appcCpicAdminLocLuName, appcCpicAdminSymbDestName=appcCpicAdminSymbDestName, appcCpicAdminParLuAlias=appcCpicAdminParLuAlias, appcCpicAdminParLuName=appcCpicAdminParLuName, appcCpicAdminModeName=appcCpicAdminModeName, appcCpicAdminTpNameType=appcCpicAdminTpNameType, appcCpicAdminTpName=appcCpicAdminTpName, appcCpicAdminUserid=appcCpicAdminUserid, appcCpicAdminSecurity=appcCpicAdminSecurity, appcCpicOperTable=appcCpicOperTable, appcCpicOperEntry=appcCpicOperEntry, appcCpicOperLocLuName=appcCpicOperLocLuName, appcCpicOperSymbDestName=appcCpicOperSymbDestName, appcCpicOperParLuAlias=appcCpicOperParLuAlias, appcCpicOperParLuName=appcCpicOperParLuName, appcCpicOperModeName=appcCpicOperModeName, appcCpicOperTpNameType=appcCpicOperTpNameType, appcCpicOperTpName=appcCpicOperTpName, appcCpicOperUserid=appcCpicOperUserid, appcCpicOperSecurity=appcCpicOperSecurity, appcConformance=appcConformance, appcCompliances=appcCompliances, appcGroups=appcGroups)

# Groups
mibBuilder.exportSymbols("APPC-MIB", appcTpConfGroup=appcTpConfGroup, appcParLuConfGroup=appcParLuConfGroup, appcSessionConfGroup=appcSessionConfGroup, appcModeConfGroup=appcModeConfGroup, appcConversationConfGroup=appcConversationConfGroup, appcCpicConfGroup=appcCpicConfGroup, appcControlConfGroup=appcControlConfGroup, appcLluConfGroup=appcLluConfGroup, appcCnosConfGroup=appcCnosConfGroup, appcGlobalConfGroup=appcGlobalConfGroup)
