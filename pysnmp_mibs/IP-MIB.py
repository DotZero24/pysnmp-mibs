# PySNMP SMI module. Autogenerated from smidump -f python IP-MIB
# by libsmi2pysnmp-0.0.3-alpha at Wed Nov 10 12:10:22 2004,
# Python version (2, 2, 1, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pysnmp.asn1 import subtypes

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Counter32, Integer32, Integer32, IpAddress, ModuleIdentity, MibIdentifier, MibVariable, MibTable, MibTableRow, MibTableColumn, TimeTicks, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Integer32", "Integer32", "IpAddress", "ModuleIdentity", "MibIdentifier", "MibVariable", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "mib-2")
( PhysAddress, ) = mibBuilder.importSymbols("SNMPv2-TC", "PhysAddress")

# Objects

ip = MibIdentifier((1, 3, 6, 1, 2, 1, 4))
ipForwarding = MibVariable((1, 3, 6, 1, 2, 1, 4, 1), Integer().addConstraints(subtypes.SingleValueConstraint(1,2,)).addNamedValues(("forwarding", 1), ("notForwarding", 2), )).setMaxAccess("readwrite")
ipDefaultTTL = MibVariable((1, 3, 6, 1, 2, 1, 4, 2), Integer32().addConstraints(subtypes.ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
ipInReceives = MibVariable((1, 3, 6, 1, 2, 1, 4, 3), Counter32()).setMaxAccess("readonly")
ipInHdrErrors = MibVariable((1, 3, 6, 1, 2, 1, 4, 4), Counter32()).setMaxAccess("readonly")
ipInAddrErrors = MibVariable((1, 3, 6, 1, 2, 1, 4, 5), Counter32()).setMaxAccess("readonly")
ipForwDatagrams = MibVariable((1, 3, 6, 1, 2, 1, 4, 6), Counter32()).setMaxAccess("readonly")
ipInUnknownProtos = MibVariable((1, 3, 6, 1, 2, 1, 4, 7), Counter32()).setMaxAccess("readonly")
ipInDiscards = MibVariable((1, 3, 6, 1, 2, 1, 4, 8), Counter32()).setMaxAccess("readonly")
ipInDelivers = MibVariable((1, 3, 6, 1, 2, 1, 4, 9), Counter32()).setMaxAccess("readonly")
ipOutRequests = MibVariable((1, 3, 6, 1, 2, 1, 4, 10), Counter32()).setMaxAccess("readonly")
ipOutDiscards = MibVariable((1, 3, 6, 1, 2, 1, 4, 11), Counter32()).setMaxAccess("readonly")
ipOutNoRoutes = MibVariable((1, 3, 6, 1, 2, 1, 4, 12), Counter32()).setMaxAccess("readonly")
ipReasmTimeout = MibVariable((1, 3, 6, 1, 2, 1, 4, 13), Integer32()).setMaxAccess("readonly")
ipReasmReqds = MibVariable((1, 3, 6, 1, 2, 1, 4, 14), Counter32()).setMaxAccess("readonly")
ipReasmOKs = MibVariable((1, 3, 6, 1, 2, 1, 4, 15), Counter32()).setMaxAccess("readonly")
ipReasmFails = MibVariable((1, 3, 6, 1, 2, 1, 4, 16), Counter32()).setMaxAccess("readonly")
ipFragOKs = MibVariable((1, 3, 6, 1, 2, 1, 4, 17), Counter32()).setMaxAccess("readonly")
ipFragFails = MibVariable((1, 3, 6, 1, 2, 1, 4, 18), Counter32()).setMaxAccess("readonly")
ipFragCreates = MibVariable((1, 3, 6, 1, 2, 1, 4, 19), Counter32()).setMaxAccess("readonly")
ipAddrTable = MibTable((1, 3, 6, 1, 2, 1, 4, 20))
ipAddrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 4, 20, 1)).setIndexNames((0, "IP-MIB", "ipAdEntAddr"))
ipAdEntAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 20, 1, 1)).setColumnInitializer(MibVariable((), IpAddress()).setMaxAccess("readonly"))
ipAdEntIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 20, 1, 2)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(1, 2147483647L))).setMaxAccess("readonly"))
ipAdEntNetMask = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 20, 1, 3)).setColumnInitializer(MibVariable((), IpAddress()).setMaxAccess("readonly"))
ipAdEntBcastAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 20, 1, 4)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(0, 1))).setMaxAccess("readonly"))
ipAdEntReasmMaxSize = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 20, 1, 5)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
ipNetToMediaTable = MibTable((1, 3, 6, 1, 2, 1, 4, 22))
ipNetToMediaEntry = MibTableRow((1, 3, 6, 1, 2, 1, 4, 22, 1)).setIndexNames((0, "IP-MIB", "ipNetToMediaIfIndex"), (0, "IP-MIB", "ipNetToMediaNetAddress"))
ipNetToMediaIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 22, 1, 1)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(1, 2147483647L))).setMaxAccess("readwrite"))
ipNetToMediaPhysAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 22, 1, 2)).setColumnInitializer(MibVariable((), PhysAddress()).setMaxAccess("readwrite"))
ipNetToMediaNetAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 22, 1, 3)).setColumnInitializer(MibVariable((), IpAddress()).setMaxAccess("readwrite"))
ipNetToMediaType = MibTableColumn((1, 3, 6, 1, 2, 1, 4, 22, 1, 4)).setColumnInitializer(MibVariable((), Integer().addConstraints(subtypes.SingleValueConstraint(4,1,3,2,)).addNamedValues(("other", 1), ("invalid", 2), ("dynamic", 3), ("static", 4), )).setMaxAccess("readwrite"))
ipRoutingDiscards = MibVariable((1, 3, 6, 1, 2, 1, 4, 23), Counter32()).setMaxAccess("readonly")
icmp = MibIdentifier((1, 3, 6, 1, 2, 1, 5))
icmpInMsgs = MibVariable((1, 3, 6, 1, 2, 1, 5, 1), Counter32()).setMaxAccess("readonly")
icmpInErrors = MibVariable((1, 3, 6, 1, 2, 1, 5, 2), Counter32()).setMaxAccess("readonly")
icmpInDestUnreachs = MibVariable((1, 3, 6, 1, 2, 1, 5, 3), Counter32()).setMaxAccess("readonly")
icmpInTimeExcds = MibVariable((1, 3, 6, 1, 2, 1, 5, 4), Counter32()).setMaxAccess("readonly")
icmpInParmProbs = MibVariable((1, 3, 6, 1, 2, 1, 5, 5), Counter32()).setMaxAccess("readonly")
icmpInSrcQuenchs = MibVariable((1, 3, 6, 1, 2, 1, 5, 6), Counter32()).setMaxAccess("readonly")
icmpInRedirects = MibVariable((1, 3, 6, 1, 2, 1, 5, 7), Counter32()).setMaxAccess("readonly")
icmpInEchos = MibVariable((1, 3, 6, 1, 2, 1, 5, 8), Counter32()).setMaxAccess("readonly")
icmpInEchoReps = MibVariable((1, 3, 6, 1, 2, 1, 5, 9), Counter32()).setMaxAccess("readonly")
icmpInTimestamps = MibVariable((1, 3, 6, 1, 2, 1, 5, 10), Counter32()).setMaxAccess("readonly")
icmpInTimestampReps = MibVariable((1, 3, 6, 1, 2, 1, 5, 11), Counter32()).setMaxAccess("readonly")
icmpInAddrMasks = MibVariable((1, 3, 6, 1, 2, 1, 5, 12), Counter32()).setMaxAccess("readonly")
icmpInAddrMaskReps = MibVariable((1, 3, 6, 1, 2, 1, 5, 13), Counter32()).setMaxAccess("readonly")
icmpOutMsgs = MibVariable((1, 3, 6, 1, 2, 1, 5, 14), Counter32()).setMaxAccess("readonly")
icmpOutErrors = MibVariable((1, 3, 6, 1, 2, 1, 5, 15), Counter32()).setMaxAccess("readonly")
icmpOutDestUnreachs = MibVariable((1, 3, 6, 1, 2, 1, 5, 16), Counter32()).setMaxAccess("readonly")
icmpOutTimeExcds = MibVariable((1, 3, 6, 1, 2, 1, 5, 17), Counter32()).setMaxAccess("readonly")
icmpOutParmProbs = MibVariable((1, 3, 6, 1, 2, 1, 5, 18), Counter32()).setMaxAccess("readonly")
icmpOutSrcQuenchs = MibVariable((1, 3, 6, 1, 2, 1, 5, 19), Counter32()).setMaxAccess("readonly")
icmpOutRedirects = MibVariable((1, 3, 6, 1, 2, 1, 5, 20), Counter32()).setMaxAccess("readonly")
icmpOutEchos = MibVariable((1, 3, 6, 1, 2, 1, 5, 21), Counter32()).setMaxAccess("readonly")
icmpOutEchoReps = MibVariable((1, 3, 6, 1, 2, 1, 5, 22), Counter32()).setMaxAccess("readonly")
icmpOutTimestamps = MibVariable((1, 3, 6, 1, 2, 1, 5, 23), Counter32()).setMaxAccess("readonly")
icmpOutTimestampReps = MibVariable((1, 3, 6, 1, 2, 1, 5, 24), Counter32()).setMaxAccess("readonly")
icmpOutAddrMasks = MibVariable((1, 3, 6, 1, 2, 1, 5, 25), Counter32()).setMaxAccess("readonly")
icmpOutAddrMaskReps = MibVariable((1, 3, 6, 1, 2, 1, 5, 26), Counter32()).setMaxAccess("readonly")
ipMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 48))
ipMIBConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 48, 2))
ipMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 48, 2, 1))
ipMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 48, 2, 2))

# Augmentions

# Groups

icmpGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 48, 2, 2, 2)).setObjects(("IP-MIB", "icmpOutAddrMasks"), ("IP-MIB", "icmpOutRedirects"), ("IP-MIB", "icmpOutSrcQuenchs"), ("IP-MIB", "icmpOutTimestampReps"), ("IP-MIB", "icmpInTimestamps"), ("IP-MIB", "icmpInEchos"), ("IP-MIB", "icmpOutAddrMaskReps"), ("IP-MIB", "icmpInAddrMaskReps"), ("IP-MIB", "icmpInTimeExcds"), ("IP-MIB", "icmpInMsgs"), ("IP-MIB", "icmpInErrors"), ("IP-MIB", "icmpOutParmProbs"), ("IP-MIB", "icmpOutEchoReps"), ("IP-MIB", "icmpInDestUnreachs"), ("IP-MIB", "icmpInParmProbs"), ("IP-MIB", "icmpInAddrMasks"), ("IP-MIB", "icmpInRedirects"), ("IP-MIB", "icmpOutMsgs"), ("IP-MIB", "icmpInTimestampReps"), ("IP-MIB", "icmpOutTimestamps"), ("IP-MIB", "icmpInSrcQuenchs"), ("IP-MIB", "icmpOutTimeExcds"), ("IP-MIB", "icmpInEchoReps"), ("IP-MIB", "icmpOutErrors"), ("IP-MIB", "icmpOutEchos"), ("IP-MIB", "icmpOutDestUnreachs"), )
ipGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 48, 2, 2, 1)).setObjects(("IP-MIB", "ipNetToMediaType"), ("IP-MIB", "ipAdEntIfIndex"), ("IP-MIB", "ipInDelivers"), ("IP-MIB", "ipOutDiscards"), ("IP-MIB", "ipForwDatagrams"), ("IP-MIB", "ipDefaultTTL"), ("IP-MIB", "ipRoutingDiscards"), ("IP-MIB", "ipInUnknownProtos"), ("IP-MIB", "ipReasmFails"), ("IP-MIB", "ipForwarding"), ("IP-MIB", "ipReasmOKs"), ("IP-MIB", "ipAdEntAddr"), ("IP-MIB", "ipOutNoRoutes"), ("IP-MIB", "ipNetToMediaNetAddress"), ("IP-MIB", "ipNetToMediaIfIndex"), ("IP-MIB", "ipInAddrErrors"), ("IP-MIB", "ipFragOKs"), ("IP-MIB", "ipOutRequests"), ("IP-MIB", "ipInHdrErrors"), ("IP-MIB", "ipNetToMediaPhysAddress"), ("IP-MIB", "ipReasmReqds"), ("IP-MIB", "ipFragFails"), ("IP-MIB", "ipAdEntNetMask"), ("IP-MIB", "ipAdEntBcastAddr"), ("IP-MIB", "ipAdEntReasmMaxSize"), ("IP-MIB", "ipInReceives"), ("IP-MIB", "ipInDiscards"), ("IP-MIB", "ipReasmTimeout"), ("IP-MIB", "ipFragCreates"), )

# Exports

# Objects
mibBuilder.exportSymbols("IP-MIB", ip=ip, ipForwarding=ipForwarding, ipDefaultTTL=ipDefaultTTL, ipInReceives=ipInReceives, ipInHdrErrors=ipInHdrErrors, ipInAddrErrors=ipInAddrErrors, ipForwDatagrams=ipForwDatagrams, ipInUnknownProtos=ipInUnknownProtos, ipInDiscards=ipInDiscards, ipInDelivers=ipInDelivers, ipOutRequests=ipOutRequests, ipOutDiscards=ipOutDiscards, ipOutNoRoutes=ipOutNoRoutes, ipReasmTimeout=ipReasmTimeout, ipReasmReqds=ipReasmReqds, ipReasmOKs=ipReasmOKs, ipReasmFails=ipReasmFails, ipFragOKs=ipFragOKs, ipFragFails=ipFragFails, ipFragCreates=ipFragCreates, ipAddrTable=ipAddrTable, ipAddrEntry=ipAddrEntry, ipAdEntAddr=ipAdEntAddr, ipAdEntIfIndex=ipAdEntIfIndex, ipAdEntNetMask=ipAdEntNetMask, ipAdEntBcastAddr=ipAdEntBcastAddr, ipAdEntReasmMaxSize=ipAdEntReasmMaxSize, ipNetToMediaTable=ipNetToMediaTable, ipNetToMediaEntry=ipNetToMediaEntry, ipNetToMediaIfIndex=ipNetToMediaIfIndex, ipNetToMediaPhysAddress=ipNetToMediaPhysAddress, ipNetToMediaNetAddress=ipNetToMediaNetAddress, ipNetToMediaType=ipNetToMediaType, ipRoutingDiscards=ipRoutingDiscards, icmp=icmp, icmpInMsgs=icmpInMsgs, icmpInErrors=icmpInErrors, icmpInDestUnreachs=icmpInDestUnreachs, icmpInTimeExcds=icmpInTimeExcds, icmpInParmProbs=icmpInParmProbs, icmpInSrcQuenchs=icmpInSrcQuenchs, icmpInRedirects=icmpInRedirects, icmpInEchos=icmpInEchos, icmpInEchoReps=icmpInEchoReps, icmpInTimestamps=icmpInTimestamps, icmpInTimestampReps=icmpInTimestampReps, icmpInAddrMasks=icmpInAddrMasks, icmpInAddrMaskReps=icmpInAddrMaskReps, icmpOutMsgs=icmpOutMsgs, icmpOutErrors=icmpOutErrors, icmpOutDestUnreachs=icmpOutDestUnreachs, icmpOutTimeExcds=icmpOutTimeExcds, icmpOutParmProbs=icmpOutParmProbs, icmpOutSrcQuenchs=icmpOutSrcQuenchs, icmpOutRedirects=icmpOutRedirects, icmpOutEchos=icmpOutEchos, icmpOutEchoReps=icmpOutEchoReps, icmpOutTimestamps=icmpOutTimestamps, icmpOutTimestampReps=icmpOutTimestampReps, icmpOutAddrMasks=icmpOutAddrMasks, icmpOutAddrMaskReps=icmpOutAddrMaskReps, ipMIB=ipMIB, ipMIBConformance=ipMIBConformance, ipMIBCompliances=ipMIBCompliances, ipMIBGroups=ipMIBGroups)

# Groups
mibBuilder.exportSymbols("IP-MIB", icmpGroup=icmpGroup, ipGroup=ipGroup)
