# PySNMP SMI module. Autogenerated from smidump -f python MPLS-TE-STD-MIB
# by libsmi2pysnmp-0.0.3-alpha at Wed Nov 10 12:10:26 2004,
# Python version (2, 2, 1, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pysnmp.asn1 import subtypes

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( IndexIntegerNextFree, ) = mibBuilder.importSymbols("DIFFSERV-MIB", "IndexIntegerNextFree")
( InterfaceIndexOrZero, ifCounterDiscontinuityGroup, ifGeneralInformationGroup, ) = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "ifCounterDiscontinuityGroup", "ifGeneralInformationGroup")
( InetAddressPrefixLength, ) = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddressPrefixLength")
( MplsBitRate, MplsBurstSize, MplsExtendedTunnelId, MplsLSPID, MplsOwner, MplsPathIndex, MplsPathIndexOrZero, MplsTunnelAffinity, MplsTunnelIndex, MplsTunnelInstanceIndex, TeHopAddress, TeHopAddressAS, TeHopAddressType, TeHopAddressUnnum, mplsStdMIB, ) = mibBuilder.importSymbols("MPLS-TC-STD-MIB", "MplsBitRate", "MplsBurstSize", "MplsExtendedTunnelId", "MplsLSPID", "MplsOwner", "MplsPathIndex", "MplsPathIndexOrZero", "MplsTunnelAffinity", "MplsTunnelIndex", "MplsTunnelInstanceIndex", "TeHopAddress", "TeHopAddressAS", "TeHopAddressType", "TeHopAddressUnnum", "mplsStdMIB")
( SnmpAdminString, ) = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
( ModuleCompliance, NotificationGroup, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
( Bits, Counter32, Counter64, Integer32, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibVariable, MibTable, MibTableRow, MibTableColumn, TimeTicks, TimeTicks, Unsigned32, zeroDotZero, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Counter64", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibVariable", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "TimeTicks", "Unsigned32", "zeroDotZero")
( RowPointer, RowStatus, StorageType, TimeStamp, TruthValue, ) = mibBuilder.importSymbols("SNMPv2-TC", "RowPointer", "RowStatus", "StorageType", "TimeStamp", "TruthValue")

# Objects

mplsTeStdMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 166, 3))
mplsTeNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 3, 0))
mplsTeScalars = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 3, 1))
mplsTunnelConfigured = MibVariable((1, 3, 6, 1, 2, 1, 10, 166, 3, 1, 1), Unsigned32()).setMaxAccess("readonly")
mplsTunnelActive = MibVariable((1, 3, 6, 1, 2, 1, 10, 166, 3, 1, 2), Unsigned32()).setMaxAccess("readonly")
mplsTunnelTEDistProto = MibVariable((1, 3, 6, 1, 2, 1, 10, 166, 3, 1, 3), Bits().addNamedValues(("other", 0), ("ospf", 1), ("isis", 2), )).setMaxAccess("readonly")
mplsTunnelMaxHops = MibVariable((1, 3, 6, 1, 2, 1, 10, 166, 3, 1, 4), Unsigned32()).setMaxAccess("readonly")
mplsTunnelNotificationMaxRate = MibVariable((1, 3, 6, 1, 2, 1, 10, 166, 3, 1, 5), Unsigned32()).setMaxAccess("readwrite")
mplsTeObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 3, 2))
mplsTunnelIndexNext = MibVariable((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 1), IndexIntegerNextFree().addConstraints(subtypes.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
mplsTunnelTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2))
mplsTunnelEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1)).setIndexNames((0, "MPLS-TE-STD-MIB", "mplsTunnelIndex"), (0, "MPLS-TE-STD-MIB", "mplsTunnelInstance"), (0, "MPLS-TE-STD-MIB", "mplsTunnelIngressLSRId"), (0, "MPLS-TE-STD-MIB", "mplsTunnelEgressLSRId"))
mplsTunnelIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 1)).setColumnInitializer(MibVariable((), MplsTunnelIndex()).setMaxAccess("noaccess"))
mplsTunnelInstance = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 2)).setColumnInitializer(MibVariable((), MplsTunnelInstanceIndex()).setMaxAccess("noaccess"))
mplsTunnelIngressLSRId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 3)).setColumnInitializer(MibVariable((), MplsExtendedTunnelId()).setMaxAccess("noaccess"))
mplsTunnelEgressLSRId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 4)).setColumnInitializer(MibVariable((), MplsExtendedTunnelId()).setMaxAccess("noaccess"))
mplsTunnelName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 5)).setColumnInitializer(MibVariable((), SnmpAdminString()).setMaxAccess("readwrite"))
mplsTunnelDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 6)).setColumnInitializer(MibVariable((), SnmpAdminString()).setMaxAccess("readwrite"))
mplsTunnelIsIf = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 7)).setColumnInitializer(MibVariable((), TruthValue()).setMaxAccess("readwrite"))
mplsTunnelIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 8)).setColumnInitializer(MibVariable((), InterfaceIndexOrZero()).setMaxAccess("readonly"))
mplsTunnelOwner = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 9)).setColumnInitializer(MibVariable((), MplsOwner()).setMaxAccess("readonly"))
mplsTunnelRole = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 10)).setColumnInitializer(MibVariable((), Integer().addConstraints(subtypes.SingleValueConstraint(1,3,4,2,)).addNamedValues(("head", 1), ("transit", 2), ("tail", 3), ("headTail", 4), ).set(1)).setMaxAccess("readwrite"))
mplsTunnelXCPointer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 11)).setColumnInitializer(MibVariable((), RowPointer()).setMaxAccess("readwrite"))
mplsTunnelSignallingProto = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 12)).setColumnInitializer(MibVariable((), Integer().addConstraints(subtypes.SingleValueConstraint(1,2,3,4,)).addNamedValues(("none", 1), ("rsvp", 2), ("crldp", 3), ("other", 4), ).set(1)).setMaxAccess("readwrite"))
mplsTunnelSetupPrio = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 13)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(0, 7)).set(0)).setMaxAccess("readwrite"))
mplsTunnelHoldingPrio = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 14)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(0, 7)).set(0)).setMaxAccess("readwrite"))
mplsTunnelSessionAttributes = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 15)).setColumnInitializer(MibVariable((), Bits().addNamedValues(("fastReroute", 0), ("mergingPermitted", 1), ("isPersistent", 2), ("isPinned", 3), ("recordRoute", 4), )).setMaxAccess("readwrite"))
mplsTunnelLocalProtectInUse = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 16)).setColumnInitializer(MibVariable((), TruthValue()).setMaxAccess("readwrite"))
mplsTunnelResourcePointer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 17)).setColumnInitializer(MibVariable((), RowPointer()).setMaxAccess("readwrite"))
mplsTunnelPrimaryInstance = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 18)).setColumnInitializer(MibVariable((), MplsTunnelInstanceIndex()).setMaxAccess("readonly"))
mplsTunnelInstancePriority = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 19)).setColumnInitializer(MibVariable((), Unsigned32()).setMaxAccess("readwrite"))
mplsTunnelHopTableIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 20)).setColumnInitializer(MibVariable((), MplsPathIndexOrZero()).setMaxAccess("readwrite"))
mplsTunnelPathInUse = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 21)).setColumnInitializer(MibVariable((), MplsPathIndexOrZero()).setMaxAccess("readwrite"))
mplsTunnelARHopTableIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 22)).setColumnInitializer(MibVariable((), MplsPathIndexOrZero()).setMaxAccess("readonly"))
mplsTunnelCHopTableIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 23)).setColumnInitializer(MibVariable((), MplsPathIndexOrZero()).setMaxAccess("readonly"))
mplsTunnelIncludeAnyAffinity = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 24)).setColumnInitializer(MibVariable((), MplsTunnelAffinity()).setMaxAccess("readwrite"))
mplsTunnelIncludeAllAffinity = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 25)).setColumnInitializer(MibVariable((), MplsTunnelAffinity()).setMaxAccess("readwrite"))
mplsTunnelExcludeAnyAffinity = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 26)).setColumnInitializer(MibVariable((), MplsTunnelAffinity()).setMaxAccess("readwrite"))
mplsTunnelTotalUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 27)).setColumnInitializer(MibVariable((), TimeTicks()).setMaxAccess("readonly"))
mplsTunnelInstanceUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 28)).setColumnInitializer(MibVariable((), TimeTicks()).setMaxAccess("readonly"))
mplsTunnelPrimaryUpTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 29)).setColumnInitializer(MibVariable((), TimeTicks()).setMaxAccess("readonly"))
mplsTunnelPathChanges = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 30)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
mplsTunnelLastPathChange = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 31)).setColumnInitializer(MibVariable((), TimeTicks()).setMaxAccess("readonly"))
mplsTunnelCreationTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 32)).setColumnInitializer(MibVariable((), TimeStamp()).setMaxAccess("readonly"))
mplsTunnelStateTransitions = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 33)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
mplsTunnelAdminStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 34)).setColumnInitializer(MibVariable((), Integer().addConstraints(subtypes.SingleValueConstraint(2,3,1,)).addNamedValues(("up", 1), ("down", 2), ("testing", 3), )).setMaxAccess("readwrite"))
mplsTunnelOperStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 35)).setColumnInitializer(MibVariable((), Integer().addConstraints(subtypes.SingleValueConstraint(2,5,7,4,6,3,1,)).addNamedValues(("up", 1), ("down", 2), ("testing", 3), ("unknown", 4), ("dormant", 5), ("notPresent", 6), ("lowerLayerDown", 7), )).setMaxAccess("readonly"))
mplsTunnelRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 36)).setColumnInitializer(MibVariable((), RowStatus()).setMaxAccess("readwrite"))
mplsTunnelStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 2, 1, 37)).setColumnInitializer(MibVariable((), StorageType()).setMaxAccess("readwrite"))
mplsTunnelHopListIndexNext = MibVariable((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 3), MplsPathIndexOrZero()).setMaxAccess("readonly")
mplsTunnelHopTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4))
mplsTunnelHopEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4, 1)).setIndexNames((0, "MPLS-TE-STD-MIB", "mplsTunnelHopListIndex"), (0, "MPLS-TE-STD-MIB", "mplsTunnelHopPathOptionIndex"), (0, "MPLS-TE-STD-MIB", "mplsTunnelHopIndex"))
mplsTunnelHopListIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4, 1, 1)).setColumnInitializer(MibVariable((), MplsPathIndex()).setMaxAccess("noaccess"))
mplsTunnelHopPathOptionIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4, 1, 2)).setColumnInitializer(MibVariable((), MplsPathIndex()).setMaxAccess("noaccess"))
mplsTunnelHopIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4, 1, 3)).setColumnInitializer(MibVariable((), MplsPathIndex()).setMaxAccess("noaccess"))
mplsTunnelHopAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4, 1, 4)).setColumnInitializer(MibVariable((), TeHopAddressType()).setMaxAccess("readwrite"))
mplsTunnelHopIpAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4, 1, 5)).setColumnInitializer(MibVariable((), TeHopAddress()).setMaxAccess("readwrite"))
mplsTunnelHopIpPrefixLen = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4, 1, 6)).setColumnInitializer(MibVariable((), InetAddressPrefixLength()).setMaxAccess("readwrite"))
mplsTunnelHopAsNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4, 1, 7)).setColumnInitializer(MibVariable((), TeHopAddressAS()).setMaxAccess("readwrite"))
mplsTunnelHopAddrUnnum = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4, 1, 8)).setColumnInitializer(MibVariable((), TeHopAddressUnnum()).setMaxAccess("readwrite"))
mplsTunnelHopLspId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4, 1, 9)).setColumnInitializer(MibVariable((), MplsLSPID()).setMaxAccess("readwrite"))
mplsTunnelHopType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4, 1, 10)).setColumnInitializer(MibVariable((), Integer().addConstraints(subtypes.SingleValueConstraint(1,2,)).addNamedValues(("strict", 1), ("loose", 2), )).setMaxAccess("readwrite"))
mplsTunnelHopInclude = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4, 1, 11)).setColumnInitializer(MibVariable((), TruthValue()).setMaxAccess("readwrite"))
mplsTunnelHopPathOptionName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4, 1, 12)).setColumnInitializer(MibVariable((), SnmpAdminString()).setMaxAccess("readwrite"))
mplsTunnelHopEntryPathComp = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4, 1, 13)).setColumnInitializer(MibVariable((), Integer().addConstraints(subtypes.SingleValueConstraint(2,1,)).addNamedValues(("dynamic", 1), ("explicit", 2), )).setMaxAccess("readwrite"))
mplsTunnelHopRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4, 1, 14)).setColumnInitializer(MibVariable((), RowStatus()).setMaxAccess("readwrite"))
mplsTunnelHopStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 4, 1, 15)).setColumnInitializer(MibVariable((), StorageType()).setMaxAccess("readwrite"))
mplsTunnelResourceIndexNext = MibVariable((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 5), Unsigned32().addConstraints(subtypes.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly")
mplsTunnelResourceTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 6))
mplsTunnelResourceEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 6, 1)).setIndexNames((0, "MPLS-TE-STD-MIB", "mplsTunnelResourceIndex"))
mplsTunnelResourceIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 6, 1, 1)).setColumnInitializer(MibVariable((), Unsigned32().addConstraints(subtypes.ValueRangeConstraint(1, 2147483647L))).setMaxAccess("noaccess"))
mplsTunnelResourceMaxRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 6, 1, 2)).setColumnInitializer(MibVariable((), MplsBitRate()).setMaxAccess("readwrite"))
mplsTunnelResourceMeanRate = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 6, 1, 3)).setColumnInitializer(MibVariable((), MplsBitRate()).setMaxAccess("readwrite"))
mplsTunnelResourceMaxBurstSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 6, 1, 4)).setColumnInitializer(MibVariable((), MplsBurstSize()).setMaxAccess("readwrite"))
mplsTunnelResourceMeanBurstSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 6, 1, 5)).setColumnInitializer(MibVariable((), MplsBurstSize()).setMaxAccess("readwrite"))
mplsTunnelResourceExBurstSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 6, 1, 6)).setColumnInitializer(MibVariable((), MplsBurstSize()).setMaxAccess("readwrite"))
mplsTunnelResourceFrequency = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 6, 1, 7)).setColumnInitializer(MibVariable((), Integer().addConstraints(subtypes.SingleValueConstraint(3,2,1,)).addNamedValues(("unspecified", 1), ("frequent", 2), ("veryFrequent", 3), )).setMaxAccess("readwrite"))
mplsTunnelResourceWeight = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 6, 1, 8)).setColumnInitializer(MibVariable((), Unsigned32().addConstraints(subtypes.ValueRangeConstraint(0, 255))).setMaxAccess("readwrite"))
mplsTunnelResourceRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 6, 1, 9)).setColumnInitializer(MibVariable((), RowStatus()).setMaxAccess("readwrite"))
mplsTunnelResourceStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 6, 1, 10)).setColumnInitializer(MibVariable((), StorageType()).setMaxAccess("readwrite"))
mplsTunnelARHopTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 7))
mplsTunnelARHopEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 7, 1)).setIndexNames((0, "MPLS-TE-STD-MIB", "mplsTunnelARHopListIndex"), (0, "MPLS-TE-STD-MIB", "mplsTunnelARHopIndex"))
mplsTunnelARHopListIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 7, 1, 1)).setColumnInitializer(MibVariable((), MplsPathIndex()).setMaxAccess("noaccess"))
mplsTunnelARHopIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 7, 1, 2)).setColumnInitializer(MibVariable((), MplsPathIndex()).setMaxAccess("noaccess"))
mplsTunnelARHopAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 7, 1, 3)).setColumnInitializer(MibVariable((), TeHopAddressType()).setMaxAccess("readonly"))
mplsTunnelARHopIpAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 7, 1, 4)).setColumnInitializer(MibVariable((), TeHopAddress()).setMaxAccess("readonly"))
mplsTunnelARHopAddrUnnum = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 7, 1, 5)).setColumnInitializer(MibVariable((), TeHopAddressUnnum()).setMaxAccess("readonly"))
mplsTunnelARHopLspId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 7, 1, 6)).setColumnInitializer(MibVariable((), MplsLSPID()).setMaxAccess("readonly"))
mplsTunnelCHopTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 8))
mplsTunnelCHopEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 8, 1)).setIndexNames((0, "MPLS-TE-STD-MIB", "mplsTunnelCHopListIndex"), (0, "MPLS-TE-STD-MIB", "mplsTunnelCHopIndex"))
mplsTunnelCHopListIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 8, 1, 1)).setColumnInitializer(MibVariable((), MplsPathIndex()).setMaxAccess("noaccess"))
mplsTunnelCHopIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 8, 1, 2)).setColumnInitializer(MibVariable((), MplsPathIndex()).setMaxAccess("noaccess"))
mplsTunnelCHopAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 8, 1, 3)).setColumnInitializer(MibVariable((), TeHopAddressType()).setMaxAccess("readonly"))
mplsTunnelCHopIpAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 8, 1, 4)).setColumnInitializer(MibVariable((), TeHopAddress()).setMaxAccess("readonly"))
mplsTunnelCHopIpPrefixLen = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 8, 1, 5)).setColumnInitializer(MibVariable((), InetAddressPrefixLength()).setMaxAccess("readonly"))
mplsTunnelCHopAsNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 8, 1, 6)).setColumnInitializer(MibVariable((), TeHopAddressAS()).setMaxAccess("readonly"))
mplsTunnelCHopAddrUnnum = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 8, 1, 7)).setColumnInitializer(MibVariable((), TeHopAddressUnnum()).setMaxAccess("readonly"))
mplsTunnelCHopLspId = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 8, 1, 8)).setColumnInitializer(MibVariable((), MplsLSPID()).setMaxAccess("readonly"))
mplsTunnelCHopType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 8, 1, 9)).setColumnInitializer(MibVariable((), Integer().addConstraints(subtypes.SingleValueConstraint(1,2,)).addNamedValues(("strict", 1), ("loose", 2), )).setMaxAccess("readonly"))
mplsTunnelPerfTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 9))
mplsTunnelPerfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 9, 1))
mplsTunnelPerfPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 9, 1, 1)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
mplsTunnelPerfHCPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 9, 1, 2)).setColumnInitializer(MibVariable((), Counter64()).setMaxAccess("readonly"))
mplsTunnelPerfErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 9, 1, 3)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
mplsTunnelPerfBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 9, 1, 4)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
mplsTunnelPerfHCBytes = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 9, 1, 5)).setColumnInitializer(MibVariable((), Counter64()).setMaxAccess("readonly"))
mplsTunnelCRLDPResTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 10))
mplsTunnelCRLDPResEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 10, 1)).setIndexNames((0, "MPLS-TE-STD-MIB", "mplsTunnelResourceIndex"))
mplsTunnelCRLDPResMeanBurstSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 10, 1, 1)).setColumnInitializer(MibVariable((), MplsBurstSize()).setMaxAccess("readwrite"))
mplsTunnelCRLDPResExBurstSize = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 10, 1, 2)).setColumnInitializer(MibVariable((), MplsBurstSize()).setMaxAccess("readwrite"))
mplsTunnelCRLDPResFrequency = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 10, 1, 3)).setColumnInitializer(MibVariable((), Integer().addConstraints(subtypes.SingleValueConstraint(3,2,1,)).addNamedValues(("unspecified", 1), ("frequent", 2), ("veryFrequent", 3), )).setMaxAccess("readwrite"))
mplsTunnelCRLDPResWeight = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 10, 1, 4)).setColumnInitializer(MibVariable((), Unsigned32().addConstraints(subtypes.ValueRangeConstraint(0, 255))).setMaxAccess("readwrite"))
mplsTunnelCRLDPResFlags = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 10, 1, 5)).setColumnInitializer(MibVariable((), Unsigned32().addConstraints(subtypes.ValueRangeConstraint(0, 63))).setMaxAccess("readwrite"))
mplsTunnelCRLDPResRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 10, 1, 6)).setColumnInitializer(MibVariable((), RowStatus()).setMaxAccess("readwrite"))
mplsTunnelCRLDPResStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 10, 1, 7)).setColumnInitializer(MibVariable((), StorageType()).setMaxAccess("readwrite"))
mplsTunnelNotificationEnable = MibVariable((1, 3, 6, 1, 2, 1, 10, 166, 3, 2, 11), TruthValue()).setMaxAccess("readwrite")
mplsTeConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 3, 3))
mplsTeGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 3, 3, 1))
mplsTeCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 3, 3, 2))

# Augmentions
mplsTunnelEntry.registerAugmentions(("MPLS-TE-STD-MIB", "mplsTunnelPerfEntry"))

# Notifications

mplsTunnelDown = NotificationType((1, 3, 6, 1, 2, 1, 10, 166, 3, 0, 2)).setObjects(("MPLS-TE-STD-MIB", "mplsTunnelOperStatus"), ("MPLS-TE-STD-MIB", "mplsTunnelAdminStatus"), )
mplsTunnelUp = NotificationType((1, 3, 6, 1, 2, 1, 10, 166, 3, 0, 1)).setObjects(("MPLS-TE-STD-MIB", "mplsTunnelOperStatus"), ("MPLS-TE-STD-MIB", "mplsTunnelAdminStatus"), )
mplsTunnelRerouted = NotificationType((1, 3, 6, 1, 2, 1, 10, 166, 3, 0, 3)).setObjects(("MPLS-TE-STD-MIB", "mplsTunnelOperStatus"), ("MPLS-TE-STD-MIB", "mplsTunnelAdminStatus"), )
mplsTunnelReoptimized = NotificationType((1, 3, 6, 1, 2, 1, 10, 166, 3, 0, 4)).setObjects(("MPLS-TE-STD-MIB", "mplsTunnelOperStatus"), ("MPLS-TE-STD-MIB", "mplsTunnelAdminStatus"), )

# Groups

mplsTunnelManualGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 3, 3, 1, 2)).setObjects(("MPLS-TE-STD-MIB", "mplsTunnelSignallingProto"), )
mplsTunnelScalarGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 3, 3, 1, 4)).setObjects(("MPLS-TE-STD-MIB", "mplsTunnelNotificationMaxRate"), ("MPLS-TE-STD-MIB", "mplsTunnelMaxHops"), ("MPLS-TE-STD-MIB", "mplsTunnelConfigured"), ("MPLS-TE-STD-MIB", "mplsTunnelActive"), ("MPLS-TE-STD-MIB", "mplsTunnelTEDistProto"), )
mplsTunnelIsNotIntfcGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 3, 3, 1, 6)).setObjects(("MPLS-TE-STD-MIB", "mplsTunnelIsIf"), )
mplsTunnelIsIntfcGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 3, 3, 1, 5)).setObjects(("MPLS-TE-STD-MIB", "mplsTunnelIsIf"), )
mplsTunnelGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 3, 3, 1, 1)).setObjects(("MPLS-TE-STD-MIB", "mplsTunnelPerfHCBytes"), ("MPLS-TE-STD-MIB", "mplsTunnelInstancePriority"), ("MPLS-TE-STD-MIB", "mplsTunnelResourcePointer"), ("MPLS-TE-STD-MIB", "mplsTunnelARHopTableIndex"), ("MPLS-TE-STD-MIB", "mplsTunnelARHopIpAddr"), ("MPLS-TE-STD-MIB", "mplsTunnelIfIndex"), ("MPLS-TE-STD-MIB", "mplsTunnelCHopAddrUnnum"), ("MPLS-TE-STD-MIB", "mplsTunnelPrimaryInstance"), ("MPLS-TE-STD-MIB", "mplsTunnelResourceMaxBurstSize"), ("MPLS-TE-STD-MIB", "mplsTunnelIncludeAnyAffinity"), ("MPLS-TE-STD-MIB", "mplsTunnelName"), ("MPLS-TE-STD-MIB", "mplsTunnelARHopLspId"), ("MPLS-TE-STD-MIB", "mplsTunnelResourceMeanRate"), ("MPLS-TE-STD-MIB", "mplsTunnelResourceMaxRate"), ("MPLS-TE-STD-MIB", "mplsTunnelPrimaryUpTime"), ("MPLS-TE-STD-MIB", "mplsTunnelRole"), ("MPLS-TE-STD-MIB", "mplsTunnelResourceIndexNext"), ("MPLS-TE-STD-MIB", "mplsTunnelOwner"), ("MPLS-TE-STD-MIB", "mplsTunnelRowStatus"), ("MPLS-TE-STD-MIB", "mplsTunnelResourceExBurstSize"), ("MPLS-TE-STD-MIB", "mplsTunnelHopTableIndex"), ("MPLS-TE-STD-MIB", "mplsTunnelPerfPackets"), ("MPLS-TE-STD-MIB", "mplsTunnelCHopAsNumber"), ("MPLS-TE-STD-MIB", "mplsTunnelOperStatus"), ("MPLS-TE-STD-MIB", "mplsTunnelTotalUpTime"), ("MPLS-TE-STD-MIB", "mplsTunnelLastPathChange"), ("MPLS-TE-STD-MIB", "mplsTunnelNotificationEnable"), ("MPLS-TE-STD-MIB", "mplsTunnelStateTransitions"), ("MPLS-TE-STD-MIB", "mplsTunnelCreationTime"), ("MPLS-TE-STD-MIB", "mplsTunnelDescr"), ("MPLS-TE-STD-MIB", "mplsTunnelResourceFrequency"), ("MPLS-TE-STD-MIB", "mplsTunnelStorageType"), ("MPLS-TE-STD-MIB", "mplsTunnelIncludeAllAffinity"), ("MPLS-TE-STD-MIB", "mplsTunnelPathInUse"), ("MPLS-TE-STD-MIB", "mplsTunnelPerfErrors"), ("MPLS-TE-STD-MIB", "mplsTunnelPathChanges"), ("MPLS-TE-STD-MIB", "mplsTunnelResourceMeanBurstSize"), ("MPLS-TE-STD-MIB", "mplsTunnelIndexNext"), ("MPLS-TE-STD-MIB", "mplsTunnelCHopIpPrefixLen"), ("MPLS-TE-STD-MIB", "mplsTunnelPerfHCPackets"), ("MPLS-TE-STD-MIB", "mplsTunnelResourceStorageType"), ("MPLS-TE-STD-MIB", "mplsTunnelInstanceUpTime"), ("MPLS-TE-STD-MIB", "mplsTunnelActive"), ("MPLS-TE-STD-MIB", "mplsTunnelConfigured"), ("MPLS-TE-STD-MIB", "mplsTunnelCHopLspId"), ("MPLS-TE-STD-MIB", "mplsTunnelARHopAddrUnnum"), ("MPLS-TE-STD-MIB", "mplsTunnelCHopAddrType"), ("MPLS-TE-STD-MIB", "mplsTunnelARHopAddrType"), ("MPLS-TE-STD-MIB", "mplsTunnelResourceRowStatus"), ("MPLS-TE-STD-MIB", "mplsTunnelAdminStatus"), ("MPLS-TE-STD-MIB", "mplsTunnelResourceWeight"), ("MPLS-TE-STD-MIB", "mplsTunnelCHopType"), ("MPLS-TE-STD-MIB", "mplsTunnelCHopTableIndex"), ("MPLS-TE-STD-MIB", "mplsTunnelXCPointer"), ("MPLS-TE-STD-MIB", "mplsTunnelCHopIpAddr"), ("MPLS-TE-STD-MIB", "mplsTunnelExcludeAnyAffinity"), ("MPLS-TE-STD-MIB", "mplsTunnelPerfBytes"), )
mplsTunnelSignaledGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 3, 3, 1, 3)).setObjects(("MPLS-TE-STD-MIB", "mplsTunnelLocalProtectInUse"), ("MPLS-TE-STD-MIB", "mplsTunnelHopPathOptionName"), ("MPLS-TE-STD-MIB", "mplsTunnelHoldingPrio"), ("MPLS-TE-STD-MIB", "mplsTunnelHopIpPrefixLen"), ("MPLS-TE-STD-MIB", "mplsTunnelHopType"), ("MPLS-TE-STD-MIB", "mplsTunnelHopAddrUnnum"), ("MPLS-TE-STD-MIB", "mplsTunnelHopListIndexNext"), ("MPLS-TE-STD-MIB", "mplsTunnelSignallingProto"), ("MPLS-TE-STD-MIB", "mplsTunnelHopStorageType"), ("MPLS-TE-STD-MIB", "mplsTunnelHopRowStatus"), ("MPLS-TE-STD-MIB", "mplsTunnelSetupPrio"), ("MPLS-TE-STD-MIB", "mplsTunnelHopAsNumber"), ("MPLS-TE-STD-MIB", "mplsTunnelHopIpAddr"), ("MPLS-TE-STD-MIB", "mplsTunnelHopAddrType"), ("MPLS-TE-STD-MIB", "mplsTunnelSessionAttributes"), ("MPLS-TE-STD-MIB", "mplsTunnelHopLspId"), ("MPLS-TE-STD-MIB", "mplsTunnelHopInclude"), ("MPLS-TE-STD-MIB", "mplsTunnelHopEntryPathComp"), )
mplsTeNotificationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 3, 3, 1, 8)).setObjects(("MPLS-TE-STD-MIB", "mplsTunnelDown"), ("MPLS-TE-STD-MIB", "mplsTunnelUp"), ("MPLS-TE-STD-MIB", "mplsTunnelRerouted"), ("MPLS-TE-STD-MIB", "mplsTunnelReoptimized"), )
mplsTunnelCRLDPResOptionalGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 3, 3, 1, 7)).setObjects(("MPLS-TE-STD-MIB", "mplsTunnelCRLDPResFrequency"), ("MPLS-TE-STD-MIB", "mplsTunnelCRLDPResFlags"), ("MPLS-TE-STD-MIB", "mplsTunnelCRLDPResRowStatus"), ("MPLS-TE-STD-MIB", "mplsTunnelCRLDPResMeanBurstSize"), ("MPLS-TE-STD-MIB", "mplsTunnelCRLDPResExBurstSize"), ("MPLS-TE-STD-MIB", "mplsTunnelCRLDPResWeight"), ("MPLS-TE-STD-MIB", "mplsTunnelCRLDPResStorageType"), )

# Exports

# Objects
mibBuilder.exportSymbols("MPLS-TE-STD-MIB", mplsTeStdMIB=mplsTeStdMIB, mplsTeNotifications=mplsTeNotifications, mplsTeScalars=mplsTeScalars, mplsTunnelConfigured=mplsTunnelConfigured, mplsTunnelActive=mplsTunnelActive, mplsTunnelTEDistProto=mplsTunnelTEDistProto, mplsTunnelMaxHops=mplsTunnelMaxHops, mplsTunnelNotificationMaxRate=mplsTunnelNotificationMaxRate, mplsTeObjects=mplsTeObjects, mplsTunnelIndexNext=mplsTunnelIndexNext, mplsTunnelTable=mplsTunnelTable, mplsTunnelEntry=mplsTunnelEntry, mplsTunnelIndex=mplsTunnelIndex, mplsTunnelInstance=mplsTunnelInstance, mplsTunnelIngressLSRId=mplsTunnelIngressLSRId, mplsTunnelEgressLSRId=mplsTunnelEgressLSRId, mplsTunnelName=mplsTunnelName, mplsTunnelDescr=mplsTunnelDescr, mplsTunnelIsIf=mplsTunnelIsIf, mplsTunnelIfIndex=mplsTunnelIfIndex, mplsTunnelOwner=mplsTunnelOwner, mplsTunnelRole=mplsTunnelRole, mplsTunnelXCPointer=mplsTunnelXCPointer, mplsTunnelSignallingProto=mplsTunnelSignallingProto, mplsTunnelSetupPrio=mplsTunnelSetupPrio, mplsTunnelHoldingPrio=mplsTunnelHoldingPrio, mplsTunnelSessionAttributes=mplsTunnelSessionAttributes, mplsTunnelLocalProtectInUse=mplsTunnelLocalProtectInUse, mplsTunnelResourcePointer=mplsTunnelResourcePointer, mplsTunnelPrimaryInstance=mplsTunnelPrimaryInstance, mplsTunnelInstancePriority=mplsTunnelInstancePriority, mplsTunnelHopTableIndex=mplsTunnelHopTableIndex, mplsTunnelPathInUse=mplsTunnelPathInUse, mplsTunnelARHopTableIndex=mplsTunnelARHopTableIndex, mplsTunnelCHopTableIndex=mplsTunnelCHopTableIndex, mplsTunnelIncludeAnyAffinity=mplsTunnelIncludeAnyAffinity, mplsTunnelIncludeAllAffinity=mplsTunnelIncludeAllAffinity, mplsTunnelExcludeAnyAffinity=mplsTunnelExcludeAnyAffinity, mplsTunnelTotalUpTime=mplsTunnelTotalUpTime, mplsTunnelInstanceUpTime=mplsTunnelInstanceUpTime, mplsTunnelPrimaryUpTime=mplsTunnelPrimaryUpTime, mplsTunnelPathChanges=mplsTunnelPathChanges, mplsTunnelLastPathChange=mplsTunnelLastPathChange, mplsTunnelCreationTime=mplsTunnelCreationTime, mplsTunnelStateTransitions=mplsTunnelStateTransitions, mplsTunnelAdminStatus=mplsTunnelAdminStatus, mplsTunnelOperStatus=mplsTunnelOperStatus, mplsTunnelRowStatus=mplsTunnelRowStatus, mplsTunnelStorageType=mplsTunnelStorageType, mplsTunnelHopListIndexNext=mplsTunnelHopListIndexNext, mplsTunnelHopTable=mplsTunnelHopTable, mplsTunnelHopEntry=mplsTunnelHopEntry, mplsTunnelHopListIndex=mplsTunnelHopListIndex, mplsTunnelHopPathOptionIndex=mplsTunnelHopPathOptionIndex, mplsTunnelHopIndex=mplsTunnelHopIndex, mplsTunnelHopAddrType=mplsTunnelHopAddrType, mplsTunnelHopIpAddr=mplsTunnelHopIpAddr, mplsTunnelHopIpPrefixLen=mplsTunnelHopIpPrefixLen, mplsTunnelHopAsNumber=mplsTunnelHopAsNumber, mplsTunnelHopAddrUnnum=mplsTunnelHopAddrUnnum, mplsTunnelHopLspId=mplsTunnelHopLspId, mplsTunnelHopType=mplsTunnelHopType, mplsTunnelHopInclude=mplsTunnelHopInclude, mplsTunnelHopPathOptionName=mplsTunnelHopPathOptionName, mplsTunnelHopEntryPathComp=mplsTunnelHopEntryPathComp, mplsTunnelHopRowStatus=mplsTunnelHopRowStatus, mplsTunnelHopStorageType=mplsTunnelHopStorageType, mplsTunnelResourceIndexNext=mplsTunnelResourceIndexNext, mplsTunnelResourceTable=mplsTunnelResourceTable, mplsTunnelResourceEntry=mplsTunnelResourceEntry, mplsTunnelResourceIndex=mplsTunnelResourceIndex, mplsTunnelResourceMaxRate=mplsTunnelResourceMaxRate, mplsTunnelResourceMeanRate=mplsTunnelResourceMeanRate, mplsTunnelResourceMaxBurstSize=mplsTunnelResourceMaxBurstSize, mplsTunnelResourceMeanBurstSize=mplsTunnelResourceMeanBurstSize, mplsTunnelResourceExBurstSize=mplsTunnelResourceExBurstSize, mplsTunnelResourceFrequency=mplsTunnelResourceFrequency, mplsTunnelResourceWeight=mplsTunnelResourceWeight, mplsTunnelResourceRowStatus=mplsTunnelResourceRowStatus, mplsTunnelResourceStorageType=mplsTunnelResourceStorageType, mplsTunnelARHopTable=mplsTunnelARHopTable, mplsTunnelARHopEntry=mplsTunnelARHopEntry, mplsTunnelARHopListIndex=mplsTunnelARHopListIndex, mplsTunnelARHopIndex=mplsTunnelARHopIndex, mplsTunnelARHopAddrType=mplsTunnelARHopAddrType, mplsTunnelARHopIpAddr=mplsTunnelARHopIpAddr, mplsTunnelARHopAddrUnnum=mplsTunnelARHopAddrUnnum, mplsTunnelARHopLspId=mplsTunnelARHopLspId, mplsTunnelCHopTable=mplsTunnelCHopTable, mplsTunnelCHopEntry=mplsTunnelCHopEntry, mplsTunnelCHopListIndex=mplsTunnelCHopListIndex, mplsTunnelCHopIndex=mplsTunnelCHopIndex, mplsTunnelCHopAddrType=mplsTunnelCHopAddrType, mplsTunnelCHopIpAddr=mplsTunnelCHopIpAddr, mplsTunnelCHopIpPrefixLen=mplsTunnelCHopIpPrefixLen, mplsTunnelCHopAsNumber=mplsTunnelCHopAsNumber, mplsTunnelCHopAddrUnnum=mplsTunnelCHopAddrUnnum, mplsTunnelCHopLspId=mplsTunnelCHopLspId, mplsTunnelCHopType=mplsTunnelCHopType, mplsTunnelPerfTable=mplsTunnelPerfTable, mplsTunnelPerfEntry=mplsTunnelPerfEntry, mplsTunnelPerfPackets=mplsTunnelPerfPackets, mplsTunnelPerfHCPackets=mplsTunnelPerfHCPackets, mplsTunnelPerfErrors=mplsTunnelPerfErrors, mplsTunnelPerfBytes=mplsTunnelPerfBytes, mplsTunnelPerfHCBytes=mplsTunnelPerfHCBytes, mplsTunnelCRLDPResTable=mplsTunnelCRLDPResTable, mplsTunnelCRLDPResEntry=mplsTunnelCRLDPResEntry, mplsTunnelCRLDPResMeanBurstSize=mplsTunnelCRLDPResMeanBurstSize, mplsTunnelCRLDPResExBurstSize=mplsTunnelCRLDPResExBurstSize, mplsTunnelCRLDPResFrequency=mplsTunnelCRLDPResFrequency, mplsTunnelCRLDPResWeight=mplsTunnelCRLDPResWeight, mplsTunnelCRLDPResFlags=mplsTunnelCRLDPResFlags, mplsTunnelCRLDPResRowStatus=mplsTunnelCRLDPResRowStatus, mplsTunnelCRLDPResStorageType=mplsTunnelCRLDPResStorageType, mplsTunnelNotificationEnable=mplsTunnelNotificationEnable, mplsTeConformance=mplsTeConformance, mplsTeGroups=mplsTeGroups, mplsTeCompliances=mplsTeCompliances)

# Notifications
mibBuilder.exportSymbols("MPLS-TE-STD-MIB", mplsTunnelDown=mplsTunnelDown, mplsTunnelUp=mplsTunnelUp, mplsTunnelRerouted=mplsTunnelRerouted, mplsTunnelReoptimized=mplsTunnelReoptimized)

# Groups
mibBuilder.exportSymbols("MPLS-TE-STD-MIB", mplsTunnelManualGroup=mplsTunnelManualGroup, mplsTunnelScalarGroup=mplsTunnelScalarGroup, mplsTunnelIsNotIntfcGroup=mplsTunnelIsNotIntfcGroup, mplsTunnelIsIntfcGroup=mplsTunnelIsIntfcGroup, mplsTunnelGroup=mplsTunnelGroup, mplsTunnelSignaledGroup=mplsTunnelSignaledGroup, mplsTeNotificationGroup=mplsTeNotificationGroup, mplsTunnelCRLDPResOptionalGroup=mplsTunnelCRLDPResOptionalGroup)
