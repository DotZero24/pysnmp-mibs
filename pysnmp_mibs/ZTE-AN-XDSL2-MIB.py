#
# PySNMP MIB module ZTE-AN-XDSL2-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/rob/Code/pysnmp-mibs/mibs/zte/ZTE-AN-XDSL2-MIB
# Produced by pysmi-1.1.12 at Mon Aug  4 16:58:26 2025
# On host macmini.vegmond.io platform Darwin version 24.5.0 by user rob
# Using Python version 3.12.8 (main, Dec  3 2024, 18:42:41) [Clang 16.0.0 (clang-1600.0.26.4)]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
HCPerfIntervalThreshold, HCPerfTimeElapsed = mibBuilder.importSymbols("HC-PerfHist-TC-MIB", "HCPerfIntervalThreshold", "HCPerfTimeElapsed")
ifIndex, = mibBuilder.importSymbols("IF-MIB", "ifIndex")
SnmpAdminString, = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, Integer32, enterprises, Gauge32, ModuleIdentity, TimeTicks, NotificationType, Counter32, Bits, IpAddress, iso, ObjectIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "Integer32", "enterprises", "Gauge32", "ModuleIdentity", "TimeTicks", "NotificationType", "Counter32", "Bits", "IpAddress", "iso", "ObjectIdentity", "Counter64")
TextualConvention, DisplayString, TruthValue, RowStatus = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "TruthValue", "RowStatus")
xdsl2PMLineHist15MinEntry, xdsl2PMLineCurrEntry = mibBuilder.importSymbols("VDSL2-LINE-MIB", "xdsl2PMLineHist15MinEntry", "xdsl2PMLineCurrEntry")
Xdsl2LineSnrMode, Xdsl2ScMaskUs, Xdsl2LineUs0Disable, Xdsl2RfiBands, Xdsl2LineLimitMask, Xdsl2Band, Xdsl2CarMask, Xdsl2LdsfResult, Xdsl2SymbolProtection, Xdsl2ScMaskDs, Xdsl2PsdMaskDs, Xdsl2PsdMaskUs, Xdsl2ChPtmStatus, Xdsl2ChAtmStatus, Xdsl2UpboKLF, Xdsl2PowerMngState, Xdsl2OperationModes, Xdsl2BandUs, Xdsl2ConfPmsForce, Xdsl2Tssi, Xdsl2LinePmMode, Xdsl2LastTransmittedState, Xdsl2InitResult, Xdsl2LineUs0Mask, Xdsl2MaxBer, Xdsl2TransmissionModeType, Xdsl2LineStatus, Xdsl2LineLdsf, Xdsl2Unit, Xdsl2LineProfiles, Xdsl2RaMode, Xdsl2Direction, Xdsl2LineClassMask = mibBuilder.importSymbols("VDSL2-LINE-TC-MIB", "Xdsl2LineSnrMode", "Xdsl2ScMaskUs", "Xdsl2LineUs0Disable", "Xdsl2RfiBands", "Xdsl2LineLimitMask", "Xdsl2Band", "Xdsl2CarMask", "Xdsl2LdsfResult", "Xdsl2SymbolProtection", "Xdsl2ScMaskDs", "Xdsl2PsdMaskDs", "Xdsl2PsdMaskUs", "Xdsl2ChPtmStatus", "Xdsl2ChAtmStatus", "Xdsl2UpboKLF", "Xdsl2PowerMngState", "Xdsl2OperationModes", "Xdsl2BandUs", "Xdsl2ConfPmsForce", "Xdsl2Tssi", "Xdsl2LinePmMode", "Xdsl2LastTransmittedState", "Xdsl2InitResult", "Xdsl2LineUs0Mask", "Xdsl2MaxBer", "Xdsl2TransmissionModeType", "Xdsl2LineStatus", "Xdsl2LineLdsf", "Xdsl2Unit", "Xdsl2LineProfiles", "Xdsl2RaMode", "Xdsl2Direction", "Xdsl2LineClassMask")
zxAnXdsl2Mib = ModuleIdentity((1, 3, 6, 1, 4, 1, 3902, 1015, 1001))
if mibBuilder.loadTexts: zxAnXdsl2Mib.setLastUpdated('200708161500Z')
if mibBuilder.loadTexts: zxAnXdsl2Mib.setOrganization('ZTE Corporation')
zte = MibIdentifier((1, 3, 6, 1, 4, 1, 3902))
zxAn = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 1015))
zxAnXdsl2Objects = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1))
zxAnXdsl2TrapObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 3))
zxAnXdsl2GlobalObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 1))
zxAnXdsl2Line = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2))
zxAnXdsl2LineProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3))
zxAnXdsl2AlarmProfile = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4))
zxAnXdsl2PMLine = MibIdentifier((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5))
class ZxAnXdsl2TransmissionModeType(TextualConvention, Bits):
    status = 'current'
    namedValues = NamedValues(("ansit1413", 0), ("etsi", 1), ("g9921PotsNonOverlapped", 2), ("g9921PotsOverlapped", 3), ("g9921IsdnNonOverlapped", 4), ("g9921isdnOverlapped", 5), ("g9921tcmIsdnNonOverlapped", 6), ("g9921tcmIsdnOverlapped", 7), ("g9922potsNonOverlapeed", 8), ("g9922potsOverlapped", 9), ("g9922tcmIsdnNonOverlapped", 10), ("g9922tcmIsdnOverlapped", 11), ("g9921tcmIsdnSymmetric", 12), ("reserved1", 13), ("reserved2", 14), ("reserved3", 15), ("reserved4", 16), ("reserved5", 17), ("g9923PotsNonOverlapped", 18), ("g9923PotsOverlapped", 19), ("g9923IsdnNonOverlapped", 20), ("g9923isdnOverlapped", 21), ("reserved6", 22), ("reserved7", 23), ("g9924potsNonOverlapeed", 24), ("g9924potsOverlapped", 25), ("reserved8", 26), ("reserved9", 27), ("g9923AnnexIAllDigNonOverlapped", 28), ("g9923AnnexIAllDigOverlapped", 29), ("g9923AnnexJAllDigNonOverlapped", 30), ("g9923AnnexJAllDigOverlapped", 31), ("g9924AnnexIAllDigNonOverlapped", 32), ("g9924AnnexIAllDigOverlapped", 33), ("g9923AnnexLMode1NonOverlapped", 34), ("g9923AnnexLMode2NonOverlapped", 35), ("g9923AnnexLMode3Overlapped", 36), ("g9923AnnexLMode4Overlapped", 37), ("g9923AnnexMPotsNonOverlapped", 38), ("g9923AnnexMPotsOverlapped", 39), ("g9925PotsNonOverlapped", 40), ("g9925PotsOverlapped", 41), ("g9925IsdnNonOverlapped", 42), ("g9925isdnOverlapped", 43), ("reserved10", 44), ("reserved11", 45), ("g9925AnnexIAllDigNonOverlapped", 46), ("g9925AnnexIAllDigOverlapped", 47), ("g9925AnnexJAllDigNonOverlapped", 48), ("g9925AnnexJAllDigOverlapped", 49), ("g9925AnnexMPotsNonOverlapped", 50), ("g9925AnnexMPotsOverlapped", 51), ("reserved12", 52), ("g9932AnnexAProtection", 53), ("g9932AnnexBProtection", 54), ("g9932AnnexCProtection", 55), ("g9932AnnexA", 56), ("g9932AnnexB", 57), ("g9932AnnexC", 58), ("reserved16", 59), ("reserved17", 60), ("g9935AnnexA", 61), ("g9935AnnexB", 62), ("g9935AnnexC", 63))

zxAnXdsl2LineTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1), )
if mibBuilder.loadTexts: zxAnXdsl2LineTable.setStatus('current')
zxAnXdsl2LineEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1), ).setIndexNames((0, "IF-MIB", "ifIndex"))
if mibBuilder.loadTexts: zxAnXdsl2LineEntry.setStatus('current')
zxAnXdsl2LineBaseConfProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('DEFVAL')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxAnXdsl2LineBaseConfProfile.setStatus('current')
zxAnXdsl2LineSrvcConfProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('DEFVAL')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxAnXdsl2LineSrvcConfProfile.setStatus('current')
zxAnXdsl2LineDpboConfProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 3), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('DEFVAL')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxAnXdsl2LineDpboConfProfile.setStatus('current')
zxAnXdsl2LineUpboConfProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 4), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('DEFVAL')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxAnXdsl2LineUpboConfProfile.setStatus('current')
zxAnXdsl2LineAlmThreshPrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 5), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('DEFVAL')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxAnXdsl2LineAlmThreshPrfName.setStatus('current')
zxAnXdsl2LineCmndConfPmsf = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 6), Xdsl2ConfPmsForce().clone('l3toL0')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxAnXdsl2LineCmndConfPmsf.setStatus('current')
zxAnXdsl2LineCmndConfLdsf = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 7), Xdsl2LineLdsf().clone('inhibit')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxAnXdsl2LineCmndConfLdsf.setStatus('current')
zxAnXdsl2LineCmndConfLdsfFailReason = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 8), Xdsl2LdsfResult().clone('none')).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineCmndConfLdsfFailReason.setStatus('current')
zxAnXdsl2LineCmndAutomodeColdStart = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 9), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxAnXdsl2LineCmndAutomodeColdStart.setStatus('current')
zxAnXdsl2LineStatusXtuTransSys = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 10), ZxAnXdsl2TransmissionModeType()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusXtuTransSys.setStatus('current')
zxAnXdsl2LineStatusPwrMngState = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 11), Xdsl2PowerMngState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusPwrMngState.setStatus('current')
zxAnXdsl2LineStatusInitResult = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3, 4, 5, 254))).clone(namedValues=NamedValues(("noFail", 0), ("configError", 1), ("configNotFeasible", 2), ("commFail", 3), ("noPeerAtu", 4), ("otherCause", 5), ("protocolInitFailure", 254)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusInitResult.setStatus('current')
zxAnXdsl2LineStatusLastStateDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 13), Xdsl2LastTransmittedState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusLastStateDs.setStatus('current')
zxAnXdsl2LineStatusLastStateUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 14), Xdsl2LastTransmittedState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusLastStateUs.setStatus('current')
zxAnXdsl2LineStatusXtur = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 15), Bits().clone(namedValues=NamedValues(("noDefect", 0), ("lossOfFraming", 1), ("lossOfSignal", 2), ("lossOfPower", 3), ("unused", 4), ("lossOfSignalQuality", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusXtur.setStatus('current')
zxAnXdsl2LineStatusXtuc = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 16), Bits().clone(namedValues=NamedValues(("noDefect", 0), ("lossOfFraming", 1), ("lossOfSignal", 2), ("lossOfPower", 3), ("initFailure", 4), ("lossOfSignalQuality", 5), ("lossOfLink", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusXtuc.setStatus('current')
zxAnXdsl2LineStatusAttainableRateDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 17), Unsigned32()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusAttainableRateDs.setStatus('current')
zxAnXdsl2LineStatusAttainableRateUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 18), Unsigned32()).setUnits('kbps').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusAttainableRateUs.setStatus('current')
zxAnXdsl2LineStatusActPsdDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 19), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-900, 0), ValueRangeConstraint(2147483647, 2147483647), ))).setUnits('0.1 dBm/Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusActPsdDs.setStatus('current')
zxAnXdsl2LineStatusActPsdUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 20), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-900, 0), ValueRangeConstraint(2147483647, 2147483647), ))).setUnits('0.1 dBm/Hz').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusActPsdUs.setStatus('current')
zxAnXdsl2LineStatusActAtpDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-310, 310), ValueRangeConstraint(2147483647, 2147483647), ))).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusActAtpDs.setStatus('current')
zxAnXdsl2LineStatusActAtpUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-310, 310), ValueRangeConstraint(2147483647, 2147483647), ))).setUnits('0.1 dBm').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusActAtpUs.setStatus('current')
zxAnXdsl2LineStatusActStandardPrf = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 23), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8))).clone(namedValues=NamedValues(("g993_2_8A", 1), ("g993_2_8B", 2), ("g993_2_8C", 3), ("g993_2_8D", 4), ("g993_2_12A", 5), ("g993_2_12B", 6), ("g993_2_17A", 7), ("g993_2_30A", 8)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusActStandardPrf.setStatus('current')
zxAnXdsl2LineDataPathType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 24), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("atm", 1), ("ptm", 2), ("stm", 3), ("auto", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxAnXdsl2LineDataPathType.setStatus('current')
zxAnXdsl2LineStatusActLimitMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 25), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 8, 16, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 96, 97))).clone(namedValues=NamedValues(("annexA_D32", 0), ("annexA_D64", 8), ("annexA_D128", 16), ("annexB_B7_1_997_M1c_A_7", 32), ("annexB_B7_2_997_M1x_M_8", 33), ("annexB_B7_3_997_M1x_M", 34), ("annexB_B7_4_997_M2x_M_8", 35), ("annexB_B7_5_997_M2x_A", 36), ("annexB_B7_6_997_M2x_M", 37), ("annexB_B7_7_HPE17_M1_NUS0", 38), ("annexB_B7_8_HPE30_M1_NUS0", 39), ("annexB_B7_9_997E17_M2x_NUS0", 40), ("annexB_B7_10_997E30_M2x_NUS0", 41), ("annexB_B8_1_998_M1_x_A", 64), ("annexB_B8_2_998_M1x_B", 65), ("annexB_B8_3_998_M1x_NUS0", 66), ("annexB_B8_4_998_M2x_A", 67), ("annexB_B8_5_998_M2x_M", 68), ("annexB_B8_6_998_M2x_B", 69), ("annexB_B8_7_998_M2x_NUS0", 70), ("annexB_B8_8_998E17_M2x_NUS0", 71), ("annexB_B8_9_998E17_M2x_NUS0_M", 72), ("annexB_B8_10_998ADE17_M2x_NUS0_M", 73), ("annexB_B8_11_998ADE17_M2x_A", 74), ("annexB_B8_12_998ADE17_M2x_B", 75), ("annexB_B8_13_998E30_M2x_NUS0", 76), ("annexB_B8_14_998E30_M2x_NUS0_M", 77), ("annexB_B8_15_998ADE30_M2x_NUS0_M", 78), ("annexB_B8_16_998ADE30_M2x_NUS0_A", 79), ("annexC_Pots", 96), ("annexC_Tcm_Isdn", 97)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusActLimitMask.setStatus('current')
zxAnXdsl2LineStatusActSnrModeDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 26), Xdsl2LineSnrMode().clone('virtualNoiseDisabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusActSnrModeDs.setStatus('current')
zxAnXdsl2LineStatusActSnrModeUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 27), Xdsl2LineSnrMode().clone('virtualNoiseDisabled')).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusActSnrModeUs.setStatus('current')
zxAnXdsl2LineStatusElectricalLength = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1280))).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusElectricalLength.setStatus('current')
zxAnXdsl2LineStatusTrellisDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 29), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusTrellisDs.setStatus('current')
zxAnXdsl2LineStatusTrellisUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 30), TruthValue().clone('false')).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusTrellisUs.setStatus('current')
zxAnXdsl2LineStatusActualCe = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 31), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 16)).clone(2)).setUnits('N/32 samples').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusActualCe.setStatus('current')
zxAnXdsl2LineStatusOperState = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 32), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("idle", 1), ("handshake", 2), ("training", 3), ("testing", 4), ("showtime", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusOperState.setStatus('current')
zxAnXdsl2LineStatusActDataPathType = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 33), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("atm", 1), ("ptm", 2), ("stm", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusActDataPathType.setStatus('current')
zxAnXdsl2LineCmndPMReset = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 34), Bits().clone(namedValues=NamedValues(("currentPerf", 0)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxAnXdsl2LineCmndPMReset.setStatus('current')
zxAnXdsl2LineExtConfProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 35), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)).clone('VDEFVAL')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: zxAnXdsl2LineExtConfProfile.setStatus('current')
zxAnXdsl2LineStatusLnAttenDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 36), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1270))).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusLnAttenDs.setStatus('current')
zxAnXdsl2LineStatusLnAttenUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 37), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1270))).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusLnAttenUs.setStatus('current')
zxAnXdsl2LineStatusSigAttenDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 38), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1270))).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusSigAttenDs.setStatus('current')
zxAnXdsl2LineStatusSigAttenUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 39), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 1270))).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusSigAttenUs.setStatus('current')
zxAnXdsl2LineStatusSnrMarginDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 40), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-640, 630))).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusSnrMarginDs.setStatus('current')
zxAnXdsl2LineStatusSnrMarginUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 41), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-640, 630))).setUnits('0.1 dB').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineStatusSnrMarginUs.setStatus('current')
zxAnXdsl2LineLofStatsDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 42), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineLofStatsDs.setStatus('current')
zxAnXdsl2LineLofStatsUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 43), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineLofStatsUs.setStatus('current')
zxAnXdsl2LineLolStatsDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 44), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineLolStatsDs.setStatus('current')
zxAnXdsl2LineLolStatsUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 45), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineLolStatsUs.setStatus('current')
zxAnXdsl2LineLprStatsDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 46), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineLprStatsDs.setStatus('current')
zxAnXdsl2LineLprStatsUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 2, 1, 1, 47), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2LineLprStatsUs.setStatus('current')
zxAnXdsl2BaseConfProfTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1), )
if mibBuilder.loadTexts: zxAnXdsl2BaseConfProfTable.setStatus('current')
zxAnXdsl2BaseConfProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1), ).setIndexNames((0, "ZTE-AN-XDSL2-MIB", "zxAnXdsl2BaseConfProfileName"))
if mibBuilder.loadTexts: zxAnXdsl2BaseConfProfEntry.setStatus('current')
zxAnXdsl2BaseConfProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: zxAnXdsl2BaseConfProfileName.setStatus('current')
zxAnXdsl2LConfProfXtuTransSysEna = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 2), ZxAnXdsl2TransmissionModeType()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfXtuTransSysEna.setStatus('current')
zxAnXdsl2LConfProfStandardProfile = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 3), Xdsl2LineProfiles()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfStandardProfile.setStatus('current')
zxAnXdsl2LConfProfLimitMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 4), Bits().clone(namedValues=NamedValues(("annexA_D32", 0), ("annexA_D64", 8), ("annexA_D128", 16), ("annexB_B7_1_997_M1c_A_7", 32), ("annexB_B7_2_997_M1x_M_8", 33), ("annexB_B7_3_997_M1x_M", 34), ("annexB_B7_4_997_M2x_M_8", 35), ("annexB_B7_5_997_M2x_A", 36), ("annexB_B7_6_997_M2x_M", 37), ("annexB_B7_7_HPE17_M1_NUS0", 38), ("annexB_B7_8_HPE30_M1_NUS0", 39), ("annexB_B7_9_997E17_M2x_NUS0", 40), ("annexB_B7_10_997E30_M2x_NUS0", 41), ("annexB_B8_1_998_M1_x_A", 64), ("annexB_B8_2_998_M1x_B", 65), ("annexB_B8_3_998_M1x_NUS0", 66), ("annexB_B8_4_998_M2x_A", 67), ("annexB_B8_5_998_M2x_M", 68), ("annexB_B8_6_998_M2x_B", 69), ("annexB_B8_7_998_M2x_NUS0", 70), ("annexB_B8_8_998E17_M2x_NUS0", 71), ("annexB_B8_9_998E17_M2x_NUS0_M", 72), ("annexB_B8_10_998ADE17_M2x_NUS0_M", 73), ("annexB_B8_11_998ADE17_M2x_A", 74), ("annexB_B8_12_998ADE17_M2x_B", 75), ("annexB_B8_13_998E30_M2x_NUS0", 76), ("annexB_B8_14_998E30_M2x_NUS0_M", 77), ("annexB_B8_15_998ADE30_M2x_NUS0_M", 78), ("annexB_B8_16_998ADE30_M2x_NUS0_A", 79), ("annexC_Pots", 96), ("annexC_Tcm_Isdn", 97)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfLimitMask.setStatus('current')
zxAnXdsl2LConfProfUs0Disable = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enable", 1), ("disable", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfUs0Disable.setStatus('current')
zxAnXdsl2LConfProfUs0Mask = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 6), Xdsl2LineUs0Mask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfUs0Mask.setStatus('current')
zxAnXdsl2LConfProfRfiBandsDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 7), Xdsl2RfiBands()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfRfiBandsDs.setStatus('current')
zxAnXdsl2LConfProfVdsl2CarMask = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 8), Xdsl2CarMask()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfVdsl2CarMask.setStatus('current')
zxAnXdsl2LConfProfVdslMaxNomAtpDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setUnits('0.1 dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfVdslMaxNomAtpDs.setStatus('current')
zxAnXdsl2LConfProfVdslMaxNomAtpUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setUnits('0.1 dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfVdslMaxNomAtpUs.setStatus('current')
zxAnXdsl2LConfProfVdslMaxNomPsdDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 11), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-600, -300)).clone(-300)).setUnits('0.1 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfVdslMaxNomPsdDs.setStatus('current')
zxAnXdsl2LConfProfVdslMaxNomPsdUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 12), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-600, -300)).clone(-300)).setUnits('0.1 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfVdslMaxNomPsdUs.setStatus('current')
zxAnXdsl2LConfProfVdslMaxAggRxPwrUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-255, 255), ValueRangeConstraint(2147483647, 2147483647), )).clone(255)).setUnits('0.1 dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfVdslMaxAggRxPwrUs.setStatus('current')
zxAnXdsl2LConfProfAdslMaxNomAtpDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setUnits('0.1 dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfAdslMaxNomAtpDs.setStatus('current')
zxAnXdsl2LConfProfAdslMaxNomAtpUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setUnits('0.1 dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfAdslMaxNomAtpUs.setStatus('current')
zxAnXdsl2LConfProfAdslMaxNomPsdDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 16), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-600, -300)).clone(-300)).setUnits('0.1 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfAdslMaxNomPsdDs.setStatus('current')
zxAnXdsl2LConfProfAdslMaxNomPsdUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 17), Integer32().subtype(subtypeSpec=ValueRangeConstraint(-600, -300)).clone(-300)).setUnits('0.1 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfAdslMaxNomPsdUs.setStatus('current')
zxAnXdsl2LConfProfAdslMaxAggRxPwrUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 18), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-255, 255), ValueRangeConstraint(2147483647, 2147483647), )).clone(255)).setUnits('0.1 dBm').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfAdslMaxAggRxPwrUs.setStatus('current')
zxAnXdsl2LConfProfScMaskDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 19), Xdsl2ScMaskDs()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfScMaskDs.setStatus('current')
zxAnXdsl2LConfProfScMaskUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 20), Xdsl2ScMaskUs()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfScMaskUs.setStatus('current')
zxAnXdsl2LConfProfRaUsNrmDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 21), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(10)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfRaUsNrmDs.setStatus('current')
zxAnXdsl2LConfProfRaUsNrmUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 22), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(10)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfRaUsNrmUs.setStatus('current')
zxAnXdsl2LConfProfRaUsTimeDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfRaUsTimeDs.setStatus('current')
zxAnXdsl2LConfProfRaUsTimeUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfRaUsTimeUs.setStatus('current')
zxAnXdsl2LConfProfRaDsNrmsDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(10)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfRaDsNrmsDs.setStatus('current')
zxAnXdsl2LConfProfRaDsNrmsUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(10)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfRaDsNrmsUs.setStatus('current')
zxAnXdsl2LConfProfRaDsTimeDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfRaDsTimeDs.setStatus('current')
zxAnXdsl2LConfProfRaDsTimeUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 16383)).clone(3600)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfRaDsTimeUs.setStatus('current')
zxAnXdsl2LConfProfMsgMinUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 63)).clone(4)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfMsgMinUs.setStatus('current')
zxAnXdsl2LConfProfMsgMinDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4, 63)).clone(4)).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfMsgMinDs.setStatus('current')
zxAnXdsl2LConfProfPmMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 31), Xdsl2LinePmMode().clone(namedValues=NamedValues(("allowTransitionsToIdle", 0), ("allowTransitionsToLowPower", 1)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfPmMode.setStatus('current')
zxAnXdsl2LConfProfL0Time = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 32), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfL0Time.setStatus('current')
zxAnXdsl2LConfProfL2Time = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 33), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255)).clone(255)).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfL2Time.setStatus('current')
zxAnXdsl2LConfProfL2Atpr = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 34), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31)).clone(10)).setUnits('dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfL2Atpr.setStatus('current')
zxAnXdsl2LConfProfL2Atprt = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 35), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 31)).clone(31)).setUnits('dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfL2Atprt.setStatus('current')
zxAnXdsl2LConfProfPsdMaskDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 36), Xdsl2PsdMaskDs()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfPsdMaskDs.setStatus('current')
zxAnXdsl2LConfProfPsdMaskUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 37), Xdsl2PsdMaskUs()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfPsdMaskUs.setStatus('current')
zxAnXdsl2LConfProfPsdMaskSelectUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 38), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 9)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfPsdMaskSelectUs.setStatus('current')
zxAnXdsl2LConfProfTrellisDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 39), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfTrellisDs.setStatus('current')
zxAnXdsl2LConfProfTrellisUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 40), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfTrellisUs.setStatus('current')
zxAnXdsl2LConfProfBitswapDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 41), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfBitswapDs.setStatus('current')
zxAnXdsl2LConfProfBitswapUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 42), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfBitswapUs.setStatus('current')
zxAnXdsl2LConfProfRetrainMode = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfRetrainMode.setStatus('current')
zxAnXdsl2LconfProfSnrModeDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 44), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LconfProfSnrModeDs.setStatus('current')
zxAnXdsl2LconfProfSnrModeUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("enabled", 1), ("disabled", 2)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LconfProfSnrModeUs.setStatus('current')
zxAnXdsl2LConfProfTxRefVNDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 46), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 96))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfTxRefVNDs.setStatus('current')
zxAnXdsl2LConfProfTxRefVNUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 47), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 48))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfTxRefVNUs.setStatus('current')
zxAnXdsl2Ch1ConfProfMinResDataRateDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 48), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1ConfProfMinResDataRateDs.setStatus('current')
zxAnXdsl2Ch1ConfProfMinResDataRateUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 49), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1ConfProfMinResDataRateUs.setStatus('current')
zxAnXdsl2Ch1ConfProfMinDataRateLowPwrDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 50), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1ConfProfMinDataRateLowPwrDs.setStatus('current')
zxAnXdsl2Ch1ConfProfMaxBerDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 51), Xdsl2MaxBer().clone('eminus5')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1ConfProfMaxBerDs.setStatus('current')
zxAnXdsl2Ch1ConfProfMaxBerUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 52), Xdsl2MaxBer().clone('eminus5')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1ConfProfMaxBerUs.setStatus('current')
zxAnXdsl2Ch1ConfProfImaEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 53), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1ConfProfImaEnabled.setStatus('current')
zxAnXdsl2Ch2ConfProfMinResDataRateDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 54), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2ConfProfMinResDataRateDs.setStatus('current')
zxAnXdsl2Ch2ConfProfMinResDataRateUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 55), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2ConfProfMinResDataRateUs.setStatus('current')
zxAnXdsl2Ch2ConfProfMinDataRateLowPwrDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 56), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2ConfProfMinDataRateLowPwrDs.setStatus('current')
zxAnXdsl2Ch2ConfProfMaxBerDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 57), Xdsl2MaxBer().clone('eminus5')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2ConfProfMaxBerDs.setStatus('current')
zxAnXdsl2Ch2ConfProfMaxBerUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 58), Xdsl2MaxBer().clone('eminus5')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2ConfProfMaxBerUs.setStatus('current')
zxAnXdsl2Ch2ConfProfImaEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 59), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2ConfProfImaEnabled.setStatus('current')
zxAnXdsl2LConfProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 1, 1, 64), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfRowStatus.setStatus('current')
zxAnXdsl2ServiceConfProfTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2), )
if mibBuilder.loadTexts: zxAnXdsl2ServiceConfProfTable.setStatus('current')
zxAnXdsl2ServiceConfProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1), ).setIndexNames((0, "ZTE-AN-XDSL2-MIB", "zxAnXdsl2ServiceConfProfileName"))
if mibBuilder.loadTexts: zxAnXdsl2ServiceConfProfEntry.setStatus('current')
zxAnXdsl2ServiceConfProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: zxAnXdsl2ServiceConfProfileName.setStatus('current')
zxAnXdsl2LConfProfForceInp = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 2), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfForceInp.setStatus('current')
zxAnXdsl2LConfProfRaModeDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 3), Xdsl2RaMode().clone('raInit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfRaModeDs.setStatus('current')
zxAnXdsl2LConfProfRaModeUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 4), Xdsl2RaMode().clone('raInit')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfRaModeUs.setStatus('current')
zxAnXdsl2LConfProfTargetSnrmDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(60)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfTargetSnrmDs.setStatus('current')
zxAnXdsl2LConfProfTargetSnrmUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(60)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfTargetSnrmUs.setStatus('current')
zxAnXdsl2LConfProfMaxSnrmDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 7), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 310), ValueRangeConstraint(2147483647, 2147483647), )).clone(310)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfMaxSnrmDs.setStatus('current')
zxAnXdsl2LConfProfMaxSnrmUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 310), ValueRangeConstraint(2147483647, 2147483647), )).clone(310)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfMaxSnrmUs.setStatus('current')
zxAnXdsl2LConfProfMinSnrmDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(10)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfMinSnrmDs.setStatus('current')
zxAnXdsl2LConfProfMinSnrmUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 310)).clone(10)).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfMinSnrmUs.setStatus('current')
zxAnXdsl2ConfProfCh1Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 11), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2ConfProfCh1Enabled.setStatus('current')
zxAnXdsl2Ch1ConfChanRaRatioDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setUnits('percents').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1ConfChanRaRatioDs.setStatus('current')
zxAnXdsl2Ch1ConfChanRaRatioUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setUnits('percents').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1ConfChanRaRatioUs.setStatus('current')
zxAnXdsl2Ch1ConfProfMaxDataRateDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 14), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1ConfProfMaxDataRateDs.setStatus('current')
zxAnXdsl2Ch1ConfProfMaxDataRateUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 15), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1ConfProfMaxDataRateUs.setStatus('current')
zxAnXdsl2Ch1ConfProfMinDataRateDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1ConfProfMinDataRateDs.setStatus('current')
zxAnXdsl2Ch1ConfProfMinDataRateUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1ConfProfMinDataRateUs.setStatus('current')
zxAnXdsl2Ch1ConfProfMaxDelayDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1ConfProfMaxDelayDs.setStatus('current')
zxAnXdsl2Ch1ConfProfMaxDelayUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1ConfProfMaxDelayUs.setStatus('current')
zxAnXdsl2Ch1ConfProfMinProtectionDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 20), Xdsl2SymbolProtection().clone('noProtection')).setUnits('symbols').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1ConfProfMinProtectionDs.setStatus('current')
zxAnXdsl2Ch1ConfProfMinProtectionUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 21), Xdsl2SymbolProtection().clone('noProtection')).setUnits('symbols').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1ConfProfMinProtectionUs.setStatus('current')
zxAnXdsl2ConfProfCh2Enabled = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 22), TruthValue()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2ConfProfCh2Enabled.setStatus('current')
zxAnXdsl2Ch2ConfChanRaRatioDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setUnits('percents').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2ConfChanRaRatioDs.setStatus('current')
zxAnXdsl2Ch2ConfChanRaRatioUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 100)).clone(100)).setUnits('percents').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2ConfChanRaRatioUs.setStatus('current')
zxAnXdsl2Ch2ConfProfMaxDataRateDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 25), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2ConfProfMaxDataRateDs.setStatus('current')
zxAnXdsl2Ch2ConfProfMaxDataRateUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2ConfProfMaxDataRateUs.setStatus('current')
zxAnXdsl2Ch2ConfProfMinDataRateDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2ConfProfMinDataRateDs.setStatus('current')
zxAnXdsl2Ch2ConfProfMinDataRateUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 28), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 200000))).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2ConfProfMinDataRateUs.setStatus('current')
zxAnXdsl2Ch2ConfProfMaxDelayDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2ConfProfMaxDelayDs.setStatus('current')
zxAnXdsl2Ch2ConfProfMaxDelayUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 30), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 63))).setUnits('milliseconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2ConfProfMaxDelayUs.setStatus('current')
zxAnXdsl2Ch2ConfProfMinProtectionDs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 31), Xdsl2SymbolProtection().clone('noProtection')).setUnits('symbols').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2ConfProfMinProtectionDs.setStatus('current')
zxAnXdsl2Ch2ConfProfMinProtectionUs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 32), Xdsl2SymbolProtection().clone('noProtection')).setUnits('symbols').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2ConfProfMinProtectionUs.setStatus('current')
zxAnXdsl2ServiceConfProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 2, 1, 40), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2ServiceConfProfRowStatus.setStatus('current')
zxAnXdsl2DpboConfProfTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 3), )
if mibBuilder.loadTexts: zxAnXdsl2DpboConfProfTable.setStatus('current')
zxAnXdsl2DpboConfProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 3, 1), ).setIndexNames((0, "ZTE-AN-XDSL2-MIB", "zxAnXdsl2DpboConfProfileName"))
if mibBuilder.loadTexts: zxAnXdsl2DpboConfProfEntry.setStatus('current')
zxAnXdsl2DpboConfProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 3, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: zxAnXdsl2DpboConfProfileName.setStatus('current')
zxAnXdsl2LConfProfDpboEPsd = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 3, 1, 2), Xdsl2PsdMaskDs()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfDpboEPsd.setStatus('current')
zxAnXdsl2LConfProfDpboEsEL = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 3, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 511))).setUnits('0.5 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfDpboEsEL.setStatus('current')
zxAnXdsl2LConfProfDpboEsCableModelA = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 3, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 640))).setUnits('2^-8').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfDpboEsCableModelA.setStatus('current')
zxAnXdsl2LConfProfDpboEsCableModelB = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 3, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 640))).setUnits('2^-8').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfDpboEsCableModelB.setStatus('current')
zxAnXdsl2LConfProfDpboEsCableModelC = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 3, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 640))).setUnits('2^-8').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfDpboEsCableModelC.setStatus('current')
zxAnXdsl2LConfProfDpboMus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 3, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 255))).setUnits('0.5 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfDpboMus.setStatus('current')
zxAnXdsl2LConfProfDpboFMin = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 3, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 2048)).clone(32)).setUnits('4.3125 kHz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfDpboFMin.setStatus('current')
zxAnXdsl2LConfProfDpboFMax = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 3, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(32, 6956)).clone(512)).setUnits('4.3125 kHz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfDpboFMax.setStatus('current')
zxAnXdsl2DpboConfProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 3, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2DpboConfProfRowStatus.setStatus('current')
zxAnXdsl2UpboConfProfTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 4), )
if mibBuilder.loadTexts: zxAnXdsl2UpboConfProfTable.setStatus('current')
zxAnXdsl2UpboConfProfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 4, 1), ).setIndexNames((0, "ZTE-AN-XDSL2-MIB", "zxAnXdsl2LUpboConfProfileName"))
if mibBuilder.loadTexts: zxAnXdsl2UpboConfProfEntry.setStatus('current')
zxAnXdsl2LUpboConfProfileName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 4, 1, 1), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: zxAnXdsl2LUpboConfProfileName.setStatus('current')
zxAnXdsl2LConfProfUpboKL = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 4, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 1280))).setUnits('0.1 dB').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfUpboKL.setStatus('current')
zxAnXdsl2LConfProfUpboKLF = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 4, 1, 3), Xdsl2UpboKLF().clone('disableUpbo')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfUpboKLF.setStatus('current')
zxAnXdsl2LConfProfUpboU0bandPsdA = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 4, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4000, 8095)).clone(4000)).setUnits('0.01 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfUpboU0bandPsdA.setStatus('current')
zxAnXdsl2LConfProfUpboU0bandPsdB = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 4, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setUnits('0.01 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfUpboU0bandPsdB.setStatus('current')
zxAnXdsl2LConfProfUpboU1bandPsdA = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 4, 1, 6), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4000, 8095)).clone(4000)).setUnits('0.01 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfUpboU1bandPsdA.setStatus('current')
zxAnXdsl2LConfProfUpboU1bandPsdB = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 4, 1, 7), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setUnits('0.01 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfUpboU1bandPsdB.setStatus('current')
zxAnXdsl2LConfProfUpboU2bandPsdA = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 4, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4000, 8095)).clone(4000)).setUnits('0.01 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfUpboU2bandPsdA.setStatus('current')
zxAnXdsl2LConfProfUpboU2bandPsdB = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 4, 1, 9), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setUnits('0.01 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfUpboU2bandPsdB.setStatus('current')
zxAnXdsl2LConfProfUpboU3bandPsdA = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 4, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4000, 8095)).clone(4000)).setUnits('0.01 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfUpboU3bandPsdA.setStatus('current')
zxAnXdsl2LConfProfUpboU3bandPsdB = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 4, 1, 11), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setUnits('0.01 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfUpboU3bandPsdB.setStatus('current')
zxAnXdsl2LConfProfUpboU4bandPsdA = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 4, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(4000, 8095)).clone(4000)).setUnits('0.01 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfUpboU4bandPsdA.setStatus('current')
zxAnXdsl2LConfProfUpboU4bandPsdB = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 4, 1, 13), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4095))).setUnits('0.01 dBm/Hz').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LConfProfUpboU4bandPsdB.setStatus('current')
zxAnXdsl2LUpboConfProfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 3, 4, 1, 20), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2LUpboConfProfRowStatus.setStatus('current')
zxAnXdsl2AlmThreshPrfTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1), )
if mibBuilder.loadTexts: zxAnXdsl2AlmThreshPrfTable.setStatus('current')
zxAnXdsl2AlmThreshPrfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1), ).setIndexNames((0, "ZTE-AN-XDSL2-MIB", "zxAnXdsl2AlmThreshPrfName"))
if mibBuilder.loadTexts: zxAnXdsl2AlmThreshPrfEntry.setStatus('current')
zxAnXdsl2AlmThreshPrfName = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 1), SnmpAdminString().subtype(subtypeSpec=ValueSizeConstraint(1, 32)))
if mibBuilder.loadTexts: zxAnXdsl2AlmThreshPrfName.setStatus('current')
zxAnXdsl2XtucThreshFecs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 2), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XtucThreshFecs.setStatus('current')
zxAnXdsl2XtucThreshEs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 3), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XtucThreshEs.setStatus('current')
zxAnXdsl2XtucThreshSes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 4), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XtucThreshSes.setStatus('current')
zxAnXdsl2XtucThreshLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 5), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XtucThreshLoss.setStatus('current')
zxAnXdsl2XtucThreshLofs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 6), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XtucThreshLofs.setStatus('current')
zxAnXdsl2XtucThreshLols = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 7), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XtucThreshLols.setStatus('current')
zxAnXdsl2XtucThreshLprs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 8), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XtucThreshLprs.setStatus('current')
zxAnXdsl2XtucThreshUas = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 9), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XtucThreshUas.setStatus('current')
zxAnXdsl2XtucThreshPtmCrcErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 10), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XtucThreshPtmCrcErrs.setStatus('current')
zxAnXdsl2XtucThreshPtmCodViol = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 11), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XtucThreshPtmCodViol.setStatus('current')
zxAnXdsl2XturThreshFecs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 12), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XturThreshFecs.setStatus('current')
zxAnXdsl2XturThreshEs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 13), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XturThreshEs.setStatus('current')
zxAnXdsl2XturThreshSes = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 14), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XturThreshSes.setStatus('current')
zxAnXdsl2XturThreshLoss = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 15), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XturThreshLoss.setStatus('current')
zxAnXdsl2XturThreshLofs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 16), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XturThreshLofs.setStatus('current')
zxAnXdsl2XturThreshLprs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 18), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XturThreshLprs.setStatus('current')
zxAnXdsl2XturThreshUas = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 19), HCPerfIntervalThreshold()).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XturThreshUas.setStatus('current')
zxAnXdsl2XturThreshPtmCrcErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 20), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XturThreshPtmCrcErrs.setStatus('current')
zxAnXdsl2XturThreshPtmCodViol = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 21), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XturThreshPtmCodViol.setStatus('current')
zxAnXdsl2ThreshFailedFullInt = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 22), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2ThreshFailedFullInt.setStatus('current')
zxAnXdsl2ThreshFailedShrtInt = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 23), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2ThreshFailedShrtInt.setStatus('current')
zxAnXdsl2Ch1XtucThrshCodeViol = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 24), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1XtucThrshCodeViol.setStatus('current')
zxAnXdsl2Ch1XtucThrshCorrected = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 25), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1XtucThrshCorrected.setStatus('current')
zxAnXdsl2Ch1XturThrshCodeViol = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 26), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1XturThrshCodeViol.setStatus('current')
zxAnXdsl2Ch1XturThrshCorrected = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 27), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch1XturThrshCorrected.setStatus('current')
zxAnXdsl2Ch2XtucThrshCodeViol = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 28), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2XtucThrshCodeViol.setStatus('current')
zxAnXdsl2Ch2XtucThrshCorrected = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 29), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2XtucThrshCorrected.setStatus('current')
zxAnXdsl2Ch2XturThrshCodeViol = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 30), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2XturThrshCodeViol.setStatus('current')
zxAnXdsl2Ch2XturThrshCorrected = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 31), Unsigned32()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2Ch2XturThrshCorrected.setStatus('current')
zxAnXdsl2AlmThreshPrfRowStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 32), RowStatus()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2AlmThreshPrfRowStatus.setStatus('current')
zxAnXdsl2XtucLowDataRateTolerance = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 33), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XtucLowDataRateTolerance.setStatus('current')
zxAnXdsl2XturLowDataRateTolerance = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 34), Integer32().subtype(subtypeSpec=ValueRangeConstraint(0, 100))).setUnits('%').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XturLowDataRateTolerance.setStatus('current')
zxAnXdsl2XtucLowDataRateThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 35), Integer32()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XtucLowDataRateThresh.setStatus('current')
zxAnXdsl2XturLowDataRateThresh = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 36), Integer32()).setUnits('kbps').setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XturLowDataRateThresh.setStatus('current')
zxAnXdsl2XtucInitFailTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 37), Bits().clone(namedValues=NamedValues(("unused1", 0), ("lossOfFraming", 1), ("lossOfSignal", 2), ("lossOfPower", 3), ("initFailure", 4), ("lossOfSignalQuality", 5), ("lossOfLink", 6), ("lossOfSignalAlm", 7)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XtucInitFailTrapEnable.setStatus('current')
zxAnXdsl2XturInitFailTrapEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 4, 1, 1, 38), Bits().clone(namedValues=NamedValues(("unused1", 0), ("lossOfFraming", 1), ("lossOfSignal", 2), ("lossOfPower", 3), ("unused2", 4), ("lossOfSignalQuality", 5), ("unused3", 6), ("lossOfSignalAlm", 7), ("lossOfPowerAlm", 8)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: zxAnXdsl2XturInitFailTrapEnable.setStatus('current')
zxAnXdsl2PMLineCurrTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 1), )
if mibBuilder.loadTexts: zxAnXdsl2PMLineCurrTable.setStatus('current')
zxAnXdsl2PMLineCurrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 1, 1), )
xdsl2PMLineCurrEntry.registerAugmentions(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2PMLineCurrEntry"))
zxAnXdsl2PMLineCurrEntry.setIndexNames(*xdsl2PMLineCurrEntry.getIndexNames())
if mibBuilder.loadTexts: zxAnXdsl2PMLineCurrEntry.setStatus('current')
zxAnXdsl2PMLCurr15MLofs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 1, 1, 1), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLCurr15MLofs.setStatus('current')
zxAnXdsl2PMLCurr15MLols = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 1, 1, 2), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLCurr15MLols.setStatus('current')
zxAnXdsl2PMLCurr15MLprs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 1, 1, 3), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLCurr15MLprs.setStatus('current')
zxAnXdsl2PMLCurr15MPtmCrcErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 1, 1, 4), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLCurr15MPtmCrcErrs.setStatus('current')
zxAnXdsl2PMLCurr15MPtmCodViol = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 1, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLCurr15MPtmCodViol.setStatus('current')
zxAnXdsl2PMLCurr1DayLofs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 1, 1, 6), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLCurr1DayLofs.setStatus('current')
zxAnXdsl2PMLCurr1DayLols = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 1, 1, 7), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLCurr1DayLols.setStatus('current')
zxAnXdsl2PMLCurr1DayLprs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 1, 1, 8), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLCurr1DayLprs.setStatus('current')
zxAnXdsl2PMLCurr1DayPtmCrcErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLCurr1DayPtmCrcErrs.setStatus('current')
zxAnXdsl2PMLCurr1DayPtmCodViol = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLCurr1DayPtmCodViol.setStatus('current')
zxAnXdsl2PMLineHist15MinTable = MibTable((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 2), )
if mibBuilder.loadTexts: zxAnXdsl2PMLineHist15MinTable.setStatus('current')
zxAnXdsl2PMLineHist15MinEntry = MibTableRow((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 2, 1), )
xdsl2PMLineHist15MinEntry.registerAugmentions(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2PMLineHist15MinEntry"))
zxAnXdsl2PMLineHist15MinEntry.setIndexNames(*xdsl2PMLineHist15MinEntry.getIndexNames())
if mibBuilder.loadTexts: zxAnXdsl2PMLineHist15MinEntry.setStatus('current')
zxAnXdsl2PMLHist15MMonitoredTime = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 2, 1, 1), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLHist15MMonitoredTime.setStatus('current')
zxAnXdsl2PMLHist15MLofs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 2, 1, 2), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLHist15MLofs.setStatus('current')
zxAnXdsl2PMLHist15MLols = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 2, 1, 3), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLHist15MLols.setStatus('current')
zxAnXdsl2PMLHist15MLprs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 2, 1, 4), Counter32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLHist15MLprs.setStatus('current')
zxAnXdsl2PMLHist15MPtmCrcErrs = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 2, 1, 5), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLHist15MPtmCrcErrs.setStatus('current')
zxAnXdsl2PMLHist15MPtmCodViol = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 2, 1, 6), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLHist15MPtmCodViol.setStatus('current')
zxAnXdsl2PMLHist15MValidInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 1, 5, 2, 1, 7), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: zxAnXdsl2PMLHist15MValidInterval.setStatus('current')
zxAnXdsl2LinePerfLOFSThreshXtuc = NotificationType((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 3, 1)).setObjects(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2PMLCurr15MLofs"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XtucThreshLofs"))
if mibBuilder.loadTexts: zxAnXdsl2LinePerfLOFSThreshXtuc.setStatus('current')
zxAnXdsl2LinePerfLOFSThreshXtur = NotificationType((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 3, 2)).setObjects(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2PMLCurr15MLofs"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XturThreshLofs"))
if mibBuilder.loadTexts: zxAnXdsl2LinePerfLOFSThreshXtur.setStatus('current')
zxAnXdsl2LinePerfLOLSThreshXtuc = NotificationType((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 3, 3)).setObjects(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2PMLCurr15MLols"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XtucThreshLols"))
if mibBuilder.loadTexts: zxAnXdsl2LinePerfLOLSThreshXtuc.setStatus('current')
zxAnXdsl2LinePerfLPRSThreshXtuc = NotificationType((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 3, 5)).setObjects(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2PMLCurr15MLprs"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XtucThreshLprs"))
if mibBuilder.loadTexts: zxAnXdsl2LinePerfLPRSThreshXtuc.setStatus('current')
zxAnXdsl2LinePerfLPRSThreshXtur = NotificationType((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 3, 6)).setObjects(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2PMLCurr15MLprs"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XturThreshLprs"))
if mibBuilder.loadTexts: zxAnXdsl2LinePerfLPRSThreshXtur.setStatus('current')
zxAnXdsl2LinePerfPtmCrcErrsThreshXtuc = NotificationType((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 3, 7)).setObjects(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2PMLCurr15MPtmCrcErrs"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XtucThreshPtmCrcErrs"))
if mibBuilder.loadTexts: zxAnXdsl2LinePerfPtmCrcErrsThreshXtuc.setStatus('current')
zxAnXdsl2LinePerfPtmCrcErrsThreshXtur = NotificationType((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 3, 8)).setObjects(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2PMLCurr15MPtmCrcErrs"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XturThreshPtmCrcErrs"))
if mibBuilder.loadTexts: zxAnXdsl2LinePerfPtmCrcErrsThreshXtur.setStatus('current')
zxAnXdsl2LinePerfPtmCodViolsThreshXtuc = NotificationType((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 3, 9)).setObjects(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2PMLCurr15MPtmCodViol"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XtucThreshPtmCodViol"))
if mibBuilder.loadTexts: zxAnXdsl2LinePerfPtmCodViolsThreshXtuc.setStatus('current')
zxAnXdsl2LinePerfPtmCodViolsThreshXtur = NotificationType((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 3, 10)).setObjects(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2PMLCurr15MPtmCodViol"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XturThreshPtmCodViol"))
if mibBuilder.loadTexts: zxAnXdsl2LinePerfPtmCodViolsThreshXtur.setStatus('current')
zxAnXdsl2LineXtucLowDataRateTrap = NotificationType((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 3, 11)).setObjects(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2ChConfMaxDataRateDs"), ("ZTE-AN-XDSL2-MIB", "xdsl2ChStatusActDataRate"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XtucLowDataRateTolerance"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XtucLowDataRateThresh"))
if mibBuilder.loadTexts: zxAnXdsl2LineXtucLowDataRateTrap.setStatus('current')
zxAnXdsl2LineXtucLowDataRateClearTrap = NotificationType((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 3, 12)).setObjects(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2ChConfMaxDataRateDs"), ("ZTE-AN-XDSL2-MIB", "xdsl2ChStatusActDataRate"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XtucLowDataRateTolerance"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XtucLowDataRateThresh"))
if mibBuilder.loadTexts: zxAnXdsl2LineXtucLowDataRateClearTrap.setStatus('current')
zxAnXdsl2LineXturLowDataRateTrap = NotificationType((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 3, 13)).setObjects(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2ChConfMaxDataRateUs"), ("ZTE-AN-XDSL2-MIB", "xdsl2ChStatusActDataRate"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XturLowDataRateTolerance"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XturLowDataRateThresh"))
if mibBuilder.loadTexts: zxAnXdsl2LineXturLowDataRateTrap.setStatus('current')
zxAnXdsl2LineXturLowDataRateClearTrap = NotificationType((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 3, 14)).setObjects(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2ChConfMaxDataRateUs"), ("ZTE-AN-XDSL2-MIB", "xdsl2ChStatusActDataRate"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XturLowDataRateTolerance"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2XturLowDataRateThresh"))
if mibBuilder.loadTexts: zxAnXdsl2LineXturLowDataRateClearTrap.setStatus('current')
zxAnXdsl2DataPathMismatchTrap = NotificationType((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 3, 15)).setObjects(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2LnStatusDataPathType"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2LnStatusActDataPathType"))
if mibBuilder.loadTexts: zxAnXdsl2DataPathMismatchTrap.setStatus('current')
zxAnXdsl2DataPathMismatchClrTrap = NotificationType((1, 3, 6, 1, 4, 1, 3902, 1015, 1001, 3, 16)).setObjects(("ZTE-AN-XDSL2-MIB", "zxAnXdsl2LnStatusDataPathType"), ("ZTE-AN-XDSL2-MIB", "zxAnXdsl2LnStatusActDataPathType"))
if mibBuilder.loadTexts: zxAnXdsl2DataPathMismatchClrTrap.setStatus('current')
mibBuilder.exportSymbols("ZTE-AN-XDSL2-MIB", zxAnXdsl2LConfProfUpboU0bandPsdA=zxAnXdsl2LConfProfUpboU0bandPsdA, zxAnXdsl2XturThreshUas=zxAnXdsl2XturThreshUas, zxAnXdsl2Line=zxAnXdsl2Line, zxAnXdsl2LineStatusLnAttenDs=zxAnXdsl2LineStatusLnAttenDs, zxAnXdsl2Ch2ConfProfMaxBerUs=zxAnXdsl2Ch2ConfProfMaxBerUs, zxAnXdsl2LConfProfRaUsNrmUs=zxAnXdsl2LConfProfRaUsNrmUs, zxAnXdsl2LConfProfMinSnrmDs=zxAnXdsl2LConfProfMinSnrmDs, zxAnXdsl2LineXturLowDataRateClearTrap=zxAnXdsl2LineXturLowDataRateClearTrap, zxAnXdsl2LineStatusAttainableRateUs=zxAnXdsl2LineStatusAttainableRateUs, zxAnXdsl2LConfProfVdslMaxNomAtpUs=zxAnXdsl2LConfProfVdslMaxNomAtpUs, zxAnXdsl2LineStatusLnAttenUs=zxAnXdsl2LineStatusLnAttenUs, zxAnXdsl2LineLolStatsUs=zxAnXdsl2LineLolStatsUs, zxAnXdsl2Ch2ConfChanRaRatioUs=zxAnXdsl2Ch2ConfChanRaRatioUs, zxAnXdsl2PMLCurr1DayLols=zxAnXdsl2PMLCurr1DayLols, zxAnXdsl2PMLineCurrEntry=zxAnXdsl2PMLineCurrEntry, zxAnXdsl2LineStatusActPsdUs=zxAnXdsl2LineStatusActPsdUs, zxAnXdsl2Ch1ConfProfMaxDelayUs=zxAnXdsl2Ch1ConfProfMaxDelayUs, zxAnXdsl2LineStatusXtuc=zxAnXdsl2LineStatusXtuc, zxAnXdsl2Ch1ConfProfImaEnabled=zxAnXdsl2Ch1ConfProfImaEnabled, zxAnXdsl2XturInitFailTrapEnable=zxAnXdsl2XturInitFailTrapEnable, zxAnXdsl2ConfProfCh2Enabled=zxAnXdsl2ConfProfCh2Enabled, zxAnXdsl2Ch1ConfProfMaxDelayDs=zxAnXdsl2Ch1ConfProfMaxDelayDs, zxAnXdsl2LConfProfUpboU2bandPsdA=zxAnXdsl2LConfProfUpboU2bandPsdA, zxAnXdsl2DpboConfProfEntry=zxAnXdsl2DpboConfProfEntry, zxAnXdsl2LineStatusSigAttenUs=zxAnXdsl2LineStatusSigAttenUs, zxAnXdsl2PMLineHist15MinTable=zxAnXdsl2PMLineHist15MinTable, zxAnXdsl2LConfProfDpboMus=zxAnXdsl2LConfProfDpboMus, zxAnXdsl2Ch1XtucThrshCodeViol=zxAnXdsl2Ch1XtucThrshCodeViol, zxAnXdsl2XturThreshLoss=zxAnXdsl2XturThreshLoss, zxAnXdsl2XtucLowDataRateThresh=zxAnXdsl2XtucLowDataRateThresh, zxAnXdsl2Ch2ConfProfMaxDataRateUs=zxAnXdsl2Ch2ConfProfMaxDataRateUs, zxAnXdsl2LineDataPathType=zxAnXdsl2LineDataPathType, zxAnXdsl2LConfProfAdslMaxNomPsdUs=zxAnXdsl2LConfProfAdslMaxNomPsdUs, zxAnXdsl2LConfProfMsgMinDs=zxAnXdsl2LConfProfMsgMinDs, zxAnXdsl2LConfProfBitswapUs=zxAnXdsl2LConfProfBitswapUs, zxAnXdsl2LConfProfUpboKL=zxAnXdsl2LConfProfUpboKL, zxAnXdsl2PMLHist15MLprs=zxAnXdsl2PMLHist15MLprs, zxAnXdsl2XtucThreshPtmCrcErrs=zxAnXdsl2XtucThreshPtmCrcErrs, zxAnXdsl2LineDpboConfProfile=zxAnXdsl2LineDpboConfProfile, zxAnXdsl2LConfProfLimitMask=zxAnXdsl2LConfProfLimitMask, zxAnXdsl2LineTable=zxAnXdsl2LineTable, zxAnXdsl2Objects=zxAnXdsl2Objects, zxAnXdsl2Ch2ConfProfMinProtectionDs=zxAnXdsl2Ch2ConfProfMinProtectionDs, zxAnXdsl2LinePerfLOFSThreshXtuc=zxAnXdsl2LinePerfLOFSThreshXtuc, zxAnXdsl2ServiceConfProfileName=zxAnXdsl2ServiceConfProfileName, zxAnXdsl2LineStatusActualCe=zxAnXdsl2LineStatusActualCe, zxAnXdsl2LConfProfRaUsTimeDs=zxAnXdsl2LConfProfRaUsTimeDs, zxAnXdsl2LineStatusActDataPathType=zxAnXdsl2LineStatusActDataPathType, zxAnXdsl2Ch1ConfProfMinProtectionUs=zxAnXdsl2Ch1ConfProfMinProtectionUs, zxAnXdsl2Ch2ConfProfMaxDataRateDs=zxAnXdsl2Ch2ConfProfMaxDataRateDs, zxAnXdsl2LineStatusSnrMarginDs=zxAnXdsl2LineStatusSnrMarginDs, zxAnXdsl2LinePerfLPRSThreshXtuc=zxAnXdsl2LinePerfLPRSThreshXtuc, zxAnXdsl2LConfProfUpboU4bandPsdB=zxAnXdsl2LConfProfUpboU4bandPsdB, zxAnXdsl2XtucThreshLprs=zxAnXdsl2XtucThreshLprs, zxAnXdsl2LConfProfL2Atpr=zxAnXdsl2LConfProfL2Atpr, zxAnXdsl2LConfProfAdslMaxAggRxPwrUs=zxAnXdsl2LConfProfAdslMaxAggRxPwrUs, zxAnXdsl2LConfProfTxRefVNDs=zxAnXdsl2LConfProfTxRefVNDs, zxAnXdsl2LineBaseConfProfile=zxAnXdsl2LineBaseConfProfile, zxAnXdsl2LConfProfRaModeDs=zxAnXdsl2LConfProfRaModeDs, zxAnXdsl2TrapObjects=zxAnXdsl2TrapObjects, zxAnXdsl2PMLHist15MMonitoredTime=zxAnXdsl2PMLHist15MMonitoredTime, zxAnXdsl2LConfProfTxRefVNUs=zxAnXdsl2LConfProfTxRefVNUs, zxAnXdsl2Ch2ConfProfMaxDelayUs=zxAnXdsl2Ch2ConfProfMaxDelayUs, zxAnXdsl2LineCmndConfLdsfFailReason=zxAnXdsl2LineCmndConfLdsfFailReason, zxAnXdsl2LineStatusOperState=zxAnXdsl2LineStatusOperState, zxAnXdsl2LConfProfRetrainMode=zxAnXdsl2LConfProfRetrainMode, zxAnXdsl2PMLHist15MValidInterval=zxAnXdsl2PMLHist15MValidInterval, zxAnXdsl2Ch2ConfProfMinDataRateLowPwrDs=zxAnXdsl2Ch2ConfProfMinDataRateLowPwrDs, zxAnXdsl2AlmThreshPrfTable=zxAnXdsl2AlmThreshPrfTable, zxAnXdsl2LConfProfVdsl2CarMask=zxAnXdsl2LConfProfVdsl2CarMask, zxAnXdsl2Ch2ConfProfMinDataRateDs=zxAnXdsl2Ch2ConfProfMinDataRateDs, zxAnXdsl2LineStatusActAtpUs=zxAnXdsl2LineStatusActAtpUs, zxAnXdsl2Ch2ConfProfImaEnabled=zxAnXdsl2Ch2ConfProfImaEnabled, zxAnXdsl2PMLineCurrTable=zxAnXdsl2PMLineCurrTable, zxAnXdsl2LConfProfL0Time=zxAnXdsl2LConfProfL0Time, zxAnXdsl2LConfProfRaModeUs=zxAnXdsl2LConfProfRaModeUs, zxAnXdsl2AlmThreshPrfRowStatus=zxAnXdsl2AlmThreshPrfRowStatus, zxAnXdsl2PMLHist15MLols=zxAnXdsl2PMLHist15MLols, zxAnXdsl2DataPathMismatchTrap=zxAnXdsl2DataPathMismatchTrap, zxAnXdsl2LineStatusSnrMarginUs=zxAnXdsl2LineStatusSnrMarginUs, zxAnXdsl2ServiceConfProfTable=zxAnXdsl2ServiceConfProfTable, zxAn=zxAn, zxAnXdsl2LinePerfPtmCodViolsThreshXtuc=zxAnXdsl2LinePerfPtmCodViolsThreshXtuc, zxAnXdsl2Ch1ConfProfMinProtectionDs=zxAnXdsl2Ch1ConfProfMinProtectionDs, zxAnXdsl2XtucThreshLoss=zxAnXdsl2XtucThreshLoss, zxAnXdsl2LConfProfTargetSnrmUs=zxAnXdsl2LConfProfTargetSnrmUs, zxAnXdsl2Ch2XtucThrshCorrected=zxAnXdsl2Ch2XtucThrshCorrected, zxAnXdsl2Ch2ConfProfMinResDataRateDs=zxAnXdsl2Ch2ConfProfMinResDataRateDs, zxAnXdsl2Ch1ConfProfMinDataRateUs=zxAnXdsl2Ch1ConfProfMinDataRateUs, zxAnXdsl2UpboConfProfTable=zxAnXdsl2UpboConfProfTable, zxAnXdsl2Ch1ConfProfMinDataRateDs=zxAnXdsl2Ch1ConfProfMinDataRateDs, zxAnXdsl2PMLCurr15MPtmCodViol=zxAnXdsl2PMLCurr15MPtmCodViol, zxAnXdsl2LineUpboConfProfile=zxAnXdsl2LineUpboConfProfile, zxAnXdsl2Ch2ConfProfMinDataRateUs=zxAnXdsl2Ch2ConfProfMinDataRateUs, zxAnXdsl2LinePerfLPRSThreshXtur=zxAnXdsl2LinePerfLPRSThreshXtur, zxAnXdsl2PMLHist15MPtmCodViol=zxAnXdsl2PMLHist15MPtmCodViol, zxAnXdsl2LConfProfBitswapDs=zxAnXdsl2LConfProfBitswapDs, ZxAnXdsl2TransmissionModeType=ZxAnXdsl2TransmissionModeType, zxAnXdsl2Mib=zxAnXdsl2Mib, zxAnXdsl2LconfProfSnrModeDs=zxAnXdsl2LconfProfSnrModeDs, zxAnXdsl2LConfProfDpboEsCableModelA=zxAnXdsl2LConfProfDpboEsCableModelA, zxAnXdsl2XtucThreshLofs=zxAnXdsl2XtucThreshLofs, zxAnXdsl2LConfProfUpboU3bandPsdA=zxAnXdsl2LConfProfUpboU3bandPsdA, zxAnXdsl2ThreshFailedFullInt=zxAnXdsl2ThreshFailedFullInt, zxAnXdsl2Ch1XturThrshCodeViol=zxAnXdsl2Ch1XturThrshCodeViol, zxAnXdsl2LConfProfMsgMinUs=zxAnXdsl2LConfProfMsgMinUs, zxAnXdsl2LineStatusActLimitMask=zxAnXdsl2LineStatusActLimitMask, zxAnXdsl2LConfProfTrellisUs=zxAnXdsl2LConfProfTrellisUs, zxAnXdsl2Ch1ConfProfMinResDataRateUs=zxAnXdsl2Ch1ConfProfMinResDataRateUs, zxAnXdsl2LConfProfPsdMaskSelectUs=zxAnXdsl2LConfProfPsdMaskSelectUs, zxAnXdsl2PMLCurr15MPtmCrcErrs=zxAnXdsl2PMLCurr15MPtmCrcErrs, zxAnXdsl2BaseConfProfileName=zxAnXdsl2BaseConfProfileName, zxAnXdsl2LineStatusActPsdDs=zxAnXdsl2LineStatusActPsdDs, zxAnXdsl2LConfProfMinSnrmUs=zxAnXdsl2LConfProfMinSnrmUs, zxAnXdsl2LineLofStatsDs=zxAnXdsl2LineLofStatsDs, zxAnXdsl2LConfProfUpboKLF=zxAnXdsl2LConfProfUpboKLF, zte=zte, zxAnXdsl2Ch1ConfProfMaxDataRateUs=zxAnXdsl2Ch1ConfProfMaxDataRateUs, zxAnXdsl2PMLCurr1DayLofs=zxAnXdsl2PMLCurr1DayLofs, zxAnXdsl2PMLCurr1DayPtmCrcErrs=zxAnXdsl2PMLCurr1DayPtmCrcErrs, zxAnXdsl2LConfProfTargetSnrmDs=zxAnXdsl2LConfProfTargetSnrmDs, zxAnXdsl2LineXtucLowDataRateClearTrap=zxAnXdsl2LineXtucLowDataRateClearTrap, zxAnXdsl2LConfProfVdslMaxNomAtpDs=zxAnXdsl2LConfProfVdslMaxNomAtpDs, zxAnXdsl2LineAlmThreshPrfName=zxAnXdsl2LineAlmThreshPrfName, zxAnXdsl2LinePerfLOFSThreshXtur=zxAnXdsl2LinePerfLOFSThreshXtur, zxAnXdsl2XtucLowDataRateTolerance=zxAnXdsl2XtucLowDataRateTolerance, zxAnXdsl2LineStatusSigAttenDs=zxAnXdsl2LineStatusSigAttenDs, zxAnXdsl2Ch2XtucThrshCodeViol=zxAnXdsl2Ch2XtucThrshCodeViol, zxAnXdsl2LineStatusXtuTransSys=zxAnXdsl2LineStatusXtuTransSys, zxAnXdsl2ServiceConfProfRowStatus=zxAnXdsl2ServiceConfProfRowStatus, zxAnXdsl2LinePerfPtmCrcErrsThreshXtuc=zxAnXdsl2LinePerfPtmCrcErrsThreshXtuc, zxAnXdsl2LineProfile=zxAnXdsl2LineProfile, zxAnXdsl2ThreshFailedShrtInt=zxAnXdsl2ThreshFailedShrtInt, zxAnXdsl2LineEntry=zxAnXdsl2LineEntry, zxAnXdsl2LineStatusAttainableRateDs=zxAnXdsl2LineStatusAttainableRateDs, zxAnXdsl2LineXtucLowDataRateTrap=zxAnXdsl2LineXtucLowDataRateTrap, zxAnXdsl2LineCmndConfPmsf=zxAnXdsl2LineCmndConfPmsf, zxAnXdsl2LinePerfPtmCrcErrsThreshXtur=zxAnXdsl2LinePerfPtmCrcErrsThreshXtur, zxAnXdsl2Ch1ConfProfMaxDataRateDs=zxAnXdsl2Ch1ConfProfMaxDataRateDs, zxAnXdsl2ServiceConfProfEntry=zxAnXdsl2ServiceConfProfEntry, zxAnXdsl2LConfProfDpboEsEL=zxAnXdsl2LConfProfDpboEsEL, zxAnXdsl2LConfProfRaDsTimeDs=zxAnXdsl2LConfProfRaDsTimeDs, zxAnXdsl2XturThreshPtmCrcErrs=zxAnXdsl2XturThreshPtmCrcErrs, zxAnXdsl2LConfProfRaDsNrmsUs=zxAnXdsl2LConfProfRaDsNrmsUs, zxAnXdsl2LineCmndConfLdsf=zxAnXdsl2LineCmndConfLdsf, zxAnXdsl2LConfProfDpboFMin=zxAnXdsl2LConfProfDpboFMin, zxAnXdsl2AlmThreshPrfName=zxAnXdsl2AlmThreshPrfName, zxAnXdsl2LConfProfVdslMaxAggRxPwrUs=zxAnXdsl2LConfProfVdslMaxAggRxPwrUs, zxAnXdsl2LConfProfRaDsNrmsDs=zxAnXdsl2LConfProfRaDsNrmsDs, zxAnXdsl2LConfProfForceInp=zxAnXdsl2LConfProfForceInp, zxAnXdsl2Ch1ConfChanRaRatioDs=zxAnXdsl2Ch1ConfChanRaRatioDs, zxAnXdsl2UpboConfProfEntry=zxAnXdsl2UpboConfProfEntry, zxAnXdsl2AlarmProfile=zxAnXdsl2AlarmProfile, zxAnXdsl2LineStatusActSnrModeUs=zxAnXdsl2LineStatusActSnrModeUs, zxAnXdsl2PMLHist15MPtmCrcErrs=zxAnXdsl2PMLHist15MPtmCrcErrs, zxAnXdsl2ConfProfCh1Enabled=zxAnXdsl2ConfProfCh1Enabled, zxAnXdsl2Ch1ConfProfMinResDataRateDs=zxAnXdsl2Ch1ConfProfMinResDataRateDs, zxAnXdsl2LUpboConfProfRowStatus=zxAnXdsl2LUpboConfProfRowStatus, zxAnXdsl2LineStatusInitResult=zxAnXdsl2LineStatusInitResult, zxAnXdsl2Ch2XturThrshCodeViol=zxAnXdsl2Ch2XturThrshCodeViol, zxAnXdsl2Ch2ConfProfMaxDelayDs=zxAnXdsl2Ch2ConfProfMaxDelayDs, zxAnXdsl2Ch2XturThrshCorrected=zxAnXdsl2Ch2XturThrshCorrected, zxAnXdsl2LinePerfPtmCodViolsThreshXtur=zxAnXdsl2LinePerfPtmCodViolsThreshXtur, zxAnXdsl2LConfProfAdslMaxNomPsdDs=zxAnXdsl2LConfProfAdslMaxNomPsdDs, zxAnXdsl2LConfProfDpboEsCableModelB=zxAnXdsl2LConfProfDpboEsCableModelB, zxAnXdsl2LConfProfTrellisDs=zxAnXdsl2LConfProfTrellisDs, zxAnXdsl2Ch2ConfProfMinProtectionUs=zxAnXdsl2Ch2ConfProfMinProtectionUs, zxAnXdsl2PMLCurr15MLprs=zxAnXdsl2PMLCurr15MLprs, zxAnXdsl2LineCmndPMReset=zxAnXdsl2LineCmndPMReset, PYSNMP_MODULE_ID=zxAnXdsl2Mib, zxAnXdsl2LConfProfMaxSnrmUs=zxAnXdsl2LConfProfMaxSnrmUs, zxAnXdsl2LConfProfL2Atprt=zxAnXdsl2LConfProfL2Atprt, zxAnXdsl2BaseConfProfTable=zxAnXdsl2BaseConfProfTable, zxAnXdsl2Ch1XtucThrshCorrected=zxAnXdsl2Ch1XtucThrshCorrected, zxAnXdsl2LineStatusActStandardPrf=zxAnXdsl2LineStatusActStandardPrf, zxAnXdsl2LConfProfMaxSnrmDs=zxAnXdsl2LConfProfMaxSnrmDs, zxAnXdsl2LineStatusElectricalLength=zxAnXdsl2LineStatusElectricalLength, zxAnXdsl2LConfProfPsdMaskDs=zxAnXdsl2LConfProfPsdMaskDs, zxAnXdsl2XturThreshEs=zxAnXdsl2XturThreshEs, zxAnXdsl2XturLowDataRateThresh=zxAnXdsl2XturLowDataRateThresh, zxAnXdsl2LConfProfRowStatus=zxAnXdsl2LConfProfRowStatus, zxAnXdsl2LConfProfUpboU4bandPsdA=zxAnXdsl2LConfProfUpboU4bandPsdA, zxAnXdsl2Ch2ConfProfMaxBerDs=zxAnXdsl2Ch2ConfProfMaxBerDs, zxAnXdsl2LineStatusActAtpDs=zxAnXdsl2LineStatusActAtpDs, zxAnXdsl2LineStatusTrellisUs=zxAnXdsl2LineStatusTrellisUs, zxAnXdsl2LconfProfSnrModeUs=zxAnXdsl2LconfProfSnrModeUs, zxAnXdsl2LConfProfUpboU3bandPsdB=zxAnXdsl2LConfProfUpboU3bandPsdB, zxAnXdsl2DpboConfProfRowStatus=zxAnXdsl2DpboConfProfRowStatus, zxAnXdsl2XtucThreshPtmCodViol=zxAnXdsl2XtucThreshPtmCodViol, zxAnXdsl2LineStatusLastStateDs=zxAnXdsl2LineStatusLastStateDs, zxAnXdsl2LConfProfPmMode=zxAnXdsl2LConfProfPmMode, zxAnXdsl2PMLineHist15MinEntry=zxAnXdsl2PMLineHist15MinEntry, zxAnXdsl2XturThreshLofs=zxAnXdsl2XturThreshLofs, zxAnXdsl2XtucThreshUas=zxAnXdsl2XtucThreshUas, zxAnXdsl2XtucThreshSes=zxAnXdsl2XtucThreshSes, zxAnXdsl2XturThreshFecs=zxAnXdsl2XturThreshFecs, zxAnXdsl2LConfProfRfiBandsDs=zxAnXdsl2LConfProfRfiBandsDs, zxAnXdsl2DpboConfProfileName=zxAnXdsl2DpboConfProfileName, zxAnXdsl2LineStatusPwrMngState=zxAnXdsl2LineStatusPwrMngState, zxAnXdsl2LUpboConfProfileName=zxAnXdsl2LUpboConfProfileName, zxAnXdsl2Ch1ConfProfMaxBerDs=zxAnXdsl2Ch1ConfProfMaxBerDs, zxAnXdsl2PMLCurr1DayLprs=zxAnXdsl2PMLCurr1DayLprs, zxAnXdsl2LConfProfUpboU1bandPsdB=zxAnXdsl2LConfProfUpboU1bandPsdB, zxAnXdsl2LineLprStatsDs=zxAnXdsl2LineLprStatsDs, zxAnXdsl2LConfProfL2Time=zxAnXdsl2LConfProfL2Time, zxAnXdsl2LConfProfRaUsTimeUs=zxAnXdsl2LConfProfRaUsTimeUs, zxAnXdsl2LineSrvcConfProfile=zxAnXdsl2LineSrvcConfProfile, zxAnXdsl2DpboConfProfTable=zxAnXdsl2DpboConfProfTable, zxAnXdsl2LConfProfUpboU0bandPsdB=zxAnXdsl2LConfProfUpboU0bandPsdB, zxAnXdsl2LineLolStatsDs=zxAnXdsl2LineLolStatsDs, zxAnXdsl2PMLCurr15MLofs=zxAnXdsl2PMLCurr15MLofs, zxAnXdsl2LConfProfRaUsNrmDs=zxAnXdsl2LConfProfRaUsNrmDs, zxAnXdsl2LineStatusTrellisDs=zxAnXdsl2LineStatusTrellisDs, zxAnXdsl2LConfProfVdslMaxNomPsdDs=zxAnXdsl2LConfProfVdslMaxNomPsdDs, zxAnXdsl2LConfProfScMaskUs=zxAnXdsl2LConfProfScMaskUs, zxAnXdsl2XtucThreshEs=zxAnXdsl2XtucThreshEs, zxAnXdsl2Ch1XturThrshCorrected=zxAnXdsl2Ch1XturThrshCorrected, zxAnXdsl2PMLCurr1DayPtmCodViol=zxAnXdsl2PMLCurr1DayPtmCodViol, zxAnXdsl2LConfProfAdslMaxNomAtpDs=zxAnXdsl2LConfProfAdslMaxNomAtpDs, zxAnXdsl2LConfProfXtuTransSysEna=zxAnXdsl2LConfProfXtuTransSysEna, zxAnXdsl2LConfProfDpboFMax=zxAnXdsl2LConfProfDpboFMax, zxAnXdsl2LineXturLowDataRateTrap=zxAnXdsl2LineXturLowDataRateTrap, zxAnXdsl2LConfProfRaDsTimeUs=zxAnXdsl2LConfProfRaDsTimeUs, zxAnXdsl2XturThreshPtmCodViol=zxAnXdsl2XturThreshPtmCodViol, zxAnXdsl2PMLine=zxAnXdsl2PMLine, zxAnXdsl2LConfProfUpboU2bandPsdB=zxAnXdsl2LConfProfUpboU2bandPsdB, zxAnXdsl2LineCmndAutomodeColdStart=zxAnXdsl2LineCmndAutomodeColdStart, zxAnXdsl2LineStatusXtur=zxAnXdsl2LineStatusXtur, zxAnXdsl2LineStatusActSnrModeDs=zxAnXdsl2LineStatusActSnrModeDs, zxAnXdsl2LineLofStatsUs=zxAnXdsl2LineLofStatsUs, zxAnXdsl2GlobalObjects=zxAnXdsl2GlobalObjects, zxAnXdsl2LConfProfVdslMaxNomPsdUs=zxAnXdsl2LConfProfVdslMaxNomPsdUs, zxAnXdsl2BaseConfProfEntry=zxAnXdsl2BaseConfProfEntry, zxAnXdsl2Ch1ConfProfMinDataRateLowPwrDs=zxAnXdsl2Ch1ConfProfMinDataRateLowPwrDs, zxAnXdsl2LinePerfLOLSThreshXtuc=zxAnXdsl2LinePerfLOLSThreshXtuc, zxAnXdsl2DataPathMismatchClrTrap=zxAnXdsl2DataPathMismatchClrTrap, zxAnXdsl2Ch1ConfChanRaRatioUs=zxAnXdsl2Ch1ConfChanRaRatioUs, zxAnXdsl2PMLCurr15MLols=zxAnXdsl2PMLCurr15MLols, zxAnXdsl2LConfProfDpboEsCableModelC=zxAnXdsl2LConfProfDpboEsCableModelC, zxAnXdsl2XtucThreshLols=zxAnXdsl2XtucThreshLols, zxAnXdsl2AlmThreshPrfEntry=zxAnXdsl2AlmThreshPrfEntry, zxAnXdsl2XturLowDataRateTolerance=zxAnXdsl2XturLowDataRateTolerance, zxAnXdsl2LConfProfStandardProfile=zxAnXdsl2LConfProfStandardProfile, zxAnXdsl2LConfProfUs0Mask=zxAnXdsl2LConfProfUs0Mask, zxAnXdsl2LineExtConfProfile=zxAnXdsl2LineExtConfProfile, zxAnXdsl2LConfProfAdslMaxNomAtpUs=zxAnXdsl2LConfProfAdslMaxNomAtpUs, zxAnXdsl2LineStatusLastStateUs=zxAnXdsl2LineStatusLastStateUs, zxAnXdsl2LConfProfUpboU1bandPsdA=zxAnXdsl2LConfProfUpboU1bandPsdA, zxAnXdsl2Ch1ConfProfMaxBerUs=zxAnXdsl2Ch1ConfProfMaxBerUs, zxAnXdsl2XturThreshLprs=zxAnXdsl2XturThreshLprs, zxAnXdsl2XturThreshSes=zxAnXdsl2XturThreshSes, zxAnXdsl2LConfProfDpboEPsd=zxAnXdsl2LConfProfDpboEPsd, zxAnXdsl2PMLHist15MLofs=zxAnXdsl2PMLHist15MLofs, zxAnXdsl2Ch2ConfChanRaRatioDs=zxAnXdsl2Ch2ConfChanRaRatioDs)
mibBuilder.exportSymbols("ZTE-AN-XDSL2-MIB", zxAnXdsl2XtucInitFailTrapEnable=zxAnXdsl2XtucInitFailTrapEnable, zxAnXdsl2LConfProfPsdMaskUs=zxAnXdsl2LConfProfPsdMaskUs, zxAnXdsl2Ch2ConfProfMinResDataRateUs=zxAnXdsl2Ch2ConfProfMinResDataRateUs, zxAnXdsl2LConfProfScMaskDs=zxAnXdsl2LConfProfScMaskDs, zxAnXdsl2LineLprStatsUs=zxAnXdsl2LineLprStatsUs, zxAnXdsl2XtucThreshFecs=zxAnXdsl2XtucThreshFecs, zxAnXdsl2LConfProfUs0Disable=zxAnXdsl2LConfProfUs0Disable)
