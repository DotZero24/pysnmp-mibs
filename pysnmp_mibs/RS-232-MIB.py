# PySNMP SMI module. Autogenerated from smidump -f python RS-232-MIB
# by libsmi2pysnmp-0.0.4-alpha at Tue Jun 28 11:31:06 2005,
# Python version (2, 4, 0, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pyasn1.type import constraint, namedval

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( InterfaceIndex, ) = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
( transmission, ) = mibBuilder.importSymbols("RFC1213-MIB", "transmission")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Counter32, Integer32, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibVariable, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibVariable", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")

# Objects

rs232 = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 33))
rs232Number = MibVariable((1, 3, 6, 1, 2, 1, 10, 33, 1), Integer32()).setMaxAccess("readonly")
rs232PortTable = MibTable((1, 3, 6, 1, 2, 1, 10, 33, 2))
rs232PortEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 33, 2, 1)).setIndexNames((0, "RS-232-MIB", "rs232PortIndex"))
rs232PortIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 2, 1, 1)).setColumnInitializer(MibVariable((), InterfaceIndex()).setMaxAccess("readonly"))
rs232PortType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 2, 1, 2)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(5,1,2,6,3,4,)).subtype(namedValues=namedval.NamedValues(("other", 1), ("rs232", 2), ("rs422", 3), ("rs423", 4), ("v35", 5), ("x21", 6), ))).setMaxAccess("readonly"))
rs232PortInSigNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 2, 1, 3)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
rs232PortOutSigNumber = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 2, 1, 4)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
rs232PortInSpeed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 2, 1, 5)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readwrite"))
rs232PortOutSpeed = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 2, 1, 6)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readwrite"))
rs232PortInFlowType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 2, 1, 7)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,2,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("ctsRts", 2), ("dsrDtr", 3), ))).setMaxAccess("readwrite"))
rs232PortOutFlowType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 2, 1, 8)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,2,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("ctsRts", 2), ("dsrDtr", 3), ))).setMaxAccess("readwrite"))
rs232AsyncPortTable = MibTable((1, 3, 6, 1, 2, 1, 10, 33, 3))
rs232AsyncPortEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 33, 3, 1)).setIndexNames((0, "RS-232-MIB", "rs232AsyncPortIndex"))
rs232AsyncPortIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 3, 1, 1)).setColumnInitializer(MibVariable((), InterfaceIndex()).setMaxAccess("readonly"))
rs232AsyncPortBits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 3, 1, 2)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(5, 8))).setMaxAccess("readwrite"))
rs232AsyncPortStopBits = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 3, 1, 3)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,4,2,3,)).subtype(namedValues=namedval.NamedValues(("one", 1), ("two", 2), ("oneAndHalf", 3), ("dynamic", 4), ))).setMaxAccess("readwrite"))
rs232AsyncPortParity = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 3, 1, 4)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,5,4,2,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("odd", 2), ("even", 3), ("mark", 4), ("space", 5), ))).setMaxAccess("readwrite"))
rs232AsyncPortAutobaud = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 3, 1, 5)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("enabled", 1), ("disabled", 2), ))).setMaxAccess("readwrite"))
rs232AsyncPortParityErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 3, 1, 6)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
rs232AsyncPortFramingErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 3, 1, 7)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
rs232AsyncPortOverrunErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 3, 1, 8)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
rs232SyncPortTable = MibTable((1, 3, 6, 1, 2, 1, 10, 33, 4))
rs232SyncPortEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 33, 4, 1)).setIndexNames((0, "RS-232-MIB", "rs232SyncPortIndex"))
rs232SyncPortIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 1)).setColumnInitializer(MibVariable((), InterfaceIndex()).setMaxAccess("readonly"))
rs232SyncPortClockSource = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 2)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,2,)).subtype(namedValues=namedval.NamedValues(("internal", 1), ("external", 2), ("split", 3), ))).setMaxAccess("readwrite"))
rs232SyncPortFrameCheckErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 3)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
rs232SyncPortTransmitUnderrunErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 4)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
rs232SyncPortReceiveOverrunErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 5)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
rs232SyncPortInterruptedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 6)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
rs232SyncPortAbortedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 7)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
rs232SyncPortRole = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 8)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("dte", 1), ("dce", 2), )).clone(2)).setMaxAccess("readwrite"))
rs232SyncPortEncoding = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 9)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("nrz", 1), ("nrzi", 2), )).clone(1)).setMaxAccess("readwrite"))
rs232SyncPortRTSControl = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 10)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("controlled", 1), ("constant", 2), )).clone(2)).setMaxAccess("readwrite"))
rs232SyncPortRTSCTSDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 11)).setColumnInitializer(MibVariable((), Integer32().clone(0)).setMaxAccess("readwrite"))
rs232SyncPortMode = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 12)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,3,4,)).subtype(namedValues=namedval.NamedValues(("fdx", 1), ("hdx", 2), ("simplex-receive", 3), ("simplex-send", 4), )).clone(1)).setMaxAccess("readwrite"))
rs232SyncPortIdlePattern = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 13)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("mark", 1), ("space", 2), )).clone(2)).setMaxAccess("readwrite"))
rs232SyncPortMinFlags = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 4, 1, 14)).setColumnInitializer(MibVariable((), Integer32().clone(2)).setMaxAccess("readwrite"))
rs232InSigTable = MibTable((1, 3, 6, 1, 2, 1, 10, 33, 5))
rs232InSigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 33, 5, 1)).setIndexNames((0, "RS-232-MIB", "rs232InSigPortIndex"), (0, "RS-232-MIB", "rs232InSigName"))
rs232InSigPortIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 5, 1, 1)).setColumnInitializer(MibVariable((), InterfaceIndex()).setMaxAccess("readonly"))
rs232InSigName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 5, 1, 2)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(7,2,9,6,3,8,1,10,4,11,5,)).subtype(namedValues=namedval.NamedValues(("rts", 1), ("scts", 10), ("sdcd", 11), ("cts", 2), ("dsr", 3), ("dtr", 4), ("ri", 5), ("dcd", 6), ("sq", 7), ("srs", 8), ("srts", 9), ))).setMaxAccess("readonly"))
rs232InSigState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 5, 1, 3)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,3,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("on", 2), ("off", 3), ))).setMaxAccess("readonly"))
rs232InSigChanges = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 5, 1, 4)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
rs232OutSigTable = MibTable((1, 3, 6, 1, 2, 1, 10, 33, 6))
rs232OutSigEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 33, 6, 1)).setIndexNames((0, "RS-232-MIB", "rs232OutSigPortIndex"), (0, "RS-232-MIB", "rs232OutSigName"))
rs232OutSigPortIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 6, 1, 1)).setColumnInitializer(MibVariable((), InterfaceIndex()).setMaxAccess("readonly"))
rs232OutSigName = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 6, 1, 2)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(7,2,9,6,3,8,1,10,4,11,5,)).subtype(namedValues=namedval.NamedValues(("rts", 1), ("scts", 10), ("sdcd", 11), ("cts", 2), ("dsr", 3), ("dtr", 4), ("ri", 5), ("dcd", 6), ("sq", 7), ("srs", 8), ("srts", 9), ))).setMaxAccess("readonly"))
rs232OutSigState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 6, 1, 3)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,3,)).subtype(namedValues=namedval.NamedValues(("none", 1), ("on", 2), ("off", 3), ))).setMaxAccess("readonly"))
rs232OutSigChanges = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 33, 6, 1, 4)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
rs232Conformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 33, 7))
rs232Groups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 33, 7, 1))
rs232Compliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 33, 7, 2))

# Augmentions

# Groups

rs232SyncSDLCGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 33, 7, 1, 4)).setObjects(("RS-232-MIB", "rs232SyncPortRole"), ("RS-232-MIB", "rs232SyncPortMode"), ("RS-232-MIB", "rs232SyncPortEncoding"), ("RS-232-MIB", "rs232SyncPortRTSControl"), ("RS-232-MIB", "rs232SyncPortRTSCTSDelay"), ("RS-232-MIB", "rs232SyncPortIdlePattern"), ("RS-232-MIB", "rs232SyncPortMinFlags"), )
rs232AsyncGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 33, 7, 1, 2)).setObjects(("RS-232-MIB", "rs232AsyncPortAutobaud"), ("RS-232-MIB", "rs232AsyncPortStopBits"), ("RS-232-MIB", "rs232AsyncPortParity"), ("RS-232-MIB", "rs232AsyncPortOverrunErrs"), ("RS-232-MIB", "rs232AsyncPortFramingErrs"), ("RS-232-MIB", "rs232AsyncPortParityErrs"), ("RS-232-MIB", "rs232AsyncPortBits"), ("RS-232-MIB", "rs232AsyncPortIndex"), )
rs232Group = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 33, 7, 1, 1)).setObjects(("RS-232-MIB", "rs232OutSigPortIndex"), ("RS-232-MIB", "rs232PortType"), ("RS-232-MIB", "rs232OutSigName"), ("RS-232-MIB", "rs232PortOutFlowType"), ("RS-232-MIB", "rs232PortInSigNumber"), ("RS-232-MIB", "rs232OutSigState"), ("RS-232-MIB", "rs232PortInFlowType"), ("RS-232-MIB", "rs232InSigPortIndex"), ("RS-232-MIB", "rs232OutSigChanges"), ("RS-232-MIB", "rs232InSigState"), ("RS-232-MIB", "rs232InSigChanges"), ("RS-232-MIB", "rs232Number"), ("RS-232-MIB", "rs232PortIndex"), ("RS-232-MIB", "rs232PortInSpeed"), ("RS-232-MIB", "rs232InSigName"), ("RS-232-MIB", "rs232PortOutSigNumber"), ("RS-232-MIB", "rs232PortOutSpeed"), )
rs232SyncGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 33, 7, 1, 3)).setObjects(("RS-232-MIB", "rs232SyncPortInterruptedFrames"), ("RS-232-MIB", "rs232SyncPortReceiveOverrunErrs"), ("RS-232-MIB", "rs232SyncPortClockSource"), ("RS-232-MIB", "rs232SyncPortIndex"), ("RS-232-MIB", "rs232SyncPortFrameCheckErrs"), ("RS-232-MIB", "rs232SyncPortTransmitUnderrunErrs"), ("RS-232-MIB", "rs232SyncPortAbortedFrames"), )

# Exports

# Objects
mibBuilder.exportSymbols("RS-232-MIB", rs232=rs232, rs232Number=rs232Number, rs232PortTable=rs232PortTable, rs232PortEntry=rs232PortEntry, rs232PortIndex=rs232PortIndex, rs232PortType=rs232PortType, rs232PortInSigNumber=rs232PortInSigNumber, rs232PortOutSigNumber=rs232PortOutSigNumber, rs232PortInSpeed=rs232PortInSpeed, rs232PortOutSpeed=rs232PortOutSpeed, rs232PortInFlowType=rs232PortInFlowType, rs232PortOutFlowType=rs232PortOutFlowType, rs232AsyncPortTable=rs232AsyncPortTable, rs232AsyncPortEntry=rs232AsyncPortEntry, rs232AsyncPortIndex=rs232AsyncPortIndex, rs232AsyncPortBits=rs232AsyncPortBits, rs232AsyncPortStopBits=rs232AsyncPortStopBits, rs232AsyncPortParity=rs232AsyncPortParity, rs232AsyncPortAutobaud=rs232AsyncPortAutobaud, rs232AsyncPortParityErrs=rs232AsyncPortParityErrs, rs232AsyncPortFramingErrs=rs232AsyncPortFramingErrs, rs232AsyncPortOverrunErrs=rs232AsyncPortOverrunErrs, rs232SyncPortTable=rs232SyncPortTable, rs232SyncPortEntry=rs232SyncPortEntry, rs232SyncPortIndex=rs232SyncPortIndex, rs232SyncPortClockSource=rs232SyncPortClockSource, rs232SyncPortFrameCheckErrs=rs232SyncPortFrameCheckErrs, rs232SyncPortTransmitUnderrunErrs=rs232SyncPortTransmitUnderrunErrs, rs232SyncPortReceiveOverrunErrs=rs232SyncPortReceiveOverrunErrs, rs232SyncPortInterruptedFrames=rs232SyncPortInterruptedFrames, rs232SyncPortAbortedFrames=rs232SyncPortAbortedFrames, rs232SyncPortRole=rs232SyncPortRole, rs232SyncPortEncoding=rs232SyncPortEncoding, rs232SyncPortRTSControl=rs232SyncPortRTSControl, rs232SyncPortRTSCTSDelay=rs232SyncPortRTSCTSDelay, rs232SyncPortMode=rs232SyncPortMode, rs232SyncPortIdlePattern=rs232SyncPortIdlePattern, rs232SyncPortMinFlags=rs232SyncPortMinFlags, rs232InSigTable=rs232InSigTable, rs232InSigEntry=rs232InSigEntry, rs232InSigPortIndex=rs232InSigPortIndex, rs232InSigName=rs232InSigName, rs232InSigState=rs232InSigState, rs232InSigChanges=rs232InSigChanges, rs232OutSigTable=rs232OutSigTable, rs232OutSigEntry=rs232OutSigEntry, rs232OutSigPortIndex=rs232OutSigPortIndex, rs232OutSigName=rs232OutSigName, rs232OutSigState=rs232OutSigState, rs232OutSigChanges=rs232OutSigChanges, rs232Conformance=rs232Conformance, rs232Groups=rs232Groups, rs232Compliances=rs232Compliances)

# Groups
mibBuilder.exportSymbols("RS-232-MIB", rs232SyncSDLCGroup=rs232SyncSDLCGroup, rs232AsyncGroup=rs232AsyncGroup, rs232Group=rs232Group, rs232SyncGroup=rs232SyncGroup)
