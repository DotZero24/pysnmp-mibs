#
# PySNMP MIB module ALU-IEEE8021-CFM-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/rob/Code/pysnmp-mibs/mibs/nokia/ALU-IEEE8021-CFM-MIB
# Produced by pysmi-1.1.12 at Mon Aug  4 17:12:37 2025
# On host macmini.vegmond.io platform Darwin version 24.5.0 by user rob
# Using Python version 3.12.8 (main, Dec  3 2024, 18:42:41) [Clang 16.0.0 (clang-1600.0.26.4)]
#
aluSARConfs, aluSARMIBModules, aluSARNotifyPrefix, aluSARObjs = mibBuilder.importSymbols("ALU-SAR-GLOBAL-MIB", "aluSARConfs", "aluSARMIBModules", "aluSARNotifyPrefix", "aluSARObjs")
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
dot1agCfmMaIndex, dot1agCfmMepEntry, dot1agCfmMdIndex, dot1agCfmMepIdentifier = mibBuilder.importSymbols("IEEE8021-CFM-MIB", "dot1agCfmMaIndex", "dot1agCfmMepEntry", "dot1agCfmMdIndex", "dot1agCfmMepIdentifier")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, Integer32, Gauge32, ModuleIdentity, TimeTicks, NotificationType, Counter32, Bits, IpAddress, iso, ObjectIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "Integer32", "Gauge32", "ModuleIdentity", "TimeTicks", "NotificationType", "Counter32", "Bits", "IpAddress", "iso", "ObjectIdentity", "Counter64")
TimeStamp, RowStatus, MacAddress, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "RowStatus", "MacAddress", "TextualConvention", "DisplayString", "TruthValue")
tmnxSRConfs, timetraSRMIBModules, tmnxSRNotifyPrefix, tmnxSRObjs = mibBuilder.importSymbols("TIMETRA-GLOBAL-MIB", "tmnxSRConfs", "timetraSRMIBModules", "tmnxSRNotifyPrefix", "tmnxSRObjs")
tmnxDot1agCfmMepEntry, = mibBuilder.importSymbols("TIMETRA-IEEE8021-CFM-MIB", "tmnxDot1agCfmMepEntry")
SdpId, = mibBuilder.importSymbols("TIMETRA-SERV-MIB", "SdpId")
TmnxServId, = mibBuilder.importSymbols("TIMETRA-TC-MIB", "TmnxServId")
aluIEEE8021CfmMIBModule = ModuleIdentity((1, 3, 6, 1, 4, 1, 6527, 6, 1, 1, 1, 3, 9))
aluIEEE8021CfmMIBModule.setRevisions(('1909-09-18 00:00',))
if mibBuilder.loadTexts: aluIEEE8021CfmMIBModule.setLastUpdated('0909180000Z')
if mibBuilder.loadTexts: aluIEEE8021CfmMIBModule.setOrganization('Nokia')
aluDot1agObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10))
aluDot1agCfmMepObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1))
aluDot1agCfmNotificationObjs = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 2))
aluDot1agCfmMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 1, 10))
aluDot1agCfmConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 1, 10, 1))
aluDot1agCfmNotifyPrefix = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 3, 6))
aluDot1agCfmNotification = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 3, 6, 0))
class TLossRatioHundrethsOfPercent(TextualConvention, Unsigned32):
    status = 'current'
    subtypeSpec = Unsigned32.subtypeSpec + ValueRangeConstraint(0, 10000)

aluExtDot1agCfmMepTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 1), )
if mibBuilder.loadTexts: aluExtDot1agCfmMepTable.setStatus('current')
aluExtDot1agCfmMepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 1, 1), )
dot1agCfmMepEntry.registerAugmentions(("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepEntry"))
aluExtDot1agCfmMepEntry.setIndexNames(*dot1agCfmMepEntry.getIndexNames())
if mibBuilder.loadTexts: aluExtDot1agCfmMepEntry.setStatus('current')
aluExtDot1agCfmMepSingleLMMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 1, 1, 1), MacAddress().clone(hexValue="000000000000")).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aluExtDot1agCfmMepSingleLMMacAddress.setStatus('current')
aluExtDot1agCfmMepSingleLMPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7)).clone(7)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aluExtDot1agCfmMepSingleLMPriority.setStatus('current')
aluExtDot1agCfmMepSingleLMCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 1, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 5)).clone(2)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aluExtDot1agCfmMepSingleLMCount.setStatus('current')
aluExtDot1agCfmMepSingleLMInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 1, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(100, 100), ValueRangeConstraint(1000, 1000), )).clone(1000)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: aluExtDot1agCfmMepSingleLMInterval.setStatus('current')
aluExtDot1agCfmMepDualLMEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 1, 1, 5), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: aluExtDot1agCfmMepDualLMEnable.setStatus('current')
aluExtDot1agCfmMepDualLMAlarmThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 1, 1, 6), TLossRatioHundrethsOfPercent().clone(25)).setUnits('hundredth of a percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: aluExtDot1agCfmMepDualLMAlarmThreshold.setStatus('current')
aluExtDot1agCfmMepDmrRepliesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluExtDot1agCfmMepDmrRepliesSent.setStatus('current')
aluExtDot1agCfmMepLmrRepliesSent = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 1, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluExtDot1agCfmMepLmrRepliesSent.setStatus('current')
aluExtDot1agCfmMepLbrOutNoTLV = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 1, 1, 9), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluExtDot1agCfmMepLbrOutNoTLV.setStatus('obsolete')
aluExtDot1agCfmMepLbrOutWithTLV = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 1, 1, 10), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluExtDot1agCfmMepLbrOutWithTLV.setStatus('obsolete')
aluExtDot1agCfmMepLbByMdaNum = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 1, 1, 11), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluExtDot1agCfmMepLbByMdaNum.setStatus('current')
aluExtDot1agCfmMepLmAlarmClearThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 1, 1, 12), TLossRatioHundrethsOfPercent()).setUnits('hundredth of a percent').setMaxAccess("readwrite")
if mibBuilder.loadTexts: aluExtDot1agCfmMepLmAlarmClearThreshold.setStatus('current')
aluExtDot1agCfmMepLbrOutFastPath = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 1, 1, 13), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluExtDot1agCfmMepLbrOutFastPath.setStatus('current')
aluExtDot1agCfmMepLbrOutSlowPath = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 1, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluExtDot1agCfmMepLbrOutSlowPath.setStatus('current')
aluDot1agCfmMepLossRsltTable = MibTable((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2), )
if mibBuilder.loadTexts: aluDot1agCfmMepLossRsltTable.setStatus('current')
aluDot1agCfmMepLossRsltEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1), ).setIndexNames((0, "IEEE8021-CFM-MIB", "dot1agCfmMdIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMaIndex"), (0, "IEEE8021-CFM-MIB", "dot1agCfmMepIdentifier"), (0, "ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmMacAddr"), (0, "ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmType"))
if mibBuilder.loadTexts: aluDot1agCfmMepLossRsltEntry.setStatus('current')
aluDot1agCfmMepLmMacAddr = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 1), MacAddress())
if mibBuilder.loadTexts: aluDot1agCfmMepLmMacAddr.setStatus('current')
aluDot1agCfmMepLmType = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("singleEndedLm", 1), ("dualEndedLm", 2))))
if mibBuilder.loadTexts: aluDot1agCfmMepLmType.setStatus('current')
aluDot1agCfmMepLmEnableDuration = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 3), Unsigned32()).setUnits('seconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmEnableDuration.setStatus('current')
aluDot1agCfmMepLmChangeCount = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 4), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmChangeCount.setStatus('current')
aluDot1agCfmMepLmLatestChangeTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 5), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmLatestChangeTime.setStatus('current')
aluDot1agCfmMepLmFramesRxLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 6), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmFramesRxLocal.setStatus('current')
aluDot1agCfmMepLmFramesRxPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmFramesRxPeer.setStatus('current')
aluDot1agCfmMepLmFramesTxLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmFramesTxLocal.setStatus('current')
aluDot1agCfmMepLmFramesTxPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmFramesTxPeer.setStatus('current')
aluDot1agCfmMepLmFramesLossLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmFramesLossLocal.setStatus('current')
aluDot1agCfmMepLmFramesLossPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 11), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmFramesLossPeer.setStatus('current')
aluDot1agCfmMepLmLossRatioLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 12), TLossRatioHundrethsOfPercent()).setUnits('hundredth of a percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmLossRatioLocal.setStatus('current')
aluDot1agCfmMepLmLossRatioPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 13), TLossRatioHundrethsOfPercent()).setUnits('hundredth of a percent').setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmLossRatioPeer.setStatus('current')
aluDot1agCfmMepLmPrevTxLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 14), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmPrevTxLocal.setStatus('current')
aluDot1agCfmMepLmPrevRxLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 15), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmPrevRxLocal.setStatus('current')
aluDot1agCfmMepLmPrevTxPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 16), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmPrevTxPeer.setStatus('current')
aluDot1agCfmMepLmPrevRxPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 17), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmPrevRxPeer.setStatus('current')
aluDot1agCfmMepLmCurrTxLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 18), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmCurrTxLocal.setStatus('current')
aluDot1agCfmMepLmCurrRxLocal = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 19), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmCurrRxLocal.setStatus('current')
aluDot1agCfmMepLmCurrTxPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 20), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmCurrTxPeer.setStatus('current')
aluDot1agCfmMepLmCurrRxPeer = MibTableColumn((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 2, 10, 1, 2, 1, 21), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: aluDot1agCfmMepLmCurrRxPeer.setStatus('current')
aluDot1agCfmMepLmComplete = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 3, 6, 0, 1)).setObjects(("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmLossRatioLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmLossRatioPeer"))
if mibBuilder.loadTexts: aluDot1agCfmMepLmComplete.setStatus('current')
aluDot1agCfmMepLmAlarm = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 3, 6, 0, 2)).setObjects(("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmLossRatioLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmLossRatioPeer"))
if mibBuilder.loadTexts: aluDot1agCfmMepLmAlarm.setStatus('current')
aluDot1agCfmMepLmAlarmClear = NotificationType((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 3, 6, 0, 3)).setObjects(("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmLossRatioLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmLossRatioPeer"))
if mibBuilder.loadTexts: aluDot1agCfmMepLmAlarmClear.setStatus('current')
aluDot1agCfmCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 1, 10, 1, 1))
aluDot1agCfmGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 1, 10, 1, 2))
aluDot1agComp7705 = MibIdentifier((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 1, 10, 1, 1, 1))
aluDot1agComp7705V1v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 1, 10, 1, 1, 1, 1)).setObjects(("ALU-IEEE8021-CFM-MIB", "aluY1731CfmNotificationGroup"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aluDot1agComp7705V1v0 = aluDot1agComp7705V1v0.setStatus('obsolete')
aluDot1agComp7705V5v0 = ModuleCompliance((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 1, 10, 1, 1, 1, 2)).setObjects(("ALU-IEEE8021-CFM-MIB", "aluY1731CfmNotificationGroup"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepGroupV5v0"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aluDot1agComp7705V5v0 = aluDot1agComp7705V5v0.setStatus('current')
aluY1731CfmNotificationGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 1, 10, 1, 2, 1)).setObjects(("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmComplete"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmAlarm"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmAlarmClear"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aluY1731CfmNotificationGroup = aluY1731CfmNotificationGroup.setStatus('current')
aluDot1agCfmMepGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 1, 10, 1, 2, 2)).setObjects(("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepSingleLMMacAddress"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepSingleLMPriority"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepSingleLMCount"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepSingleLMInterval"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepDualLMEnable"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepDualLMAlarmThreshold"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepDmrRepliesSent"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepLmrRepliesSent"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmEnableDuration"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmChangeCount"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmLatestChangeTime"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmFramesRxLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmFramesRxPeer"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmFramesTxLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmFramesTxPeer"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmFramesLossLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmFramesLossPeer"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmLossRatioLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmLossRatioPeer"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmPrevTxLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmPrevRxLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmPrevTxPeer"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmPrevRxPeer"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmCurrTxLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmCurrRxLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmCurrTxPeer"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmCurrRxPeer"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepLbrOutNoTLV"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepLbrOutWithTLV"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepLbByMdaNum"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepLmAlarmClearThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aluDot1agCfmMepGroup = aluDot1agCfmMepGroup.setStatus('obsolete')
aluDot1agCfmMepGroupV5v0 = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 1, 10, 1, 2, 3)).setObjects(("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepSingleLMMacAddress"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepSingleLMPriority"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepSingleLMCount"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepSingleLMInterval"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepDualLMEnable"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepDualLMAlarmThreshold"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepDmrRepliesSent"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepLmrRepliesSent"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmEnableDuration"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmChangeCount"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmLatestChangeTime"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmFramesRxLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmFramesRxPeer"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmFramesTxLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmFramesTxPeer"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmFramesLossLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmFramesLossPeer"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmLossRatioLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmLossRatioPeer"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmPrevTxLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmPrevRxLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmPrevTxPeer"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmPrevRxPeer"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmCurrTxLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmCurrRxLocal"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmCurrTxPeer"), ("ALU-IEEE8021-CFM-MIB", "aluDot1agCfmMepLmCurrRxPeer"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepLbrOutFastPath"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepLbrOutSlowPath"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepLbByMdaNum"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepLmAlarmClearThreshold"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aluDot1agCfmMepGroupV5v0 = aluDot1agCfmMepGroupV5v0.setStatus('current')
aluDot1agCfmMepObsoletedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6527, 6, 1, 2, 1, 10, 1, 2, 4)).setObjects(("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepLbrOutNoTLV"), ("ALU-IEEE8021-CFM-MIB", "aluExtDot1agCfmMepLbrOutWithTLV"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    aluDot1agCfmMepObsoletedGroup = aluDot1agCfmMepObsoletedGroup.setStatus('current')
mibBuilder.exportSymbols("ALU-IEEE8021-CFM-MIB", aluExtDot1agCfmMepLbByMdaNum=aluExtDot1agCfmMepLbByMdaNum, aluY1731CfmNotificationGroup=aluY1731CfmNotificationGroup, aluDot1agComp7705V5v0=aluDot1agComp7705V5v0, aluExtDot1agCfmMepSingleLMCount=aluExtDot1agCfmMepSingleLMCount, aluExtDot1agCfmMepDmrRepliesSent=aluExtDot1agCfmMepDmrRepliesSent, aluDot1agCfmMepLmEnableDuration=aluDot1agCfmMepLmEnableDuration, aluExtDot1agCfmMepEntry=aluExtDot1agCfmMepEntry, aluDot1agCfmNotifyPrefix=aluDot1agCfmNotifyPrefix, aluDot1agCfmMepLmPrevRxPeer=aluDot1agCfmMepLmPrevRxPeer, aluIEEE8021CfmMIBModule=aluIEEE8021CfmMIBModule, aluDot1agCfmMepLmPrevTxPeer=aluDot1agCfmMepLmPrevTxPeer, aluDot1agComp7705V1v0=aluDot1agComp7705V1v0, aluDot1agCfmCompliances=aluDot1agCfmCompliances, aluDot1agCfmMepLmLatestChangeTime=aluDot1agCfmMepLmLatestChangeTime, aluDot1agCfmMepLmComplete=aluDot1agCfmMepLmComplete, aluExtDot1agCfmMepLbrOutWithTLV=aluExtDot1agCfmMepLbrOutWithTLV, aluDot1agCfmMepGroup=aluDot1agCfmMepGroup, aluDot1agObjs=aluDot1agObjs, aluExtDot1agCfmMepLbrOutNoTLV=aluExtDot1agCfmMepLbrOutNoTLV, aluDot1agCfmMepObjs=aluDot1agCfmMepObjs, aluDot1agCfmMepLmPrevTxLocal=aluDot1agCfmMepLmPrevTxLocal, TLossRatioHundrethsOfPercent=TLossRatioHundrethsOfPercent, aluDot1agCfmMepLmFramesRxPeer=aluDot1agCfmMepLmFramesRxPeer, aluDot1agCfmMepLmFramesTxLocal=aluDot1agCfmMepLmFramesTxLocal, aluDot1agCfmMepLmCurrRxLocal=aluDot1agCfmMepLmCurrRxLocal, aluDot1agCfmMepLmFramesLossPeer=aluDot1agCfmMepLmFramesLossPeer, aluDot1agCfmNotification=aluDot1agCfmNotification, aluDot1agCfmMIBConformance=aluDot1agCfmMIBConformance, aluExtDot1agCfmMepLmrRepliesSent=aluExtDot1agCfmMepLmrRepliesSent, aluDot1agCfmNotificationObjs=aluDot1agCfmNotificationObjs, aluDot1agCfmMepLmFramesLossLocal=aluDot1agCfmMepLmFramesLossLocal, aluDot1agCfmConformance=aluDot1agCfmConformance, aluExtDot1agCfmMepLbrOutFastPath=aluExtDot1agCfmMepLbrOutFastPath, aluExtDot1agCfmMepTable=aluExtDot1agCfmMepTable, aluDot1agCfmMepLmFramesTxPeer=aluDot1agCfmMepLmFramesTxPeer, aluDot1agCfmMepLmLossRatioLocal=aluDot1agCfmMepLmLossRatioLocal, aluExtDot1agCfmMepDualLMAlarmThreshold=aluExtDot1agCfmMepDualLMAlarmThreshold, aluDot1agComp7705=aluDot1agComp7705, aluDot1agCfmMepGroupV5v0=aluDot1agCfmMepGroupV5v0, aluDot1agCfmMepLmCurrTxLocal=aluDot1agCfmMepLmCurrTxLocal, PYSNMP_MODULE_ID=aluIEEE8021CfmMIBModule, aluExtDot1agCfmMepLbrOutSlowPath=aluExtDot1agCfmMepLbrOutSlowPath, aluDot1agCfmMepLossRsltEntry=aluDot1agCfmMepLossRsltEntry, aluDot1agCfmMepLmAlarmClear=aluDot1agCfmMepLmAlarmClear, aluDot1agCfmGroups=aluDot1agCfmGroups, aluExtDot1agCfmMepLmAlarmClearThreshold=aluExtDot1agCfmMepLmAlarmClearThreshold, aluDot1agCfmMepObsoletedGroup=aluDot1agCfmMepObsoletedGroup, aluDot1agCfmMepLossRsltTable=aluDot1agCfmMepLossRsltTable, aluDot1agCfmMepLmAlarm=aluDot1agCfmMepLmAlarm, aluExtDot1agCfmMepSingleLMPriority=aluExtDot1agCfmMepSingleLMPriority, aluDot1agCfmMepLmCurrTxPeer=aluDot1agCfmMepLmCurrTxPeer, aluExtDot1agCfmMepSingleLMInterval=aluExtDot1agCfmMepSingleLMInterval, aluDot1agCfmMepLmChangeCount=aluDot1agCfmMepLmChangeCount, aluExtDot1agCfmMepDualLMEnable=aluExtDot1agCfmMepDualLMEnable, aluDot1agCfmMepLmFramesRxLocal=aluDot1agCfmMepLmFramesRxLocal, aluDot1agCfmMepLmCurrRxPeer=aluDot1agCfmMepLmCurrRxPeer, aluExtDot1agCfmMepSingleLMMacAddress=aluExtDot1agCfmMepSingleLMMacAddress, aluDot1agCfmMepLmLossRatioPeer=aluDot1agCfmMepLmLossRatioPeer, aluDot1agCfmMepLmType=aluDot1agCfmMepLmType, aluDot1agCfmMepLmPrevRxLocal=aluDot1agCfmMepLmPrevRxLocal, aluDot1agCfmMepLmMacAddr=aluDot1agCfmMepLmMacAddr)
