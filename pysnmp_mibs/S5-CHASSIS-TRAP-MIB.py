_E='s5ChasNotifyFanDirection'
_D='current'
_C='s5ChasComType'
_B='s5ChasComOperState'
_A='S5-CHASSIS-MIB'
if'mibBuilder'not in globals():import sys;sys.stderr.write(__doc__);sys.exit(1)
Integer,OctetString,ObjectIdentifier=mibBuilder.importSymbols('ASN1','Integer','OctetString','ObjectIdentifier')
NamedValues,=mibBuilder.importSymbols('ASN1-ENUMERATION','NamedValues')
ConstraintsIntersection,ConstraintsUnion,SingleValueConstraint,ValueRangeConstraint,ValueSizeConstraint=mibBuilder.importSymbols('ASN1-REFINEMENT','ConstraintsIntersection','ConstraintsUnion','SingleValueConstraint','ValueRangeConstraint','ValueSizeConstraint')
s5ChasComOperState,s5ChasComType,s5ChasNotifyFanDirection=mibBuilder.importSymbols(_A,_B,_C,_E)
s5ChaTrap,=mibBuilder.importSymbols('S5-ROOT-MIB','s5ChaTrap')
ModuleCompliance,NotificationGroup=mibBuilder.importSymbols('SNMPv2-CONF','ModuleCompliance','NotificationGroup')
Bits,Counter32,Counter64,Gauge32,Integer32,IpAddress,ModuleIdentity,MibIdentifier,NotificationType,ObjectIdentity,MibScalar,MibTable,MibTableRow,MibTableColumn,TimeTicks,Unsigned32,iso=mibBuilder.importSymbols('SNMPv2-SMI','Bits','Counter32','Counter64','Gauge32','Integer32','IpAddress','ModuleIdentity','MibIdentifier','NotificationType','ObjectIdentity','MibScalar','MibTable','MibTableRow','MibTableColumn','TimeTicks','Unsigned32','iso')
DisplayString,PhysAddress,TextualConvention=mibBuilder.importSymbols('SNMPv2-TC','DisplayString','PhysAddress','TextualConvention')
s5ChassisTrapMib=ModuleIdentity((1,3,6,1,4,1,45,1,6,2,4,0))
if mibBuilder.loadTexts:s5ChassisTrapMib.setRevisions(('2011-04-15 00:00','2011-03-29 00:00','2009-07-29 00:00','2004-07-20 00:00'))
s5CtrNewHotSwap=NotificationType((1,3,6,1,4,1,45,1,6,2,4,0,1))
s5CtrNewHotSwap.setObjects(*((_A,_C),(_A,_B)))
if mibBuilder.loadTexts:s5CtrNewHotSwap.setStatus(_D)
s5CtrNewProblem=NotificationType((1,3,6,1,4,1,45,1,6,2,4,0,2))
s5CtrNewProblem.setObjects(*((_A,_C),(_A,_B)))
if mibBuilder.loadTexts:s5CtrNewProblem.setStatus(_D)
s5CtrNewUnitUp=NotificationType((1,3,6,1,4,1,45,1,6,2,4,0,3))
s5CtrNewUnitUp.setObjects(*((_A,_C),(_A,_B)))
if mibBuilder.loadTexts:s5CtrNewUnitUp.setStatus(_D)
s5CtrNewUnitDown=NotificationType((1,3,6,1,4,1,45,1,6,2,4,0,4))
s5CtrNewUnitDown.setObjects(*((_A,_C),(_A,_B)))
if mibBuilder.loadTexts:s5CtrNewUnitDown.setStatus(_D)
s5CtrFanRotationError=NotificationType((1,3,6,1,4,1,45,1,6,2,4,0,5))
s5CtrFanRotationError.setObjects(*((_A,_C),(_A,_B)))
if mibBuilder.loadTexts:s5CtrFanRotationError.setStatus(_D)
s5CtrFanDirectionError=NotificationType((1,3,6,1,4,1,45,1,6,2,4,0,6))
s5CtrFanDirectionError.setObjects(*((_A,_C),(_A,_B),(_A,_E)))
if mibBuilder.loadTexts:s5CtrFanDirectionError.setStatus(_D)
s5CtrHighTemperatureError=NotificationType((1,3,6,1,4,1,45,1,6,2,4,0,7))
s5CtrHighTemperatureError.setObjects(*((_A,_C),(_A,_B)))
if mibBuilder.loadTexts:s5CtrHighTemperatureError.setStatus(_D)
s5CtrHotSwap=NotificationType((1,3,6,1,4,1,45,1,6,2,4,1))
s5CtrHotSwap.setObjects(*((_A,_C),(_A,_B)))
if mibBuilder.loadTexts:s5CtrHotSwap.setStatus(_D)
s5CtrProblem=NotificationType((1,3,6,1,4,1,45,1,6,2,4,2))
s5CtrProblem.setObjects(*((_A,_C),(_A,_B)))
if mibBuilder.loadTexts:s5CtrProblem.setStatus(_D)
s5CtrUnitUp=NotificationType((1,3,6,1,4,1,45,1,6,2,4,3))
s5CtrUnitUp.setObjects(*((_A,_C),(_A,_B)))
if mibBuilder.loadTexts:s5CtrUnitUp.setStatus(_D)
s5CtrUnitDown=NotificationType((1,3,6,1,4,1,45,1,6,2,4,4))
s5CtrUnitDown.setObjects(*((_A,_C),(_A,_B)))
if mibBuilder.loadTexts:s5CtrUnitDown.setStatus(_D)
mibBuilder.exportSymbols('S5-CHASSIS-TRAP-MIB',**{'s5ChassisTrapMib':s5ChassisTrapMib,'s5CtrNewHotSwap':s5CtrNewHotSwap,'s5CtrNewProblem':s5CtrNewProblem,'s5CtrNewUnitUp':s5CtrNewUnitUp,'s5CtrNewUnitDown':s5CtrNewUnitDown,'s5CtrFanRotationError':s5CtrFanRotationError,'s5CtrFanDirectionError':s5CtrFanDirectionError,'s5CtrHighTemperatureError':s5CtrHighTemperatureError,'s5CtrHotSwap':s5CtrHotSwap,'s5CtrProblem':s5CtrProblem,'s5CtrUnitUp':s5CtrUnitUp,'s5CtrUnitDown':s5CtrUnitDown})