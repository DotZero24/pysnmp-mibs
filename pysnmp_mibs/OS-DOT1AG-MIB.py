#
# PySNMP MIB module OS-DOT1AG-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/rob/Code/pysnmp-mibs/mibs/mrv/OS-DOT1AG-MIB
# Produced by pysmi-1.1.12 at Mon Aug  4 17:02:39 2025
# On host macmini.vegmond.io platform Darwin version 24.5.0 by user rob
# Using Python version 3.12.8 (main, Dec  3 2024, 18:42:41) [Clang 16.0.0 (clang-1600.0.26.4)]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
Dot1agCfmMepId, Dot1agCfmPortStatus, Dot1agCfmMpDirection, Dot1agCfmMaintAssocNameType, Dot1agCfmMepDefects, VlanIdOrNone, Dot1agCfmInterfaceStatus, Dot1agCfmLowestAlarmPri, Dot1agCfmFngState, Dot1agCfmRemoteMepState, Dot1agCfmHighestDefectPri, Dot1agCfmCcmInterval, Dot1agCfmMaintAssocName = mibBuilder.importSymbols("IEEE8021-CFM-MIB", "Dot1agCfmMepId", "Dot1agCfmPortStatus", "Dot1agCfmMpDirection", "Dot1agCfmMaintAssocNameType", "Dot1agCfmMepDefects", "VlanIdOrNone", "Dot1agCfmInterfaceStatus", "Dot1agCfmLowestAlarmPri", "Dot1agCfmFngState", "Dot1agCfmRemoteMepState", "Dot1agCfmHighestDefectPri", "Dot1agCfmCcmInterval", "Dot1agCfmMaintAssocName")
InterfaceIndex, = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
nbSwitchG1Il, PortList, TagList, EntryValidator = mibBuilder.importSymbols("OS-COMMON-TC-MIB", "nbSwitchG1Il", "PortList", "TagList", "EntryValidator")
osEthOamMdLevel, = mibBuilder.importSymbols("OS-ETHOAM-MD-MIB", "osEthOamMdLevel")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, Integer32, Gauge32, ModuleIdentity, TimeTicks, NotificationType, Counter32, Bits, IpAddress, iso, ObjectIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "Integer32", "Gauge32", "ModuleIdentity", "TimeTicks", "NotificationType", "Counter32", "Bits", "IpAddress", "iso", "ObjectIdentity", "Counter64")
TimeStamp, TimeInterval, MacAddress, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "TimeStamp", "TimeInterval", "MacAddress", "TextualConvention", "DisplayString", "TruthValue")
osDot1ag = ModuleIdentity((1, 3, 6, 1, 4, 1, 629, 1, 50, 22))
osDot1ag.setRevisions(('2018-12-30 00:00', '2013-05-14 00:00',))
if mibBuilder.loadTexts: osDot1ag.setLastUpdated('201812300000Z')
if mibBuilder.loadTexts: osDot1ag.setOrganization('MRV Communications, Inc.')
osDot1agObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1))
osDot1agConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 100))
osDot1agMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 100, 1))
osDot1agMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 100, 2))
osDot1agGen = MibIdentifier((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 1))
osDot1agGenCcmIntervals = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 1, 1), Bits().clone(namedValues=NamedValues(("osDot1agGenSupports300Hz", 0), ("osDot1agGenSupports10ms", 1), ("osDot1agGenSupports100ms", 2), ("osDot1agGenSupports1s", 3), ("osDot1agGenSupports10s", 4), ("osDot1agGenSupports60s", 5), ("osDot1agGenSupports600s", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDot1agGenCcmIntervals.setStatus('current')
osDot1agGenKeepAlive = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 12)).clone(3)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osDot1agGenKeepAlive.setStatus('current')
osDot1agGenAdminStatus = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("enable", 2), ("disable", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osDot1agGenAdminStatus.setStatus('current')
osDot1agGenDmmStatus = MibScalar((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("enable", 2), ("disable", 3))).clone('disable')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osDot1agGenDmmStatus.setStatus('current')
osDot1agMaTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 2), )
if mibBuilder.loadTexts: osDot1agMaTable.setStatus('current')
osDot1agMaEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 2, 1), ).setIndexNames((0, "OS-ETHOAM-MD-MIB", "osEthOamMdLevel"), (0, "OS-DOT1AG-MIB", "osDot1agMaIndex"))
if mibBuilder.loadTexts: osDot1agMaEntry.setStatus('current')
osDot1agMaIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 2, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: osDot1agMaIndex.setStatus('current')
osDot1agMaVlans = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 2, 1, 2), TagList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMaVlans.setStatus('current')
osDot1agMaPrimaryVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 2, 1, 3), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMaPrimaryVlanId.setStatus('current')
osDot1agMaOperPrimaryVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 2, 1, 4), VlanIdOrNone()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDot1agMaOperPrimaryVlanId.setStatus('current')
osDot1agMaFormatName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 2, 1, 5), Dot1agCfmMaintAssocNameType().clone('unsignedInt16')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMaFormatName.setStatus('current')
osDot1agMaName = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 2, 1, 6), Dot1agCfmMaintAssocName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMaName.setStatus('current')
osDot1agMaCcmInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 2, 1, 7), Dot1agCfmCcmInterval().clone('interval1s')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMaCcmInterval.setStatus('current')
osDot1agMaRMepAging = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 2, 1, 8), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMaRMepAging.setStatus('current')
osDot1agMaRMeps = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 2, 1, 9), TagList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMaRMeps.setStatus('current')
osDot1agMaIgnoreRMeps = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 2, 1, 10), TagList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMaIgnoreRMeps.setStatus('current')
osDot1agMaCPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 2, 1, 11), PortList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMaCPorts.setStatus('current')
osDot1agMaKeepAlive = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 2, 1, 12), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(3, 12)).clone(3)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMaKeepAlive.setStatus('current')
osDot1agMaCcmClear = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 2, 1, 60), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMaCcmClear.setStatus('current')
osDot1agMaAdminSatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 2, 1, 99), EntryValidator()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMaAdminSatus.setStatus('current')
osDot1agMepTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3), )
if mibBuilder.loadTexts: osDot1agMepTable.setStatus('current')
osDot1agMepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1), ).setIndexNames((0, "OS-ETHOAM-MD-MIB", "osEthOamMdLevel"), (0, "OS-DOT1AG-MIB", "osDot1agMaIndex"), (0, "OS-DOT1AG-MIB", "osDot1agMepId"))
if mibBuilder.loadTexts: osDot1agMepEntry.setStatus('current')
osDot1agMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 1), Dot1agCfmMepId())
if mibBuilder.loadTexts: osDot1agMepId.setStatus('current')
osDot1agMepIfIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 2), InterfaceIndex()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMepIfIndex.setStatus('current')
osDot1agMepDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 3), Dot1agCfmMpDirection().clone('up')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMepDirection.setStatus('current')
osDot1agMepPrimaryVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 4), VlanIdOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMepPrimaryVlanId.setStatus('current')
osDot1agMepActive = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 5), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMepActive.setStatus('current')
osDot1agMepCciEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 6), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMepCciEnabled.setStatus('current')
osDot1agMepLowPrDef = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 7), Dot1agCfmLowestAlarmPri().clone('macRemErrXcon')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMepLowPrDef.setStatus('current')
osDot1agMepFngAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 8), TimeInterval().clone(250)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMepFngAlarmTime.setStatus('current')
osDot1agMepFngResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 9), TimeInterval().clone(1000)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMepFngResetTime.setStatus('current')
osDot1agMepPriority = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 7))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMepPriority.setStatus('current')
osDot1agMepCcmAlarms = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("all", 1), ("fault", 2), ("recovery", 3))).clone('all')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMepCcmAlarms.setStatus('current')
osDot1agMepSendPortTlv = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 12), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMepSendPortTlv.setStatus('current')
osDot1agMepSendIfTlv = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 13), TruthValue().clone('true')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMepSendIfTlv.setStatus('current')
osDot1agMepCcmClear = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 14), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMepCcmClear.setStatus('current')
osDot1agMepFngState = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 25), Dot1agCfmFngState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDot1agMepFngState.setStatus('current')
osDot1agMepMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 26), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDot1agMepMacAddress.setStatus('current')
osDot1agMepHighestPrDefect = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 27), Dot1agCfmHighestDefectPri()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDot1agMepHighestPrDefect.setStatus('current')
osDot1agMepDefects = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 28), Dot1agCfmMepDefects()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDot1agMepDefects.setStatus('current')
osDot1agMepCciSentCcms = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 29), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDot1agMepCciSentCcms.setStatus('current')
osDot1agMepCciRecvCcms = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 30), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDot1agMepCciRecvCcms.setStatus('current')
osDot1agMepAdminSatus = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 3, 1, 99), EntryValidator()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osDot1agMepAdminSatus.setStatus('current')
osDot1agRMepTable = MibTable((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 4), )
if mibBuilder.loadTexts: osDot1agRMepTable.setStatus('current')
osDot1agRMepEntry = MibTableRow((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 4, 1), ).setIndexNames((0, "OS-ETHOAM-MD-MIB", "osEthOamMdLevel"), (0, "OS-DOT1AG-MIB", "osDot1agMaIndex"), (0, "OS-DOT1AG-MIB", "osDot1agMepId"), (0, "OS-DOT1AG-MIB", "osDot1agRMepId"))
if mibBuilder.loadTexts: osDot1agRMepEntry.setStatus('current')
osDot1agRMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 4, 1, 1), Dot1agCfmMepId())
if mibBuilder.loadTexts: osDot1agRMepId.setStatus('current')
osDot1agRMepState = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 4, 1, 2), Dot1agCfmRemoteMepState()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDot1agRMepState.setStatus('current')
osDot1agRMepFailedOkTime = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 4, 1, 3), TimeStamp()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDot1agRMepFailedOkTime.setStatus('current')
osDot1agRMepMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 4, 1, 4), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDot1agRMepMacAddress.setStatus('current')
osDot1agRMepRdi = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 4, 1, 5), TruthValue()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDot1agRMepRdi.setStatus('current')
osDot1agRMepPortStatusTlv = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 4, 1, 6), Dot1agCfmPortStatus().clone('psNoPortStateTLV')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDot1agRMepPortStatusTlv.setStatus('current')
osDot1agRMepInterfaceStatusTlv = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 4, 1, 7), Dot1agCfmInterfaceStatus().clone('isNoInterfaceStatusTLV')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDot1agRMepInterfaceStatusTlv.setStatus('current')
osDot1agRMepRecvCcms = MibTableColumn((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 1, 4, 1, 8), Counter32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osDot1agRMepRecvCcms.setStatus('current')
osDot1agMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 100, 1, 1)).setObjects(("OS-DOT1AG-MIB", "osDot1agMandatoryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    osDot1agMIBCompliance = osDot1agMIBCompliance.setStatus('current')
osDot1agMandatoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 629, 1, 50, 22, 100, 2, 1)).setObjects(("OS-DOT1AG-MIB", "osDot1agGenCcmIntervals"), ("OS-DOT1AG-MIB", "osDot1agGenKeepAlive"), ("OS-DOT1AG-MIB", "osDot1agGenAdminStatus"), ("OS-DOT1AG-MIB", "osDot1agGenDmmStatus"), ("OS-DOT1AG-MIB", "osDot1agMaVlans"), ("OS-DOT1AG-MIB", "osDot1agMaPrimaryVlanId"), ("OS-DOT1AG-MIB", "osDot1agMaOperPrimaryVlanId"), ("OS-DOT1AG-MIB", "osDot1agMaFormatName"), ("OS-DOT1AG-MIB", "osDot1agMaName"), ("OS-DOT1AG-MIB", "osDot1agMaCcmInterval"), ("OS-DOT1AG-MIB", "osDot1agMaRMepAging"), ("OS-DOT1AG-MIB", "osDot1agMaRMeps"), ("OS-DOT1AG-MIB", "osDot1agMaIgnoreRMeps"), ("OS-DOT1AG-MIB", "osDot1agMaCPorts"), ("OS-DOT1AG-MIB", "osDot1agMaKeepAlive"), ("OS-DOT1AG-MIB", "osDot1agMaCcmClear"), ("OS-DOT1AG-MIB", "osDot1agMaAdminSatus"), ("OS-DOT1AG-MIB", "osDot1agMepIfIndex"), ("OS-DOT1AG-MIB", "osDot1agMepDirection"), ("OS-DOT1AG-MIB", "osDot1agMepPrimaryVlanId"), ("OS-DOT1AG-MIB", "osDot1agMepActive"), ("OS-DOT1AG-MIB", "osDot1agMepCciEnabled"), ("OS-DOT1AG-MIB", "osDot1agMepLowPrDef"), ("OS-DOT1AG-MIB", "osDot1agMepFngAlarmTime"), ("OS-DOT1AG-MIB", "osDot1agMepFngResetTime"), ("OS-DOT1AG-MIB", "osDot1agMepPriority"), ("OS-DOT1AG-MIB", "osDot1agMepCcmAlarms"), ("OS-DOT1AG-MIB", "osDot1agMepSendPortTlv"), ("OS-DOT1AG-MIB", "osDot1agMepSendIfTlv"), ("OS-DOT1AG-MIB", "osDot1agMepCcmClear"), ("OS-DOT1AG-MIB", "osDot1agMepFngState"), ("OS-DOT1AG-MIB", "osDot1agMepMacAddress"), ("OS-DOT1AG-MIB", "osDot1agMepHighestPrDefect"), ("OS-DOT1AG-MIB", "osDot1agMepDefects"), ("OS-DOT1AG-MIB", "osDot1agMepCciSentCcms"), ("OS-DOT1AG-MIB", "osDot1agMepCciRecvCcms"), ("OS-DOT1AG-MIB", "osDot1agMepAdminSatus"), ("OS-DOT1AG-MIB", "osDot1agRMepState"), ("OS-DOT1AG-MIB", "osDot1agRMepFailedOkTime"), ("OS-DOT1AG-MIB", "osDot1agRMepMacAddress"), ("OS-DOT1AG-MIB", "osDot1agRMepRdi"), ("OS-DOT1AG-MIB", "osDot1agRMepPortStatusTlv"), ("OS-DOT1AG-MIB", "osDot1agRMepInterfaceStatusTlv"), ("OS-DOT1AG-MIB", "osDot1agRMepRecvCcms"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    osDot1agMandatoryGroup = osDot1agMandatoryGroup.setStatus('current')
mibBuilder.exportSymbols("OS-DOT1AG-MIB", osDot1agRMepRecvCcms=osDot1agRMepRecvCcms, osDot1agMaIndex=osDot1agMaIndex, osDot1agMepFngResetTime=osDot1agMepFngResetTime, osDot1agMepIfIndex=osDot1agMepIfIndex, osDot1agMandatoryGroup=osDot1agMandatoryGroup, osDot1agGenCcmIntervals=osDot1agGenCcmIntervals, osDot1agMepCcmClear=osDot1agMepCcmClear, osDot1agObjects=osDot1agObjects, osDot1agMaCcmInterval=osDot1agMaCcmInterval, osDot1agMaRMepAging=osDot1agMaRMepAging, osDot1agMaRMeps=osDot1agMaRMeps, osDot1agMepCcmAlarms=osDot1agMepCcmAlarms, osDot1agMepDirection=osDot1agMepDirection, osDot1agRMepState=osDot1agRMepState, osDot1agMepPrimaryVlanId=osDot1agMepPrimaryVlanId, osDot1agMaAdminSatus=osDot1agMaAdminSatus, osDot1agMepFngState=osDot1agMepFngState, osDot1agMepEntry=osDot1agMepEntry, osDot1agRMepEntry=osDot1agRMepEntry, osDot1agMepSendPortTlv=osDot1agMepSendPortTlv, osDot1agRMepRdi=osDot1agRMepRdi, osDot1ag=osDot1ag, osDot1agMepMacAddress=osDot1agMepMacAddress, osDot1agRMepMacAddress=osDot1agRMepMacAddress, osDot1agMaName=osDot1agMaName, osDot1agConformance=osDot1agConformance, osDot1agMepAdminSatus=osDot1agMepAdminSatus, osDot1agMepTable=osDot1agMepTable, osDot1agMaEntry=osDot1agMaEntry, osDot1agMaOperPrimaryVlanId=osDot1agMaOperPrimaryVlanId, osDot1agMepHighestPrDefect=osDot1agMepHighestPrDefect, osDot1agMIBCompliance=osDot1agMIBCompliance, osDot1agMaPrimaryVlanId=osDot1agMaPrimaryVlanId, osDot1agMepActive=osDot1agMepActive, osDot1agMepFngAlarmTime=osDot1agMepFngAlarmTime, osDot1agRMepFailedOkTime=osDot1agRMepFailedOkTime, osDot1agMIBGroups=osDot1agMIBGroups, osDot1agMaKeepAlive=osDot1agMaKeepAlive, osDot1agMaVlans=osDot1agMaVlans, osDot1agMaCcmClear=osDot1agMaCcmClear, osDot1agMepCciSentCcms=osDot1agMepCciSentCcms, osDot1agMepCciEnabled=osDot1agMepCciEnabled, osDot1agRMepTable=osDot1agRMepTable, PYSNMP_MODULE_ID=osDot1ag, osDot1agMIBCompliances=osDot1agMIBCompliances, osDot1agGen=osDot1agGen, osDot1agMepCciRecvCcms=osDot1agMepCciRecvCcms, osDot1agMaCPorts=osDot1agMaCPorts, osDot1agRMepPortStatusTlv=osDot1agRMepPortStatusTlv, osDot1agRMepInterfaceStatusTlv=osDot1agRMepInterfaceStatusTlv, osDot1agMepSendIfTlv=osDot1agMepSendIfTlv, osDot1agMepPriority=osDot1agMepPriority, osDot1agMepLowPrDef=osDot1agMepLowPrDef, osDot1agMaIgnoreRMeps=osDot1agMaIgnoreRMeps, osDot1agGenAdminStatus=osDot1agGenAdminStatus, osDot1agRMepId=osDot1agRMepId, osDot1agMaTable=osDot1agMaTable, osDot1agMepId=osDot1agMepId, osDot1agMaFormatName=osDot1agMaFormatName, osDot1agGenKeepAlive=osDot1agGenKeepAlive, osDot1agGenDmmStatus=osDot1agGenDmmStatus, osDot1agMepDefects=osDot1agMepDefects)
