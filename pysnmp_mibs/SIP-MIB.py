# PySNMP SMI module. Autogenerated from smidump -f python SIP-MIB
# by libsmi2pysnmp-0.0.5-alpha at Fri Oct 28 00:30:52 2005,
# Python version (2, 4, 0, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pyasn1.type import constraint, namedval

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( ifIndex, transmission, ) = mibBuilder.importSymbols("RFC1213-MIB", "ifIndex", "transmission")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Counter32, Integer32, Integer32, IpAddress, ModuleIdentity, MibIdentifier, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Integer32", "Integer32", "IpAddress", "ModuleIdentity", "MibIdentifier", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "mib-2")
( TextualConvention, TimeStamp, ) = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "TimeStamp")

# Types

class IfIndex(Integer32):
    pass

class SMDSAddress(TextualConvention, OctetString):
    subtypeSpec = OctetString.subtypeSpec+constraint.ValueSizeConstraint(8,8)
    pass


# Objects

sip = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 31))
sipL3Table = MibTable((1, 3, 6, 1, 2, 1, 10, 31, 1))
sipL3Entry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 31, 1, 1)).setIndexNames((0, "SIP-MIB", "sipL3Index"))
sipL3Index = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 1), IfIndex()).setMaxAccess("readonly")
sipL3ReceivedIndividualDAs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 2), Counter32()).setMaxAccess("readonly")
sipL3ReceivedGAs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 3), Counter32()).setMaxAccess("readonly")
sipL3UnrecognizedIndividualDAs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 4), Counter32()).setMaxAccess("readonly")
sipL3UnrecognizedGAs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 5), Counter32()).setMaxAccess("readonly")
sipL3SentIndividualDAs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 6), Counter32()).setMaxAccess("readonly")
sipL3SentGAs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 7), Counter32()).setMaxAccess("readonly")
sipL3Errors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 8), Counter32()).setMaxAccess("readonly")
sipL3InvalidSMDSAddressTypes = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 9), Counter32()).setMaxAccess("readonly")
sipL3VersionSupport = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 1, 1, 10), Integer32()).setMaxAccess("readonly")
sipL2Table = MibTable((1, 3, 6, 1, 2, 1, 10, 31, 2))
sipL2Entry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 31, 2, 1)).setIndexNames((0, "SIP-MIB", "sipL2Index"))
sipL2Index = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 1), IfIndex()).setMaxAccess("readonly")
sipL2ReceivedCounts = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 2), Counter32()).setMaxAccess("readonly")
sipL2SentCounts = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 3), Counter32()).setMaxAccess("readonly")
sipL2HcsOrCRCErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 4), Counter32()).setMaxAccess("readonly")
sipL2PayloadLengthErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 5), Counter32()).setMaxAccess("readonly")
sipL2SequenceNumberErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 6), Counter32()).setMaxAccess("readonly")
sipL2MidCurrentlyActiveErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 7), Counter32()).setMaxAccess("readonly")
sipL2BomOrSSMsMIDErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 8), Counter32()).setMaxAccess("readonly")
sipL2EomsMIDErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 2, 1, 9), Counter32()).setMaxAccess("readonly")
sipPLCP = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 31, 3))
sipDS1PLCPTable = MibTable((1, 3, 6, 1, 2, 1, 10, 31, 3, 1))
sipDS1PLCPEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 31, 3, 1, 1)).setIndexNames((0, "SIP-MIB", "sipDS1PLCPIndex"))
sipDS1PLCPIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 3, 1, 1, 1), IfIndex()).setMaxAccess("readonly")
sipDS1PLCPSEFSs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 3, 1, 1, 2), Counter32()).setMaxAccess("readonly")
sipDS1PLCPAlarmState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 3, 1, 1, 3), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,2,)).subtype(namedValues=namedval.NamedValues(("noAlarm", 1), ("receivedFarEndAlarm", 2), ("incomingLOF", 3), ))).setMaxAccess("readonly")
sipDS1PLCPUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 3, 1, 1, 4), Counter32()).setMaxAccess("readonly")
sipDS3PLCPTable = MibTable((1, 3, 6, 1, 2, 1, 10, 31, 3, 2))
sipDS3PLCPEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 31, 3, 2, 1)).setIndexNames((0, "SIP-MIB", "sipDS3PLCPIndex"))
sipDS3PLCPIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 3, 2, 1, 1), IfIndex()).setMaxAccess("readonly")
sipDS3PLCPSEFSs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 3, 2, 1, 2), Counter32()).setMaxAccess("readonly")
sipDS3PLCPAlarmState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 3, 2, 1, 3), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,2,)).subtype(namedValues=namedval.NamedValues(("noAlarm", 1), ("receivedFarEndAlarm", 2), ("incomingLOF", 3), ))).setMaxAccess("readonly")
sipDS3PLCPUASs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 3, 2, 1, 4), Counter32()).setMaxAccess("readonly")
smdsApplications = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 31, 4))
ipOverSMDS = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 31, 4, 1))
ipOverSMDSTable = MibTable((1, 3, 6, 1, 2, 1, 10, 31, 4, 1, 1))
ipOverSMDSEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 31, 4, 1, 1, 1)).setIndexNames((0, "SIP-MIB", "ipOverSMDSIndex"), (0, "SIP-MIB", "ipOverSMDSAddress"))
ipOverSMDSIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 4, 1, 1, 1, 1), IfIndex()).setMaxAccess("readonly")
ipOverSMDSAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 4, 1, 1, 1, 2), IpAddress()).setMaxAccess("readonly")
ipOverSMDSHA = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 4, 1, 1, 1, 3), SMDSAddress()).setMaxAccess("readonly")
ipOverSMDSLISGA = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 4, 1, 1, 1, 4), SMDSAddress()).setMaxAccess("readonly")
ipOverSMDSARPReq = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 4, 1, 1, 1, 5), SMDSAddress()).setMaxAccess("readonly")
smdsCarrierSelection = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 31, 5))
sipErrorLog = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 31, 6))
sipL3PDUErrorTable = MibTable((1, 3, 6, 1, 2, 1, 10, 31, 6, 1))
sipL3PDUErrorEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 31, 6, 1, 1)).setIndexNames((0, "SIP-MIB", "sipL3PDUErrorIndex"), (0, "SIP-MIB", "sipL3PDUErrorType"))
sipL3PDUErrorIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 6, 1, 1, 1), IfIndex()).setMaxAccess("readonly")
sipL3PDUErrorType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 6, 1, 1, 2), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(8,10,9,2,3,12,5,4,7,1,6,11,)).subtype(namedValues=namedval.NamedValues(("erroredDAFieldFormat", 1), ("baSizeFieldNotEqualToLengthField", 10), ("incorrectLength", 11), ("mriTimeout", 12), ("erroredSAFieldFormat", 2), ("invalidBAsizeFieldValue", 3), ("invalidHdrExtLength", 4), ("invalidHdrExtElementLength", 5), ("invalidHdrExtVersionElementPositionLenthOrValue", 6), ("invalidHdrExtCarSelectElementPositionLenghtValueOrFormat", 7), ("hePADError", 8), ("beTagMismatch", 9), ))).setMaxAccess("readonly")
sipL3PDUErrorSA = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 6, 1, 1, 3), SMDSAddress()).setMaxAccess("readonly")
sipL3PDUErrorDA = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 6, 1, 1, 4), SMDSAddress()).setMaxAccess("readonly")
sipL3PDUErrorTimeStamp = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 31, 6, 1, 1, 5), TimeStamp()).setMaxAccess("readonly")
sipMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 36))
sipMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 36, 1))
sipDxiTable = MibTable((1, 3, 6, 1, 2, 1, 36, 1, 1))
sipDxiEntry = MibTableRow((1, 3, 6, 1, 2, 1, 36, 1, 1, 1)).setIndexNames((0, "RFC1213-MIB", "ifIndex"))
sipDxiCrc = MibTableColumn((1, 3, 6, 1, 2, 1, 36, 1, 1, 1, 1), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("crc16", 1), ("crc32", 2), ))).setMaxAccess("readonly")
sipDxiOutDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 36, 1, 1, 1, 2), Counter32()).setMaxAccess("readonly")
sipDxiInErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 36, 1, 1, 1, 3), Counter32()).setMaxAccess("readonly")
sipDxiInAborts = MibTableColumn((1, 3, 6, 1, 2, 1, 36, 1, 1, 1, 4), Counter32()).setMaxAccess("readonly")
sipDxiInTestFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 36, 1, 1, 1, 5), Counter32()).setMaxAccess("readonly")
sipDxiOutTestFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 36, 1, 1, 1, 6), Counter32()).setMaxAccess("readonly")
sipDxiHbpNoAcks = MibTableColumn((1, 3, 6, 1, 2, 1, 36, 1, 1, 1, 7), Counter32()).setMaxAccess("readonly")
smdsConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 36, 2))
smdsGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 36, 2, 1))
smdsCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 36, 2, 2))

# Augmentions

# Groups

sipIPApplicationsStuff = ObjectGroup((1, 3, 6, 1, 2, 1, 36, 2, 1, 5)).setObjects(("SIP-MIB", "ipOverSMDSIndex"), ("SIP-MIB", "ipOverSMDSLISGA"), ("SIP-MIB", "ipOverSMDSAddress"), ("SIP-MIB", "ipOverSMDSARPReq"), ("SIP-MIB", "ipOverSMDSHA"), )
sipDS3PLCPStuff = ObjectGroup((1, 3, 6, 1, 2, 1, 36, 2, 1, 4)).setObjects(("SIP-MIB", "sipDS3PLCPAlarmState"), ("SIP-MIB", "sipDS3PLCPSEFSs"), ("SIP-MIB", "sipDS3PLCPUASs"), ("SIP-MIB", "sipDS3PLCPIndex"), )
sipDS1PLCPStuff = ObjectGroup((1, 3, 6, 1, 2, 1, 36, 2, 1, 3)).setObjects(("SIP-MIB", "sipDS1PLCPSEFSs"), ("SIP-MIB", "sipDS1PLCPAlarmState"), ("SIP-MIB", "sipDS1PLCPIndex"), ("SIP-MIB", "sipDS1PLCPUASs"), )
sipLevel3Stuff = ObjectGroup((1, 3, 6, 1, 2, 1, 36, 2, 1, 1)).setObjects(("SIP-MIB", "sipL3PDUErrorDA"), ("SIP-MIB", "sipL3PDUErrorSA"), ("SIP-MIB", "sipL3PDUErrorIndex"), ("SIP-MIB", "sipL3PDUErrorTimeStamp"), ("SIP-MIB", "sipL3Index"), ("SIP-MIB", "sipL3PDUErrorType"), ("SIP-MIB", "sipL3VersionSupport"), )
sipDxiStuff = ObjectGroup((1, 3, 6, 1, 2, 1, 36, 2, 1, 6)).setObjects(("SIP-MIB", "sipDxiInAborts"), ("SIP-MIB", "sipDxiHbpNoAcks"), ("SIP-MIB", "sipDxiOutDiscards"), ("SIP-MIB", "sipDxiCrc"), ("SIP-MIB", "sipDxiOutTestFrames"), ("SIP-MIB", "sipDxiInTestFrames"), ("SIP-MIB", "sipDxiInErrors"), )
sipLevel2Stuff = ObjectGroup((1, 3, 6, 1, 2, 1, 36, 2, 1, 2)).setObjects(("SIP-MIB", "sipL2Index"), ("SIP-MIB", "sipL2EomsMIDErrors"), ("SIP-MIB", "sipL2MidCurrentlyActiveErrors"), ("SIP-MIB", "sipL2BomOrSSMsMIDErrors"), ("SIP-MIB", "sipL2SequenceNumberErrors"), ("SIP-MIB", "sipL2PayloadLengthErrors"), ("SIP-MIB", "sipL2HcsOrCRCErrors"), )

# Exports

# Types
mibBuilder.exportSymbols("SIP-MIB", IfIndex=IfIndex, SMDSAddress=SMDSAddress)

# Objects
mibBuilder.exportSymbols("SIP-MIB", sip=sip, sipL3Table=sipL3Table, sipL3Entry=sipL3Entry, sipL3Index=sipL3Index, sipL3ReceivedIndividualDAs=sipL3ReceivedIndividualDAs, sipL3ReceivedGAs=sipL3ReceivedGAs, sipL3UnrecognizedIndividualDAs=sipL3UnrecognizedIndividualDAs, sipL3UnrecognizedGAs=sipL3UnrecognizedGAs, sipL3SentIndividualDAs=sipL3SentIndividualDAs, sipL3SentGAs=sipL3SentGAs, sipL3Errors=sipL3Errors, sipL3InvalidSMDSAddressTypes=sipL3InvalidSMDSAddressTypes, sipL3VersionSupport=sipL3VersionSupport, sipL2Table=sipL2Table, sipL2Entry=sipL2Entry, sipL2Index=sipL2Index, sipL2ReceivedCounts=sipL2ReceivedCounts, sipL2SentCounts=sipL2SentCounts, sipL2HcsOrCRCErrors=sipL2HcsOrCRCErrors, sipL2PayloadLengthErrors=sipL2PayloadLengthErrors, sipL2SequenceNumberErrors=sipL2SequenceNumberErrors, sipL2MidCurrentlyActiveErrors=sipL2MidCurrentlyActiveErrors, sipL2BomOrSSMsMIDErrors=sipL2BomOrSSMsMIDErrors, sipL2EomsMIDErrors=sipL2EomsMIDErrors, sipPLCP=sipPLCP, sipDS1PLCPTable=sipDS1PLCPTable, sipDS1PLCPEntry=sipDS1PLCPEntry, sipDS1PLCPIndex=sipDS1PLCPIndex, sipDS1PLCPSEFSs=sipDS1PLCPSEFSs, sipDS1PLCPAlarmState=sipDS1PLCPAlarmState, sipDS1PLCPUASs=sipDS1PLCPUASs, sipDS3PLCPTable=sipDS3PLCPTable, sipDS3PLCPEntry=sipDS3PLCPEntry, sipDS3PLCPIndex=sipDS3PLCPIndex, sipDS3PLCPSEFSs=sipDS3PLCPSEFSs, sipDS3PLCPAlarmState=sipDS3PLCPAlarmState, sipDS3PLCPUASs=sipDS3PLCPUASs, smdsApplications=smdsApplications, ipOverSMDS=ipOverSMDS, ipOverSMDSTable=ipOverSMDSTable, ipOverSMDSEntry=ipOverSMDSEntry, ipOverSMDSIndex=ipOverSMDSIndex, ipOverSMDSAddress=ipOverSMDSAddress, ipOverSMDSHA=ipOverSMDSHA, ipOverSMDSLISGA=ipOverSMDSLISGA, ipOverSMDSARPReq=ipOverSMDSARPReq, smdsCarrierSelection=smdsCarrierSelection, sipErrorLog=sipErrorLog, sipL3PDUErrorTable=sipL3PDUErrorTable, sipL3PDUErrorEntry=sipL3PDUErrorEntry, sipL3PDUErrorIndex=sipL3PDUErrorIndex, sipL3PDUErrorType=sipL3PDUErrorType, sipL3PDUErrorSA=sipL3PDUErrorSA, sipL3PDUErrorDA=sipL3PDUErrorDA, sipL3PDUErrorTimeStamp=sipL3PDUErrorTimeStamp, sipMIB=sipMIB, sipMIBObjects=sipMIBObjects, sipDxiTable=sipDxiTable, sipDxiEntry=sipDxiEntry, sipDxiCrc=sipDxiCrc, sipDxiOutDiscards=sipDxiOutDiscards, sipDxiInErrors=sipDxiInErrors, sipDxiInAborts=sipDxiInAborts, sipDxiInTestFrames=sipDxiInTestFrames, sipDxiOutTestFrames=sipDxiOutTestFrames, sipDxiHbpNoAcks=sipDxiHbpNoAcks, smdsConformance=smdsConformance, smdsGroups=smdsGroups, smdsCompliances=smdsCompliances)

# Groups
mibBuilder.exportSymbols("SIP-MIB", sipIPApplicationsStuff=sipIPApplicationsStuff, sipDS3PLCPStuff=sipDS3PLCPStuff, sipDS1PLCPStuff=sipDS1PLCPStuff, sipLevel3Stuff=sipLevel3Stuff, sipDxiStuff=sipDxiStuff, sipLevel2Stuff=sipLevel2Stuff)
