_A2='snSwViolatorPortNumber'
_A1='snSwViolatorMacAddress'
_A0='snL4TrapRealServerCurConnections'
_z='snL4TcpSynLimit'
_y='snL4MaxSessionLimit'
_x='snStackingGlobalMixedMode'
_w='FOUNDRY-SN-STACKING-MIB'
_v='snOspfVirtNbrState'
_u='snOspfVirtNbrRtrId'
_t='snOspfVirtNbrArea'
_s='snOspfVirtIfStatusState'
_r='snOspfNbrState'
_q='snOspfNbrIpAddr'
_p='snOspfIfStatusState'
_o='snChasPwrSupplyStatus'
_n='snAgentBrdModuleStatus'
_m='wgPnPStatus'
_l='FOUNDRY-SN-WIRELESS-GROUP-MIB'
_k='snL4TrapRealServerPort'
_j='snL4TrapLinkName'
_i='snL4LinkVirtualInterface'
_h='snOspfNbrRtrId'
_g='snOspfLsdbAreaId'
_f='snOspfExtLsdbLimit'
_e='dot3OamLoopbackStatus'
_d='DOT3-OAM-MIB'
_c='obsolete'
_b='snOspfPacketSrc'
_a='snAgentBrdIndex'
_Z='snOspfLsdbType'
_Y='snOspfLsdbRouterId'
_X='snOspfLsdbLsId'
_W='snOspfConfigErrorType'
_V='snChasPwrSupplyDescription'
_U='snL4TrapRealServerName'
_T='snL4TrapRealServerIP'
_S='snOspfVirtIfStatusNeighbor'
_R='snOspfVirtIfStatusAreaID'
_Q='snOspfIfStatusIpAddress'
_P='snChasFanIndex'
_O='snChasFanDescription'
_N='snChasPwrSupplyIndex'
_M='deprecated'
_L='snVLanByPortCfgVLanId'
_K='snOspfPacketType'
_J='FOUNDRY-SN-SWITCH-GROUP-MIB'
_I='snOspfRouterId'
_H='ifIndex'
_G='IF-MIB'
_F='FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB'
_E='snChasUnitIndex'
_D='FOUNDRY-SN-OSPF-GROUP-MIB'
_C='snAgGblTrapMessage'
_B='current'
_A='FOUNDRY-SN-AGENT-MIB'
if'mibBuilder'not in globals():import sys;sys.stderr.write(__doc__);sys.exit(1)
Integer,OctetString,ObjectIdentifier=mibBuilder.importSymbols('ASN1','Integer','OctetString','ObjectIdentifier')
NamedValues,=mibBuilder.importSymbols('ASN1-ENUMERATION','NamedValues')
ConstraintsIntersection,ConstraintsUnion,SingleValueConstraint,ValueRangeConstraint,ValueSizeConstraint=mibBuilder.importSymbols('ASN1-REFINEMENT','ConstraintsIntersection','ConstraintsUnion','SingleValueConstraint','ValueRangeConstraint','ValueSizeConstraint')
dot3OamLoopbackStatus,=mibBuilder.importSymbols(_d,_e)
fdryLicenseType,snAgGblTrapMessage,snAgentBrdIndex,snAgentBrdModuleStatus,snChasFanDescription,snChasFanIndex,snChasPwrSupplyDescription,snChasPwrSupplyIndex,snChasPwrSupplyStatus,snChasUnitIndex=mibBuilder.importSymbols(_A,'fdryLicenseType',_C,_a,_n,_O,_P,_V,_N,_o,_E)
snOspfConfigErrorType,snOspfExtLsdbLimit,snOspfIfStatusIpAddress,snOspfIfStatusState,snOspfLsdbAreaId,snOspfLsdbLsId,snOspfLsdbRouterId,snOspfLsdbType,snOspfNbrIpAddr,snOspfNbrRtrId,snOspfNbrState,snOspfPacketSrc,snOspfPacketType,snOspfRouterId,snOspfVirtIfStatusAreaID,snOspfVirtIfStatusNeighbor,snOspfVirtIfStatusState,snOspfVirtNbrArea,snOspfVirtNbrRtrId,snOspfVirtNbrState=mibBuilder.importSymbols(_D,_W,_f,_Q,_p,_g,_X,_Y,_Z,_q,_h,_r,_b,_K,_I,_R,_S,_s,_t,_u,_v)
foundry,=mibBuilder.importSymbols('FOUNDRY-SN-ROOT-MIB','foundry')
snStackingGlobalMixedMode,=mibBuilder.importSymbols(_w,_x)
snL4LinkVirtualInterface,snL4MaxSessionLimit,snL4TcpSynLimit,snL4TrapLinkName,snL4TrapRealServerCurConnections,snL4TrapRealServerIP,snL4TrapRealServerName,snL4TrapRealServerPort=mibBuilder.importSymbols(_F,_i,_y,_z,_j,_A0,_T,_U,_k)
snSwViolatorMacAddress,snSwViolatorPortNumber,snVLanByPortCfgVLanId=mibBuilder.importSymbols(_J,_A1,_A2,_L)
wgPnPStatus,=mibBuilder.importSymbols(_l,_m)
ifIndex,=mibBuilder.importSymbols(_G,_H)
ModuleCompliance,NotificationGroup=mibBuilder.importSymbols('SNMPv2-CONF','ModuleCompliance','NotificationGroup')
Bits,Counter32,Counter64,Gauge32,Integer32,IpAddress,ModuleIdentity,MibIdentifier,NotificationType,ObjectIdentity,MibScalar,MibTable,MibTableRow,MibTableColumn,TimeTicks,Unsigned32,iso=mibBuilder.importSymbols('SNMPv2-SMI','Bits','Counter32','Counter64','Gauge32','Integer32','IpAddress','ModuleIdentity','MibIdentifier','NotificationType','ObjectIdentity','MibScalar','MibTable','MibTableRow','MibTableColumn','TimeTicks','Unsigned32','iso')
DisplayString,PhysAddress,TextualConvention=mibBuilder.importSymbols('SNMPv2-TC','DisplayString','PhysAddress','TextualConvention')
snTraps=ModuleIdentity((1,3,6,1,4,1,1991,0))
if mibBuilder.loadTexts:snTraps.setRevisions(('2009-09-30 00:00','2017-08-07 00:00'))
snTrapChasPwrSupply=NotificationType((1,3,6,1,4,1,1991,0,1))
snTrapChasPwrSupply.setObjects((_A,_o))
if mibBuilder.loadTexts:snTrapChasPwrSupply.setStatus(_B)
snTrapLockedAddressViolation=NotificationType((1,3,6,1,4,1,1991,0,2))
snTrapLockedAddressViolation.setObjects(*((_J,_A2),(_J,_A1)))
if mibBuilder.loadTexts:snTrapLockedAddressViolation.setStatus(_B)
snTrapOspfIfStateChange=NotificationType((1,3,6,1,4,1,1991,0,3))
snTrapOspfIfStateChange.setObjects(*((_D,_I),(_D,_Q),(_D,_p)))
if mibBuilder.loadTexts:snTrapOspfIfStateChange.setStatus(_B)
snTrapOspfVirtIfStateChange=NotificationType((1,3,6,1,4,1,1991,0,4))
snTrapOspfVirtIfStateChange.setObjects(*((_D,_I),(_D,_R),(_D,_S),(_D,_s)))
if mibBuilder.loadTexts:snTrapOspfVirtIfStateChange.setStatus(_B)
snOspfNbrStateChange=NotificationType((1,3,6,1,4,1,1991,0,5))
snOspfNbrStateChange.setObjects(*((_D,_I),(_D,_q),(_D,_h),(_D,_r)))
if mibBuilder.loadTexts:snOspfNbrStateChange.setStatus(_B)
snOspfVirtNbrStateChange=NotificationType((1,3,6,1,4,1,1991,0,6))
snOspfVirtNbrStateChange.setObjects(*((_D,_I),(_D,_t),(_D,_u),(_D,_v)))
if mibBuilder.loadTexts:snOspfVirtNbrStateChange.setStatus(_B)
snOspfIfConfigError=NotificationType((1,3,6,1,4,1,1991,0,7))
snOspfIfConfigError.setObjects(*((_D,_I),(_D,_Q),(_D,_b),(_D,_W),(_D,_K)))
if mibBuilder.loadTexts:snOspfIfConfigError.setStatus(_B)
snOspfVirtIfConfigError=NotificationType((1,3,6,1,4,1,1991,0,8))
snOspfVirtIfConfigError.setObjects(*((_D,_I),(_D,_R),(_D,_S),(_D,_W),(_D,_K)))
if mibBuilder.loadTexts:snOspfVirtIfConfigError.setStatus(_B)
snOspfIfAuthFailure=NotificationType((1,3,6,1,4,1,1991,0,9))
snOspfIfAuthFailure.setObjects(*((_D,_I),(_D,_Q),(_D,_b),(_D,_W),(_D,_K)))
if mibBuilder.loadTexts:snOspfIfAuthFailure.setStatus(_B)
snOspfVirtIfAuthFailure=NotificationType((1,3,6,1,4,1,1991,0,10))
snOspfVirtIfAuthFailure.setObjects(*((_D,_I),(_D,_R),(_D,_S),(_D,_W),(_D,_K)))
if mibBuilder.loadTexts:snOspfVirtIfAuthFailure.setStatus(_B)
snOspfIfRxBadPacket=NotificationType((1,3,6,1,4,1,1991,0,11))
snOspfIfRxBadPacket.setObjects(*((_D,_I),(_D,_Q),(_D,_b),(_D,_K)))
if mibBuilder.loadTexts:snOspfIfRxBadPacket.setStatus(_B)
snOspfVirtIfRxBadPacket=NotificationType((1,3,6,1,4,1,1991,0,12))
snOspfVirtIfRxBadPacket.setObjects(*((_D,_I),(_D,_R),(_D,_S),(_D,_K)))
if mibBuilder.loadTexts:snOspfVirtIfRxBadPacket.setStatus(_B)
snOspfTxRetransmit=NotificationType((1,3,6,1,4,1,1991,0,13))
snOspfTxRetransmit.setObjects(*((_D,_I),(_D,_Q),(_D,_h),(_D,_K),(_D,_Z),(_D,_X),(_D,_Y)))
if mibBuilder.loadTexts:snOspfTxRetransmit.setStatus(_B)
ospfVirtIfTxRetransmit=NotificationType((1,3,6,1,4,1,1991,0,14))
ospfVirtIfTxRetransmit.setObjects(*((_D,_I),(_D,_R),(_D,_S),(_D,_K),(_D,_Z),(_D,_X),(_D,_Y)))
if mibBuilder.loadTexts:ospfVirtIfTxRetransmit.setStatus(_B)
snOspfOriginateLsa=NotificationType((1,3,6,1,4,1,1991,0,15))
snOspfOriginateLsa.setObjects(*((_D,_I),(_D,_g),(_D,_Z),(_D,_X),(_D,_Y)))
if mibBuilder.loadTexts:snOspfOriginateLsa.setStatus(_B)
snOspfMaxAgeLsa=NotificationType((1,3,6,1,4,1,1991,0,16))
snOspfMaxAgeLsa.setObjects(*((_D,_I),(_D,_g),(_D,_Z),(_D,_X),(_D,_Y)))
if mibBuilder.loadTexts:snOspfMaxAgeLsa.setStatus(_B)
snOspfLsdbOverflow=NotificationType((1,3,6,1,4,1,1991,0,17))
snOspfLsdbOverflow.setObjects(*((_D,_I),(_D,_f)))
if mibBuilder.loadTexts:snOspfLsdbOverflow.setStatus(_B)
snOspfLsdbApproachingOverflow=NotificationType((1,3,6,1,4,1,1991,0,18))
snOspfLsdbApproachingOverflow.setObjects(*((_D,_I),(_D,_f)))
if mibBuilder.loadTexts:snOspfLsdbApproachingOverflow.setStatus(_B)
snTrapL4MaxSessionLimitReached=NotificationType((1,3,6,1,4,1,1991,0,19))
snTrapL4MaxSessionLimitReached.setObjects((_F,_y))
if mibBuilder.loadTexts:snTrapL4MaxSessionLimitReached.setStatus(_B)
snTrapL4TcpSynLimitReached=NotificationType((1,3,6,1,4,1,1991,0,20))
snTrapL4TcpSynLimitReached.setObjects((_F,_z))
if mibBuilder.loadTexts:snTrapL4TcpSynLimitReached.setStatus(_B)
snTrapL4RealServerUp=NotificationType((1,3,6,1,4,1,1991,0,21))
snTrapL4RealServerUp.setObjects(*((_F,_T),(_F,_U)))
if mibBuilder.loadTexts:snTrapL4RealServerUp.setStatus(_B)
snTrapL4RealServerDown=NotificationType((1,3,6,1,4,1,1991,0,22))
snTrapL4RealServerDown.setObjects(*((_F,_T),(_F,_U)))
if mibBuilder.loadTexts:snTrapL4RealServerDown.setStatus(_B)
snTrapL4RealServerPortUp=NotificationType((1,3,6,1,4,1,1991,0,23))
snTrapL4RealServerPortUp.setObjects(*((_F,_T),(_F,_U),(_F,_k)))
if mibBuilder.loadTexts:snTrapL4RealServerPortUp.setStatus(_B)
snTrapL4RealServerPortDown=NotificationType((1,3,6,1,4,1,1991,0,24))
snTrapL4RealServerPortDown.setObjects(*((_F,_T),(_F,_U),(_F,_k)))
if mibBuilder.loadTexts:snTrapL4RealServerPortDown.setStatus(_B)
snTrapL4RealServerMaxConnectionLimitReached=NotificationType((1,3,6,1,4,1,1991,0,25))
snTrapL4RealServerMaxConnectionLimitReached.setObjects(*((_F,_T),(_F,_U),(_F,_A0)))
if mibBuilder.loadTexts:snTrapL4RealServerMaxConnectionLimitReached.setStatus(_B)
snTrapL4BecomeStandby=NotificationType((1,3,6,1,4,1,1991,0,26))
if mibBuilder.loadTexts:snTrapL4BecomeStandby.setStatus(_B)
snTrapL4BecomeActive=NotificationType((1,3,6,1,4,1,1991,0,27))
if mibBuilder.loadTexts:snTrapL4BecomeActive.setStatus(_B)
snTrapModuleInserted=NotificationType((1,3,6,1,4,1,1991,0,28))
snTrapModuleInserted.setObjects((_A,_a))
if mibBuilder.loadTexts:snTrapModuleInserted.setStatus(_B)
snTrapModuleRemoved=NotificationType((1,3,6,1,4,1,1991,0,29))
snTrapModuleRemoved.setObjects((_A,_a))
if mibBuilder.loadTexts:snTrapModuleRemoved.setStatus(_B)
snTrapChasPwrSupplyFailed=NotificationType((1,3,6,1,4,1,1991,0,30))
snTrapChasPwrSupplyFailed.setObjects(*((_A,_N),(_A,_V)))
if mibBuilder.loadTexts:snTrapChasPwrSupplyFailed.setStatus(_B)
snTrapChasFanFailed=NotificationType((1,3,6,1,4,1,1991,0,31))
snTrapChasFanFailed.setObjects(*((_A,_P),(_A,_O)))
if mibBuilder.loadTexts:snTrapChasFanFailed.setStatus(_B)
snTrapLockedAddressViolation2=NotificationType((1,3,6,1,4,1,1991,0,32))
snTrapLockedAddressViolation2.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapLockedAddressViolation2.setStatus(_B)
snTrapFsrpIfStateChange=NotificationType((1,3,6,1,4,1,1991,0,33))
snTrapFsrpIfStateChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapFsrpIfStateChange.setStatus(_B)
snTrapVrrpIfStateChange=NotificationType((1,3,6,1,4,1,1991,0,34))
snTrapVrrpIfStateChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapVrrpIfStateChange.setStatus(_B)
snTrapMgmtModuleRedunStateChange=NotificationType((1,3,6,1,4,1,1991,0,35))
snTrapMgmtModuleRedunStateChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMgmtModuleRedunStateChange.setStatus(_B)
snTrapTemperatureWarning=NotificationType((1,3,6,1,4,1,1991,0,36))
snTrapTemperatureWarning.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapTemperatureWarning.setStatus(_B)
snTrapAccessListDeny=NotificationType((1,3,6,1,4,1,1991,0,37))
snTrapAccessListDeny.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapAccessListDeny.setStatus(_B)
snTrapMacFilterDeny=NotificationType((1,3,6,1,4,1,1991,0,38))
snTrapMacFilterDeny.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMacFilterDeny.setStatus(_B)
snTrapL4GslbRemoteUp=NotificationType((1,3,6,1,4,1,1991,0,39))
snTrapL4GslbRemoteUp.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapL4GslbRemoteUp.setStatus(_B)
snTrapL4GslbRemoteDown=NotificationType((1,3,6,1,4,1,1991,0,40))
snTrapL4GslbRemoteDown.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapL4GslbRemoteDown.setStatus(_B)
snTrapL4GslbRemoteControllerUp=NotificationType((1,3,6,1,4,1,1991,0,41))
snTrapL4GslbRemoteControllerUp.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapL4GslbRemoteControllerUp.setStatus(_B)
snTrapL4GslbRemoteControllerDown=NotificationType((1,3,6,1,4,1,1991,0,42))
snTrapL4GslbRemoteControllerDown.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapL4GslbRemoteControllerDown.setStatus(_B)
snTrapL4GslbHealthCheckIpUp=NotificationType((1,3,6,1,4,1,1991,0,43))
snTrapL4GslbHealthCheckIpUp.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapL4GslbHealthCheckIpUp.setStatus(_B)
snTrapL4GslbHealthCheckIpDown=NotificationType((1,3,6,1,4,1,1991,0,44))
snTrapL4GslbHealthCheckIpDown.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapL4GslbHealthCheckIpDown.setStatus(_B)
snTrapL4GslbHealthCheckIpPortUp=NotificationType((1,3,6,1,4,1,1991,0,45))
snTrapL4GslbHealthCheckIpPortUp.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapL4GslbHealthCheckIpPortUp.setStatus(_B)
snTrapL4GslbHealthCheckIpPortDown=NotificationType((1,3,6,1,4,1,1991,0,46))
snTrapL4GslbHealthCheckIpPortDown.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapL4GslbHealthCheckIpPortDown.setStatus(_B)
snTrapL4FirewallBecomeStandby=NotificationType((1,3,6,1,4,1,1991,0,47))
if mibBuilder.loadTexts:snTrapL4FirewallBecomeStandby.setStatus(_B)
snTrapL4FirewallBecomeActive=NotificationType((1,3,6,1,4,1,1991,0,48))
if mibBuilder.loadTexts:snTrapL4FirewallBecomeActive.setStatus(_B)
snTrapL4FirewallPathUp=NotificationType((1,3,6,1,4,1,1991,0,49))
if mibBuilder.loadTexts:snTrapL4FirewallPathUp.setStatus(_B)
snTrapL4FirewallPathDown=NotificationType((1,3,6,1,4,1,1991,0,50))
if mibBuilder.loadTexts:snTrapL4FirewallPathDown.setStatus(_B)
snTrapIcmpLocalExceedBurst=NotificationType((1,3,6,1,4,1,1991,0,51))
snTrapIcmpLocalExceedBurst.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapIcmpLocalExceedBurst.setStatus(_B)
snTrapIcmpTransitExceedBurst=NotificationType((1,3,6,1,4,1,1991,0,52))
snTrapIcmpTransitExceedBurst.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapIcmpTransitExceedBurst.setStatus(_B)
snTrapTcpLocalExceedBurst=NotificationType((1,3,6,1,4,1,1991,0,53))
snTrapTcpLocalExceedBurst.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapTcpLocalExceedBurst.setStatus(_B)
snTrapTcpTransitExceedBurst=NotificationType((1,3,6,1,4,1,1991,0,54))
snTrapTcpTransitExceedBurst.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapTcpTransitExceedBurst.setStatus(_B)
snTrapL4ContentVerification=NotificationType((1,3,6,1,4,1,1991,0,55))
if mibBuilder.loadTexts:snTrapL4ContentVerification.setStatus(_B)
snTrapDuplicateIp=NotificationType((1,3,6,1,4,1,1991,0,56))
if mibBuilder.loadTexts:snTrapDuplicateIp.setStatus(_B)
snTrapMplsProblem=NotificationType((1,3,6,1,4,1,1991,0,57))
if mibBuilder.loadTexts:snTrapMplsProblem.setStatus(_c)
snTrapMplsException=NotificationType((1,3,6,1,4,1,1991,0,58))
if mibBuilder.loadTexts:snTrapMplsException.setStatus(_c)
snTrapMplsAudit=NotificationType((1,3,6,1,4,1,1991,0,59))
if mibBuilder.loadTexts:snTrapMplsAudit.setStatus(_c)
snTrapMplsDeveloper=NotificationType((1,3,6,1,4,1,1991,0,60))
if mibBuilder.loadTexts:snTrapMplsDeveloper.setStatus(_c)
snTrapNoBmFreeQueue=NotificationType((1,3,6,1,4,1,1991,0,61))
snTrapNoBmFreeQueue.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapNoBmFreeQueue.setStatus(_B)
snTrapSmcDmaDrop=NotificationType((1,3,6,1,4,1,1991,0,62))
snTrapSmcDmaDrop.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapSmcDmaDrop.setStatus(_B)
snTrapSmcBpDrop=NotificationType((1,3,6,1,4,1,1991,0,63))
snTrapSmcBpDrop.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapSmcBpDrop.setStatus(_B)
snTrapBmWriteSeqDrop=NotificationType((1,3,6,1,4,1,1991,0,64))
snTrapBmWriteSeqDrop.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapBmWriteSeqDrop.setStatus(_B)
snTrapBgpPeerUp=NotificationType((1,3,6,1,4,1,1991,0,65))
snTrapBgpPeerUp.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapBgpPeerUp.setStatus(_B)
snTrapBgpPeerDown=NotificationType((1,3,6,1,4,1,1991,0,66))
snTrapBgpPeerDown.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapBgpPeerDown.setStatus(_B)
snTrapL4RealServerResponseTimeLowerLimit=NotificationType((1,3,6,1,4,1,1991,0,67))
snTrapL4RealServerResponseTimeLowerLimit.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapL4RealServerResponseTimeLowerLimit.setStatus(_B)
snTrapL4RealServerResponseTimeUpperLimit=NotificationType((1,3,6,1,4,1,1991,0,68))
snTrapL4RealServerResponseTimeUpperLimit.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapL4RealServerResponseTimeUpperLimit.setStatus(_B)
snTrapL4TcpAttackRateExceedMax=NotificationType((1,3,6,1,4,1,1991,0,69))
snTrapL4TcpAttackRateExceedMax.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapL4TcpAttackRateExceedMax.setStatus(_B)
snTrapL4TcpAttackRateExceedThreshold=NotificationType((1,3,6,1,4,1,1991,0,70))
snTrapL4TcpAttackRateExceedThreshold.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapL4TcpAttackRateExceedThreshold.setStatus(_B)
snTrapL4ConnectionRateExceedMax=NotificationType((1,3,6,1,4,1,1991,0,71))
snTrapL4ConnectionRateExceedMax.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapL4ConnectionRateExceedMax.setStatus(_B)
snTrapL4ConnectionRateExceedThreshold=NotificationType((1,3,6,1,4,1,1991,0,72))
snTrapL4ConnectionRateExceedThreshold.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapL4ConnectionRateExceedThreshold.setStatus(_B)
snTrapRunningConfigChanged=NotificationType((1,3,6,1,4,1,1991,0,73))
snTrapRunningConfigChanged.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapRunningConfigChanged.setStatus(_B)
snTrapStartupConfigChanged=NotificationType((1,3,6,1,4,1,1991,0,74))
snTrapStartupConfigChanged.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapStartupConfigChanged.setStatus(_B)
snTrapUserLogin=NotificationType((1,3,6,1,4,1,1991,0,75))
snTrapUserLogin.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapUserLogin.setStatus(_B)
snTrapUserLogout=NotificationType((1,3,6,1,4,1,1991,0,76))
snTrapUserLogout.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapUserLogout.setStatus(_B)
snTrapPortSecurityViolation=NotificationType((1,3,6,1,4,1,1991,0,77))
snTrapPortSecurityViolation.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapPortSecurityViolation.setStatus(_B)
snTrapPortSecurityShutdown=NotificationType((1,3,6,1,4,1,1991,0,78))
snTrapPortSecurityShutdown.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapPortSecurityShutdown.setStatus(_B)
snTrapMrpStateChange=NotificationType((1,3,6,1,4,1,1991,0,79))
snTrapMrpStateChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMrpStateChange.setStatus(_B)
snTrapMrpCamError=NotificationType((1,3,6,1,4,1,1991,0,80))
snTrapMrpCamError.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMrpCamError.setStatus(_B)
snTrapChasPwrSupplyOK=NotificationType((1,3,6,1,4,1,1991,0,81))
snTrapChasPwrSupplyOK.setObjects(*((_A,_N),(_A,_V)))
if mibBuilder.loadTexts:snTrapChasPwrSupplyOK.setStatus(_B)
snTrapVrrpeIfStateChange=NotificationType((1,3,6,1,4,1,1991,0,82))
snTrapVrrpeIfStateChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapVrrpeIfStateChange.setStatus(_B)
snTrapVsrpIfStateChange=NotificationType((1,3,6,1,4,1,1991,0,83))
snTrapVsrpIfStateChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapVsrpIfStateChange.setStatus(_B)
snTrapSrcIpAddressViolation=NotificationType((1,3,6,1,4,1,1991,0,84))
snTrapSrcIpAddressViolation.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapSrcIpAddressViolation.setStatus(_B)
snTrapMacAuthEnable=NotificationType((1,3,6,1,4,1,1991,0,85))
snTrapMacAuthEnable.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMacAuthEnable.setStatus(_B)
snTrapMacAuthDisable=NotificationType((1,3,6,1,4,1,1991,0,86))
snTrapMacAuthDisable.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMacAuthDisable.setStatus(_B)
snTrapMacAuthMACAccepted=NotificationType((1,3,6,1,4,1,1991,0,87))
snTrapMacAuthMACAccepted.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMacAuthMACAccepted.setStatus(_B)
snTrapMacAuthMACRejected=NotificationType((1,3,6,1,4,1,1991,0,88))
snTrapMacAuthMACRejected.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMacAuthMACRejected.setStatus(_B)
snTrapMacAuthPortDisabled=NotificationType((1,3,6,1,4,1,1991,0,89))
snTrapMacAuthPortDisabled.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMacAuthPortDisabled.setStatus(_B)
snTrapClientLoginReject=NotificationType((1,3,6,1,4,1,1991,0,110))
snTrapClientLoginReject.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapClientLoginReject.setStatus(_B)
snTrapLocalUserConfigChange=NotificationType((1,3,6,1,4,1,1991,0,111))
snTrapLocalUserConfigChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapLocalUserConfigChange.setStatus(_B)
snTrapVlanConfigChange=NotificationType((1,3,6,1,4,1,1991,0,112))
snTrapVlanConfigChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapVlanConfigChange.setStatus(_B)
snTrapAclConfigChange=NotificationType((1,3,6,1,4,1,1991,0,113))
snTrapAclConfigChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapAclConfigChange.setStatus(_B)
snTrapMacFilterConfigChange=NotificationType((1,3,6,1,4,1,1991,0,114))
snTrapMacFilterConfigChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMacFilterConfigChange.setStatus(_B)
snTrapSNMPConfigChange=NotificationType((1,3,6,1,4,1,1991,0,115))
snTrapSNMPConfigChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapSNMPConfigChange.setStatus(_B)
snTrapSyslogConfigChange=NotificationType((1,3,6,1,4,1,1991,0,116))
snTrapSyslogConfigChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapSyslogConfigChange.setStatus(_B)
snTrapPasswordConfigChange=NotificationType((1,3,6,1,4,1,1991,0,117))
snTrapPasswordConfigChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapPasswordConfigChange.setStatus(_B)
snTrapServerStatusChange=NotificationType((1,3,6,1,4,1,1991,0,118))
snTrapServerStatusChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapServerStatusChange.setStatus(_B)
snTrapL4RealServerPortMaxConnectionLimitReached=NotificationType((1,3,6,1,4,1,1991,0,119))
snTrapL4RealServerPortMaxConnectionLimitReached.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapL4RealServerPortMaxConnectionLimitReached.setStatus(_B)
snTrapL4LinkDown=NotificationType((1,3,6,1,4,1,1991,0,120))
snTrapL4LinkDown.setObjects(*((_F,_j),(_F,_i)))
if mibBuilder.loadTexts:snTrapL4LinkDown.setStatus(_B)
snTrapL4LinkUp=NotificationType((1,3,6,1,4,1,1991,0,121))
snTrapL4LinkUp.setObjects(*((_F,_j),(_F,_i)))
if mibBuilder.loadTexts:snTrapL4LinkUp.setStatus(_B)
snTrapPortPriorityChange=NotificationType((1,3,6,1,4,1,1991,0,122))
snTrapPortPriorityChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapPortPriorityChange.setStatus(_B)
snTrapAutoPortDisableTrigger=NotificationType((1,3,6,1,4,1,1991,0,123))
snTrapAutoPortDisableTrigger.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapAutoPortDisableTrigger.setStatus(_B)
snTrapAutoPortDisableRelease=NotificationType((1,3,6,1,4,1,1991,0,124))
snTrapAutoPortDisableRelease.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapAutoPortDisableRelease.setStatus(_B)
snTrapPnPStatusChange=NotificationType((1,3,6,1,4,1,1991,0,125))
snTrapPnPStatusChange.setObjects(*((_l,_m),(_l,_m),(_A,_C)))
if mibBuilder.loadTexts:snTrapPnPStatusChange.setStatus(_B)
snTrapWirelessIsrpPeerStateChange=NotificationType((1,3,6,1,4,1,1991,0,126))
snTrapWirelessIsrpPeerStateChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapWirelessIsrpPeerStateChange.setStatus(_B)
snTrapWirelessStationStateChange=NotificationType((1,3,6,1,4,1,1991,0,127))
snTrapWirelessStationStateChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapWirelessStationStateChange.setStatus(_B)
snTrapWirelessStationRoamingEventTriggered=NotificationType((1,3,6,1,4,1,1991,0,128))
snTrapWirelessStationRoamingEventTriggered.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapWirelessStationRoamingEventTriggered.setStatus(_B)
snTrapWirelessSappStateChange=NotificationType((1,3,6,1,4,1,1991,0,129))
snTrapWirelessSappStateChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapWirelessSappStateChange.setStatus(_B)
snTrapExternalPowerConnectionStatus=NotificationType((1,3,6,1,4,1,1991,0,130))
snTrapExternalPowerConnectionStatus.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapExternalPowerConnectionStatus.setStatus(_B)
snTrapDot1xSecurityViolation=NotificationType((1,3,6,1,4,1,1991,0,131))
snTrapDot1xSecurityViolation.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapDot1xSecurityViolation.setStatus(_B)
snTrapDot1xPortLinkChange=NotificationType((1,3,6,1,4,1,1991,0,132))
snTrapDot1xPortLinkChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapDot1xPortLinkChange.setStatus(_B)
snTrapDot1xPortControlChange=NotificationType((1,3,6,1,4,1,1991,0,133))
snTrapDot1xPortControlChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapDot1xPortControlChange.setStatus(_B)
snTrapDot1xVlanIdChange=NotificationType((1,3,6,1,4,1,1991,0,134))
snTrapDot1xVlanIdChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapDot1xVlanIdChange.setStatus(_B)
snTrapDot1xFilterSetupFailure=NotificationType((1,3,6,1,4,1,1991,0,135))
snTrapDot1xFilterSetupFailure.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapDot1xFilterSetupFailure.setStatus(_B)
snTrapDot1xError=NotificationType((1,3,6,1,4,1,1991,0,136))
snTrapDot1xError.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapDot1xError.setStatus(_B)
snTrapPortConfigChange=NotificationType((1,3,6,1,4,1,1991,0,137))
snTrapPortConfigChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapPortConfigChange.setStatus(_B)
snTrapMacAuthVlanIdChange=NotificationType((1,3,6,1,4,1,1991,0,138))
snTrapMacAuthVlanIdChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMacAuthVlanIdChange.setStatus(_B)
snTrapWebAuthEnabled=NotificationType((1,3,6,1,4,1,1991,0,139))
snTrapWebAuthEnabled.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapWebAuthEnabled.setStatus(_B)
snTrapWebAuthDisabled=NotificationType((1,3,6,1,4,1,1991,0,140))
snTrapWebAuthDisabled.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapWebAuthDisabled.setStatus(_B)
snTrapIpConfigChange=NotificationType((1,3,6,1,4,1,1991,0,141))
snTrapIpConfigChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapIpConfigChange.setStatus(_B)
snTrapIpv6ConfigChange=NotificationType((1,3,6,1,4,1,1991,0,142))
snTrapIpv6ConfigChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapIpv6ConfigChange.setStatus(_B)
snTrapMacAuthRadiusTimeout=NotificationType((1,3,6,1,4,1,1991,0,143))
snTrapMacAuthRadiusTimeout.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMacAuthRadiusTimeout.setStatus(_B)
snTrapDot1xRadiusTimeout=NotificationType((1,3,6,1,4,1,1991,0,144))
snTrapDot1xRadiusTimeout.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapDot1xRadiusTimeout.setStatus(_B)
snTrapUDLDLinkDown=NotificationType((1,3,6,1,4,1,1991,0,145))
snTrapUDLDLinkDown.setObjects(*((_G,_H),(_A,_C)))
if mibBuilder.loadTexts:snTrapUDLDLinkDown.setStatus(_B)
snTrapUDLDLinkUp=NotificationType((1,3,6,1,4,1,1991,0,146))
snTrapUDLDLinkUp.setObjects(*((_G,_H),(_A,_C)))
if mibBuilder.loadTexts:snTrapUDLDLinkUp.setStatus(_B)
snTrapMacBasedVlanEnabled=NotificationType((1,3,6,1,4,1,1991,0,147))
snTrapMacBasedVlanEnabled.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMacBasedVlanEnabled.setStatus(_B)
snTrapMacBasedVlanDisabled=NotificationType((1,3,6,1,4,1,1991,0,148))
snTrapMacBasedVlanDisabled.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMacBasedVlanDisabled.setStatus(_B)
snTrapChasFanNormal=NotificationType((1,3,6,1,4,1,1991,0,149))
snTrapChasFanNormal.setObjects(*((_A,_P),(_A,_O)))
if mibBuilder.loadTexts:snTrapChasFanNormal.setStatus(_B)
snTrapStpRootGuardDetect=NotificationType((1,3,6,1,4,1,1991,0,150))
snTrapStpRootGuardDetect.setObjects(*((_G,_H),(_J,_L),(_A,_C)))
if mibBuilder.loadTexts:snTrapStpRootGuardDetect.setStatus(_B)
snTrapStpRootGuardExpire=NotificationType((1,3,6,1,4,1,1991,0,151))
snTrapStpRootGuardExpire.setObjects(*((_G,_H),(_J,_L),(_A,_C)))
if mibBuilder.loadTexts:snTrapStpRootGuardExpire.setStatus(_B)
snTrapStpBPDUGuardDetect=NotificationType((1,3,6,1,4,1,1991,0,152))
snTrapStpBPDUGuardDetect.setObjects(*((_G,_H),(_J,_L),(_A,_C)))
if mibBuilder.loadTexts:snTrapStpBPDUGuardDetect.setStatus(_B)
snTrapMstpBPDUGuardDetect=NotificationType((1,3,6,1,4,1,1991,0,153))
snTrapMstpBPDUGuardDetect.setObjects(*((_G,_H),(_A,_C)))
if mibBuilder.loadTexts:snTrapMstpBPDUGuardDetect.setStatus(_B)
snTrapErrorDisableAction=NotificationType((1,3,6,1,4,1,1991,0,154))
snTrapErrorDisableAction.setObjects(*((_G,_H),(_A,_C)))
if mibBuilder.loadTexts:snTrapErrorDisableAction.setStatus(_B)
snTrapLACPLinkStateChange=NotificationType((1,3,6,1,4,1,1991,0,155))
snTrapLACPLinkStateChange.setObjects(*((_G,_H),(_A,_C)))
if mibBuilder.loadTexts:snTrapLACPLinkStateChange.setStatus(_B)
snTrapOpticalMonitoringNotFoundryOptics=NotificationType((1,3,6,1,4,1,1991,0,156))
snTrapOpticalMonitoringNotFoundryOptics.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapOpticalMonitoringNotFoundryOptics.setStatus(_B)
snTrapOpticalMonitoringFoundryOpticsNotCapable=NotificationType((1,3,6,1,4,1,1991,0,157))
snTrapOpticalMonitoringFoundryOpticsNotCapable.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapOpticalMonitoringFoundryOpticsNotCapable.setStatus(_B)
snTrapStaticMulticastMacConfigAdd=NotificationType((1,3,6,1,4,1,1991,0,158))
snTrapStaticMulticastMacConfigAdd.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapStaticMulticastMacConfigAdd.setStatus(_B)
snTrapStaticMulticastMacConfigRemove=NotificationType((1,3,6,1,4,1,1991,0,159))
snTrapStaticMulticastMacConfigRemove.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapStaticMulticastMacConfigRemove.setStatus(_B)
snTrapSTPBPDUGuardExpire=NotificationType((1,3,6,1,4,1,1991,0,160))
snTrapSTPBPDUGuardExpire.setObjects(*((_G,_H),(_J,_L),(_A,_C)))
if mibBuilder.loadTexts:snTrapSTPBPDUGuardExpire.setStatus(_B)
snTrapPortLoopDetection=NotificationType((1,3,6,1,4,1,1991,0,161))
snTrapPortLoopDetection.setObjects(*((_G,_H),(_J,_L),(_A,_C)))
if mibBuilder.loadTexts:snTrapPortLoopDetection.setStatus(_B)
snTrapNoFreeTcamEntry=NotificationType((1,3,6,1,4,1,1991,0,162))
snTrapNoFreeTcamEntry.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapNoFreeTcamEntry.setStatus(_B)
snTrapStackingMasterElected=NotificationType((1,3,6,1,4,1,1991,0,163))
snTrapStackingMasterElected.setObjects(*((_A,_E),(_A,_C)))
if mibBuilder.loadTexts:snTrapStackingMasterElected.setStatus(_B)
snTrapStackingUnitAdded=NotificationType((1,3,6,1,4,1,1991,0,164))
snTrapStackingUnitAdded.setObjects(*((_A,_E),(_A,_C)))
if mibBuilder.loadTexts:snTrapStackingUnitAdded.setStatus(_B)
snTrapStackingUnitDeleted=NotificationType((1,3,6,1,4,1,1991,0,165))
snTrapStackingUnitDeleted.setObjects(*((_A,_E),(_A,_C)))
if mibBuilder.loadTexts:snTrapStackingUnitDeleted.setStatus(_B)
snTrapStackingChasPwrSupplyOK=NotificationType((1,3,6,1,4,1,1991,0,166))
snTrapStackingChasPwrSupplyOK.setObjects(*((_A,_E),(_A,_N),(_A,_C)))
if mibBuilder.loadTexts:snTrapStackingChasPwrSupplyOK.setStatus(_B)
snTrapStackingChasPwrSupplyFailed=NotificationType((1,3,6,1,4,1,1991,0,167))
snTrapStackingChasPwrSupplyFailed.setObjects(*((_A,_E),(_A,_N),(_A,_C)))
if mibBuilder.loadTexts:snTrapStackingChasPwrSupplyFailed.setStatus(_B)
snTrapStackingChasFanNormal=NotificationType((1,3,6,1,4,1,1991,0,168))
snTrapStackingChasFanNormal.setObjects(*((_A,_E),(_A,_P),(_A,_O)))
if mibBuilder.loadTexts:snTrapStackingChasFanNormal.setStatus(_B)
snTrapStackingChasFanFailed=NotificationType((1,3,6,1,4,1,1991,0,169))
snTrapStackingChasFanFailed.setObjects(*((_A,_E),(_A,_P),(_A,_O)))
if mibBuilder.loadTexts:snTrapStackingChasFanFailed.setStatus(_B)
snTrapStackingManagementMACChanged=NotificationType((1,3,6,1,4,1,1991,0,170))
snTrapStackingManagementMACChanged.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapStackingManagementMACChanged.setStatus(_B)
snTrapStackingTemperatureWarning=NotificationType((1,3,6,1,4,1,1991,0,171))
snTrapStackingTemperatureWarning.setObjects(*((_A,_E),(_A,_C)))
if mibBuilder.loadTexts:snTrapStackingTemperatureWarning.setStatus(_B)
snTrapIfIndexAssignmentChanged=NotificationType((1,3,6,1,4,1,1991,0,172))
snTrapIfIndexAssignmentChanged.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapIfIndexAssignmentChanged.setStatus(_B)
snTrapPBRConfigChanged=NotificationType((1,3,6,1,4,1,1991,0,173))
snTrapPBRConfigChanged.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapPBRConfigChanged.setStatus(_B)
snTrapChasPwrSupplyRPSAdd=NotificationType((1,3,6,1,4,1,1991,0,174))
snTrapChasPwrSupplyRPSAdd.setObjects(*((_A,_N),(_A,_V)))
if mibBuilder.loadTexts:snTrapChasPwrSupplyRPSAdd.setStatus(_B)
snTrapChasPwrSupplyRPSRemove=NotificationType((1,3,6,1,4,1,1991,0,175))
snTrapChasPwrSupplyRPSRemove.setObjects(*((_A,_N),(_A,_V)))
if mibBuilder.loadTexts:snTrapChasPwrSupplyRPSRemove.setStatus(_B)
snTrapModuleStatusChange=NotificationType((1,3,6,1,4,1,1991,0,176))
snTrapModuleStatusChange.setObjects(*((_A,_E),(_A,_a),(_A,_n),(_A,_C)))
if mibBuilder.loadTexts:snTrapModuleStatusChange.setStatus(_B)
snTrapChasHighSpeedFansNeeded=NotificationType((1,3,6,1,4,1,1991,0,177))
snTrapChasHighSpeedFansNeeded.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapChasHighSpeedFansNeeded.setStatus(_B)
snTrapSysmaxReverted=NotificationType((1,3,6,1,4,1,1991,0,178))
snTrapSysmaxReverted.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapSysmaxReverted.setStatus(_B)
snTrapSysmaxLeftLowMem=NotificationType((1,3,6,1,4,1,1991,0,179))
snTrapSysmaxLeftLowMem.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapSysmaxLeftLowMem.setStatus(_B)
snTrapSysMemoryLowThreshold=NotificationType((1,3,6,1,4,1,1991,0,180))
snTrapSysMemoryLowThreshold.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapSysMemoryLowThreshold.setStatus(_B)
snTrapSysMemoryOutThreshold=NotificationType((1,3,6,1,4,1,1991,0,181))
snTrapSysMemoryOutThreshold.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapSysMemoryOutThreshold.setStatus(_B)
snTrapLinkOAMLinkDown=NotificationType((1,3,6,1,4,1,1991,0,182))
snTrapLinkOAMLinkDown.setObjects(*((_G,_H),(_A,_C)))
if mibBuilder.loadTexts:snTrapLinkOAMLinkDown.setStatus(_B)
snTrapLinkOAMLinkUp=NotificationType((1,3,6,1,4,1,1991,0,183))
snTrapLinkOAMLinkUp.setObjects(*((_G,_H),(_A,_C)))
if mibBuilder.loadTexts:snTrapLinkOAMLinkUp.setStatus(_B)
snTrapI2CAccessLog=NotificationType((1,3,6,1,4,1,1991,0,184))
snTrapI2CAccessLog.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapI2CAccessLog.setStatus(_B)
snTrapLinkOAMLoopbackEntered=NotificationType((1,3,6,1,4,1,1991,0,185))
snTrapLinkOAMLoopbackEntered.setObjects(*((_G,_H),(_d,_e),(_A,_C)))
if mibBuilder.loadTexts:snTrapLinkOAMLoopbackEntered.setStatus(_B)
snTrapLinkOAMLoopbackCleared=NotificationType((1,3,6,1,4,1,1991,0,186))
snTrapLinkOAMLoopbackCleared.setObjects(*((_G,_H),(_d,_e),(_A,_C)))
if mibBuilder.loadTexts:snTrapLinkOAMLoopbackCleared.setStatus(_B)
snTrapLicenseAdded=NotificationType((1,3,6,1,4,1,1991,0,187))
snTrapLicenseAdded.setObjects(*((_A,_E),(_A,_C)))
if mibBuilder.loadTexts:snTrapLicenseAdded.setStatus(_M)
snTrapLicenseRemoved=NotificationType((1,3,6,1,4,1,1991,0,188))
snTrapLicenseRemoved.setObjects(*((_A,_E),(_A,_C)))
if mibBuilder.loadTexts:snTrapLicenseRemoved.setStatus(_M)
snTrapLicenseExpires=NotificationType((1,3,6,1,4,1,1991,0,189))
snTrapLicenseExpires.setObjects(*((_A,_E),(_A,_C)))
if mibBuilder.loadTexts:snTrapLicenseExpires.setStatus(_M)
snTrapLicenseExpired=NotificationType((1,3,6,1,4,1,1991,0,190))
snTrapLicenseExpired.setObjects(*((_A,_E),(_A,_C)))
if mibBuilder.loadTexts:snTrapLicenseExpired.setStatus(_M)
snTrapUDLDCrcFailureDetected=NotificationType((1,3,6,1,4,1,1991,0,191))
snTrapUDLDCrcFailureDetected.setObjects(*((_G,_H),(_A,_C)))
if mibBuilder.loadTexts:snTrapUDLDCrcFailureDetected.setStatus(_B)
snTrapStackingStandbyElected=NotificationType((1,3,6,1,4,1,1991,0,196))
snTrapStackingStandbyElected.setObjects(*((_A,_E),(_A,_C)))
if mibBuilder.loadTexts:snTrapStackingStandbyElected.setStatus(_B)
snTrapMacMoveThresholdRate=NotificationType((1,3,6,1,4,1,1991,0,197))
snTrapMacMoveThresholdRate.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMacMoveThresholdRate.setStatus(_B)
snTrapMacMoveIntervalHistory=NotificationType((1,3,6,1,4,1,1991,0,198))
snTrapMacMoveIntervalHistory.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMacMoveIntervalHistory.setStatus(_B)
snTrapStackingMixedModeChanged=NotificationType((1,3,6,1,4,1,1991,0,199))
snTrapStackingMixedModeChanged.setObjects(*((_w,_x),(_A,_C)))
if mibBuilder.loadTexts:snTrapStackingMixedModeChanged.setStatus(_B)
snTrapSysMonErrorDetect=NotificationType((1,3,6,1,4,1,1991,0,200))
snTrapSysMonErrorDetect.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapSysMonErrorDetect.setStatus(_B)
snTrapMacNotification=NotificationType((1,3,6,1,4,1,1991,0,201))
snTrapMacNotification.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMacNotification.setStatus(_B)
snTrapMacEventBufferFull=NotificationType((1,3,6,1,4,1,1991,0,202))
snTrapMacEventBufferFull.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMacEventBufferFull.setStatus(_B)
snTrapStpDesignatedGuardDetect=NotificationType((1,3,6,1,4,1,1991,0,203))
snTrapStpDesignatedGuardDetect.setObjects(*((_G,_H),(_J,_L),(_A,_C)))
if mibBuilder.loadTexts:snTrapStpDesignatedGuardDetect.setStatus(_B)
snTrapStpDesignatedGuardDisable=NotificationType((1,3,6,1,4,1,1991,0,204))
snTrapStpDesignatedGuardDisable.setObjects(*((_G,_H),(_J,_L),(_A,_C)))
if mibBuilder.loadTexts:snTrapStpDesignatedGuardDisable.setStatus(_B)
snTrapLicenseNNLLTrialNotify=NotificationType((1,3,6,1,4,1,1991,0,205))
snTrapLicenseNNLLTrialNotify.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapLicenseNNLLTrialNotify.setStatus(_M)
snTrapLicenseNNLLTrialExpiry=NotificationType((1,3,6,1,4,1,1991,0,206))
snTrapLicenseNNLLTrialExpiry.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapLicenseNNLLTrialExpiry.setStatus(_M)
snTrapLicenseNNLLNonCompliant=NotificationType((1,3,6,1,4,1,1991,0,207))
snTrapLicenseNNLLNonCompliant.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapLicenseNNLLNonCompliant.setStatus(_M)
snTrapLicenseNNLLDelete=NotificationType((1,3,6,1,4,1,1991,0,208))
snTrapLicenseNNLLDelete.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapLicenseNNLLDelete.setStatus(_M)
snTrapStackingShowStackConnect=NotificationType((1,3,6,1,4,1,1991,0,209))
snTrapStackingShowStackConnect.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapStackingShowStackConnect.setStatus(_B)
snTrapStackingStandByChangedStandalone=NotificationType((1,3,6,1,4,1,1991,0,210))
snTrapStackingStandByChangedStandalone.setObjects(*((_A,_E),(_A,_C)))
if mibBuilder.loadTexts:snTrapStackingStandByChangedStandalone.setStatus(_B)
snTrapBroadcastlimit=NotificationType((1,3,6,1,4,1,1991,0,211))
snTrapBroadcastlimit.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapBroadcastlimit.setStatus(_B)
snTrapMulticastlimit=NotificationType((1,3,6,1,4,1,1991,0,212))
snTrapMulticastlimit.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapMulticastlimit.setStatus(_B)
snTrapUnicastlimit=NotificationType((1,3,6,1,4,1,1991,0,213))
snTrapUnicastlimit.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapUnicastlimit.setStatus(_B)
snTrapPsuFanStateChange=NotificationType((1,3,6,1,4,1,1991,0,214))
snTrapPsuFanStateChange.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapPsuFanStateChange.setStatus(_B)
snTrapStackISSUSystemCompleted=NotificationType((1,3,6,1,4,1,1991,0,215))
snTrapStackISSUSystemCompleted.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapStackISSUSystemCompleted.setStatus(_B)
snTrapStackISSUSystemFailed=NotificationType((1,3,6,1,4,1,1991,0,216))
snTrapStackISSUSystemFailed.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapStackISSUSystemFailed.setStatus(_B)
snTrapStackISSUUnitCompleted=NotificationType((1,3,6,1,4,1,1991,0,217))
snTrapStackISSUUnitCompleted.setObjects(*((_A,_E),(_A,_C)))
if mibBuilder.loadTexts:snTrapStackISSUUnitCompleted.setStatus(_B)
snTrapStackISSUUnitFailed=NotificationType((1,3,6,1,4,1,1991,0,218))
snTrapStackISSUUnitFailed.setObjects(*((_A,_E),(_A,_C)))
if mibBuilder.loadTexts:snTrapStackISSUUnitFailed.setStatus(_B)
snTrapStackISSUSystemStart=NotificationType((1,3,6,1,4,1,1991,0,219))
snTrapStackISSUSystemStart.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapStackISSUSystemStart.setStatus(_B)
snTrapStackingIgnoreShutdownTemperatureThresholdEnabled=NotificationType((1,3,6,1,4,1,1991,0,220))
snTrapStackingIgnoreShutdownTemperatureThresholdEnabled.setObjects(*((_A,_E),(_A,_C)))
if mibBuilder.loadTexts:snTrapStackingIgnoreShutdownTemperatureThresholdEnabled.setStatus(_B)
snTrapStackingIgnoreShutdownTemperatureThresholdDisabled=NotificationType((1,3,6,1,4,1,1991,0,221))
snTrapStackingIgnoreShutdownTemperatureThresholdDisabled.setObjects(*((_A,_E),(_A,_C)))
if mibBuilder.loadTexts:snTrapStackingIgnoreShutdownTemperatureThresholdDisabled.setStatus(_B)
snTrapGlobalBattleShortModeEnabled=NotificationType((1,3,6,1,4,1,1991,0,222))
snTrapGlobalBattleShortModeEnabled.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapGlobalBattleShortModeEnabled.setStatus(_B)
snTrapGlobalBattleShortModeDisabled=NotificationType((1,3,6,1,4,1,1991,0,223))
snTrapGlobalBattleShortModeDisabled.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapGlobalBattleShortModeDisabled.setStatus(_B)
snTrapStackSAUOptionChange=NotificationType((1,3,6,1,4,1,1991,0,224))
snTrapStackSAUOptionChange.setObjects(*((_A,_E),(_A,_C)))
if mibBuilder.loadTexts:snTrapStackSAUOptionChange.setStatus(_B)
snTrapPMSProtectActivated=NotificationType((1,3,6,1,4,1,1991,0,225))
snTrapPMSProtectActivated.setObjects(*((_G,_H),(_A,_C)))
if mibBuilder.loadTexts:snTrapPMSProtectActivated.setStatus(_B)
snTrapPMSProtectDeactivated=NotificationType((1,3,6,1,4,1,1991,0,226))
snTrapPMSProtectDeactivated.setObjects(*((_G,_H),(_A,_C)))
if mibBuilder.loadTexts:snTrapPMSProtectDeactivated.setStatus(_B)
snTrapStackSAUOptionDeleted=NotificationType((1,3,6,1,4,1,1991,0,227))
snTrapStackSAUOptionDeleted.setObjects(*((_A,_E),(_A,_C)))
if mibBuilder.loadTexts:snTrapStackSAUOptionDeleted.setStatus(_B)
snTrapStackCloudManagerConnected=NotificationType((1,3,6,1,4,1,1991,0,228))
snTrapStackCloudManagerConnected.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapStackCloudManagerConnected.setStatus(_B)
snTrapStackCloudManagerDisconnected=NotificationType((1,3,6,1,4,1,1991,0,229))
snTrapStackCloudManagerDisconnected.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapStackCloudManagerDisconnected.setStatus(_B)
snTrapManager2FactorAuthenticationEnabled=NotificationType((1,3,6,1,4,1,1991,0,230))
snTrapManager2FactorAuthenticationEnabled.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapManager2FactorAuthenticationEnabled.setStatus(_B)
snTrapManager2FactorAuthenticationDisabled=NotificationType((1,3,6,1,4,1,1991,0,231))
snTrapManager2FactorAuthenticationDisabled.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapManager2FactorAuthenticationDisabled.setStatus(_B)
snTrapChasFanOK=NotificationType((1,3,6,1,4,1,1991,0,1000))
snTrapChasFanOK.setObjects(*((_A,_P),(_A,_O)))
if mibBuilder.loadTexts:snTrapChasFanOK.setStatus(_B)
snTrapTemperatureOK=NotificationType((1,3,6,1,4,1,1991,0,1001))
snTrapTemperatureOK.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapTemperatureOK.setStatus(_B)
snTrapCAMOverflow=NotificationType((1,3,6,1,4,1,1991,0,1002))
snTrapCAMOverflow.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapCAMOverflow.setStatus(_B)
snTrapOpticalMonitoringWarning=NotificationType((1,3,6,1,4,1,1991,0,1003))
snTrapOpticalMonitoringWarning.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapOpticalMonitoringWarning.setStatus(_B)
snTrapOpticalMonitoringAlarm=NotificationType((1,3,6,1,4,1,1991,0,1004))
snTrapOpticalMonitoringAlarm.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapOpticalMonitoringAlarm.setStatus(_B)
snTrapOpticalMonitoringError=NotificationType((1,3,6,1,4,1,1991,0,1005))
snTrapOpticalMonitoringError.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapOpticalMonitoringError.setStatus(_B)
snTrapPosMonitoringWarning=NotificationType((1,3,6,1,4,1,1991,0,1006))
snTrapPosMonitoringWarning.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapPosMonitoringWarning.setStatus(_B)
snTrapPosMonitoringAlarm=NotificationType((1,3,6,1,4,1,1991,0,1007))
snTrapPosMonitoringAlarm.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapPosMonitoringAlarm.setStatus(_B)
snTrapPosMonitoringError=NotificationType((1,3,6,1,4,1,1991,0,1008))
snTrapPosMonitoringError.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapPosMonitoringError.setStatus(_B)
snTrapXfpSfpIncompatibleOptics=NotificationType((1,3,6,1,4,1,1991,0,1009))
snTrapXfpSfpIncompatibleOptics.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapXfpSfpIncompatibleOptics.setStatus(_B)
snTrapTMLoggingStart=NotificationType((1,3,6,1,4,1,1991,0,1015))
snTrapTMLoggingStart.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapTMLoggingStart.setStatus(_B)
snTrapTMLoggingStop=NotificationType((1,3,6,1,4,1,1991,0,1016))
snTrapTMLoggingStop.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapTMLoggingStop.setStatus(_B)
snTrapTMLoggingRestart=NotificationType((1,3,6,1,4,1,1991,0,1017))
snTrapTMLoggingRestart.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapTMLoggingRestart.setStatus(_B)
snTrapXfpSfpNotFoundryOptics=NotificationType((1,3,6,1,4,1,1991,0,1018))
snTrapXfpSfpNotFoundryOptics.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapXfpSfpNotFoundryOptics.setStatus(_B)
snTrapTMRecoverySlotReset=NotificationType((1,3,6,1,4,1,1991,0,1019))
snTrapTMRecoverySlotReset.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapTMRecoverySlotReset.setStatus(_B)
snTrapTMEgressDataError=NotificationType((1,3,6,1,4,1,1991,0,1020))
snTrapTMEgressDataError.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapTMEgressDataError.setStatus(_B)
snTrapSFMLinkDown=NotificationType((1,3,6,1,4,1,1991,0,1100))
snTrapSFMLinkDown.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapSFMLinkDown.setStatus(_B)
snTrapSFMLinkUp=NotificationType((1,3,6,1,4,1,1991,0,1101))
snTrapSFMLinkUp.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapSFMLinkUp.setStatus(_B)
snTrapSFMAccessError=NotificationType((1,3,6,1,4,1,1991,0,1102))
snTrapSFMAccessError.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapSFMAccessError.setStatus(_B)
snTrapChassisFanSpeedLow=NotificationType((1,3,6,1,4,1,1991,0,1200))
snTrapChassisFanSpeedLow.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapChassisFanSpeedLow.setStatus(_B)
snTrapChassisFanSpeedMedium=NotificationType((1,3,6,1,4,1,1991,0,1201))
snTrapChassisFanSpeedMedium.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapChassisFanSpeedMedium.setStatus(_B)
snTrapChassisFanSpeedMedHigh=NotificationType((1,3,6,1,4,1,1991,0,1202))
snTrapChassisFanSpeedMedHigh.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapChassisFanSpeedMedHigh.setStatus(_B)
snTrapChassisFanSpeedHigh=NotificationType((1,3,6,1,4,1,1991,0,1203))
snTrapChassisFanSpeedHigh.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapChassisFanSpeedHigh.setStatus(_B)
snTrapFIPSModeEnable=NotificationType((1,3,6,1,4,1,1991,0,1207))
snTrapFIPSModeEnable.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapFIPSModeEnable.setStatus(_B)
snTrapFIPSModeDisable=NotificationType((1,3,6,1,4,1,1991,0,1208))
snTrapFIPSModeDisable.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapFIPSModeDisable.setStatus(_B)
snTrapFIPSHostZeroized=NotificationType((1,3,6,1,4,1,1991,0,1209))
snTrapFIPSHostZeroized.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapFIPSHostZeroized.setStatus(_B)
snTrapFIPSSharedSecretZeroized=NotificationType((1,3,6,1,4,1,1991,0,1210))
snTrapFIPSSharedSecretZeroized.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapFIPSSharedSecretZeroized.setStatus(_B)
snTrapFIPSPOSTStatus=NotificationType((1,3,6,1,4,1,1991,0,1211))
snTrapFIPSPOSTStatus.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapFIPSPOSTStatus.setStatus(_B)
snTrapFIPSCryptoModuleFailure=NotificationType((1,3,6,1,4,1,1991,0,1212))
snTrapFIPSCryptoModuleFailure.setObjects((_A,_C))
if mibBuilder.loadTexts:snTrapFIPSCryptoModuleFailure.setStatus(_B)
mibBuilder.exportSymbols('FOUNDRY-SN-NOTIFICATION-MIB',**{'snTraps':snTraps,'snTrapChasPwrSupply':snTrapChasPwrSupply,'snTrapLockedAddressViolation':snTrapLockedAddressViolation,'snTrapOspfIfStateChange':snTrapOspfIfStateChange,'snTrapOspfVirtIfStateChange':snTrapOspfVirtIfStateChange,'snOspfNbrStateChange':snOspfNbrStateChange,'snOspfVirtNbrStateChange':snOspfVirtNbrStateChange,'snOspfIfConfigError':snOspfIfConfigError,'snOspfVirtIfConfigError':snOspfVirtIfConfigError,'snOspfIfAuthFailure':snOspfIfAuthFailure,'snOspfVirtIfAuthFailure':snOspfVirtIfAuthFailure,'snOspfIfRxBadPacket':snOspfIfRxBadPacket,'snOspfVirtIfRxBadPacket':snOspfVirtIfRxBadPacket,'snOspfTxRetransmit':snOspfTxRetransmit,'ospfVirtIfTxRetransmit':ospfVirtIfTxRetransmit,'snOspfOriginateLsa':snOspfOriginateLsa,'snOspfMaxAgeLsa':snOspfMaxAgeLsa,'snOspfLsdbOverflow':snOspfLsdbOverflow,'snOspfLsdbApproachingOverflow':snOspfLsdbApproachingOverflow,'snTrapL4MaxSessionLimitReached':snTrapL4MaxSessionLimitReached,'snTrapL4TcpSynLimitReached':snTrapL4TcpSynLimitReached,'snTrapL4RealServerUp':snTrapL4RealServerUp,'snTrapL4RealServerDown':snTrapL4RealServerDown,'snTrapL4RealServerPortUp':snTrapL4RealServerPortUp,'snTrapL4RealServerPortDown':snTrapL4RealServerPortDown,'snTrapL4RealServerMaxConnectionLimitReached':snTrapL4RealServerMaxConnectionLimitReached,'snTrapL4BecomeStandby':snTrapL4BecomeStandby,'snTrapL4BecomeActive':snTrapL4BecomeActive,'snTrapModuleInserted':snTrapModuleInserted,'snTrapModuleRemoved':snTrapModuleRemoved,'snTrapChasPwrSupplyFailed':snTrapChasPwrSupplyFailed,'snTrapChasFanFailed':snTrapChasFanFailed,'snTrapLockedAddressViolation2':snTrapLockedAddressViolation2,'snTrapFsrpIfStateChange':snTrapFsrpIfStateChange,'snTrapVrrpIfStateChange':snTrapVrrpIfStateChange,'snTrapMgmtModuleRedunStateChange':snTrapMgmtModuleRedunStateChange,'snTrapTemperatureWarning':snTrapTemperatureWarning,'snTrapAccessListDeny':snTrapAccessListDeny,'snTrapMacFilterDeny':snTrapMacFilterDeny,'snTrapL4GslbRemoteUp':snTrapL4GslbRemoteUp,'snTrapL4GslbRemoteDown':snTrapL4GslbRemoteDown,'snTrapL4GslbRemoteControllerUp':snTrapL4GslbRemoteControllerUp,'snTrapL4GslbRemoteControllerDown':snTrapL4GslbRemoteControllerDown,'snTrapL4GslbHealthCheckIpUp':snTrapL4GslbHealthCheckIpUp,'snTrapL4GslbHealthCheckIpDown':snTrapL4GslbHealthCheckIpDown,'snTrapL4GslbHealthCheckIpPortUp':snTrapL4GslbHealthCheckIpPortUp,'snTrapL4GslbHealthCheckIpPortDown':snTrapL4GslbHealthCheckIpPortDown,'snTrapL4FirewallBecomeStandby':snTrapL4FirewallBecomeStandby,'snTrapL4FirewallBecomeActive':snTrapL4FirewallBecomeActive,'snTrapL4FirewallPathUp':snTrapL4FirewallPathUp,'snTrapL4FirewallPathDown':snTrapL4FirewallPathDown,'snTrapIcmpLocalExceedBurst':snTrapIcmpLocalExceedBurst,'snTrapIcmpTransitExceedBurst':snTrapIcmpTransitExceedBurst,'snTrapTcpLocalExceedBurst':snTrapTcpLocalExceedBurst,'snTrapTcpTransitExceedBurst':snTrapTcpTransitExceedBurst,'snTrapL4ContentVerification':snTrapL4ContentVerification,'snTrapDuplicateIp':snTrapDuplicateIp,'snTrapMplsProblem':snTrapMplsProblem,'snTrapMplsException':snTrapMplsException,'snTrapMplsAudit':snTrapMplsAudit,'snTrapMplsDeveloper':snTrapMplsDeveloper,'snTrapNoBmFreeQueue':snTrapNoBmFreeQueue,'snTrapSmcDmaDrop':snTrapSmcDmaDrop,'snTrapSmcBpDrop':snTrapSmcBpDrop,'snTrapBmWriteSeqDrop':snTrapBmWriteSeqDrop,'snTrapBgpPeerUp':snTrapBgpPeerUp,'snTrapBgpPeerDown':snTrapBgpPeerDown,'snTrapL4RealServerResponseTimeLowerLimit':snTrapL4RealServerResponseTimeLowerLimit,'snTrapL4RealServerResponseTimeUpperLimit':snTrapL4RealServerResponseTimeUpperLimit,'snTrapL4TcpAttackRateExceedMax':snTrapL4TcpAttackRateExceedMax,'snTrapL4TcpAttackRateExceedThreshold':snTrapL4TcpAttackRateExceedThreshold,'snTrapL4ConnectionRateExceedMax':snTrapL4ConnectionRateExceedMax,'snTrapL4ConnectionRateExceedThreshold':snTrapL4ConnectionRateExceedThreshold,'snTrapRunningConfigChanged':snTrapRunningConfigChanged,'snTrapStartupConfigChanged':snTrapStartupConfigChanged,'snTrapUserLogin':snTrapUserLogin,'snTrapUserLogout':snTrapUserLogout,'snTrapPortSecurityViolation':snTrapPortSecurityViolation,'snTrapPortSecurityShutdown':snTrapPortSecurityShutdown,'snTrapMrpStateChange':snTrapMrpStateChange,'snTrapMrpCamError':snTrapMrpCamError,'snTrapChasPwrSupplyOK':snTrapChasPwrSupplyOK,'snTrapVrrpeIfStateChange':snTrapVrrpeIfStateChange,'snTrapVsrpIfStateChange':snTrapVsrpIfStateChange,'snTrapSrcIpAddressViolation':snTrapSrcIpAddressViolation,'snTrapMacAuthEnable':snTrapMacAuthEnable,'snTrapMacAuthDisable':snTrapMacAuthDisable,'snTrapMacAuthMACAccepted':snTrapMacAuthMACAccepted,'snTrapMacAuthMACRejected':snTrapMacAuthMACRejected,'snTrapMacAuthPortDisabled':snTrapMacAuthPortDisabled,'snTrapClientLoginReject':snTrapClientLoginReject,'snTrapLocalUserConfigChange':snTrapLocalUserConfigChange,'snTrapVlanConfigChange':snTrapVlanConfigChange,'snTrapAclConfigChange':snTrapAclConfigChange,'snTrapMacFilterConfigChange':snTrapMacFilterConfigChange,'snTrapSNMPConfigChange':snTrapSNMPConfigChange,'snTrapSyslogConfigChange':snTrapSyslogConfigChange,'snTrapPasswordConfigChange':snTrapPasswordConfigChange,'snTrapServerStatusChange':snTrapServerStatusChange,'snTrapL4RealServerPortMaxConnectionLimitReached':snTrapL4RealServerPortMaxConnectionLimitReached,'snTrapL4LinkDown':snTrapL4LinkDown,'snTrapL4LinkUp':snTrapL4LinkUp,'snTrapPortPriorityChange':snTrapPortPriorityChange,'snTrapAutoPortDisableTrigger':snTrapAutoPortDisableTrigger,'snTrapAutoPortDisableRelease':snTrapAutoPortDisableRelease,'snTrapPnPStatusChange':snTrapPnPStatusChange,'snTrapWirelessIsrpPeerStateChange':snTrapWirelessIsrpPeerStateChange,'snTrapWirelessStationStateChange':snTrapWirelessStationStateChange,'snTrapWirelessStationRoamingEventTriggered':snTrapWirelessStationRoamingEventTriggered,'snTrapWirelessSappStateChange':snTrapWirelessSappStateChange,'snTrapExternalPowerConnectionStatus':snTrapExternalPowerConnectionStatus,'snTrapDot1xSecurityViolation':snTrapDot1xSecurityViolation,'snTrapDot1xPortLinkChange':snTrapDot1xPortLinkChange,'snTrapDot1xPortControlChange':snTrapDot1xPortControlChange,'snTrapDot1xVlanIdChange':snTrapDot1xVlanIdChange,'snTrapDot1xFilterSetupFailure':snTrapDot1xFilterSetupFailure,'snTrapDot1xError':snTrapDot1xError,'snTrapPortConfigChange':snTrapPortConfigChange,'snTrapMacAuthVlanIdChange':snTrapMacAuthVlanIdChange,'snTrapWebAuthEnabled':snTrapWebAuthEnabled,'snTrapWebAuthDisabled':snTrapWebAuthDisabled,'snTrapIpConfigChange':snTrapIpConfigChange,'snTrapIpv6ConfigChange':snTrapIpv6ConfigChange,'snTrapMacAuthRadiusTimeout':snTrapMacAuthRadiusTimeout,'snTrapDot1xRadiusTimeout':snTrapDot1xRadiusTimeout,'snTrapUDLDLinkDown':snTrapUDLDLinkDown,'snTrapUDLDLinkUp':snTrapUDLDLinkUp,'snTrapMacBasedVlanEnabled':snTrapMacBasedVlanEnabled,'snTrapMacBasedVlanDisabled':snTrapMacBasedVlanDisabled,'snTrapChasFanNormal':snTrapChasFanNormal,'snTrapStpRootGuardDetect':snTrapStpRootGuardDetect,'snTrapStpRootGuardExpire':snTrapStpRootGuardExpire,'snTrapStpBPDUGuardDetect':snTrapStpBPDUGuardDetect,'snTrapMstpBPDUGuardDetect':snTrapMstpBPDUGuardDetect,'snTrapErrorDisableAction':snTrapErrorDisableAction,'snTrapLACPLinkStateChange':snTrapLACPLinkStateChange,'snTrapOpticalMonitoringNotFoundryOptics':snTrapOpticalMonitoringNotFoundryOptics,'snTrapOpticalMonitoringFoundryOpticsNotCapable':snTrapOpticalMonitoringFoundryOpticsNotCapable,'snTrapStaticMulticastMacConfigAdd':snTrapStaticMulticastMacConfigAdd,'snTrapStaticMulticastMacConfigRemove':snTrapStaticMulticastMacConfigRemove,'snTrapSTPBPDUGuardExpire':snTrapSTPBPDUGuardExpire,'snTrapPortLoopDetection':snTrapPortLoopDetection,'snTrapNoFreeTcamEntry':snTrapNoFreeTcamEntry,'snTrapStackingMasterElected':snTrapStackingMasterElected,'snTrapStackingUnitAdded':snTrapStackingUnitAdded,'snTrapStackingUnitDeleted':snTrapStackingUnitDeleted,'snTrapStackingChasPwrSupplyOK':snTrapStackingChasPwrSupplyOK,'snTrapStackingChasPwrSupplyFailed':snTrapStackingChasPwrSupplyFailed,'snTrapStackingChasFanNormal':snTrapStackingChasFanNormal,'snTrapStackingChasFanFailed':snTrapStackingChasFanFailed,'snTrapStackingManagementMACChanged':snTrapStackingManagementMACChanged,'snTrapStackingTemperatureWarning':snTrapStackingTemperatureWarning,'snTrapIfIndexAssignmentChanged':snTrapIfIndexAssignmentChanged,'snTrapPBRConfigChanged':snTrapPBRConfigChanged,'snTrapChasPwrSupplyRPSAdd':snTrapChasPwrSupplyRPSAdd,'snTrapChasPwrSupplyRPSRemove':snTrapChasPwrSupplyRPSRemove,'snTrapModuleStatusChange':snTrapModuleStatusChange,'snTrapChasHighSpeedFansNeeded':snTrapChasHighSpeedFansNeeded,'snTrapSysmaxReverted':snTrapSysmaxReverted,'snTrapSysmaxLeftLowMem':snTrapSysmaxLeftLowMem,'snTrapSysMemoryLowThreshold':snTrapSysMemoryLowThreshold,'snTrapSysMemoryOutThreshold':snTrapSysMemoryOutThreshold,'snTrapLinkOAMLinkDown':snTrapLinkOAMLinkDown,'snTrapLinkOAMLinkUp':snTrapLinkOAMLinkUp,'snTrapI2CAccessLog':snTrapI2CAccessLog,'snTrapLinkOAMLoopbackEntered':snTrapLinkOAMLoopbackEntered,'snTrapLinkOAMLoopbackCleared':snTrapLinkOAMLoopbackCleared,'snTrapLicenseAdded':snTrapLicenseAdded,'snTrapLicenseRemoved':snTrapLicenseRemoved,'snTrapLicenseExpires':snTrapLicenseExpires,'snTrapLicenseExpired':snTrapLicenseExpired,'snTrapUDLDCrcFailureDetected':snTrapUDLDCrcFailureDetected,'snTrapStackingStandbyElected':snTrapStackingStandbyElected,'snTrapMacMoveThresholdRate':snTrapMacMoveThresholdRate,'snTrapMacMoveIntervalHistory':snTrapMacMoveIntervalHistory,'snTrapStackingMixedModeChanged':snTrapStackingMixedModeChanged,'snTrapSysMonErrorDetect':snTrapSysMonErrorDetect,'snTrapMacNotification':snTrapMacNotification,'snTrapMacEventBufferFull':snTrapMacEventBufferFull,'snTrapStpDesignatedGuardDetect':snTrapStpDesignatedGuardDetect,'snTrapStpDesignatedGuardDisable':snTrapStpDesignatedGuardDisable,'snTrapLicenseNNLLTrialNotify':snTrapLicenseNNLLTrialNotify,'snTrapLicenseNNLLTrialExpiry':snTrapLicenseNNLLTrialExpiry,'snTrapLicenseNNLLNonCompliant':snTrapLicenseNNLLNonCompliant,'snTrapLicenseNNLLDelete':snTrapLicenseNNLLDelete,'snTrapStackingShowStackConnect':snTrapStackingShowStackConnect,'snTrapStackingStandByChangedStandalone':snTrapStackingStandByChangedStandalone,'snTrapBroadcastlimit':snTrapBroadcastlimit,'snTrapMulticastlimit':snTrapMulticastlimit,'snTrapUnicastlimit':snTrapUnicastlimit,'snTrapPsuFanStateChange':snTrapPsuFanStateChange,'snTrapStackISSUSystemCompleted':snTrapStackISSUSystemCompleted,'snTrapStackISSUSystemFailed':snTrapStackISSUSystemFailed,'snTrapStackISSUUnitCompleted':snTrapStackISSUUnitCompleted,'snTrapStackISSUUnitFailed':snTrapStackISSUUnitFailed,'snTrapStackISSUSystemStart':snTrapStackISSUSystemStart,'snTrapStackingIgnoreShutdownTemperatureThresholdEnabled':snTrapStackingIgnoreShutdownTemperatureThresholdEnabled,'snTrapStackingIgnoreShutdownTemperatureThresholdDisabled':snTrapStackingIgnoreShutdownTemperatureThresholdDisabled,'snTrapGlobalBattleShortModeEnabled':snTrapGlobalBattleShortModeEnabled,'snTrapGlobalBattleShortModeDisabled':snTrapGlobalBattleShortModeDisabled,'snTrapStackSAUOptionChange':snTrapStackSAUOptionChange,'snTrapPMSProtectActivated':snTrapPMSProtectActivated,'snTrapPMSProtectDeactivated':snTrapPMSProtectDeactivated,'snTrapStackSAUOptionDeleted':snTrapStackSAUOptionDeleted,'snTrapStackCloudManagerConnected':snTrapStackCloudManagerConnected,'snTrapStackCloudManagerDisconnected':snTrapStackCloudManagerDisconnected,'snTrapManager2FactorAuthenticationEnabled':snTrapManager2FactorAuthenticationEnabled,'snTrapManager2FactorAuthenticationDisabled':snTrapManager2FactorAuthenticationDisabled,'snTrapChasFanOK':snTrapChasFanOK,'snTrapTemperatureOK':snTrapTemperatureOK,'snTrapCAMOverflow':snTrapCAMOverflow,'snTrapOpticalMonitoringWarning':snTrapOpticalMonitoringWarning,'snTrapOpticalMonitoringAlarm':snTrapOpticalMonitoringAlarm,'snTrapOpticalMonitoringError':snTrapOpticalMonitoringError,'snTrapPosMonitoringWarning':snTrapPosMonitoringWarning,'snTrapPosMonitoringAlarm':snTrapPosMonitoringAlarm,'snTrapPosMonitoringError':snTrapPosMonitoringError,'snTrapXfpSfpIncompatibleOptics':snTrapXfpSfpIncompatibleOptics,'snTrapTMLoggingStart':snTrapTMLoggingStart,'snTrapTMLoggingStop':snTrapTMLoggingStop,'snTrapTMLoggingRestart':snTrapTMLoggingRestart,'snTrapXfpSfpNotFoundryOptics':snTrapXfpSfpNotFoundryOptics,'snTrapTMRecoverySlotReset':snTrapTMRecoverySlotReset,'snTrapTMEgressDataError':snTrapTMEgressDataError,'snTrapSFMLinkDown':snTrapSFMLinkDown,'snTrapSFMLinkUp':snTrapSFMLinkUp,'snTrapSFMAccessError':snTrapSFMAccessError,'snTrapChassisFanSpeedLow':snTrapChassisFanSpeedLow,'snTrapChassisFanSpeedMedium':snTrapChassisFanSpeedMedium,'snTrapChassisFanSpeedMedHigh':snTrapChassisFanSpeedMedHigh,'snTrapChassisFanSpeedHigh':snTrapChassisFanSpeedHigh,'snTrapFIPSModeEnable':snTrapFIPSModeEnable,'snTrapFIPSModeDisable':snTrapFIPSModeDisable,'snTrapFIPSHostZeroized':snTrapFIPSHostZeroized,'snTrapFIPSSharedSecretZeroized':snTrapFIPSSharedSecretZeroized,'snTrapFIPSPOSTStatus':snTrapFIPSPOSTStatus,'snTrapFIPSCryptoModuleFailure':snTrapFIPSCryptoModuleFailure})