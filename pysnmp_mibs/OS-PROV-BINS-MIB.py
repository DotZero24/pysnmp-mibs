#
# PySNMP MIB module OS-PROV-BINS-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/rob/Code/pysnmp-mibs/mibs/mrv/OS-PROV-BINS-MIB
# Produced by pysmi-1.1.12 at Mon Aug  4 17:02:23 2025
# On host macmini.vegmond.io platform Darwin version 24.5.0 by user rob
# Using Python version 3.12.8 (main, Dec  3 2024, 18:42:41) [Clang 16.0.0 (clang-1600.0.26.4)]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
ProfileStatus, EntityName, EntryValidator = mibBuilder.importSymbols("OS-COMMON-TC-MIB", "ProfileStatus", "EntityName", "EntryValidator")
osEthServId, osEthServFlowId, osEthServ = mibBuilder.importSymbols("OS-ETH-SERV-MIB", "osEthServId", "osEthServFlowId", "osEthServ")
NotificationGroup, ObjectGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "NotificationGroup", "ObjectGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, Integer32, ModuleIdentity, TimeTicks, NotificationType, Counter32, Bits, IpAddress, iso, ObjectIdentity, Counter64, Gauge32 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "Integer32", "ModuleIdentity", "TimeTicks", "NotificationType", "Counter32", "Bits", "IpAddress", "iso", "ObjectIdentity", "Counter64", "Gauge32")
TextualConvention, DisplayString, DateAndTime = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString", "DateAndTime")
osProvBins = ModuleIdentity((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20))
osProvBins.setRevisions(('2011-04-11 00:00', '2010-12-16 00:00',))
if mibBuilder.loadTexts: osProvBins.setLastUpdated('201104110000Z')
if mibBuilder.loadTexts: osProvBins.setOrganization('MRV Communications, Inc.')
osProvBinsGen = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 1))
osProvBinsConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 100))
osProvBinsMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 100, 1))
osProvBinsMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 100, 2))
class MeasTestType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1))
    namedValues = NamedValues(("dmm", 1))

class MeasTestResultType(TextualConvention, Integer32):
    status = 'current'
    subtypeSpec = Integer32.subtypeSpec + ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))
    namedValues = NamedValues(("roundTripFrameDelay", 1), ("forwardFrameDelay", 2), ("backwardFrameDelay", 3), ("roundTripIFDV", 4), ("forwardIFDV", 5), ("backwardIFDV", 6))

osProvBinsSupported = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("notSupported", 1), ("supported", 2)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osProvBinsSupported.setStatus('current')
osProvBinPrflTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 2), )
if mibBuilder.loadTexts: osProvBinPrflTable.setStatus('current')
osProvBinPrflEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 2, 1), ).setIndexNames((0, "OS-PROV-BINS-MIB", "osProvBinPrflId"))
if mibBuilder.loadTexts: osProvBinPrflEntry.setStatus('current')
osProvBinPrflId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 2, 1, 1), EntityName())
if mibBuilder.loadTexts: osProvBinPrflId.setStatus('current')
osProvBinPrflBinsNumber = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 2, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)).clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osProvBinPrflBinsNumber.setStatus('current')
osProvBinPrflAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 2, 1, 98), EntryValidator()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osProvBinPrflAdminStatus.setStatus('current')
osProvBinPrflOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 2, 1, 99), ProfileStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osProvBinPrflOperStatus.setStatus('current')
osProvBinCfgTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 3), )
if mibBuilder.loadTexts: osProvBinCfgTable.setStatus('current')
osProvBinCfgEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 3, 1), ).setIndexNames((0, "OS-PROV-BINS-MIB", "osProvBinPrflId"), (0, "OS-PROV-BINS-MIB", "osProvBinCfgBinIndex"))
if mibBuilder.loadTexts: osProvBinCfgEntry.setStatus('current')
osProvBinCfgBinIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 3, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 10)))
if mibBuilder.loadTexts: osProvBinCfgBinIndex.setStatus('current')
osProvBinCfgBinBound = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 3, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 5000000))).setUnits('microseconds (us)').setMaxAccess("readcreate")
if mibBuilder.loadTexts: osProvBinCfgBinBound.setStatus('current')
osProvBinBindTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 4), )
if mibBuilder.loadTexts: osProvBinBindTable.setStatus('current')
osProvBinBindEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 4, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"), (0, "OS-ETH-SERV-MIB", "osEthServFlowId"), (0, "OS-PROV-BINS-MIB", "osProvBinBindTestType"), (0, "OS-PROV-BINS-MIB", "osProvBinBindResultType"))
if mibBuilder.loadTexts: osProvBinBindEntry.setStatus('current')
osProvBinBindTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 4, 1, 1), MeasTestType())
if mibBuilder.loadTexts: osProvBinBindTestType.setStatus('current')
osProvBinBindResultType = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 4, 1, 2), MeasTestResultType())
if mibBuilder.loadTexts: osProvBinBindResultType.setStatus('current')
osProvBinBindPrflId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 4, 1, 3), EntityName()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osProvBinBindPrflId.setStatus('current')
osProvBinBindAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 4, 1, 4), EntryValidator()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osProvBinBindAdminStatus.setStatus('current')
osProvBinSetCurrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 5), )
if mibBuilder.loadTexts: osProvBinSetCurrStatsTable.setStatus('current')
osProvBinSetCurrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 5, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"), (0, "OS-ETH-SERV-MIB", "osEthServFlowId"), (0, "OS-PROV-BINS-MIB", "osProvBinBindTestType"))
if mibBuilder.loadTexts: osProvBinSetCurrStatsEntry.setStatus('current')
osProvBinSetCurrStatsStart = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 5, 1, 1), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osProvBinSetCurrStatsStart.setStatus('current')
osProvBinSetCurrStatsHistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 5, 1, 2), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osProvBinSetCurrStatsHistIndex.setStatus('current')
osProvBinSetHistStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 6), )
if mibBuilder.loadTexts: osProvBinSetHistStatsTable.setStatus('current')
osProvBinSetHistStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 6, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"), (0, "OS-ETH-SERV-MIB", "osEthServFlowId"), (0, "OS-PROV-BINS-MIB", "osProvBinBindTestType"), (0, "OS-PROV-BINS-MIB", "osProvBinSetHistIndex"))
if mibBuilder.loadTexts: osProvBinSetHistStatsEntry.setStatus('current')
osProvBinSetHistIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 6, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 4294967295)))
if mibBuilder.loadTexts: osProvBinSetHistIndex.setStatus('current')
osProvBinSetHistStatsStart = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 6, 1, 2), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osProvBinSetHistStatsStart.setStatus('current')
osProvBinSetHistStatsFinish = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 6, 1, 3), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osProvBinSetHistStatsFinish.setStatus('current')
osProvBinCurrStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 7), )
if mibBuilder.loadTexts: osProvBinCurrStatsTable.setStatus('current')
osProvBinCurrStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 7, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"), (0, "OS-ETH-SERV-MIB", "osEthServFlowId"), (0, "OS-PROV-BINS-MIB", "osProvBinBindTestType"), (0, "OS-PROV-BINS-MIB", "osProvBinBindResultType"), (0, "OS-PROV-BINS-MIB", "osProvBinCfgBinIndex"))
if mibBuilder.loadTexts: osProvBinCurrStatsEntry.setStatus('current')
osProvBinCurrStatsCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 7, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osProvBinCurrStatsCounter.setStatus('current')
osProvBinHistStatsTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 8), )
if mibBuilder.loadTexts: osProvBinHistStatsTable.setStatus('current')
osProvBinHistStatsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 8, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"), (0, "OS-ETH-SERV-MIB", "osEthServFlowId"), (0, "OS-PROV-BINS-MIB", "osProvBinBindTestType"), (0, "OS-PROV-BINS-MIB", "osProvBinSetHistIndex"), (0, "OS-PROV-BINS-MIB", "osProvBinBindResultType"), (0, "OS-PROV-BINS-MIB", "osProvBinCfgBinIndex"))
if mibBuilder.loadTexts: osProvBinHistStatsEntry.setStatus('current')
osProvBinHistStatsCounter = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 8, 1, 1), Gauge32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osProvBinHistStatsCounter.setStatus('current')
osProvBinsMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 100, 1, 1)).setObjects(("OS-PROV-BINS-MIB", "osProvBinsMandatoryGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    osProvBinsMIBCompliance = osProvBinsMIBCompliance.setStatus('current')
osProvBinsMandatoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6926, 2, 10, 20, 100, 2, 1)).setObjects(("OS-PROV-BINS-MIB", "osProvBinsSupported"), ("OS-PROV-BINS-MIB", "osProvBinPrflBinsNumber"), ("OS-PROV-BINS-MIB", "osProvBinPrflAdminStatus"), ("OS-PROV-BINS-MIB", "osProvBinPrflOperStatus"), ("OS-PROV-BINS-MIB", "osProvBinCfgBinBound"), ("OS-PROV-BINS-MIB", "osProvBinBindPrflId"), ("OS-PROV-BINS-MIB", "osProvBinBindAdminStatus"), ("OS-PROV-BINS-MIB", "osProvBinCurrStatsCounter"), ("OS-PROV-BINS-MIB", "osProvBinSetCurrStatsStart"), ("OS-PROV-BINS-MIB", "osProvBinSetCurrStatsHistIndex"), ("OS-PROV-BINS-MIB", "osProvBinHistStatsCounter"), ("OS-PROV-BINS-MIB", "osProvBinSetHistStatsStart"), ("OS-PROV-BINS-MIB", "osProvBinSetHistStatsFinish"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    osProvBinsMandatoryGroup = osProvBinsMandatoryGroup.setStatus('current')
mibBuilder.exportSymbols("OS-PROV-BINS-MIB", PYSNMP_MODULE_ID=osProvBins, MeasTestType=MeasTestType, osProvBinHistStatsEntry=osProvBinHistStatsEntry, MeasTestResultType=MeasTestResultType, osProvBinSetHistStatsFinish=osProvBinSetHistStatsFinish, osProvBinSetHistStatsEntry=osProvBinSetHistStatsEntry, osProvBinSetCurrStatsTable=osProvBinSetCurrStatsTable, osProvBinsMIBGroups=osProvBinsMIBGroups, osProvBinCurrStatsTable=osProvBinCurrStatsTable, osProvBinSetHistStatsTable=osProvBinSetHistStatsTable, osProvBinSetCurrStatsStart=osProvBinSetCurrStatsStart, osProvBinBindTestType=osProvBinBindTestType, osProvBinPrflId=osProvBinPrflId, osProvBinCfgBinBound=osProvBinCfgBinBound, osProvBinBindEntry=osProvBinBindEntry, osProvBinCfgEntry=osProvBinCfgEntry, osProvBinSetCurrStatsHistIndex=osProvBinSetCurrStatsHistIndex, osProvBinSetHistStatsStart=osProvBinSetHistStatsStart, osProvBinCurrStatsEntry=osProvBinCurrStatsEntry, osProvBins=osProvBins, osProvBinsSupported=osProvBinsSupported, osProvBinCurrStatsCounter=osProvBinCurrStatsCounter, osProvBinPrflBinsNumber=osProvBinPrflBinsNumber, osProvBinBindTable=osProvBinBindTable, osProvBinPrflTable=osProvBinPrflTable, osProvBinsMIBCompliances=osProvBinsMIBCompliances, osProvBinBindResultType=osProvBinBindResultType, osProvBinHistStatsTable=osProvBinHistStatsTable, osProvBinSetCurrStatsEntry=osProvBinSetCurrStatsEntry, osProvBinsMandatoryGroup=osProvBinsMandatoryGroup, osProvBinHistStatsCounter=osProvBinHistStatsCounter, osProvBinPrflOperStatus=osProvBinPrflOperStatus, osProvBinCfgBinIndex=osProvBinCfgBinIndex, osProvBinPrflAdminStatus=osProvBinPrflAdminStatus, osProvBinBindPrflId=osProvBinBindPrflId, osProvBinBindAdminStatus=osProvBinBindAdminStatus, osProvBinSetHistIndex=osProvBinSetHistIndex, osProvBinsGen=osProvBinsGen, osProvBinPrflEntry=osProvBinPrflEntry, osProvBinCfgTable=osProvBinCfgTable, osProvBinsConformance=osProvBinsConformance, osProvBinsMIBCompliance=osProvBinsMIBCompliance)
