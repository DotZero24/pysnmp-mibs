_Y='genDvTrapLicenseExpire'
_X='genDvTrapsInfLastTrStringMac'
_W='genDvTrapsInfLastTrValueVlan'
_V='genDvTrapsInfObjGaugeVal'
_U='genDvTrapsInfLastTrDeviceProduct'
_T='genDvTrapsInfIdxNo'
_S='DisplayString'
_R='genDvTrapLicenseSN'
_Q='genDvTrapsInfObjStringVal'
_P='genDvTrapsInfLastTrAlarmSeverityVal'
_O='genDvTrapsInfLastTrUserName'
_N='genDvTrapsInfObjIntegerVal'
_M='Integer32'
_L='genDvTrapsInfObjectOid'
_K='genDvTrapsInfLastTrTimeStamp'
_J='genDvTrapsInfLastTrValue'
_I='genDvTrapsInfLastTrAlarmId'
_H='read-only'
_G='mandatory'
_F='genDvTrapsInfLastTrAlarmVal'
_E='genDvTrapsInfLastTrPortNo'
_D='genDvTrapsInfLastTrSlotNo'
_C='genDvTrapsInfLastTrDevLocalId'
_B='genDvTrapsInfLastTrDevNo'
_A='DATACOM-GENERIC-DEVICE-TRAPS-MIB'
if'mibBuilder'not in globals():import sys;sys.stderr.write(__doc__);sys.exit(1)
Integer,OctetString,ObjectIdentifier=mibBuilder.importSymbols('ASN1','Integer','OctetString','ObjectIdentifier')
NamedValues,=mibBuilder.importSymbols('ASN1-ENUMERATION','NamedValues')
ConstraintsIntersection,ConstraintsUnion,SingleValueConstraint,ValueRangeConstraint,ValueSizeConstraint=mibBuilder.importSymbols('ASN1-REFINEMENT','ConstraintsIntersection','ConstraintsUnion','SingleValueConstraint','ValueRangeConstraint','ValueSizeConstraint')
datacomGenericMIBs,datacomModules=mibBuilder.importSymbols('DATACOM-SMI','datacomGenericMIBs','datacomModules')
ModuleCompliance,NotificationGroup=mibBuilder.importSymbols('SNMPv2-CONF','ModuleCompliance','NotificationGroup')
Bits,Counter32,Counter64,Gauge32,Integer32,IpAddress,ModuleIdentity,MibIdentifier,NotificationType,ObjectIdentity,MibScalar,MibTable,MibTableRow,MibTableColumn,TimeTicks,Unsigned32,iso=mibBuilder.importSymbols('SNMPv2-SMI','Bits','Counter32','Counter64','Gauge32',_M,'IpAddress','ModuleIdentity','MibIdentifier','NotificationType','ObjectIdentity','MibScalar','MibTable','MibTableRow','MibTableColumn','TimeTicks','Unsigned32','iso')
DisplayString,PhysAddress,TextualConvention=mibBuilder.importSymbols('SNMPv2-TC',_S,'PhysAddress','TextualConvention')
class DisplayString(OctetString):0
class DmDevIndex(Integer32):0
class DmDevLocalIndex(Integer32):0
class DmSlotIndex(Integer32):0
class DmPortIndex(Integer32):0
class DmTrapIndex(Integer32):subtypeSpec=Integer32.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueRangeConstraint(1,999999))
_DatacomGenDvTrapsMIBModule_ObjectIdentity=ObjectIdentity
datacomGenDvTrapsMIBModule=_DatacomGenDvTrapsMIBModule_ObjectIdentity((1,3,6,1,4,1,3709,1,1,24))
_DmGenDvTrapsMIB_ObjectIdentity=ObjectIdentity
dmGenDvTrapsMIB=_DmGenDvTrapsMIB_ObjectIdentity((1,3,6,1,4,1,3709,2,4))
_DmGenDvTrapsInf_ObjectIdentity=ObjectIdentity
dmGenDvTrapsInf=_DmGenDvTrapsInf_ObjectIdentity((1,3,6,1,4,1,3709,2,4,1))
_GenDvTrapsInfMibVersion_Type=DisplayString
_GenDvTrapsInfMibVersion_Object=MibScalar
genDvTrapsInfMibVersion=_GenDvTrapsInfMibVersion_Object((1,3,6,1,4,1,3709,2,4,1,1),_GenDvTrapsInfMibVersion_Type())
genDvTrapsInfMibVersion.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfMibVersion.setStatus(_G)
_GenDvTrapsInfLastTrDevNo_Type=DmDevIndex
_GenDvTrapsInfLastTrDevNo_Object=MibScalar
genDvTrapsInfLastTrDevNo=_GenDvTrapsInfLastTrDevNo_Object((1,3,6,1,4,1,3709,2,4,1,11),_GenDvTrapsInfLastTrDevNo_Type())
genDvTrapsInfLastTrDevNo.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfLastTrDevNo.setStatus(_G)
_GenDvTrapsInfLastTrDevLocalId_Type=DmDevLocalIndex
_GenDvTrapsInfLastTrDevLocalId_Object=MibScalar
genDvTrapsInfLastTrDevLocalId=_GenDvTrapsInfLastTrDevLocalId_Object((1,3,6,1,4,1,3709,2,4,1,12),_GenDvTrapsInfLastTrDevLocalId_Type())
genDvTrapsInfLastTrDevLocalId.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfLastTrDevLocalId.setStatus(_G)
_GenDvTrapsInfLastTrSlotNo_Type=DmSlotIndex
_GenDvTrapsInfLastTrSlotNo_Object=MibScalar
genDvTrapsInfLastTrSlotNo=_GenDvTrapsInfLastTrSlotNo_Object((1,3,6,1,4,1,3709,2,4,1,13),_GenDvTrapsInfLastTrSlotNo_Type())
genDvTrapsInfLastTrSlotNo.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfLastTrSlotNo.setStatus(_G)
_GenDvTrapsInfLastTrPortNo_Type=DmPortIndex
_GenDvTrapsInfLastTrPortNo_Object=MibScalar
genDvTrapsInfLastTrPortNo=_GenDvTrapsInfLastTrPortNo_Object((1,3,6,1,4,1,3709,2,4,1,14),_GenDvTrapsInfLastTrPortNo_Type())
genDvTrapsInfLastTrPortNo.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfLastTrPortNo.setStatus(_G)
_GenDvTrapsInfLastTrValue_Type=Integer32
_GenDvTrapsInfLastTrValue_Object=MibScalar
genDvTrapsInfLastTrValue=_GenDvTrapsInfLastTrValue_Object((1,3,6,1,4,1,3709,2,4,1,15),_GenDvTrapsInfLastTrValue_Type())
genDvTrapsInfLastTrValue.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfLastTrValue.setStatus(_G)
_GenDvTrapsInfLastTrType_Type=Integer32
_GenDvTrapsInfLastTrType_Object=MibScalar
genDvTrapsInfLastTrType=_GenDvTrapsInfLastTrType_Object((1,3,6,1,4,1,3709,2,4,1,16),_GenDvTrapsInfLastTrType_Type())
genDvTrapsInfLastTrType.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfLastTrType.setStatus(_G)
_GenDvTrapsInfLastTrTimeStamp_Type=TimeTicks
_GenDvTrapsInfLastTrTimeStamp_Object=MibScalar
genDvTrapsInfLastTrTimeStamp=_GenDvTrapsInfLastTrTimeStamp_Object((1,3,6,1,4,1,3709,2,4,1,17),_GenDvTrapsInfLastTrTimeStamp_Type())
genDvTrapsInfLastTrTimeStamp.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfLastTrTimeStamp.setStatus(_G)
_GenDvTrapsInfLastTrDeviceProduct_Type=ObjectIdentifier
_GenDvTrapsInfLastTrDeviceProduct_Object=MibScalar
genDvTrapsInfLastTrDeviceProduct=_GenDvTrapsInfLastTrDeviceProduct_Object((1,3,6,1,4,1,3709,2,4,1,18),_GenDvTrapsInfLastTrDeviceProduct_Type())
genDvTrapsInfLastTrDeviceProduct.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfLastTrDeviceProduct.setStatus(_G)
_GenDvTrapsInfLastTrAlarmId_Type=Integer32
_GenDvTrapsInfLastTrAlarmId_Object=MibScalar
genDvTrapsInfLastTrAlarmId=_GenDvTrapsInfLastTrAlarmId_Object((1,3,6,1,4,1,3709,2,4,1,19),_GenDvTrapsInfLastTrAlarmId_Type())
genDvTrapsInfLastTrAlarmId.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfLastTrAlarmId.setStatus(_G)
class _GenDvTrapsInfLastTrAlarmVal_Type(Integer32):subtypeSpec=Integer32.subtypeSpec;subtypeSpec+=ConstraintsUnion(SingleValueConstraint(*(1,2,3)));namedValues=NamedValues(*(('deactivated',1),('actived',2),('unstable',3)))
_GenDvTrapsInfLastTrAlarmVal_Type.__name__=_M
_GenDvTrapsInfLastTrAlarmVal_Object=MibScalar
genDvTrapsInfLastTrAlarmVal=_GenDvTrapsInfLastTrAlarmVal_Object((1,3,6,1,4,1,3709,2,4,1,20),_GenDvTrapsInfLastTrAlarmVal_Type())
genDvTrapsInfLastTrAlarmVal.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfLastTrAlarmVal.setStatus(_G)
_GenDvTrapsInfLastTrUserName_Type=DisplayString
_GenDvTrapsInfLastTrUserName_Object=MibScalar
genDvTrapsInfLastTrUserName=_GenDvTrapsInfLastTrUserName_Object((1,3,6,1,4,1,3709,2,4,1,21),_GenDvTrapsInfLastTrUserName_Type())
genDvTrapsInfLastTrUserName.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfLastTrUserName.setStatus(_G)
class _GenDvTrapsInfLastTrAlarmSeverityVal_Type(Integer32):subtypeSpec=Integer32.subtypeSpec;subtypeSpec+=ConstraintsUnion(SingleValueConstraint(*(1,2,3,4,5)));namedValues=NamedValues(*(('info',1),('warning',2),('minor',3),('major',4),('critical',5)))
_GenDvTrapsInfLastTrAlarmSeverityVal_Type.__name__=_M
_GenDvTrapsInfLastTrAlarmSeverityVal_Object=MibScalar
genDvTrapsInfLastTrAlarmSeverityVal=_GenDvTrapsInfLastTrAlarmSeverityVal_Object((1,3,6,1,4,1,3709,2,4,1,22),_GenDvTrapsInfLastTrAlarmSeverityVal_Type())
genDvTrapsInfLastTrAlarmSeverityVal.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfLastTrAlarmSeverityVal.setStatus(_G)
_GenDvTrapsInfLastTrChannel_Type=Integer32
_GenDvTrapsInfLastTrChannel_Object=MibScalar
genDvTrapsInfLastTrChannel=_GenDvTrapsInfLastTrChannel_Object((1,3,6,1,4,1,3709,2,4,1,23),_GenDvTrapsInfLastTrChannel_Type())
genDvTrapsInfLastTrChannel.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfLastTrChannel.setStatus(_G)
_GenDvTrapLicenseSN_Type=Integer32
_GenDvTrapLicenseSN_Object=MibScalar
genDvTrapLicenseSN=_GenDvTrapLicenseSN_Object((1,3,6,1,4,1,3709,2,4,1,24),_GenDvTrapLicenseSN_Type())
genDvTrapLicenseSN.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapLicenseSN.setStatus(_G)
_GenDvTrapLicenseExpire_Type=Integer32
_GenDvTrapLicenseExpire_Object=MibScalar
genDvTrapLicenseExpire=_GenDvTrapLicenseExpire_Object((1,3,6,1,4,1,3709,2,4,1,25),_GenDvTrapLicenseExpire_Type())
genDvTrapLicenseExpire.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapLicenseExpire.setStatus(_G)
class _GenDvTrapsInfLastTrValueVlan_Type(Integer32):subtypeSpec=Integer32.subtypeSpec;subtypeSpec+=ConstraintsUnion(ValueRangeConstraint(1,4096))
_GenDvTrapsInfLastTrValueVlan_Type.__name__=_M
_GenDvTrapsInfLastTrValueVlan_Object=MibScalar
genDvTrapsInfLastTrValueVlan=_GenDvTrapsInfLastTrValueVlan_Object((1,3,6,1,4,1,3709,2,4,1,26),_GenDvTrapsInfLastTrValueVlan_Type())
genDvTrapsInfLastTrValueVlan.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfLastTrValueVlan.setStatus(_G)
_GenDvTrapsInfLastTrStringMac_Type=OctetString
_GenDvTrapsInfLastTrStringMac_Object=MibScalar
genDvTrapsInfLastTrStringMac=_GenDvTrapsInfLastTrStringMac_Object((1,3,6,1,4,1,3709,2,4,1,27),_GenDvTrapsInfLastTrStringMac_Type())
genDvTrapsInfLastTrStringMac.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfLastTrStringMac.setStatus(_G)
_GenDvTrapsInfTable_Object=MibTable
genDvTrapsInfTable=_GenDvTrapsInfTable_Object((1,3,6,1,4,1,3709,2,4,1,100))
if mibBuilder.loadTexts:genDvTrapsInfTable.setStatus(_G)
_GenDvTrapsInfEntry_Object=MibTableRow
genDvTrapsInfEntry=_GenDvTrapsInfEntry_Object((1,3,6,1,4,1,3709,2,4,1,100,1))
genDvTrapsInfEntry.setIndexNames((0,_A,_T))
if mibBuilder.loadTexts:genDvTrapsInfEntry.setStatus(_G)
_GenDvTrapsInfIdxNo_Type=DmTrapIndex
_GenDvTrapsInfIdxNo_Object=MibTableColumn
genDvTrapsInfIdxNo=_GenDvTrapsInfIdxNo_Object((1,3,6,1,4,1,3709,2,4,1,100,1,1),_GenDvTrapsInfIdxNo_Type())
genDvTrapsInfIdxNo.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfIdxNo.setStatus(_G)
_GenDvTrapsInfObjectOid_Type=ObjectIdentifier
_GenDvTrapsInfObjectOid_Object=MibTableColumn
genDvTrapsInfObjectOid=_GenDvTrapsInfObjectOid_Object((1,3,6,1,4,1,3709,2,4,1,100,1,2),_GenDvTrapsInfObjectOid_Type())
genDvTrapsInfObjectOid.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfObjectOid.setStatus(_G)
_GenDvTrapsInfObjIntegerVal_Type=Integer32
_GenDvTrapsInfObjIntegerVal_Object=MibTableColumn
genDvTrapsInfObjIntegerVal=_GenDvTrapsInfObjIntegerVal_Object((1,3,6,1,4,1,3709,2,4,1,100,1,3),_GenDvTrapsInfObjIntegerVal_Type())
genDvTrapsInfObjIntegerVal.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfObjIntegerVal.setStatus(_G)
_GenDvTrapsInfObjTmTicksVal_Type=TimeTicks
_GenDvTrapsInfObjTmTicksVal_Object=MibTableColumn
genDvTrapsInfObjTmTicksVal=_GenDvTrapsInfObjTmTicksVal_Object((1,3,6,1,4,1,3709,2,4,1,100,1,4),_GenDvTrapsInfObjTmTicksVal_Type())
genDvTrapsInfObjTmTicksVal.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfObjTmTicksVal.setStatus(_G)
_GenDvTrapsInfObjStringVal_Type=OctetString
_GenDvTrapsInfObjStringVal_Object=MibTableColumn
genDvTrapsInfObjStringVal=_GenDvTrapsInfObjStringVal_Object((1,3,6,1,4,1,3709,2,4,1,100,1,5),_GenDvTrapsInfObjStringVal_Type())
genDvTrapsInfObjStringVal.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfObjStringVal.setStatus(_G)
_GenDvTrapsInfObjCounterVal_Type=Counter32
_GenDvTrapsInfObjCounterVal_Object=MibTableColumn
genDvTrapsInfObjCounterVal=_GenDvTrapsInfObjCounterVal_Object((1,3,6,1,4,1,3709,2,4,1,100,1,6),_GenDvTrapsInfObjCounterVal_Type())
genDvTrapsInfObjCounterVal.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfObjCounterVal.setStatus(_G)
_GenDvTrapsInfObjGaugeVal_Type=Gauge32
_GenDvTrapsInfObjGaugeVal_Object=MibTableColumn
genDvTrapsInfObjGaugeVal=_GenDvTrapsInfObjGaugeVal_Object((1,3,6,1,4,1,3709,2,4,1,100,1,7),_GenDvTrapsInfObjGaugeVal_Type())
genDvTrapsInfObjGaugeVal.setMaxAccess(_H)
if mibBuilder.loadTexts:genDvTrapsInfObjGaugeVal.setStatus(_G)
mtGenDvInfInsertedDevTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,1))
mtGenDvInfInsertedDevTrap.setObjects(*((_A,_B),(_A,_C),(_A,_U)))
if mibBuilder.loadTexts:mtGenDvInfInsertedDevTrap.setStatus('')
mtGenDvInfRemovedDevTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,2))
mtGenDvInfRemovedDevTrap.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:mtGenDvInfRemovedDevTrap.setStatus('')
mtGenDvStSnmpManagementStatusTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,51))
mtGenDvStSnmpManagementStatusTrap.setObjects((_A,_J))
if mibBuilder.loadTexts:mtGenDvStSnmpManagementStatusTrap.setStatus('')
mtGenDvStLatchedPossibleNewCfgTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,52))
mtGenDvStLatchedPossibleNewCfgTrap.setObjects((_A,_J))
if mibBuilder.loadTexts:mtGenDvStLatchedPossibleNewCfgTrap.setStatus('')
agFwRemDownTempMemTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,61))
agFwRemDownTempMemTrap.setObjects((_A,_J))
if mibBuilder.loadTexts:agFwRemDownTempMemTrap.setStatus('')
agFwRemDownActionStTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,62))
agFwRemDownActionStTrap.setObjects((_A,_J))
if mibBuilder.loadTexts:agFwRemDownActionStTrap.setStatus('')
mtGenDvInfNumPortsTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,100))
mtGenDvInfNumPortsTrap.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:mtGenDvInfNumPortsTrap.setStatus('')
mtGenDvInfTempRangeTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,601))
mtGenDvInfTempRangeTrap.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:mtGenDvInfTempRangeTrap.setStatus('')
mtGenDvInfFanFailTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,611))
mtGenDvInfFanFailTrap.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:mtGenDvInfFanFailTrap.setStatus('')
mtGenDvInfInsertedPortTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,701))
mtGenDvInfInsertedPortTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E)))
if mibBuilder.loadTexts:mtGenDvInfInsertedPortTrap.setStatus('')
mtGenDvInfRemovedPortTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,702))
mtGenDvInfRemovedPortTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E)))
if mibBuilder.loadTexts:mtGenDvInfRemovedPortTrap.setStatus('')
mtGenDvInfPortConfigModeTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,809))
mtGenDvInfPortConfigModeTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_J)))
if mibBuilder.loadTexts:mtGenDvInfPortConfigModeTrap.setStatus('')
mtGenDvInfPowerStatusTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,901))
mtGenDvInfPowerStatusTrap.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:mtGenDvInfPowerStatusTrap.setStatus('')
smtGenDvStLinkStatusTribE1PpiExcSlipTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,13018))
smtGenDvStLinkStatusTribE1PpiExcSlipTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_L),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStLinkStatusTribE1PpiExcSlipTrap.setStatus('')
smtGenDvStLinkStatusDigitalItfExcSlipTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,13204))
smtGenDvStLinkStatusDigitalItfExcSlipTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_L),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStLinkStatusDigitalItfExcSlipTrap.setStatus('')
smtGenDvStLinkStatusDslExcSlipTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,13304))
smtGenDvStLinkStatusDslExcSlipTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_L),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStLinkStatusDslExcSlipTrap.setStatus('')
smtGenDvStPhSlotStFailFanFailTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,16002))
smtGenDvStPhSlotStFailFanFailTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStFailFanFailTrap.setStatus('')
smtGenDvStPhSlotStFailFanMismatchTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,16007))
smtGenDvStPhSlotStFailFanMismatchTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStFailFanMismatchTrap.setStatus('')
smtGenDvStPhSlotStFailPwrSuppFailTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,16102))
smtGenDvStPhSlotStFailPwrSuppFailTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStFailPwrSuppFailTrap.setStatus('')
smtGenDvStPhSlotStFailPwrRedundancyFailTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,16103))
smtGenDvStPhSlotStFailPwrRedundancyFailTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStFailPwrRedundancyFailTrap.setStatus('')
smtGenDvStPhSlotStFailPwrOverloadTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,16104))
smtGenDvStPhSlotStFailPwrOverloadTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStFailPwrOverloadTrap.setStatus('')
smtGenDvStPhSlotStFailFuseFailTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,16105))
smtGenDvStPhSlotStFailFuseFailTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStFailFuseFailTrap.setStatus('')
smtGenDvEthernetOverloadTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,16111))
smtGenDvEthernetOverloadTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvEthernetOverloadTrap.setStatus('')
smtGenDvStPhSlotStFailAggFailTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,16122))
smtGenDvStPhSlotStFailAggFailTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStFailAggFailTrap.setStatus('')
smtGenDvStPhSlotOperStAggPrevMaintReqTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,16126))
smtGenDvStPhSlotOperStAggPrevMaintReqTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotOperStAggPrevMaintReqTrap.setStatus('')
smtGenDvStPhSlotStFailTribFailTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,16132))
smtGenDvStPhSlotStFailTribFailTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStFailTribFailTrap.setStatus('')
smtGenDvStPhSlotPresenceTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,17001))
smtGenDvStPhSlotPresenceTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_L),(_A,_N)))
if mibBuilder.loadTexts:smtGenDvStPhSlotPresenceTrap.setStatus('')
smtGenDvStCurrentDevCpuFWUpdateFailure=NotificationType((1,3,6,1,4,1,3709,2,4,0,17007))
smtGenDvStCurrentDevCpuFWUpdateFailure.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:smtGenDvStCurrentDevCpuFWUpdateFailure.setStatus('')
smtGenDvStCurrentDevCpuFWInvalidInactive=NotificationType((1,3,6,1,4,1,3709,2,4,0,17009))
smtGenDvStCurrentDevCpuFWInvalidInactive.setObjects(*((_A,_B),(_A,_C),(_A,_J)))
if mibBuilder.loadTexts:smtGenDvStCurrentDevCpuFWInvalidInactive.setStatus('')
smtGenDvStCurrentDevCpuFWImageTemporary=NotificationType((1,3,6,1,4,1,3709,2,4,0,17010))
smtGenDvStCurrentDevCpuFWImageTemporary.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:smtGenDvStCurrentDevCpuFWImageTemporary.setStatus('')
smtGenDvStCurrentDevCpuFWUpdateBeginning=NotificationType((1,3,6,1,4,1,3709,2,4,0,17011))
smtGenDvStCurrentDevCpuFWUpdateBeginning.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:smtGenDvStCurrentDevCpuFWUpdateBeginning.setStatus('')
smtGenDvStPhSlotStFailCpuFailTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,17012))
smtGenDvStPhSlotStFailCpuFailTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStFailCpuFailTrap.setStatus('')
smtGenDvStPhSlotStFailCriticalTempTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,17013))
smtGenDvStPhSlotStFailCriticalTempTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStFailCriticalTempTrap.setStatus('')
smtsdhStCurrentDevCpuFWUpdateReady=NotificationType((1,3,6,1,4,1,3709,2,4,0,17015))
smtsdhStCurrentDevCpuFWUpdateReady.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:smtsdhStCurrentDevCpuFWUpdateReady.setStatus('')
smtsdhStCurrentDevFWVersionChanged=NotificationType((1,3,6,1,4,1,3709,2,4,0,17020))
smtsdhStCurrentDevFWVersionChanged.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_N)))
if mibBuilder.loadTexts:smtsdhStCurrentDevFWVersionChanged.setStatus('')
smtGenDvStPhSlotStCardRemovedTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,17022))
smtGenDvStPhSlotStCardRemovedTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStCardRemovedTrap.setStatus('')
smtGenDvStPhSlotStCardMismatchTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,17023))
smtGenDvStPhSlotStCardMismatchTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStCardMismatchTrap.setStatus('')
smtGenDvStPhSlotStCardDisabledTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,17024))
smtGenDvStPhSlotStCardDisabledTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStCardDisabledTrap.setStatus('')
smtGenDvStPhSlotStUnsupportedCardTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,17025))
smtGenDvStPhSlotStUnsupportedCardTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStUnsupportedCardTrap.setStatus('')
smtGenDvStPhSlotStCardConfigMismatch=NotificationType((1,3,6,1,4,1,3709,2,4,0,17026))
smtGenDvStPhSlotStCardConfigMismatch.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStCardConfigMismatch.setStatus('')
smtGenDvStPhSlotStCardFail=NotificationType((1,3,6,1,4,1,3709,2,4,0,17027))
smtGenDvStPhSlotStCardFail.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStCardFail.setStatus('')
smtGenDvStPhSlotStCardFwMismatch=NotificationType((1,3,6,1,4,1,3709,2,4,0,17028))
smtGenDvStPhSlotStCardFwMismatch.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStCardFwMismatch.setStatus('')
smtGenDvStPhSlotStCardCriticalTemp=NotificationType((1,3,6,1,4,1,3709,2,4,0,17029))
smtGenDvStPhSlotStCardCriticalTemp.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStCardCriticalTemp.setStatus('')
smtGenDvStPhSlotStCardHwConfigFail=NotificationType((1,3,6,1,4,1,3709,2,4,0,17030))
smtGenDvStPhSlotStCardHwConfigFail.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStCardHwConfigFail.setStatus('')
smtGenDvStPhSlotStCardHwProtected=NotificationType((1,3,6,1,4,1,3709,2,4,0,17031))
smtGenDvStPhSlotStCardHwProtected.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStCardHwProtected.setStatus('')
smtGenDvStPhSlotStCardVendorMismatch=NotificationType((1,3,6,1,4,1,3709,2,4,0,17032))
smtGenDvStPhSlotStCardVendorMismatch.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_I),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStPhSlotStCardVendorMismatch.setStatus('')
smtGenDvStLastChangeTmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,17151))
smtGenDvStLastChangeTmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_L),(_A,_V)))
if mibBuilder.loadTexts:smtGenDvStLastChangeTmTrap.setStatus('')
smtGenDvStLastActivationTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,17171))
smtGenDvStLastActivationTrap.setObjects(*((_A,_B),(_A,_C),(_A,_O)))
if mibBuilder.loadTexts:smtGenDvStLastActivationTrap.setStatus('')
smtGenDvStUserListChangedTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,17172))
smtGenDvStUserListChangedTrap.setObjects(*((_A,_B),(_A,_C),(_A,_L),(_A,_N)))
if mibBuilder.loadTexts:smtGenDvStUserListChangedTrap.setStatus('')
smtGenDvStCpuActiveTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,17191))
smtGenDvStCpuActiveTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D)))
if mibBuilder.loadTexts:smtGenDvStCpuActiveTrap.setStatus('')
smtGenDvStCpuColdStartTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,17192))
smtGenDvStCpuColdStartTrap.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:smtGenDvStCpuColdStartTrap.setStatus('')
smtGenDvStCpuWarmStartTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,17193))
smtGenDvStCpuWarmStartTrap.setObjects(*((_A,_B),(_A,_C)))
if mibBuilder.loadTexts:smtGenDvStCpuWarmStartTrap.setStatus('')
smtGenDvInfInsertedDevTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,20001))
smtGenDvInfInsertedDevTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_L),(_A,_Q)))
if mibBuilder.loadTexts:smtGenDvInfInsertedDevTrap.setStatus('')
smtGenDvInfRemovedDevTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,20002))
smtGenDvInfRemovedDevTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_L),(_A,_Q)))
if mibBuilder.loadTexts:smtGenDvInfRemovedDevTrap.setStatus('')
sFPmismatchAlarmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,21003))
sFPmismatchAlarmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_F)))
if mibBuilder.loadTexts:sFPmismatchAlarmTrap.setStatus('')
sFPvendorMismatchAlarmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,21007))
sFPvendorMismatchAlarmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_F)))
if mibBuilder.loadTexts:sFPvendorMismatchAlarmTrap.setStatus('')
configTemporaryAlarmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,21101))
configTemporaryAlarmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_F)))
if mibBuilder.loadTexts:configTemporaryAlarmTrap.setStatus('')
edfaFailureAlarmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,22014))
edfaFailureAlarmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_F)))
if mibBuilder.loadTexts:edfaFailureAlarmTrap.setStatus('')
edfaLowInputPowerFailureAlarmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,22015))
edfaLowInputPowerFailureAlarmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_F)))
if mibBuilder.loadTexts:edfaLowInputPowerFailureAlarmTrap.setStatus('')
icad2Subdev1MismatchAlarmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,22101))
icad2Subdev1MismatchAlarmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_F)))
if mibBuilder.loadTexts:icad2Subdev1MismatchAlarmTrap.setStatus('')
icad2Subdev2MismatchAlarmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,22102))
icad2Subdev2MismatchAlarmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_F)))
if mibBuilder.loadTexts:icad2Subdev2MismatchAlarmTrap.setStatus('')
icad2Subdev1NotPresentAlarmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,22103))
icad2Subdev1NotPresentAlarmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_F)))
if mibBuilder.loadTexts:icad2Subdev1NotPresentAlarmTrap.setStatus('')
icad2Subdev2NotPresentAlarmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,22104))
icad2Subdev2NotPresentAlarmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_F)))
if mibBuilder.loadTexts:icad2Subdev2NotPresentAlarmTrap.setStatus('')
icad2Subdev1FailureAlarmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,22105))
icad2Subdev1FailureAlarmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_F)))
if mibBuilder.loadTexts:icad2Subdev1FailureAlarmTrap.setStatus('')
icad2Subdev2FailureAlarmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,22106))
icad2Subdev2FailureAlarmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_F)))
if mibBuilder.loadTexts:icad2Subdev2FailureAlarmTrap.setStatus('')
smtGenDvStLostComWithItfTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,30000))
smtGenDvStLostComWithItfTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_K),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStLostComWithItfTrap.setStatus('')
smtGenDvStLoSTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,30001))
smtGenDvStLoSTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_K),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStLoSTrap.setStatus('')
smtGenDvStAiSTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,30002))
smtGenDvStAiSTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_K),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStAiSTrap.setStatus('')
smtGenDvStLofTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,30003))
smtGenDvStLofTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_K),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStLofTrap.setStatus('')
smtGenDvStRalmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,30004))
smtGenDvStRalmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_K),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStRalmTrap.setStatus('')
smtGenDvStMfaTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,30005))
smtGenDvStMfaTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_K),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStMfaTrap.setStatus('')
smtGenDvStLomTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,30006))
smtGenDvStLomTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_K),(_A,_F)))
if mibBuilder.loadTexts:smtGenDvStLomTrap.setStatus('')
smtGenDvStCpuLoadThresholdTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,30007))
smtGenDvStCpuLoadThresholdTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_K),(_A,_P)))
if mibBuilder.loadTexts:smtGenDvStCpuLoadThresholdTrap.setStatus('')
smtGenDvStDiskUseThresholdTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,30008))
smtGenDvStDiskUseThresholdTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_K),(_A,_P)))
if mibBuilder.loadTexts:smtGenDvStDiskUseThresholdTrap.setStatus('')
smtGenDvStMemoryUseThresholdTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,30009))
smtGenDvStMemoryUseThresholdTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_K),(_A,_P)))
if mibBuilder.loadTexts:smtGenDvStMemoryUseThresholdTrap.setStatus('')
stMacSpoofingTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,30010))
stMacSpoofingTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_W),(_A,_X)))
if mibBuilder.loadTexts:stMacSpoofingTrap.setStatus('')
tLoginFailTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,40001))
tLoginFailTrap.setObjects(*((_A,_B),(_A,_C),(_A,_O)))
if mibBuilder.loadTexts:tLoginFailTrap.setStatus('')
tLoginSucessTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,40002))
tLoginSucessTrap.setObjects(*((_A,_B),(_A,_C),(_A,_O)))
if mibBuilder.loadTexts:tLoginSucessTrap.setStatus('')
tTxFaultTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,40003))
tTxFaultTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E),(_A,_F)))
if mibBuilder.loadTexts:tTxFaultTrap.setStatus('')
cpuFWMismatchAlarmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,40004))
cpuFWMismatchAlarmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_F)))
if mibBuilder.loadTexts:cpuFWMismatchAlarmTrap.setStatus('')
cardFWMismatchAlarmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,40005))
cardFWMismatchAlarmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_F)))
if mibBuilder.loadTexts:cardFWMismatchAlarmTrap.setStatus('')
fwLoadByTftpAlarmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,40006))
fwLoadByTftpAlarmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_F)))
if mibBuilder.loadTexts:fwLoadByTftpAlarmTrap.setStatus('')
trapLicenseWillExpire=NotificationType((1,3,6,1,4,1,3709,2,4,0,40007))
trapLicenseWillExpire.setObjects(*((_A,_B),(_A,_C),(_A,_R),(_A,_Y)))
if mibBuilder.loadTexts:trapLicenseWillExpire.setStatus('')
trapLicenseExpired=NotificationType((1,3,6,1,4,1,3709,2,4,0,40008))
trapLicenseExpired.setObjects(*((_A,_B),(_A,_C),(_A,_R)))
if mibBuilder.loadTexts:trapLicenseExpired.setStatus('')
uBootUpdateAvailAlarmTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,40009))
uBootUpdateAvailAlarmTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_F)))
if mibBuilder.loadTexts:uBootUpdateAvailAlarmTrap.setStatus('')
swNonHomologSfpTrap=NotificationType((1,3,6,1,4,1,3709,2,4,0,40010))
swNonHomologSfpTrap.setObjects(*((_A,_B),(_A,_C),(_A,_D),(_A,_E)))
if mibBuilder.loadTexts:swNonHomologSfpTrap.setStatus('')
mibBuilder.exportSymbols(_A,**{_S:DisplayString,'DmDevIndex':DmDevIndex,'DmDevLocalIndex':DmDevLocalIndex,'DmSlotIndex':DmSlotIndex,'DmPortIndex':DmPortIndex,'DmTrapIndex':DmTrapIndex,'datacomGenDvTrapsMIBModule':datacomGenDvTrapsMIBModule,'dmGenDvTrapsMIB':dmGenDvTrapsMIB,'mtGenDvInfInsertedDevTrap':mtGenDvInfInsertedDevTrap,'mtGenDvInfRemovedDevTrap':mtGenDvInfRemovedDevTrap,'mtGenDvStSnmpManagementStatusTrap':mtGenDvStSnmpManagementStatusTrap,'mtGenDvStLatchedPossibleNewCfgTrap':mtGenDvStLatchedPossibleNewCfgTrap,'agFwRemDownTempMemTrap':agFwRemDownTempMemTrap,'agFwRemDownActionStTrap':agFwRemDownActionStTrap,'mtGenDvInfNumPortsTrap':mtGenDvInfNumPortsTrap,'mtGenDvInfTempRangeTrap':mtGenDvInfTempRangeTrap,'mtGenDvInfFanFailTrap':mtGenDvInfFanFailTrap,'mtGenDvInfInsertedPortTrap':mtGenDvInfInsertedPortTrap,'mtGenDvInfRemovedPortTrap':mtGenDvInfRemovedPortTrap,'mtGenDvInfPortConfigModeTrap':mtGenDvInfPortConfigModeTrap,'mtGenDvInfPowerStatusTrap':mtGenDvInfPowerStatusTrap,'smtGenDvStLinkStatusTribE1PpiExcSlipTrap':smtGenDvStLinkStatusTribE1PpiExcSlipTrap,'smtGenDvStLinkStatusDigitalItfExcSlipTrap':smtGenDvStLinkStatusDigitalItfExcSlipTrap,'smtGenDvStLinkStatusDslExcSlipTrap':smtGenDvStLinkStatusDslExcSlipTrap,'smtGenDvStPhSlotStFailFanFailTrap':smtGenDvStPhSlotStFailFanFailTrap,'smtGenDvStPhSlotStFailFanMismatchTrap':smtGenDvStPhSlotStFailFanMismatchTrap,'smtGenDvStPhSlotStFailPwrSuppFailTrap':smtGenDvStPhSlotStFailPwrSuppFailTrap,'smtGenDvStPhSlotStFailPwrRedundancyFailTrap':smtGenDvStPhSlotStFailPwrRedundancyFailTrap,'smtGenDvStPhSlotStFailPwrOverloadTrap':smtGenDvStPhSlotStFailPwrOverloadTrap,'smtGenDvStPhSlotStFailFuseFailTrap':smtGenDvStPhSlotStFailFuseFailTrap,'smtGenDvEthernetOverloadTrap':smtGenDvEthernetOverloadTrap,'smtGenDvStPhSlotStFailAggFailTrap':smtGenDvStPhSlotStFailAggFailTrap,'smtGenDvStPhSlotOperStAggPrevMaintReqTrap':smtGenDvStPhSlotOperStAggPrevMaintReqTrap,'smtGenDvStPhSlotStFailTribFailTrap':smtGenDvStPhSlotStFailTribFailTrap,'smtGenDvStPhSlotPresenceTrap':smtGenDvStPhSlotPresenceTrap,'smtGenDvStCurrentDevCpuFWUpdateFailure':smtGenDvStCurrentDevCpuFWUpdateFailure,'smtGenDvStCurrentDevCpuFWInvalidInactive':smtGenDvStCurrentDevCpuFWInvalidInactive,'smtGenDvStCurrentDevCpuFWImageTemporary':smtGenDvStCurrentDevCpuFWImageTemporary,'smtGenDvStCurrentDevCpuFWUpdateBeginning':smtGenDvStCurrentDevCpuFWUpdateBeginning,'smtGenDvStPhSlotStFailCpuFailTrap':smtGenDvStPhSlotStFailCpuFailTrap,'smtGenDvStPhSlotStFailCriticalTempTrap':smtGenDvStPhSlotStFailCriticalTempTrap,'smtsdhStCurrentDevCpuFWUpdateReady':smtsdhStCurrentDevCpuFWUpdateReady,'smtsdhStCurrentDevFWVersionChanged':smtsdhStCurrentDevFWVersionChanged,'smtGenDvStPhSlotStCardRemovedTrap':smtGenDvStPhSlotStCardRemovedTrap,'smtGenDvStPhSlotStCardMismatchTrap':smtGenDvStPhSlotStCardMismatchTrap,'smtGenDvStPhSlotStCardDisabledTrap':smtGenDvStPhSlotStCardDisabledTrap,'smtGenDvStPhSlotStUnsupportedCardTrap':smtGenDvStPhSlotStUnsupportedCardTrap,'smtGenDvStPhSlotStCardConfigMismatch':smtGenDvStPhSlotStCardConfigMismatch,'smtGenDvStPhSlotStCardFail':smtGenDvStPhSlotStCardFail,'smtGenDvStPhSlotStCardFwMismatch':smtGenDvStPhSlotStCardFwMismatch,'smtGenDvStPhSlotStCardCriticalTemp':smtGenDvStPhSlotStCardCriticalTemp,'smtGenDvStPhSlotStCardHwConfigFail':smtGenDvStPhSlotStCardHwConfigFail,'smtGenDvStPhSlotStCardHwProtected':smtGenDvStPhSlotStCardHwProtected,'smtGenDvStPhSlotStCardVendorMismatch':smtGenDvStPhSlotStCardVendorMismatch,'smtGenDvStLastChangeTmTrap':smtGenDvStLastChangeTmTrap,'smtGenDvStLastActivationTrap':smtGenDvStLastActivationTrap,'smtGenDvStUserListChangedTrap':smtGenDvStUserListChangedTrap,'smtGenDvStCpuActiveTrap':smtGenDvStCpuActiveTrap,'smtGenDvStCpuColdStartTrap':smtGenDvStCpuColdStartTrap,'smtGenDvStCpuWarmStartTrap':smtGenDvStCpuWarmStartTrap,'smtGenDvInfInsertedDevTrap':smtGenDvInfInsertedDevTrap,'smtGenDvInfRemovedDevTrap':smtGenDvInfRemovedDevTrap,'sFPmismatchAlarmTrap':sFPmismatchAlarmTrap,'sFPvendorMismatchAlarmTrap':sFPvendorMismatchAlarmTrap,'configTemporaryAlarmTrap':configTemporaryAlarmTrap,'edfaFailureAlarmTrap':edfaFailureAlarmTrap,'edfaLowInputPowerFailureAlarmTrap':edfaLowInputPowerFailureAlarmTrap,'icad2Subdev1MismatchAlarmTrap':icad2Subdev1MismatchAlarmTrap,'icad2Subdev2MismatchAlarmTrap':icad2Subdev2MismatchAlarmTrap,'icad2Subdev1NotPresentAlarmTrap':icad2Subdev1NotPresentAlarmTrap,'icad2Subdev2NotPresentAlarmTrap':icad2Subdev2NotPresentAlarmTrap,'icad2Subdev1FailureAlarmTrap':icad2Subdev1FailureAlarmTrap,'icad2Subdev2FailureAlarmTrap':icad2Subdev2FailureAlarmTrap,'smtGenDvStLostComWithItfTrap':smtGenDvStLostComWithItfTrap,'smtGenDvStLoSTrap':smtGenDvStLoSTrap,'smtGenDvStAiSTrap':smtGenDvStAiSTrap,'smtGenDvStLofTrap':smtGenDvStLofTrap,'smtGenDvStRalmTrap':smtGenDvStRalmTrap,'smtGenDvStMfaTrap':smtGenDvStMfaTrap,'smtGenDvStLomTrap':smtGenDvStLomTrap,'smtGenDvStCpuLoadThresholdTrap':smtGenDvStCpuLoadThresholdTrap,'smtGenDvStDiskUseThresholdTrap':smtGenDvStDiskUseThresholdTrap,'smtGenDvStMemoryUseThresholdTrap':smtGenDvStMemoryUseThresholdTrap,'stMacSpoofingTrap':stMacSpoofingTrap,'tLoginFailTrap':tLoginFailTrap,'tLoginSucessTrap':tLoginSucessTrap,'tTxFaultTrap':tTxFaultTrap,'cpuFWMismatchAlarmTrap':cpuFWMismatchAlarmTrap,'cardFWMismatchAlarmTrap':cardFWMismatchAlarmTrap,'fwLoadByTftpAlarmTrap':fwLoadByTftpAlarmTrap,'trapLicenseWillExpire':trapLicenseWillExpire,'trapLicenseExpired':trapLicenseExpired,'uBootUpdateAvailAlarmTrap':uBootUpdateAvailAlarmTrap,'swNonHomologSfpTrap':swNonHomologSfpTrap,'dmGenDvTrapsInf':dmGenDvTrapsInf,'genDvTrapsInfMibVersion':genDvTrapsInfMibVersion,_B:genDvTrapsInfLastTrDevNo,_C:genDvTrapsInfLastTrDevLocalId,_D:genDvTrapsInfLastTrSlotNo,_E:genDvTrapsInfLastTrPortNo,_J:genDvTrapsInfLastTrValue,'genDvTrapsInfLastTrType':genDvTrapsInfLastTrType,_K:genDvTrapsInfLastTrTimeStamp,_U:genDvTrapsInfLastTrDeviceProduct,_I:genDvTrapsInfLastTrAlarmId,_F:genDvTrapsInfLastTrAlarmVal,_O:genDvTrapsInfLastTrUserName,_P:genDvTrapsInfLastTrAlarmSeverityVal,'genDvTrapsInfLastTrChannel':genDvTrapsInfLastTrChannel,_R:genDvTrapLicenseSN,_Y:genDvTrapLicenseExpire,_W:genDvTrapsInfLastTrValueVlan,_X:genDvTrapsInfLastTrStringMac,'genDvTrapsInfTable':genDvTrapsInfTable,'genDvTrapsInfEntry':genDvTrapsInfEntry,_T:genDvTrapsInfIdxNo,_L:genDvTrapsInfObjectOid,_N:genDvTrapsInfObjIntegerVal,'genDvTrapsInfObjTmTicksVal':genDvTrapsInfObjTmTicksVal,_Q:genDvTrapsInfObjStringVal,'genDvTrapsInfObjCounterVal':genDvTrapsInfObjCounterVal,_V:genDvTrapsInfObjGaugeVal})