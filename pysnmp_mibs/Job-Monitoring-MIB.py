# PySNMP SMI module. Autogenerated from smidump -f python Job-Monitoring-MIB
# by libsmi2pysnmp-0.0.3-alpha at Wed Nov 10 12:10:23 2004,
# Python version (2, 2, 1, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pysnmp.asn1 import subtypes

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibVariable, MibTable, MibTableRow, MibTableColumn, TimeTicks, enterprises, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibVariable", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "enterprises")
( TextualConvention, ) = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention")

# Types

class JmAttributeTypeTC(Integer):
    subtypeConstraints = Integer.subtypeConstraints + ( subtypes.SingleValueConstraint(90,51,74,175,115,52,93,22,6,94,36,54,38,195,23,95,70,92,170,171,151,114,8,55,132,1,173,130,150,7,172,113,75,76,174,9,192,190,111,25,24,91,29,34,73,50,152,193,194,31,96,32,56,30,112,4,3,72,5,110,21,35,53,20,77,28,71,131,97,33,27,26,191,37,), )
    namedValues = Integer.namedValues.clone(("other", 1), ("impressionsSpooled", 110), ("impressionsSentToDevice", 111), ("impressionsInterpreted", 112), ("impressionsCompletedCurrentCopy", 113), ("fullColorImpressionsCompleted", 114), ("highlightColorImpressionsCompleted", 115), ("pagesRequested", 130), ("pagesCompleted", 131), ("pagesCompletedCurrentCopy", 132), ("sheetsRequested", 150), ("sheetsCompleted", 151), ("sheetsCompletedCurrentCopy", 152), ("mediumRequested", 170), ("mediumConsumed", 171), ("colorantRequested", 172), ("colorantConsumed", 173), ("mediumTypeConsumed", 174), ("mediumSizeConsumed", 175), ("jobSubmissionToServerTime", 190), ("jobSubmissionTime", 191), ("jobStartedBeingHeldTime", 192), ("jobStartedProcessingTime", 193), ("jobCompletionTime", 194), ("jobProcessingCPUTime", 195), ("jobURI", 20), ("jobAccountName", 21), ("serverAssignedJobName", 22), ("jobName", 23), ("jobServiceTypes", 24), ("jobSourceChannelIndex", 25), ("jobSourcePlatformType", 26), ("submittingServerName", 27), ("submittingApplicationName", 28), ("jobOriginatingHost", 29), ("jobStateReasons2", 3), ("deviceNameRequested", 30), ("queueNameRequested", 31), ("physicalDevice", 32), ("numberOfDocuments", 33), ("fileName", 34), ("documentName", 35), ("jobComment", 36), ("documentFormatIndex", 37), ("documentFormat", 38), ("jobStateReasons3", 4), ("jobStateReasons4", 5), ("jobPriority", 50), ("jobProcessAfterDateAndTime", 51), ("jobHold", 52), ("jobHoldUntil", 53), ("outputBin", 54), ("sides", 55), ("finishing", 56), ("processingMessage", 6), ("processingMessageNaturalLangTag", 7), ("printQualityRequested", 70), ("printQualityUsed", 71), ("printerResolutionRequested", 72), ("printerResolutionUsed", 73), ("tonerEcomonyRequested", 74), ("tonerEcomonyUsed", 75), ("tonerDensityRequested", 76), ("tonerDensityUsed", 77), ("jobCodedCharSet", 8), ("jobNaturalLanguageTag", 9), ("jobCopiesRequested", 90), ("jobCopiesCompleted", 91), ("documentCopiesRequested", 92), ("documentCopiesCompleted", 93), ("jobKOctetsTransferred", 94), ("sheetCompletedCopyNumber", 95), ("sheetCompletedDocumentNumber", 96), ("jobCollationType", 97), )
    pass

class JmBooleanTC(Integer):
    subtypeConstraints = Integer.subtypeConstraints + ( subtypes.SingleValueConstraint(3,2,4,), )
    namedValues = Integer.namedValues.clone(("unknown", 2), ("false", 3), ("true", 4), )
    pass

class JmFinishingTC(Integer):
    subtypeConstraints = Integer.subtypeConstraints + ( subtypes.SingleValueConstraint(3,1,7,2,6,4,5,), )
    namedValues = Integer.namedValues.clone(("other", 1), ("unknown", 2), ("none", 3), ("staple", 4), ("punch", 5), ("cover", 6), ("bind", 7), )
    pass

class JmJobCollationTypeTC(Integer):
    subtypeConstraints = Integer.subtypeConstraints + ( subtypes.SingleValueConstraint(1,4,3,5,2,), )
    namedValues = Integer.namedValues.clone(("other", 1), ("unknown", 2), ("uncollatedSheets", 3), ("collatedDocuments", 4), ("uncollatedDocuments", 5), )
    pass

class JmJobServiceTypesTC(Integer32):
    subtypeConstraints = Integer32.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 2147483647L), )
    pass

class JmJobSourcePlatformTypeTC(Integer):
    subtypeConstraints = Integer.subtypeConstraints + ( subtypes.SingleValueConstraint(10,9,12,2,4,11,5,1,3,7,6,8,), )
    namedValues = Integer.namedValues.clone(("other", 1), ("sptVMS", 10), ("sptWindows", 11), ("sptNetWare", 12), ("unknown", 2), ("sptUNIX", 3), ("sptOS2", 4), ("sptPCDOS", 5), ("sptNT", 6), ("sptMVS", 7), ("sptVM", 8), ("sptOS400", 9), )
    pass

class JmJobStateReasons1TC(Integer32):
    subtypeConstraints = Integer32.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 2147483647L), )
    pass

class JmJobStateReasons2TC(Integer32):
    subtypeConstraints = Integer32.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 2147483647L), )
    pass

class JmJobStateReasons3TC(Integer32):
    subtypeConstraints = Integer32.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 2147483647L), )
    pass

class JmJobStateReasons4TC(Integer32):
    subtypeConstraints = Integer32.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 2147483647L), )
    pass

class JmJobStateTC(Integer):
    subtypeConstraints = Integer.subtypeConstraints + ( subtypes.SingleValueConstraint(6,9,5,2,7,8,4,3,), )
    namedValues = Integer.namedValues.clone(("unknown", 2), ("pending", 3), ("pendingHeld", 4), ("processing", 5), ("processingStopped", 6), ("canceled", 7), ("aborted", 8), ("completed", 9), )
    pass

class JmJobStringTC(OctetString):
    subtypeConstraints = OctetString.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 63), )
    pass

class JmJobSubmissionIDTypeTC(OctetString):
    subtypeConstraints = OctetString.subtypeConstraints + ( subtypes.ValueRangeConstraint(1, 1), )
    pass

class JmMediumTypeTC(Integer):
    subtypeConstraints = Integer.subtypeConstraints + ( subtypes.SingleValueConstraint(12,13,2,11,5,9,8,1,6,4,3,10,7,), )
    namedValues = Integer.namedValues.clone(("other", 1), ("tabStock", 10), ("multiPartForm", 11), ("labels", 12), ("multiLayer", 13), ("unknown", 2), ("stationery", 3), ("transparency", 4), ("envelope", 5), ("envelopePlain", 6), ("envelopeWindow", 7), ("continuousLong", 8), ("continuousShort", 9), )
    pass

class JmNaturalLanguageTagTC(OctetString):
    subtypeConstraints = OctetString.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 63), )
    pass

class JmPrintQualityTC(Integer):
    subtypeConstraints = Integer.subtypeConstraints + ( subtypes.SingleValueConstraint(5,1,3,4,2,), )
    namedValues = Integer.namedValues.clone(("other", 1), ("unknown", 2), ("draft", 3), ("normal", 4), ("high", 5), )
    pass

class JmPrinterResolutionTC(OctetString):
    subtypeConstraints = OctetString.subtypeConstraints + ( subtypes.ValueRangeConstraint(9, 9), )
    pass

class JmTimeStampTC(Integer32):
    subtypeConstraints = Integer32.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 2147483647L), )
    pass

class JmTonerEconomyTC(Integer):
    subtypeConstraints = Integer.subtypeConstraints + ( subtypes.SingleValueConstraint(4,3,2,), )
    namedValues = Integer.namedValues.clone(("unknown", 2), ("off", 3), ("on", 4), )
    pass

class JmUTF8StringTC(TextualConvention, OctetString):
    subtypeConstraints = OctetString.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 63), )
    pass


# Objects

pwg = MibIdentifier((1, 3, 6, 1, 4, 1, 2699))
mibs = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1))
jobmonMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 2699, 1, 1))
jobmonMIBObjects = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1))
jmGeneral = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 1))
jmGeneralTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 1, 1))
jmGeneralEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 1, 1, 1)).setIndexNames((0, "Job-Monitoring-MIB", "jmGeneralJobSetIndex"))
jmGeneralJobSetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 1, 1, 1, 1)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(1, 32767))).setMaxAccess("noaccess"))
jmGeneralNumberOfActiveJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 1, 1, 1, 2)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(0, 2147483647L)).set(0)).setMaxAccess("readonly"))
jmGeneralOldestActiveJobIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 1, 1, 1, 3)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(0, 2147483647L)).set(0)).setMaxAccess("readonly"))
jmGeneralNewestActiveJobIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 1, 1, 1, 4)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(0, 2147483647L)).set(0)).setMaxAccess("readonly"))
jmGeneralJobPersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 1, 1, 1, 5)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(15, 2147483647L)).set(60)).setMaxAccess("readonly"))
jmGeneralAttributePersistence = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 1, 1, 1, 6)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(15, 2147483647L)).set(60)).setMaxAccess("readonly"))
jmGeneralJobSetName = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 1, 1, 1, 7)).setColumnInitializer(MibVariable((), JmUTF8StringTC().addConstraints(subtypes.ValueRangeConstraint(0, 63)).set('')).setMaxAccess("readonly"))
jmJobID = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 2))
jmJobIDTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 2, 1))
jmJobIDEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 2, 1, 1)).setIndexNames((0, "Job-Monitoring-MIB", "jmJobSubmissionID"))
jmJobSubmissionID = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 2, 1, 1, 1)).setColumnInitializer(MibVariable((), OctetString().addConstraints(subtypes.ValueRangeConstraint(48, 48))).setMaxAccess("noaccess"))
jmJobIDJobSetIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 2, 1, 1, 2)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(0, 32767)).set(0)).setMaxAccess("readonly"))
jmJobIDJobIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 2, 1, 1, 3)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(0, 2147483647L)).set(0)).setMaxAccess("readonly"))
jmJob = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 3))
jmJobTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 3, 1))
jmJobEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 3, 1, 1)).setIndexNames((0, "Job-Monitoring-MIB", "jmGeneralJobSetIndex"), (0, "Job-Monitoring-MIB", "jmJobIndex"))
jmJobIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 3, 1, 1, 1)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(1, 2147483647L))).setMaxAccess("noaccess"))
jmJobState = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 3, 1, 1, 2)).setColumnInitializer(MibVariable((), JmJobStateTC()).setMaxAccess("readonly"))
jmJobStateReasons1 = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 3, 1, 1, 3)).setColumnInitializer(MibVariable((), JmJobStateReasons1TC()).setMaxAccess("readonly"))
jmNumberOfInterveningJobs = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 3, 1, 1, 4)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(-2, 2147483647L)).set(0)).setMaxAccess("readonly"))
jmJobKOctetsPerCopyRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 3, 1, 1, 5)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(-2, 2147483647L)).set(-2)).setMaxAccess("readonly"))
jmJobKOctetsProcessed = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 3, 1, 1, 6)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(-2, 2147483647L)).set(0)).setMaxAccess("readonly"))
jmJobImpressionsPerCopyRequested = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 3, 1, 1, 7)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(-2, 2147483647L)).set(-2)).setMaxAccess("readonly"))
jmJobImpressionsCompleted = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 3, 1, 1, 8)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(-2, 2147483647L)).set(0)).setMaxAccess("readonly"))
jmJobOwner = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 3, 1, 1, 9)).setColumnInitializer(MibVariable((), JmJobStringTC().addConstraints(subtypes.ValueRangeConstraint(0, 63)).set('')).setMaxAccess("readonly"))
jmAttribute = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 4))
jmAttributeTable = MibTable((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 4, 1))
jmAttributeEntry = MibTableRow((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 4, 1, 1)).setIndexNames((0, "Job-Monitoring-MIB", "jmGeneralJobSetIndex"), (0, "Job-Monitoring-MIB", "jmJobIndex"), (0, "Job-Monitoring-MIB", "jmAttributeTypeIndex"), (0, "Job-Monitoring-MIB", "jmAttributeInstanceIndex"))
jmAttributeTypeIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 4, 1, 1, 1)).setColumnInitializer(MibVariable((), JmAttributeTypeTC()).setMaxAccess("noaccess"))
jmAttributeInstanceIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 4, 1, 1, 2)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(1, 32767))).setMaxAccess("noaccess"))
jmAttributeValueAsInteger = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 4, 1, 1, 3)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(-2, 2147483647L)).set(-2)).setMaxAccess("readonly"))
jmAttributeValueAsOctets = MibTableColumn((1, 3, 6, 1, 4, 1, 2699, 1, 1, 1, 4, 1, 1, 4)).setColumnInitializer(MibVariable((), OctetString().addConstraints(subtypes.ValueRangeConstraint(0, 63)).set('')).setMaxAccess("readonly"))
jobmonMIBNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 1, 2))
jmMIBConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 1, 3))
jmMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 2699, 1, 1, 3, 2))

# Augmentions

# Groups

jmJobIDGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 1, 3, 2, 2)).setObjects(("Job-Monitoring-MIB", "jmJobIDJobSetIndex"), ("Job-Monitoring-MIB", "jmJobIDJobIndex"), )
jmJobGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 1, 3, 2, 3)).setObjects(("Job-Monitoring-MIB", "jmJobImpressionsCompleted"), ("Job-Monitoring-MIB", "jmJobImpressionsPerCopyRequested"), ("Job-Monitoring-MIB", "jmJobOwner"), ("Job-Monitoring-MIB", "jmJobKOctetsPerCopyRequested"), ("Job-Monitoring-MIB", "jmNumberOfInterveningJobs"), ("Job-Monitoring-MIB", "jmJobKOctetsProcessed"), ("Job-Monitoring-MIB", "jmJobState"), ("Job-Monitoring-MIB", "jmJobStateReasons1"), )
jmGeneralGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 1, 3, 2, 1)).setObjects(("Job-Monitoring-MIB", "jmGeneralNumberOfActiveJobs"), ("Job-Monitoring-MIB", "jmGeneralJobPersistence"), ("Job-Monitoring-MIB", "jmGeneralJobSetName"), ("Job-Monitoring-MIB", "jmGeneralOldestActiveJobIndex"), ("Job-Monitoring-MIB", "jmGeneralAttributePersistence"), ("Job-Monitoring-MIB", "jmGeneralNewestActiveJobIndex"), )
jmAttributeGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 2699, 1, 1, 3, 2, 4)).setObjects(("Job-Monitoring-MIB", "jmAttributeValueAsOctets"), ("Job-Monitoring-MIB", "jmAttributeValueAsInteger"), )

# Exports

# Types
mibBuilder.exportSymbols("Job-Monitoring-MIB", JmAttributeTypeTC=JmAttributeTypeTC, JmBooleanTC=JmBooleanTC, JmFinishingTC=JmFinishingTC, JmJobCollationTypeTC=JmJobCollationTypeTC, JmJobServiceTypesTC=JmJobServiceTypesTC, JmJobSourcePlatformTypeTC=JmJobSourcePlatformTypeTC, JmJobStateReasons1TC=JmJobStateReasons1TC, JmJobStateReasons2TC=JmJobStateReasons2TC, JmJobStateReasons3TC=JmJobStateReasons3TC, JmJobStateReasons4TC=JmJobStateReasons4TC, JmJobStateTC=JmJobStateTC, JmJobStringTC=JmJobStringTC, JmJobSubmissionIDTypeTC=JmJobSubmissionIDTypeTC, JmMediumTypeTC=JmMediumTypeTC, JmNaturalLanguageTagTC=JmNaturalLanguageTagTC, JmPrintQualityTC=JmPrintQualityTC, JmPrinterResolutionTC=JmPrinterResolutionTC, JmTimeStampTC=JmTimeStampTC, JmTonerEconomyTC=JmTonerEconomyTC, JmUTF8StringTC=JmUTF8StringTC)

# Objects
mibBuilder.exportSymbols("Job-Monitoring-MIB", pwg=pwg, mibs=mibs, jobmonMIB=jobmonMIB, jobmonMIBObjects=jobmonMIBObjects, jmGeneral=jmGeneral, jmGeneralTable=jmGeneralTable, jmGeneralEntry=jmGeneralEntry, jmGeneralJobSetIndex=jmGeneralJobSetIndex, jmGeneralNumberOfActiveJobs=jmGeneralNumberOfActiveJobs, jmGeneralOldestActiveJobIndex=jmGeneralOldestActiveJobIndex, jmGeneralNewestActiveJobIndex=jmGeneralNewestActiveJobIndex, jmGeneralJobPersistence=jmGeneralJobPersistence, jmGeneralAttributePersistence=jmGeneralAttributePersistence, jmGeneralJobSetName=jmGeneralJobSetName, jmJobID=jmJobID, jmJobIDTable=jmJobIDTable, jmJobIDEntry=jmJobIDEntry, jmJobSubmissionID=jmJobSubmissionID, jmJobIDJobSetIndex=jmJobIDJobSetIndex, jmJobIDJobIndex=jmJobIDJobIndex, jmJob=jmJob, jmJobTable=jmJobTable, jmJobEntry=jmJobEntry, jmJobIndex=jmJobIndex, jmJobState=jmJobState, jmJobStateReasons1=jmJobStateReasons1, jmNumberOfInterveningJobs=jmNumberOfInterveningJobs, jmJobKOctetsPerCopyRequested=jmJobKOctetsPerCopyRequested, jmJobKOctetsProcessed=jmJobKOctetsProcessed, jmJobImpressionsPerCopyRequested=jmJobImpressionsPerCopyRequested, jmJobImpressionsCompleted=jmJobImpressionsCompleted, jmJobOwner=jmJobOwner, jmAttribute=jmAttribute, jmAttributeTable=jmAttributeTable, jmAttributeEntry=jmAttributeEntry, jmAttributeTypeIndex=jmAttributeTypeIndex, jmAttributeInstanceIndex=jmAttributeInstanceIndex, jmAttributeValueAsInteger=jmAttributeValueAsInteger, jmAttributeValueAsOctets=jmAttributeValueAsOctets, jobmonMIBNotifications=jobmonMIBNotifications, jmMIBConformance=jmMIBConformance, jmMIBGroups=jmMIBGroups)

# Groups
mibBuilder.exportSymbols("Job-Monitoring-MIB", jmJobIDGroup=jmJobIDGroup, jmJobGroup=jmJobGroup, jmGeneralGroup=jmGeneralGroup, jmAttributeGroup=jmAttributeGroup)
