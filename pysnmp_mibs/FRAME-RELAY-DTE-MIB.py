# PySNMP SMI module. Autogenerated from smidump -f python FRAME-RELAY-DTE-MIB
# by libsmi2pysnmp-0.0.4-alpha at Tue Jun 28 11:30:47 2005,
# Python version (2, 4, 0, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pyasn1.type import constraint, namedval

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( InterfaceIndex, ) = mibBuilder.importSymbols("IF-MIB", "InterfaceIndex")
( transmission, ) = mibBuilder.importSymbols("RFC1213-MIB", "transmission")
( ModuleCompliance, NotificationGroup, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
( Bits, Counter32, Integer32, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibVariable, MibTable, MibTableRow, MibTableColumn, TimeTicks, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibVariable", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks")
( RowStatus, TextualConvention, TimeStamp, ) = mibBuilder.importSymbols("SNMPv2-TC", "RowStatus", "TextualConvention", "TimeStamp")

# Types

class DLCI(Integer32):
    subtypeSpec = Integer32.subtypeSpec+constraint.ValueRangeConstraint(0,8388607)
    pass


# Objects

frameRelayDTE = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 32))
frameRelayTraps = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 32, 0))
frDlcmiTable = MibTable((1, 3, 6, 1, 2, 1, 10, 32, 1))
frDlcmiEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 32, 1, 1)).setIndexNames((0, "FRAME-RELAY-DTE-MIB", "frDlcmiIfIndex"))
frDlcmiIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 1)).setColumnInitializer(MibVariable((), InterfaceIndex()).setMaxAccess("readonly"))
frDlcmiState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 2)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(5,6,2,4,3,1,)).subtype(namedValues=namedval.NamedValues(("noLmiConfigured", 1), ("lmiRev1", 2), ("ansiT1617D", 3), ("ansiT1617B", 4), ("itut933A", 5), ("ansiT1617D1994", 6), ))).setMaxAccess("readwrite"))
frDlcmiAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 3)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,4,2,3,)).subtype(namedValues=namedval.NamedValues(("q921", 1), ("q922March90", 2), ("q922November90", 3), ("q922", 4), ))).setMaxAccess("readwrite"))
frDlcmiAddressLen = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 4)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,2,4,)).subtype(namedValues=namedval.NamedValues(("twoOctets", 2), ("threeOctets", 3), ("fourOctets", 4), ))).setMaxAccess("readwrite"))
frDlcmiPollingInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 5)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(5, 30)).clone(10)).setMaxAccess("readwrite"))
frDlcmiFullEnquiryInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 6)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 255)).clone(6)).setMaxAccess("readwrite"))
frDlcmiErrorThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 7)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 10)).clone(3)).setMaxAccess("readwrite"))
frDlcmiMonitoredEvents = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 8)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 10)).clone(4)).setMaxAccess("readwrite"))
frDlcmiMaxSupportedVCs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 9)).setColumnInitializer(MibVariable((), DLCI()).setMaxAccess("readwrite"))
frDlcmiMulticast = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 10)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("nonBroadcast", 1), ("broadcast", 2), ))).setMaxAccess("readwrite"))
frDlcmiStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 11)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,3,)).subtype(namedValues=namedval.NamedValues(("running", 1), ("fault", 2), ("initializing", 3), ))).setMaxAccess("readonly"))
frDlcmiRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 1, 1, 12)).setColumnInitializer(MibVariable((), RowStatus()).setMaxAccess("readwrite"))
frCircuitTable = MibTable((1, 3, 6, 1, 2, 1, 10, 32, 2))
frCircuitEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 32, 2, 1)).setIndexNames((0, "FRAME-RELAY-DTE-MIB", "frCircuitIfIndex"), (0, "FRAME-RELAY-DTE-MIB", "frCircuitDlci"))
frCircuitIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 1)).setColumnInitializer(MibVariable((), InterfaceIndex()).setMaxAccess("readonly"))
frCircuitDlci = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 2)).setColumnInitializer(MibVariable((), DLCI()).setMaxAccess("readonly"))
frCircuitState = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 3)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,3,1,)).subtype(namedValues=namedval.NamedValues(("invalid", 1), ("active", 2), ("inactive", 3), )).clone(2)).setMaxAccess("readwrite"))
frCircuitReceivedFECNs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 4)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
frCircuitReceivedBECNs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 5)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
frCircuitSentFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 6)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
frCircuitSentOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 7)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
frCircuitReceivedFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 8)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
frCircuitReceivedOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 9)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
frCircuitCreationTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 10)).setColumnInitializer(MibVariable((), TimeStamp()).setMaxAccess("readonly"))
frCircuitLastTimeChange = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 11)).setColumnInitializer(MibVariable((), TimeStamp()).setMaxAccess("readonly"))
frCircuitCommittedBurst = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 12)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L)).clone(0)).setMaxAccess("readwrite"))
frCircuitExcessBurst = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 13)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readwrite"))
frCircuitThroughput = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 14)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L)).clone(0)).setMaxAccess("readwrite"))
frCircuitMulticast = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 15)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,4,3,)).subtype(namedValues=namedval.NamedValues(("unicast", 1), ("oneWay", 2), ("twoWay", 3), ("nWay", 4), )).clone(1)).setMaxAccess("readwrite"))
frCircuitType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 16)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("static", 1), ("dynamic", 2), ))).setMaxAccess("readonly"))
frCircuitDiscards = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 17)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
frCircuitReceivedDEs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 18)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
frCircuitSentDEs = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 19)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
frCircuitLogicalIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 20)).setColumnInitializer(MibVariable((), InterfaceIndex()).setMaxAccess("readwrite"))
frCircuitRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 2, 1, 21)).setColumnInitializer(MibVariable((), RowStatus()).setMaxAccess("readwrite"))
frErrTable = MibTable((1, 3, 6, 1, 2, 1, 10, 32, 3))
frErrEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 32, 3, 1)).setIndexNames((0, "FRAME-RELAY-DTE-MIB", "frErrIfIndex"))
frErrIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 3, 1, 1)).setColumnInitializer(MibVariable((), InterfaceIndex()).setMaxAccess("readonly"))
frErrType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 3, 1, 2)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(9,4,10,7,8,5,3,2,6,1,)).subtype(namedValues=namedval.NamedValues(("unknownError", 1), ("noErrorSinceReset", 10), ("receiveShort", 2), ("receiveLong", 3), ("illegalAddress", 4), ("unknownAddress", 5), ("dlcmiProtoErr", 6), ("dlcmiUnknownIE", 7), ("dlcmiSequenceErr", 8), ("dlcmiUnknownRpt", 9), ))).setMaxAccess("readonly"))
frErrData = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 3, 1, 3)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 1600))).setMaxAccess("readonly"))
frErrTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 3, 1, 4)).setColumnInitializer(MibVariable((), TimeStamp()).setMaxAccess("readonly"))
frErrFaults = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 3, 1, 5)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
frErrFaultTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 32, 3, 1, 6)).setColumnInitializer(MibVariable((), TimeStamp()).setMaxAccess("readonly"))
frameRelayTrapControl = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 32, 4))
frTrapState = MibVariable((1, 3, 6, 1, 2, 1, 10, 32, 4, 1), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("enabled", 1), ("disabled", 2), )).clone(2)).setMaxAccess("readwrite")
frTrapMaxRate = MibVariable((1, 3, 6, 1, 2, 1, 10, 32, 4, 2), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 3600000)).clone(0)).setMaxAccess("readwrite")
frConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 32, 6))
frGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 32, 6, 1))
frCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 32, 6, 2))

# Augmentions

# Notifications

frDLCIStatusChange = NotificationType((1, 3, 6, 1, 2, 1, 10, 32, 0, 1)).setObjects(("FRAME-RELAY-DTE-MIB", "frCircuitState"), )

# Groups

frCircuitGroup0 = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 7)).setObjects(("FRAME-RELAY-DTE-MIB", "frCircuitState"), ("FRAME-RELAY-DTE-MIB", "frCircuitThroughput"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedBECNs"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedOctets"), ("FRAME-RELAY-DTE-MIB", "frCircuitDlci"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedFECNs"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedFrames"), ("FRAME-RELAY-DTE-MIB", "frCircuitSentOctets"), ("FRAME-RELAY-DTE-MIB", "frCircuitCommittedBurst"), ("FRAME-RELAY-DTE-MIB", "frCircuitCreationTime"), ("FRAME-RELAY-DTE-MIB", "frCircuitSentFrames"), ("FRAME-RELAY-DTE-MIB", "frCircuitExcessBurst"), ("FRAME-RELAY-DTE-MIB", "frCircuitIfIndex"), ("FRAME-RELAY-DTE-MIB", "frCircuitLastTimeChange"), )
frTrapGroup0 = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 9)).setObjects(("FRAME-RELAY-DTE-MIB", "frTrapState"), )
frErrGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 4)).setObjects(("FRAME-RELAY-DTE-MIB", "frErrTime"), ("FRAME-RELAY-DTE-MIB", "frErrFaultTime"), ("FRAME-RELAY-DTE-MIB", "frErrFaults"), ("FRAME-RELAY-DTE-MIB", "frErrType"), ("FRAME-RELAY-DTE-MIB", "frErrData"), ("FRAME-RELAY-DTE-MIB", "frErrIfIndex"), )
frPortGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 1)).setObjects(("FRAME-RELAY-DTE-MIB", "frDlcmiAddress"), ("FRAME-RELAY-DTE-MIB", "frDlcmiRowStatus"), ("FRAME-RELAY-DTE-MIB", "frDlcmiMulticast"), ("FRAME-RELAY-DTE-MIB", "frDlcmiState"), ("FRAME-RELAY-DTE-MIB", "frDlcmiAddressLen"), ("FRAME-RELAY-DTE-MIB", "frDlcmiStatus"), ("FRAME-RELAY-DTE-MIB", "frDlcmiMonitoredEvents"), ("FRAME-RELAY-DTE-MIB", "frDlcmiMaxSupportedVCs"), ("FRAME-RELAY-DTE-MIB", "frDlcmiPollingInterval"), ("FRAME-RELAY-DTE-MIB", "frDlcmiFullEnquiryInterval"), ("FRAME-RELAY-DTE-MIB", "frDlcmiIfIndex"), ("FRAME-RELAY-DTE-MIB", "frDlcmiErrorThreshold"), )
frPortGroup0 = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 6)).setObjects(("FRAME-RELAY-DTE-MIB", "frDlcmiAddress"), ("FRAME-RELAY-DTE-MIB", "frDlcmiMulticast"), ("FRAME-RELAY-DTE-MIB", "frDlcmiState"), ("FRAME-RELAY-DTE-MIB", "frDlcmiAddressLen"), ("FRAME-RELAY-DTE-MIB", "frDlcmiMonitoredEvents"), ("FRAME-RELAY-DTE-MIB", "frDlcmiMaxSupportedVCs"), ("FRAME-RELAY-DTE-MIB", "frDlcmiPollingInterval"), ("FRAME-RELAY-DTE-MIB", "frDlcmiFullEnquiryInterval"), ("FRAME-RELAY-DTE-MIB", "frDlcmiIfIndex"), ("FRAME-RELAY-DTE-MIB", "frDlcmiErrorThreshold"), )
frCircuitGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 2)).setObjects(("FRAME-RELAY-DTE-MIB", "frCircuitDiscards"), ("FRAME-RELAY-DTE-MIB", "frCircuitState"), ("FRAME-RELAY-DTE-MIB", "frCircuitMulticast"), ("FRAME-RELAY-DTE-MIB", "frCircuitLogicalIfIndex"), ("FRAME-RELAY-DTE-MIB", "frCircuitSentDEs"), ("FRAME-RELAY-DTE-MIB", "frCircuitThroughput"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedBECNs"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedOctets"), ("FRAME-RELAY-DTE-MIB", "frCircuitDlci"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedFECNs"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedFrames"), ("FRAME-RELAY-DTE-MIB", "frCircuitSentOctets"), ("FRAME-RELAY-DTE-MIB", "frCircuitReceivedDEs"), ("FRAME-RELAY-DTE-MIB", "frCircuitCommittedBurst"), ("FRAME-RELAY-DTE-MIB", "frCircuitCreationTime"), ("FRAME-RELAY-DTE-MIB", "frCircuitSentFrames"), ("FRAME-RELAY-DTE-MIB", "frCircuitRowStatus"), ("FRAME-RELAY-DTE-MIB", "frCircuitType"), ("FRAME-RELAY-DTE-MIB", "frCircuitExcessBurst"), ("FRAME-RELAY-DTE-MIB", "frCircuitIfIndex"), ("FRAME-RELAY-DTE-MIB", "frCircuitLastTimeChange"), )
frNotificationGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 5)).setObjects(("FRAME-RELAY-DTE-MIB", "frDLCIStatusChange"), )
frTrapGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 3)).setObjects(("FRAME-RELAY-DTE-MIB", "frTrapMaxRate"), ("FRAME-RELAY-DTE-MIB", "frTrapState"), )
frErrGroup0 = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 32, 6, 1, 8)).setObjects(("FRAME-RELAY-DTE-MIB", "frErrType"), ("FRAME-RELAY-DTE-MIB", "frErrTime"), ("FRAME-RELAY-DTE-MIB", "frErrIfIndex"), ("FRAME-RELAY-DTE-MIB", "frErrData"), )

# Exports

# Types
mibBuilder.exportSymbols("FRAME-RELAY-DTE-MIB", DLCI=DLCI)

# Objects
mibBuilder.exportSymbols("FRAME-RELAY-DTE-MIB", frameRelayDTE=frameRelayDTE, frameRelayTraps=frameRelayTraps, frDlcmiTable=frDlcmiTable, frDlcmiEntry=frDlcmiEntry, frDlcmiIfIndex=frDlcmiIfIndex, frDlcmiState=frDlcmiState, frDlcmiAddress=frDlcmiAddress, frDlcmiAddressLen=frDlcmiAddressLen, frDlcmiPollingInterval=frDlcmiPollingInterval, frDlcmiFullEnquiryInterval=frDlcmiFullEnquiryInterval, frDlcmiErrorThreshold=frDlcmiErrorThreshold, frDlcmiMonitoredEvents=frDlcmiMonitoredEvents, frDlcmiMaxSupportedVCs=frDlcmiMaxSupportedVCs, frDlcmiMulticast=frDlcmiMulticast, frDlcmiStatus=frDlcmiStatus, frDlcmiRowStatus=frDlcmiRowStatus, frCircuitTable=frCircuitTable, frCircuitEntry=frCircuitEntry, frCircuitIfIndex=frCircuitIfIndex, frCircuitDlci=frCircuitDlci, frCircuitState=frCircuitState, frCircuitReceivedFECNs=frCircuitReceivedFECNs, frCircuitReceivedBECNs=frCircuitReceivedBECNs, frCircuitSentFrames=frCircuitSentFrames, frCircuitSentOctets=frCircuitSentOctets, frCircuitReceivedFrames=frCircuitReceivedFrames, frCircuitReceivedOctets=frCircuitReceivedOctets, frCircuitCreationTime=frCircuitCreationTime, frCircuitLastTimeChange=frCircuitLastTimeChange, frCircuitCommittedBurst=frCircuitCommittedBurst, frCircuitExcessBurst=frCircuitExcessBurst, frCircuitThroughput=frCircuitThroughput, frCircuitMulticast=frCircuitMulticast, frCircuitType=frCircuitType, frCircuitDiscards=frCircuitDiscards, frCircuitReceivedDEs=frCircuitReceivedDEs, frCircuitSentDEs=frCircuitSentDEs, frCircuitLogicalIfIndex=frCircuitLogicalIfIndex, frCircuitRowStatus=frCircuitRowStatus, frErrTable=frErrTable, frErrEntry=frErrEntry, frErrIfIndex=frErrIfIndex, frErrType=frErrType, frErrData=frErrData, frErrTime=frErrTime, frErrFaults=frErrFaults, frErrFaultTime=frErrFaultTime, frameRelayTrapControl=frameRelayTrapControl, frTrapState=frTrapState, frTrapMaxRate=frTrapMaxRate, frConformance=frConformance, frGroups=frGroups, frCompliances=frCompliances)

# Notifications
mibBuilder.exportSymbols("FRAME-RELAY-DTE-MIB", frDLCIStatusChange=frDLCIStatusChange)

# Groups
mibBuilder.exportSymbols("FRAME-RELAY-DTE-MIB", frCircuitGroup0=frCircuitGroup0, frTrapGroup0=frTrapGroup0, frErrGroup=frErrGroup, frPortGroup=frPortGroup, frPortGroup0=frPortGroup0, frCircuitGroup=frCircuitGroup, frNotificationGroup=frNotificationGroup, frTrapGroup=frTrapGroup, frErrGroup0=frErrGroup0)
