# PySNMP SMI module. Autogenerated from smidump -f python ACCOUNTING-CONTROL-MIB
# by libsmi2pysnmp-0.0.4-alpha at Tue Jun 28 11:30:34 2005,
# Python version (2, 4, 0, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pyasn1.type import constraint, namedval

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( ifIndex, ) = mibBuilder.importSymbols("IF-MIB", "ifIndex")
( ModuleCompliance, NotificationGroup, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup", "ObjectGroup")
( Bits, Integer32, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibVariable, MibTable, MibTableRow, MibTableColumn, TimeTicks, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibVariable", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "mib-2")
( DisplayString, RowStatus, TextualConvention, TestAndIncr, TruthValue, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TextualConvention", "TestAndIncr", "TruthValue")

# Types

class DataCollectionList(OctetString):
    subtypeSpec = OctetString.subtypeSpec+constraint.ValueSizeConstraint(0,8)
    pass

class DataCollectionSubtree(ObjectIdentifier):
    pass

class FileIndex(Integer32):
    subtypeSpec = Integer32.subtypeSpec+constraint.ValueRangeConstraint(1,65535)
    pass


# Objects

accountingControlMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 60))
acctngMIBObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 60, 1))
acctngSelectionControl = MibIdentifier((1, 3, 6, 1, 2, 1, 60, 1, 1))
acctngSelectionTable = MibTable((1, 3, 6, 1, 2, 1, 60, 1, 1, 1))
acctngSelectionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 60, 1, 1, 1, 1)).setIndexNames((0, "ACCOUNTING-CONTROL-MIB", "acctngSelectionIndex"))
acctngSelectionIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 1, 1, 1, 1)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("noaccess"))
acctngSelectionSubtree = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 1, 1, 1, 2)).setColumnInitializer(MibVariable((), DataCollectionSubtree()).setMaxAccess("readwrite"))
acctngSelectionList = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 1, 1, 1, 3)).setColumnInitializer(MibVariable((), DataCollectionList()).setMaxAccess("readwrite"))
acctngSelectionFile = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 1, 1, 1, 4)).setColumnInitializer(MibVariable((), FileIndex()).setMaxAccess("readwrite"))
acctngSelectionType = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 1, 1, 1, 5)).setColumnInitializer(MibVariable((), Bits().subtype(namedValues=namedval.NamedValues(("svcIncoming", 0), ("svcOutgoing", 1), ("svpIncoming", 2), ("svpOutgoing", 3), ("pvc", 4), ("pvp", 5), ("spvcOriginator", 6), ("spvcTarget", 7), ("spvpOriginator", 8), ("spvpTarget", 9), )).clone(("svcIncoming","svcOutgoing","svpIncoming","svpOutgoing",))).setMaxAccess("readwrite"))
acctngSelectionRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 1, 1, 1, 6)).setColumnInitializer(MibVariable((), RowStatus()).setMaxAccess("readwrite"))
acctngFileControl = MibIdentifier((1, 3, 6, 1, 2, 1, 60, 1, 2))
acctngFileTable = MibTable((1, 3, 6, 1, 2, 1, 60, 1, 2, 1))
acctngFileEntry = MibTableRow((1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1)).setIndexNames((0, "ACCOUNTING-CONTROL-MIB", "acctngFileIndex"))
acctngFileIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 1)).setColumnInitializer(MibVariable((), FileIndex()).setMaxAccess("noaccess"))
acctngFileName = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 2)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 32))).setMaxAccess("readwrite"))
acctngFileNameSuffix = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 3)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 8))).setMaxAccess("readonly"))
acctngFileDescription = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 4)).setColumnInitializer(MibVariable((), DisplayString()).setMaxAccess("readwrite"))
acctngFileCommand = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 5)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,3,4,2,)).subtype(namedValues=namedval.NamedValues(("idle", 1), ("cmdInProgress", 2), ("swapToNewFile", 3), ("collectNow", 4), )).clone(1)).setMaxAccess("readwrite"))
acctngFileMaximumSize = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 6)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(100, 2147483647L)).clone(5000000)).setMaxAccess("readwrite"))
acctngFileCurrentSize = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 7)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
acctngFileFormat = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 8)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("other", 1), ("ber", 2), )).clone(2)).setMaxAccess("readwrite"))
acctngFileCollectMode = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 9)).setColumnInitializer(MibVariable((), Bits().subtype(namedValues=namedval.NamedValues(("onRelease", 0), ("periodically", 1), )).clone(("onRelease",))).setMaxAccess("readwrite"))
acctngFileCollectFailedAttempts = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 10)).setColumnInitializer(MibVariable((), Bits().subtype(namedValues=namedval.NamedValues(("soft", 0), ("regular", 1), )).clone(("soft","regular",))).setMaxAccess("readwrite"))
acctngFileInterval = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 11)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(60, 86400)).clone(3600)).setMaxAccess("readwrite"))
acctngFileMinAge = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 12)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(60, 86400)).clone(3600)).setMaxAccess("readwrite"))
acctngFileRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 2, 1, 1, 13)).setColumnInitializer(MibVariable((), RowStatus()).setMaxAccess("readwrite"))
acctngInterfaceControl = MibIdentifier((1, 3, 6, 1, 2, 1, 60, 1, 3))
acctngAdminStatus = MibVariable((1, 3, 6, 1, 2, 1, 60, 1, 3, 1), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("enabled", 1), ("disabled", 2), ))).setMaxAccess("readwrite")
acctngOperStatus = MibVariable((1, 3, 6, 1, 2, 1, 60, 1, 3, 2), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("enabled", 1), ("disabled", 2), ))).setMaxAccess("readonly")
acctngProtection = MibVariable((1, 3, 6, 1, 2, 1, 60, 1, 3, 3), TestAndIncr()).setMaxAccess("readwrite")
acctngAgentMode = MibVariable((1, 3, 6, 1, 2, 1, 60, 1, 3, 4), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("swapOnCommand", 1), ("swapOnFull", 2), ))).setMaxAccess("readonly")
acctngInterfaceTable = MibTable((1, 3, 6, 1, 2, 1, 60, 1, 3, 5))
acctngInterfaceEntry = MibTableRow((1, 3, 6, 1, 2, 1, 60, 1, 3, 5, 1)).setIndexNames((0, "IF-MIB", "ifIndex"))
acctngInterfaceEnable = MibTableColumn((1, 3, 6, 1, 2, 1, 60, 1, 3, 5, 1, 1)).setColumnInitializer(MibVariable((), TruthValue()).setMaxAccess("readwrite"))
acctngTrapControl = MibIdentifier((1, 3, 6, 1, 2, 1, 60, 1, 4))
acctngControlTrapThreshold = MibVariable((1, 3, 6, 1, 2, 1, 60, 1, 4, 1), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 99))).setMaxAccess("readwrite")
acctngControlTrapEnable = MibVariable((1, 3, 6, 1, 2, 1, 60, 1, 4, 2), TruthValue()).setMaxAccess("readwrite")
acctngNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 60, 2))
acctngNotifyPrefix = MibIdentifier((1, 3, 6, 1, 2, 1, 60, 2, 0))
acctngConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 60, 3))
acctngGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 60, 3, 1))
acctngCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 60, 3, 2))

# Augmentions

# Notifications

acctngFileNearlyFull = NotificationType((1, 3, 6, 1, 2, 1, 60, 2, 0, 1)).setObjects(("ACCOUNTING-CONTROL-MIB", "acctngControlTrapThreshold"), ("ACCOUNTING-CONTROL-MIB", "acctngFileMaximumSize"), ("ACCOUNTING-CONTROL-MIB", "acctngFileNameSuffix"), ("ACCOUNTING-CONTROL-MIB", "acctngFileName"), )
acctngFileFull = NotificationType((1, 3, 6, 1, 2, 1, 60, 2, 0, 2)).setObjects(("ACCOUNTING-CONTROL-MIB", "acctngFileMaximumSize"), ("ACCOUNTING-CONTROL-MIB", "acctngFileNameSuffix"), ("ACCOUNTING-CONTROL-MIB", "acctngFileName"), )

# Groups

acctngNotificationsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 60, 3, 1, 2)).setObjects(("ACCOUNTING-CONTROL-MIB", "acctngFileNearlyFull"), ("ACCOUNTING-CONTROL-MIB", "acctngFileFull"), )
acctngBasicGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 60, 3, 1, 1)).setObjects(("ACCOUNTING-CONTROL-MIB", "acctngAdminStatus"), ("ACCOUNTING-CONTROL-MIB", "acctngProtection"), ("ACCOUNTING-CONTROL-MIB", "acctngFileName"), ("ACCOUNTING-CONTROL-MIB", "acctngSelectionSubtree"), ("ACCOUNTING-CONTROL-MIB", "acctngFileCollectMode"), ("ACCOUNTING-CONTROL-MIB", "acctngControlTrapThreshold"), ("ACCOUNTING-CONTROL-MIB", "acctngFileRowStatus"), ("ACCOUNTING-CONTROL-MIB", "acctngSelectionRowStatus"), ("ACCOUNTING-CONTROL-MIB", "acctngOperStatus"), ("ACCOUNTING-CONTROL-MIB", "acctngSelectionFile"), ("ACCOUNTING-CONTROL-MIB", "acctngFileFormat"), ("ACCOUNTING-CONTROL-MIB", "acctngSelectionType"), ("ACCOUNTING-CONTROL-MIB", "acctngSelectionList"), ("ACCOUNTING-CONTROL-MIB", "acctngFileCurrentSize"), ("ACCOUNTING-CONTROL-MIB", "acctngFileDescription"), ("ACCOUNTING-CONTROL-MIB", "acctngFileInterval"), ("ACCOUNTING-CONTROL-MIB", "acctngAgentMode"), ("ACCOUNTING-CONTROL-MIB", "acctngControlTrapEnable"), ("ACCOUNTING-CONTROL-MIB", "acctngFileMaximumSize"), ("ACCOUNTING-CONTROL-MIB", "acctngFileCollectFailedAttempts"), ("ACCOUNTING-CONTROL-MIB", "acctngFileCommand"), ("ACCOUNTING-CONTROL-MIB", "acctngFileMinAge"), ("ACCOUNTING-CONTROL-MIB", "acctngInterfaceEnable"), ("ACCOUNTING-CONTROL-MIB", "acctngFileNameSuffix"), )

# Exports

# Types
mibBuilder.exportSymbols("ACCOUNTING-CONTROL-MIB", DataCollectionList=DataCollectionList, DataCollectionSubtree=DataCollectionSubtree, FileIndex=FileIndex)

# Objects
mibBuilder.exportSymbols("ACCOUNTING-CONTROL-MIB", accountingControlMIB=accountingControlMIB, acctngMIBObjects=acctngMIBObjects, acctngSelectionControl=acctngSelectionControl, acctngSelectionTable=acctngSelectionTable, acctngSelectionEntry=acctngSelectionEntry, acctngSelectionIndex=acctngSelectionIndex, acctngSelectionSubtree=acctngSelectionSubtree, acctngSelectionList=acctngSelectionList, acctngSelectionFile=acctngSelectionFile, acctngSelectionType=acctngSelectionType, acctngSelectionRowStatus=acctngSelectionRowStatus, acctngFileControl=acctngFileControl, acctngFileTable=acctngFileTable, acctngFileEntry=acctngFileEntry, acctngFileIndex=acctngFileIndex, acctngFileName=acctngFileName, acctngFileNameSuffix=acctngFileNameSuffix, acctngFileDescription=acctngFileDescription, acctngFileCommand=acctngFileCommand, acctngFileMaximumSize=acctngFileMaximumSize, acctngFileCurrentSize=acctngFileCurrentSize, acctngFileFormat=acctngFileFormat, acctngFileCollectMode=acctngFileCollectMode, acctngFileCollectFailedAttempts=acctngFileCollectFailedAttempts, acctngFileInterval=acctngFileInterval, acctngFileMinAge=acctngFileMinAge, acctngFileRowStatus=acctngFileRowStatus, acctngInterfaceControl=acctngInterfaceControl, acctngAdminStatus=acctngAdminStatus, acctngOperStatus=acctngOperStatus, acctngProtection=acctngProtection, acctngAgentMode=acctngAgentMode, acctngInterfaceTable=acctngInterfaceTable, acctngInterfaceEntry=acctngInterfaceEntry, acctngInterfaceEnable=acctngInterfaceEnable, acctngTrapControl=acctngTrapControl, acctngControlTrapThreshold=acctngControlTrapThreshold, acctngControlTrapEnable=acctngControlTrapEnable, acctngNotifications=acctngNotifications, acctngNotifyPrefix=acctngNotifyPrefix, acctngConformance=acctngConformance, acctngGroups=acctngGroups, acctngCompliances=acctngCompliances)

# Notifications
mibBuilder.exportSymbols("ACCOUNTING-CONTROL-MIB", acctngFileNearlyFull=acctngFileNearlyFull, acctngFileFull=acctngFileFull)

# Groups
mibBuilder.exportSymbols("ACCOUNTING-CONTROL-MIB", acctngNotificationsGroup=acctngNotificationsGroup, acctngBasicGroup=acctngBasicGroup)
