# PySNMP SMI module. Autogenerated from smidump -f python SNA-SDLC-MIB
# by libsmi2pysnmp-0.0.7-alpha at Thu Nov 16 19:13:40 2006,
# Python version (2, 4, 3, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pyasn1.type import constraint, namedval

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( ifAdminStatus, ifIndex, ifOperStatus, ) = mibBuilder.importSymbols("RFC1213-MIB", "ifAdminStatus", "ifIndex", "ifOperStatus")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Counter32, Integer32, Integer32, ModuleIdentity, MibIdentifier, NotificationType, MibScalar, MibTable, MibTableRow, MibTableColumn, TimeTicks, TimeTicks, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "NotificationType", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "TimeTicks", "mib-2")
( DisplayString, RowStatus, TimeInterval, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString", "RowStatus", "TimeInterval")

# Objects

snaDLC = ModuleIdentity((1, 3, 6, 1, 2, 1, 41)).setRevisions(("1994-11-15 00:00",))
sdlc = MibIdentifier((1, 3, 6, 1, 2, 1, 41, 1))
sdlcPortGroup = MibIdentifier((1, 3, 6, 1, 2, 1, 41, 1, 1))
sdlcPortAdminTable = MibTable((1, 3, 6, 1, 2, 1, 41, 1, 1, 1))
sdlcPortAdminEntry = MibTableRow((1, 3, 6, 1, 2, 1, 41, 1, 1, 1, 1)).setIndexNames((0, "RFC1213-MIB", "ifIndex"))
sdlcPortAdminName = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 1, 1, 1), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 10))).setMaxAccess("readwrite")
sdlcPortAdminRole = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 1, 1, 2), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,3,)).subtype(namedValues=namedval.NamedValues(("primary", 1), ("secondary", 2), ("negotiable", 3), ))).setMaxAccess("readwrite")
sdlcPortAdminType = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 1, 1, 3), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("leased", 1), ("switched", 2), )).clone(1)).setMaxAccess("readwrite")
sdlcPortAdminTopology = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 1, 1, 4), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("pointToPoint", 1), ("multipoint", 2), )).clone(1)).setMaxAccess("readwrite")
sdlcPortAdminISTATUS = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 1, 1, 5), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("inactive", 1), ("active", 2), )).clone(2)).setMaxAccess("readwrite")
sdlcPortAdminACTIVTO = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 1, 1, 6), TimeInterval().clone(0)).setMaxAccess("readwrite")
sdlcPortAdminPAUSE = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 1, 1, 7), TimeInterval().clone(200)).setMaxAccess("readwrite")
sdlcPortAdminSERVLIM = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 1, 1, 8), Integer32().clone(20)).setMaxAccess("readwrite")
sdlcPortAdminSlowPollTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 1, 1, 9), TimeInterval().clone(2000)).setMaxAccess("readwrite")
sdlcPortOperTable = MibTable((1, 3, 6, 1, 2, 1, 41, 1, 1, 2))
sdlcPortOperEntry = MibTableRow((1, 3, 6, 1, 2, 1, 41, 1, 1, 2, 1)).setIndexNames((0, "RFC1213-MIB", "ifIndex"))
sdlcPortOperName = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 2, 1, 1), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 8))).setMaxAccess("readonly")
sdlcPortOperRole = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 2, 1, 2), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,2,1,)).subtype(namedValues=namedval.NamedValues(("primary", 1), ("secondary", 2), ("undefined", 3), ))).setMaxAccess("readonly")
sdlcPortOperType = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 2, 1, 3), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("leased", 1), ("switched", 2), ))).setMaxAccess("readonly")
sdlcPortOperTopology = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 2, 1, 4), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("pointToPoint", 1), ("multipoint", 2), ))).setMaxAccess("readonly")
sdlcPortOperISTATUS = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 2, 1, 5), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("inactive", 1), ("active", 2), ))).setMaxAccess("readonly")
sdlcPortOperACTIVTO = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 2, 1, 6), TimeInterval()).setMaxAccess("readonly")
sdlcPortOperPAUSE = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 2, 1, 7), TimeInterval()).setMaxAccess("readonly")
sdlcPortOperSlowPollMethod = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 2, 1, 8), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,3,2,)).subtype(namedValues=namedval.NamedValues(("servlim", 1), ("pollpause", 2), ("other", 3), ))).setMaxAccess("readonly")
sdlcPortOperSERVLIM = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 2, 1, 9), Integer32()).setMaxAccess("readonly")
sdlcPortOperSlowPollTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 2, 1, 10), TimeInterval()).setMaxAccess("readonly")
sdlcPortOperLastModifyTime = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 2, 1, 11), TimeTicks()).setMaxAccess("readonly")
sdlcPortOperLastFailTime = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 2, 1, 12), TimeTicks()).setMaxAccess("readonly")
sdlcPortOperLastFailCause = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 2, 1, 13), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("undefined", 1), ("physical", 2), )).clone(1)).setMaxAccess("readonly")
sdlcPortStatsTable = MibTable((1, 3, 6, 1, 2, 1, 41, 1, 1, 3))
sdlcPortStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1)).setIndexNames((0, "RFC1213-MIB", "ifIndex"))
sdlcPortStatsPhysicalFailures = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 1), Counter32()).setMaxAccess("readonly")
sdlcPortStatsInvalidAddresses = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 2), Counter32()).setMaxAccess("readonly")
sdlcPortStatsDwarfFrames = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 3), Counter32()).setMaxAccess("readonly")
sdlcPortStatsPollsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 4), Counter32()).setMaxAccess("readonly")
sdlcPortStatsPollsOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 5), Counter32()).setMaxAccess("readonly")
sdlcPortStatsPollRspsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 6), Counter32()).setMaxAccess("readonly")
sdlcPortStatsPollRspsOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 7), Counter32()).setMaxAccess("readonly")
sdlcPortStatsLocalBusies = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 8), Counter32()).setMaxAccess("readonly")
sdlcPortStatsRemoteBusies = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 9), Counter32()).setMaxAccess("readonly")
sdlcPortStatsIFramesIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 10), Counter32()).setMaxAccess("readonly")
sdlcPortStatsIFramesOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 11), Counter32()).setMaxAccess("readonly")
sdlcPortStatsOctetsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 12), Counter32()).setMaxAccess("readonly")
sdlcPortStatsOctetsOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 13), Counter32()).setMaxAccess("readonly")
sdlcPortStatsProtocolErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 14), Counter32()).setMaxAccess("readonly")
sdlcPortStatsActivityTOs = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 15), Counter32()).setMaxAccess("readonly")
sdlcPortStatsRNRLIMITs = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 16), Counter32()).setMaxAccess("readonly")
sdlcPortStatsRetriesExps = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 17), Counter32()).setMaxAccess("readonly")
sdlcPortStatsRetransmitsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 18), Counter32()).setMaxAccess("readonly")
sdlcPortStatsRetransmitsOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 1, 3, 1, 19), Counter32()).setMaxAccess("readonly")
sdlcLSGroup = MibIdentifier((1, 3, 6, 1, 2, 1, 41, 1, 2))
sdlcLSAdminTable = MibTable((1, 3, 6, 1, 2, 1, 41, 1, 2, 1))
sdlcLSAdminEntry = MibTableRow((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1)).setIndexNames((0, "RFC1213-MIB", "ifIndex"), (0, "SNA-SDLC-MIB", "sdlcLSAddress"))
sdlcLSAddress = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 1), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 255))).setMaxAccess("readcreate")
sdlcLSAdminName = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 2), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 10))).setMaxAccess("readcreate")
sdlcLSAdminState = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 3), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("inactive", 1), ("active", 2), )).clone(2)).setMaxAccess("readcreate")
sdlcLSAdminISTATUS = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 4), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("inactive", 1), ("active", 2), )).clone(2)).setMaxAccess("readcreate")
sdlcLSAdminMAXDATASend = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 5), Integer32()).setMaxAccess("readcreate")
sdlcLSAdminMAXDATARcv = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 6), Integer32()).setMaxAccess("readcreate")
sdlcLSAdminREPLYTO = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 7), TimeInterval().clone(100)).setMaxAccess("readcreate")
sdlcLSAdminMAXIN = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 8), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 127)).clone(7)).setMaxAccess("readcreate")
sdlcLSAdminMAXOUT = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 9), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 127)).clone(1)).setMaxAccess("readcreate")
sdlcLSAdminMODULO = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 10), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(128,8,)).subtype(namedValues=namedval.NamedValues(("onetwentyeight", 128), ("eight", 8), )).clone(8)).setMaxAccess("readcreate")
sdlcLSAdminRETRIESm = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 11), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 128)).clone(15)).setMaxAccess("readcreate")
sdlcLSAdminRETRIESt = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 12), TimeInterval().clone(0)).setMaxAccess("readcreate")
sdlcLSAdminRETRIESn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 13), Integer32().clone(0)).setMaxAccess("readcreate")
sdlcLSAdminRNRLIMIT = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 14), TimeInterval().clone(18000)).setMaxAccess("readcreate")
sdlcLSAdminDATMODE = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 15), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("half", 1), ("full", 2), )).clone(1)).setMaxAccess("readcreate")
sdlcLSAdminGPoll = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 16), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 254))).setMaxAccess("readcreate")
sdlcLSAdminSimRim = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 17), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), )).clone(1)).setMaxAccess("readcreate")
sdlcLSAdminXmitRcvCap = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 18), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("twa", 1), ("tws", 2), )).clone(1)).setMaxAccess("readcreate")
sdlcLSAdminRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 1, 1, 19), RowStatus()).setMaxAccess("readcreate")
sdlcLSOperTable = MibTable((1, 3, 6, 1, 2, 1, 41, 1, 2, 2))
sdlcLSOperEntry = MibTableRow((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1)).setIndexNames((0, "RFC1213-MIB", "ifIndex"), (0, "SNA-SDLC-MIB", "sdlcLSAddress"))
sdlcLSOperName = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 1), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 10))).setMaxAccess("readonly")
sdlcLSOperRole = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 2), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,2,1,)).subtype(namedValues=namedval.NamedValues(("primary", 1), ("secondary", 2), ("undefined", 3), ))).setMaxAccess("readonly")
sdlcLSOperState = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 3), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(4,2,3,1,)).subtype(namedValues=namedval.NamedValues(("discontacted", 1), ("contactPending", 2), ("contacted", 3), ("discontactPending", 4), ))).setMaxAccess("readonly")
sdlcLSOperMAXDATASend = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 4), Integer32()).setMaxAccess("readonly")
sdlcLSOperREPLYTO = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 5), TimeInterval()).setMaxAccess("readonly")
sdlcLSOperMAXIN = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 6), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
sdlcLSOperMAXOUT = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 7), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 127))).setMaxAccess("readonly")
sdlcLSOperMODULO = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 8), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(128,8,)).subtype(namedValues=namedval.NamedValues(("onetwentyeight", 128), ("eight", 8), )).clone(8)).setMaxAccess("readonly")
sdlcLSOperRETRIESm = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 9), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 128))).setMaxAccess("readonly")
sdlcLSOperRETRIESt = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 10), TimeInterval()).setMaxAccess("readonly")
sdlcLSOperRETRIESn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 11), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
sdlcLSOperRNRLIMIT = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 12), TimeInterval()).setMaxAccess("readonly")
sdlcLSOperDATMODE = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 13), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("half", 1), ("full", 2), ))).setMaxAccess("readonly")
sdlcLSOperLastModifyTime = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 14), TimeTicks()).setMaxAccess("readonly")
sdlcLSOperLastFailTime = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 15), TimeTicks()).setMaxAccess("readonly")
sdlcLSOperLastFailCause = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 16), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(6,1,5,7,3,2,8,4,)).subtype(namedValues=namedval.NamedValues(("undefined", 1), ("rxFRMR", 2), ("txFRMR", 3), ("noResponse", 4), ("protocolErr", 5), ("noActivity", 6), ("rnrLimit", 7), ("retriesExpired", 8), )).clone(1)).setMaxAccess("readonly")
sdlcLSOperLastFailCtrlIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 17), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 2))).setMaxAccess("readonly")
sdlcLSOperLastFailCtrlOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 18), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 2))).setMaxAccess("readonly")
sdlcLSOperLastFailFRMRInfo = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 19), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(3, 3)).setFixedLength()).setMaxAccess("readonly")
sdlcLSOperLastFailREPLYTOs = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 20), Counter32()).setMaxAccess("readonly")
sdlcLSOperEcho = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 21), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), )).clone(1)).setMaxAccess("readonly")
sdlcLSOperGPoll = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 22), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 254)).clone(0)).setMaxAccess("readonly")
sdlcLSOperSimRim = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 23), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("no", 1), ("yes", 2), )).clone(1)).setMaxAccess("readonly")
sdlcLSOperXmitRcvCap = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 2, 1, 24), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("twa", 1), ("tws", 2), )).clone(1)).setMaxAccess("readonly")
sdlcLSStatsTable = MibTable((1, 3, 6, 1, 2, 1, 41, 1, 2, 3))
sdlcLSStatsEntry = MibTableRow((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1)).setIndexNames((0, "RFC1213-MIB", "ifIndex"), (0, "SNA-SDLC-MIB", "sdlcLSAddress"))
sdlcLSStatsBLUsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 1), Counter32()).setMaxAccess("readonly")
sdlcLSStatsBLUsOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 2), Counter32()).setMaxAccess("readonly")
sdlcLSStatsOctetsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 3), Counter32()).setMaxAccess("readonly")
sdlcLSStatsOctetsOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 4), Counter32()).setMaxAccess("readonly")
sdlcLSStatsPollsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 5), Counter32()).setMaxAccess("readonly")
sdlcLSStatsPollsOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 6), Counter32()).setMaxAccess("readonly")
sdlcLSStatsPollRspsOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 7), Counter32()).setMaxAccess("readonly")
sdlcLSStatsPollRspsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 8), Counter32()).setMaxAccess("readonly")
sdlcLSStatsLocalBusies = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 9), Counter32()).setMaxAccess("readonly")
sdlcLSStatsRemoteBusies = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 10), Counter32()).setMaxAccess("readonly")
sdlcLSStatsIFramesIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 11), Counter32()).setMaxAccess("readonly")
sdlcLSStatsIFramesOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 12), Counter32()).setMaxAccess("readonly")
sdlcLSStatsUIFramesIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 13), Counter32()).setMaxAccess("readonly")
sdlcLSStatsUIFramesOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 14), Counter32()).setMaxAccess("readonly")
sdlcLSStatsXIDsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 15), Counter32()).setMaxAccess("readonly")
sdlcLSStatsXIDsOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 16), Counter32()).setMaxAccess("readonly")
sdlcLSStatsTESTsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 17), Counter32()).setMaxAccess("readonly")
sdlcLSStatsTESTsOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 18), Counter32()).setMaxAccess("readonly")
sdlcLSStatsREJsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 19), Counter32()).setMaxAccess("readonly")
sdlcLSStatsREJsOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 20), Counter32()).setMaxAccess("readonly")
sdlcLSStatsFRMRsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 21), Counter32()).setMaxAccess("readonly")
sdlcLSStatsFRMRsOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 22), Counter32()).setMaxAccess("readonly")
sdlcLSStatsSIMsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 23), Counter32()).setMaxAccess("readonly")
sdlcLSStatsSIMsOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 24), Counter32()).setMaxAccess("readonly")
sdlcLSStatsRIMsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 25), Counter32()).setMaxAccess("readonly")
sdlcLSStatsRIMsOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 26), Counter32()).setMaxAccess("readonly")
sdlcLSStatsDISCIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 27), Counter32()).setMaxAccess("readonly")
sdlcLSStatsDISCOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 28), Counter32()).setMaxAccess("readonly")
sdlcLSStatsUAIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 29), Counter32()).setMaxAccess("readonly")
sdlcLSStatsUAOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 30), Counter32()).setMaxAccess("readonly")
sdlcLSStatsDMIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 31), Counter32()).setMaxAccess("readonly")
sdlcLSStatsDMOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 32), Counter32()).setMaxAccess("readonly")
sdlcLSStatsSNRMIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 33), Counter32()).setMaxAccess("readonly")
sdlcLSStatsSNRMOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 34), Counter32()).setMaxAccess("readonly")
sdlcLSStatsProtocolErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 35), Counter32()).setMaxAccess("readonly")
sdlcLSStatsActivityTOs = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 36), Counter32()).setMaxAccess("readonly")
sdlcLSStatsRNRLIMITs = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 37), Counter32()).setMaxAccess("readonly")
sdlcLSStatsRetriesExps = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 38), Counter32()).setMaxAccess("readonly")
sdlcLSStatsRetransmitsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 39), Counter32()).setMaxAccess("readonly")
sdlcLSStatsRetransmitsOut = MibTableColumn((1, 3, 6, 1, 2, 1, 41, 1, 2, 3, 1, 40), Counter32()).setMaxAccess("readonly")
sdlcTraps = MibIdentifier((1, 3, 6, 1, 2, 1, 41, 1, 3))
sdlcConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 41, 1, 4))
sdlcCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 41, 1, 4, 1))
sdlcGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 41, 1, 4, 2))
sdlcCoreGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 41, 1, 4, 2, 1))
sdlcPrimaryGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 41, 1, 4, 2, 2))

# Augmentions

# Notifications

sdlcPortStatusChange = NotificationType((1, 3, 6, 1, 2, 1, 41, 1, 3, 1)).setObjects(("RFC1213-MIB", "ifIndex"), ("SNA-SDLC-MIB", "sdlcPortOperLastFailCause"), ("SNA-SDLC-MIB", "sdlcPortOperLastFailTime"), ("RFC1213-MIB", "ifAdminStatus"), ("RFC1213-MIB", "ifOperStatus"), )
sdlcLSStatusChange = NotificationType((1, 3, 6, 1, 2, 1, 41, 1, 3, 2)).setObjects(("SNA-SDLC-MIB", "sdlcLSOperLastFailTime"), ("SNA-SDLC-MIB", "sdlcLSOperLastFailCtrlOut"), ("SNA-SDLC-MIB", "sdlcLSOperLastFailCause"), ("SNA-SDLC-MIB", "sdlcLSOperLastFailREPLYTOs"), ("RFC1213-MIB", "ifIndex"), ("SNA-SDLC-MIB", "sdlcLSAdminState"), ("SNA-SDLC-MIB", "sdlcLSAddress"), ("SNA-SDLC-MIB", "sdlcLSOperLastFailCtrlIn"), ("SNA-SDLC-MIB", "sdlcLSOperLastFailFRMRInfo"), ("SNA-SDLC-MIB", "sdlcLSOperState"), )

# Groups

sdlcCoreLSStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 41, 1, 4, 2, 1, 6)).setObjects(("SNA-SDLC-MIB", "sdlcLSStatsUIFramesOut"), ("SNA-SDLC-MIB", "sdlcLSStatsRemoteBusies"), ("SNA-SDLC-MIB", "sdlcLSStatsBLUsOut"), ("SNA-SDLC-MIB", "sdlcLSStatsTESTsOut"), ("SNA-SDLC-MIB", "sdlcLSStatsSIMsOut"), ("SNA-SDLC-MIB", "sdlcLSStatsXIDsOut"), ("SNA-SDLC-MIB", "sdlcLSStatsTESTsIn"), ("SNA-SDLC-MIB", "sdlcLSStatsRIMsOut"), ("SNA-SDLC-MIB", "sdlcLSStatsRNRLIMITs"), ("SNA-SDLC-MIB", "sdlcLSStatsPollRspsIn"), ("SNA-SDLC-MIB", "sdlcLSStatsIFramesIn"), ("SNA-SDLC-MIB", "sdlcLSStatsREJsIn"), ("SNA-SDLC-MIB", "sdlcLSStatsRetransmitsIn"), ("SNA-SDLC-MIB", "sdlcLSStatsSIMsIn"), ("SNA-SDLC-MIB", "sdlcLSStatsBLUsIn"), ("SNA-SDLC-MIB", "sdlcLSStatsRetriesExps"), ("SNA-SDLC-MIB", "sdlcLSStatsPollsIn"), ("SNA-SDLC-MIB", "sdlcLSStatsOctetsOut"), ("SNA-SDLC-MIB", "sdlcLSStatsPollsOut"), ("SNA-SDLC-MIB", "sdlcLSStatsREJsOut"), ("SNA-SDLC-MIB", "sdlcLSStatsLocalBusies"), ("SNA-SDLC-MIB", "sdlcLSStatsFRMRsOut"), ("SNA-SDLC-MIB", "sdlcLSStatsIFramesOut"), ("SNA-SDLC-MIB", "sdlcLSStatsFRMRsIn"), ("SNA-SDLC-MIB", "sdlcLSStatsPollRspsOut"), ("SNA-SDLC-MIB", "sdlcLSStatsRIMsIn"), ("SNA-SDLC-MIB", "sdlcLSStatsXIDsIn"), ("SNA-SDLC-MIB", "sdlcLSStatsUIFramesIn"), ("SNA-SDLC-MIB", "sdlcLSStatsOctetsIn"), ("SNA-SDLC-MIB", "sdlcLSStatsRetransmitsOut"), ("SNA-SDLC-MIB", "sdlcLSStatsProtocolErrs"), )
sdlcCorePortAdminGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 41, 1, 4, 2, 1, 1)).setObjects(("SNA-SDLC-MIB", "sdlcPortAdminName"), ("SNA-SDLC-MIB", "sdlcPortAdminRole"), ("SNA-SDLC-MIB", "sdlcPortAdminTopology"), ("SNA-SDLC-MIB", "sdlcPortAdminISTATUS"), ("SNA-SDLC-MIB", "sdlcPortAdminType"), )
sdlcCoreLSAdminGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 41, 1, 4, 2, 1, 4)).setObjects(("SNA-SDLC-MIB", "sdlcLSAdminGPoll"), ("SNA-SDLC-MIB", "sdlcLSAdminRNRLIMIT"), ("SNA-SDLC-MIB", "sdlcLSAdminDATMODE"), ("SNA-SDLC-MIB", "sdlcLSAdminName"), ("SNA-SDLC-MIB", "sdlcLSAdminMAXDATARcv"), ("SNA-SDLC-MIB", "sdlcLSAdminMAXIN"), ("SNA-SDLC-MIB", "sdlcLSAdminISTATUS"), ("SNA-SDLC-MIB", "sdlcLSAdminSimRim"), ("SNA-SDLC-MIB", "sdlcLSAdminRowStatus"), ("SNA-SDLC-MIB", "sdlcLSAdminMAXOUT"), ("SNA-SDLC-MIB", "sdlcLSAdminRETRIESm"), ("SNA-SDLC-MIB", "sdlcLSAdminState"), ("SNA-SDLC-MIB", "sdlcLSAddress"), ("SNA-SDLC-MIB", "sdlcLSAdminRETRIESt"), ("SNA-SDLC-MIB", "sdlcLSAdminMAXDATASend"), ("SNA-SDLC-MIB", "sdlcLSAdminMODULO"), ("SNA-SDLC-MIB", "sdlcLSAdminRETRIESn"), )
sdlcCoreLSOperGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 41, 1, 4, 2, 1, 5)).setObjects(("SNA-SDLC-MIB", "sdlcLSOperLastFailTime"), ("SNA-SDLC-MIB", "sdlcLSOperRETRIESt"), ("SNA-SDLC-MIB", "sdlcLSOperRETRIESn"), ("SNA-SDLC-MIB", "sdlcLSOperGPoll"), ("SNA-SDLC-MIB", "sdlcLSOperLastFailCause"), ("SNA-SDLC-MIB", "sdlcLSOperLastFailCtrlIn"), ("SNA-SDLC-MIB", "sdlcLSOperEcho"), ("SNA-SDLC-MIB", "sdlcLSOperMAXOUT"), ("SNA-SDLC-MIB", "sdlcLSOperRNRLIMIT"), ("SNA-SDLC-MIB", "sdlcLSOperMODULO"), ("SNA-SDLC-MIB", "sdlcLSOperDATMODE"), ("SNA-SDLC-MIB", "sdlcLSOperLastFailCtrlOut"), ("SNA-SDLC-MIB", "sdlcLSOperMAXDATASend"), ("SNA-SDLC-MIB", "sdlcLSOperRole"), ("SNA-SDLC-MIB", "sdlcLSOperRETRIESm"), ("SNA-SDLC-MIB", "sdlcLSOperLastFailREPLYTOs"), ("SNA-SDLC-MIB", "sdlcLSOperLastFailFRMRInfo"), ("SNA-SDLC-MIB", "sdlcLSOperMAXIN"), ("SNA-SDLC-MIB", "sdlcLSOperState"), )
sdlcCorePortStatsGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 41, 1, 4, 2, 1, 3)).setObjects(("SNA-SDLC-MIB", "sdlcPortStatsInvalidAddresses"), ("SNA-SDLC-MIB", "sdlcPortStatsDwarfFrames"), ("SNA-SDLC-MIB", "sdlcPortStatsPhysicalFailures"), )
sdlcPrimaryGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 41, 1, 4, 2, 2, 1)).setObjects(("SNA-SDLC-MIB", "sdlcLSOperREPLYTO"), ("SNA-SDLC-MIB", "sdlcPortOperPAUSE"), ("SNA-SDLC-MIB", "sdlcPortAdminPAUSE"), ("SNA-SDLC-MIB", "sdlcLSAdminREPLYTO"), )
sdlcPrimaryMultipointGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 41, 1, 4, 2, 2, 2)).setObjects(("SNA-SDLC-MIB", "sdlcPortOperSERVLIM"), ("SNA-SDLC-MIB", "sdlcPortAdminSlowPollTimer"), ("SNA-SDLC-MIB", "sdlcPortAdminSERVLIM"), ("SNA-SDLC-MIB", "sdlcPortOperSlowPollTimer"), ("SNA-SDLC-MIB", "sdlcPortOperSlowPollMethod"), )
sdlcCorePortOperGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 41, 1, 4, 2, 1, 2)).setObjects(("SNA-SDLC-MIB", "sdlcPortOperLastFailTime"), ("SNA-SDLC-MIB", "sdlcPortOperName"), ("SNA-SDLC-MIB", "sdlcPortOperLastFailCause"), ("SNA-SDLC-MIB", "sdlcPortOperTopology"), ("SNA-SDLC-MIB", "sdlcPortOperACTIVTO"), ("SNA-SDLC-MIB", "sdlcPortOperISTATUS"), ("SNA-SDLC-MIB", "sdlcPortOperRole"), ("SNA-SDLC-MIB", "sdlcPortOperType"), )

# Exports

# Module identity
mibBuilder.exportSymbols("SNA-SDLC-MIB", PYSNMP_MODULE_ID=snaDLC)

# Objects
mibBuilder.exportSymbols("SNA-SDLC-MIB", snaDLC=snaDLC, sdlc=sdlc, sdlcPortGroup=sdlcPortGroup, sdlcPortAdminTable=sdlcPortAdminTable, sdlcPortAdminEntry=sdlcPortAdminEntry, sdlcPortAdminName=sdlcPortAdminName, sdlcPortAdminRole=sdlcPortAdminRole, sdlcPortAdminType=sdlcPortAdminType, sdlcPortAdminTopology=sdlcPortAdminTopology, sdlcPortAdminISTATUS=sdlcPortAdminISTATUS, sdlcPortAdminACTIVTO=sdlcPortAdminACTIVTO, sdlcPortAdminPAUSE=sdlcPortAdminPAUSE, sdlcPortAdminSERVLIM=sdlcPortAdminSERVLIM, sdlcPortAdminSlowPollTimer=sdlcPortAdminSlowPollTimer, sdlcPortOperTable=sdlcPortOperTable, sdlcPortOperEntry=sdlcPortOperEntry, sdlcPortOperName=sdlcPortOperName, sdlcPortOperRole=sdlcPortOperRole, sdlcPortOperType=sdlcPortOperType, sdlcPortOperTopology=sdlcPortOperTopology, sdlcPortOperISTATUS=sdlcPortOperISTATUS, sdlcPortOperACTIVTO=sdlcPortOperACTIVTO, sdlcPortOperPAUSE=sdlcPortOperPAUSE, sdlcPortOperSlowPollMethod=sdlcPortOperSlowPollMethod, sdlcPortOperSERVLIM=sdlcPortOperSERVLIM, sdlcPortOperSlowPollTimer=sdlcPortOperSlowPollTimer, sdlcPortOperLastModifyTime=sdlcPortOperLastModifyTime, sdlcPortOperLastFailTime=sdlcPortOperLastFailTime, sdlcPortOperLastFailCause=sdlcPortOperLastFailCause, sdlcPortStatsTable=sdlcPortStatsTable, sdlcPortStatsEntry=sdlcPortStatsEntry, sdlcPortStatsPhysicalFailures=sdlcPortStatsPhysicalFailures, sdlcPortStatsInvalidAddresses=sdlcPortStatsInvalidAddresses, sdlcPortStatsDwarfFrames=sdlcPortStatsDwarfFrames, sdlcPortStatsPollsIn=sdlcPortStatsPollsIn, sdlcPortStatsPollsOut=sdlcPortStatsPollsOut, sdlcPortStatsPollRspsIn=sdlcPortStatsPollRspsIn, sdlcPortStatsPollRspsOut=sdlcPortStatsPollRspsOut, sdlcPortStatsLocalBusies=sdlcPortStatsLocalBusies, sdlcPortStatsRemoteBusies=sdlcPortStatsRemoteBusies, sdlcPortStatsIFramesIn=sdlcPortStatsIFramesIn, sdlcPortStatsIFramesOut=sdlcPortStatsIFramesOut, sdlcPortStatsOctetsIn=sdlcPortStatsOctetsIn, sdlcPortStatsOctetsOut=sdlcPortStatsOctetsOut, sdlcPortStatsProtocolErrs=sdlcPortStatsProtocolErrs, sdlcPortStatsActivityTOs=sdlcPortStatsActivityTOs, sdlcPortStatsRNRLIMITs=sdlcPortStatsRNRLIMITs, sdlcPortStatsRetriesExps=sdlcPortStatsRetriesExps, sdlcPortStatsRetransmitsIn=sdlcPortStatsRetransmitsIn, sdlcPortStatsRetransmitsOut=sdlcPortStatsRetransmitsOut, sdlcLSGroup=sdlcLSGroup, sdlcLSAdminTable=sdlcLSAdminTable, sdlcLSAdminEntry=sdlcLSAdminEntry, sdlcLSAddress=sdlcLSAddress, sdlcLSAdminName=sdlcLSAdminName, sdlcLSAdminState=sdlcLSAdminState, sdlcLSAdminISTATUS=sdlcLSAdminISTATUS, sdlcLSAdminMAXDATASend=sdlcLSAdminMAXDATASend, sdlcLSAdminMAXDATARcv=sdlcLSAdminMAXDATARcv, sdlcLSAdminREPLYTO=sdlcLSAdminREPLYTO, sdlcLSAdminMAXIN=sdlcLSAdminMAXIN, sdlcLSAdminMAXOUT=sdlcLSAdminMAXOUT, sdlcLSAdminMODULO=sdlcLSAdminMODULO, sdlcLSAdminRETRIESm=sdlcLSAdminRETRIESm, sdlcLSAdminRETRIESt=sdlcLSAdminRETRIESt, sdlcLSAdminRETRIESn=sdlcLSAdminRETRIESn, sdlcLSAdminRNRLIMIT=sdlcLSAdminRNRLIMIT, sdlcLSAdminDATMODE=sdlcLSAdminDATMODE, sdlcLSAdminGPoll=sdlcLSAdminGPoll, sdlcLSAdminSimRim=sdlcLSAdminSimRim, sdlcLSAdminXmitRcvCap=sdlcLSAdminXmitRcvCap, sdlcLSAdminRowStatus=sdlcLSAdminRowStatus, sdlcLSOperTable=sdlcLSOperTable, sdlcLSOperEntry=sdlcLSOperEntry, sdlcLSOperName=sdlcLSOperName, sdlcLSOperRole=sdlcLSOperRole, sdlcLSOperState=sdlcLSOperState, sdlcLSOperMAXDATASend=sdlcLSOperMAXDATASend, sdlcLSOperREPLYTO=sdlcLSOperREPLYTO, sdlcLSOperMAXIN=sdlcLSOperMAXIN, sdlcLSOperMAXOUT=sdlcLSOperMAXOUT, sdlcLSOperMODULO=sdlcLSOperMODULO, sdlcLSOperRETRIESm=sdlcLSOperRETRIESm, sdlcLSOperRETRIESt=sdlcLSOperRETRIESt, sdlcLSOperRETRIESn=sdlcLSOperRETRIESn, sdlcLSOperRNRLIMIT=sdlcLSOperRNRLIMIT, sdlcLSOperDATMODE=sdlcLSOperDATMODE, sdlcLSOperLastModifyTime=sdlcLSOperLastModifyTime, sdlcLSOperLastFailTime=sdlcLSOperLastFailTime, sdlcLSOperLastFailCause=sdlcLSOperLastFailCause, sdlcLSOperLastFailCtrlIn=sdlcLSOperLastFailCtrlIn, sdlcLSOperLastFailCtrlOut=sdlcLSOperLastFailCtrlOut, sdlcLSOperLastFailFRMRInfo=sdlcLSOperLastFailFRMRInfo, sdlcLSOperLastFailREPLYTOs=sdlcLSOperLastFailREPLYTOs, sdlcLSOperEcho=sdlcLSOperEcho, sdlcLSOperGPoll=sdlcLSOperGPoll, sdlcLSOperSimRim=sdlcLSOperSimRim, sdlcLSOperXmitRcvCap=sdlcLSOperXmitRcvCap, sdlcLSStatsTable=sdlcLSStatsTable, sdlcLSStatsEntry=sdlcLSStatsEntry, sdlcLSStatsBLUsIn=sdlcLSStatsBLUsIn, sdlcLSStatsBLUsOut=sdlcLSStatsBLUsOut, sdlcLSStatsOctetsIn=sdlcLSStatsOctetsIn, sdlcLSStatsOctetsOut=sdlcLSStatsOctetsOut, sdlcLSStatsPollsIn=sdlcLSStatsPollsIn, sdlcLSStatsPollsOut=sdlcLSStatsPollsOut, sdlcLSStatsPollRspsOut=sdlcLSStatsPollRspsOut, sdlcLSStatsPollRspsIn=sdlcLSStatsPollRspsIn, sdlcLSStatsLocalBusies=sdlcLSStatsLocalBusies, sdlcLSStatsRemoteBusies=sdlcLSStatsRemoteBusies, sdlcLSStatsIFramesIn=sdlcLSStatsIFramesIn, sdlcLSStatsIFramesOut=sdlcLSStatsIFramesOut, sdlcLSStatsUIFramesIn=sdlcLSStatsUIFramesIn, sdlcLSStatsUIFramesOut=sdlcLSStatsUIFramesOut, sdlcLSStatsXIDsIn=sdlcLSStatsXIDsIn, sdlcLSStatsXIDsOut=sdlcLSStatsXIDsOut, sdlcLSStatsTESTsIn=sdlcLSStatsTESTsIn, sdlcLSStatsTESTsOut=sdlcLSStatsTESTsOut, sdlcLSStatsREJsIn=sdlcLSStatsREJsIn, sdlcLSStatsREJsOut=sdlcLSStatsREJsOut, sdlcLSStatsFRMRsIn=sdlcLSStatsFRMRsIn, sdlcLSStatsFRMRsOut=sdlcLSStatsFRMRsOut, sdlcLSStatsSIMsIn=sdlcLSStatsSIMsIn, sdlcLSStatsSIMsOut=sdlcLSStatsSIMsOut, sdlcLSStatsRIMsIn=sdlcLSStatsRIMsIn, sdlcLSStatsRIMsOut=sdlcLSStatsRIMsOut)
mibBuilder.exportSymbols("SNA-SDLC-MIB", sdlcLSStatsDISCIn=sdlcLSStatsDISCIn, sdlcLSStatsDISCOut=sdlcLSStatsDISCOut, sdlcLSStatsUAIn=sdlcLSStatsUAIn, sdlcLSStatsUAOut=sdlcLSStatsUAOut, sdlcLSStatsDMIn=sdlcLSStatsDMIn, sdlcLSStatsDMOut=sdlcLSStatsDMOut, sdlcLSStatsSNRMIn=sdlcLSStatsSNRMIn, sdlcLSStatsSNRMOut=sdlcLSStatsSNRMOut, sdlcLSStatsProtocolErrs=sdlcLSStatsProtocolErrs, sdlcLSStatsActivityTOs=sdlcLSStatsActivityTOs, sdlcLSStatsRNRLIMITs=sdlcLSStatsRNRLIMITs, sdlcLSStatsRetriesExps=sdlcLSStatsRetriesExps, sdlcLSStatsRetransmitsIn=sdlcLSStatsRetransmitsIn, sdlcLSStatsRetransmitsOut=sdlcLSStatsRetransmitsOut, sdlcTraps=sdlcTraps, sdlcConformance=sdlcConformance, sdlcCompliances=sdlcCompliances, sdlcGroups=sdlcGroups, sdlcCoreGroups=sdlcCoreGroups, sdlcPrimaryGroups=sdlcPrimaryGroups)

# Notifications
mibBuilder.exportSymbols("SNA-SDLC-MIB", sdlcPortStatusChange=sdlcPortStatusChange, sdlcLSStatusChange=sdlcLSStatusChange)

# Groups
mibBuilder.exportSymbols("SNA-SDLC-MIB", sdlcCoreLSStatsGroup=sdlcCoreLSStatsGroup, sdlcCorePortAdminGroup=sdlcCorePortAdminGroup, sdlcCoreLSAdminGroup=sdlcCoreLSAdminGroup, sdlcCoreLSOperGroup=sdlcCoreLSOperGroup, sdlcCorePortStatsGroup=sdlcCorePortStatsGroup, sdlcPrimaryGroup=sdlcPrimaryGroup, sdlcPrimaryMultipointGroup=sdlcPrimaryMultipointGroup, sdlcCorePortOperGroup=sdlcCorePortOperGroup)
