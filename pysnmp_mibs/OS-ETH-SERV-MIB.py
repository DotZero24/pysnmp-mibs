#
# PySNMP MIB module OS-ETH-SERV-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file:///Users/rob/Code/pysnmp-mibs/mibs/mrv/OS-ETH-SERV-MIB
# Produced by pysmi-1.1.12 at Mon Aug  4 17:02:17 2025
# On host macmini.vegmond.io platform Darwin version 24.5.0 by user rob
# Using Python version 3.12.8 (main, Dec  3 2024, 18:42:41) [Clang 16.0.0 (clang-1600.0.26.4)]
#
OctetString, ObjectIdentifier, Integer = mibBuilder.importSymbols("ASN1", "OctetString", "ObjectIdentifier", "Integer")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion, SingleValueConstraint = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion", "SingleValueConstraint")
Dot1agCfmMpDirection, Dot1agCfmMaintAssocNameType, VlanIdOrNone, Dot1agCfmLowestAlarmPri, Dot1agCfmHighestDefectPri, Dot1agCfmCcmInterval, VlanId = mibBuilder.importSymbols("IEEE8021-CFM-MIB", "Dot1agCfmMpDirection", "Dot1agCfmMaintAssocNameType", "VlanIdOrNone", "Dot1agCfmLowestAlarmPri", "Dot1agCfmHighestDefectPri", "Dot1agCfmCcmInterval", "VlanId")
ServFlowId, OsCfmMepIdOrZero, PortList, ServiceType, BwAccountStatus, StartTimeType, EntityNameOrNone, CfmMDLevel, EntryValidator, MepList, PortIndexOrNone, ProfileStatus, CoS, oaOptiSwitch, EntityName, TagList = mibBuilder.importSymbols("OS-COMMON-TC-MIB", "ServFlowId", "OsCfmMepIdOrZero", "PortList", "ServiceType", "BwAccountStatus", "StartTimeType", "EntityNameOrNone", "CfmMDLevel", "EntryValidator", "MepList", "PortIndexOrNone", "ProfileStatus", "CoS", "oaOptiSwitch", "EntityName", "TagList")
ObjectGroup, NotificationGroup, ModuleCompliance = mibBuilder.importSymbols("SNMPv2-CONF", "ObjectGroup", "NotificationGroup", "ModuleCompliance")
MibScalar, MibTable, MibTableRow, MibTableColumn, MibIdentifier, Unsigned32, Integer32, Gauge32, ModuleIdentity, TimeTicks, NotificationType, Counter32, Bits, IpAddress, iso, ObjectIdentity, Counter64 = mibBuilder.importSymbols("SNMPv2-SMI", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "MibIdentifier", "Unsigned32", "Integer32", "Gauge32", "ModuleIdentity", "TimeTicks", "NotificationType", "Counter32", "Bits", "IpAddress", "iso", "ObjectIdentity", "Counter64")
DateAndTime, TimeInterval, MacAddress, TextualConvention, DisplayString, TruthValue = mibBuilder.importSymbols("SNMPv2-TC", "DateAndTime", "TimeInterval", "MacAddress", "TextualConvention", "DisplayString", "TruthValue")
osEthServ = ModuleIdentity((1, 3, 6, 1, 4, 1, 6926, 2, 10))
osEthServ.setRevisions(('2021-08-17 00:00', '2019-12-26 00:00', '2019-05-17 00:00', '2018-12-30 00:00', '2018-01-02 00:00', '2017-12-18 00:00', '2017-01-30 00:00', '2017-01-09 00:00', '2015-07-12 00:00', '2015-02-04 00:00', '2014-09-18 00:00', '2014-06-10 00:00', '2014-01-12 00:00', '2013-12-05 00:00', '2013-10-15 00:00', '2013-08-28 00:00', '2013-05-05 00:00', '2013-03-25 00:00', '2013-01-21 00:00', '2012-06-11 00:00', '2012-04-23 00:00', '2012-04-15 00:00', '2012-03-13 00:00', '2011-11-16 00:00', '2011-09-21 00:00', '2011-07-27 00:00', '2011-06-19 00:00', '2011-01-27 00:00', '2010-12-16 00:00', '2010-12-07 00:00', '2010-11-03 00:00', '2010-03-15 00:00', '2008-01-09 00:00',))
if mibBuilder.loadTexts: osEthServ.setLastUpdated('202108170000Z')
if mibBuilder.loadTexts: osEthServ.setOrganization('MRV Communications, Inc.')
osEthSrvNotifications = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 10, 0))
osEthCapabilities = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 10, 1))
osEthConformance = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 10, 100))
osEthMIBCompliances = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 10, 100, 1))
osEthMIBGroups = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 10, 100, 2))
osEthSrvFeaturesSupport = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 10, 1, 1), Bits().clone(namedValues=NamedValues(("ingressRateLimitByService", 0), ("egressRateLimitByService", 1), ("performanceByService", 2), ("ccmByService", 3), ("unused1", 4), ("unused2", 5), ("ingressRateLimitByFlow", 6), ("egressRateLimitByFlow", 7), ("performanceByFlow", 8), ("classificationByPcp", 9), ("classificationByDscp", 10), ("classificationByPcpDscp", 11), ("classificationByDscpPcp", 12), ("classificationByPortPrio", 13), ("actRedirectSrvToCpu", 14), ("actMirrorToCpu", 15), ("actSwapTag", 16), ("mayDoSlowPerformanceTests", 17), ("mayDoFastPerformanceTests", 18), ("mayProcessServChangeIngCVlan", 19), ("mayProcessCcmClean", 20), ("mayProcessRMepAgingTime", 21), ("mayEgressDownRateLimitByService", 22), ("mayEgressUpRateLimitByService", 23), ("mayEgressDownRateLimitByFlow", 24), ("mayEgressUpRateLimitByFlow", 25)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthSrvFeaturesSupport.setStatus('current')
osEthSrvTypesSupported = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 10, 1, 2), Bits().clone(namedValues=NamedValues(("supportEpL", 0), ("supportEvpL", 1), ("supportEpLan", 2), ("supportEvpLan", 3), ("supportEpTree", 4), ("supportEvpTree", 5), ("supportAggregation", 6)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthSrvTypesSupported.setStatus('deprecated')
osEthMaxSlValue = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 10, 1, 3), Unsigned32()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthMaxSlValue.setStatus('current')
osEthBwMinCIR = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 10, 1, 10), Unsigned32()).setUnits('Kbits/sec').setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthBwMinCIR.setStatus('current')
osEthBwMaxCIR = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 10, 1, 11), Unsigned32()).setUnits('Kbits/sec').setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthBwMaxCIR.setStatus('current')
osEthBwMinCBS = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 10, 1, 12), Unsigned32()).setUnits('Kbyte').setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthBwMinCBS.setStatus('current')
osEthBwMaxCBS = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 10, 1, 13), Unsigned32()).setUnits('Kbyte').setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthBwMaxCBS.setStatus('current')
osEthBwMinEIR = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 10, 1, 14), Unsigned32()).setUnits('Kbits/sec').setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthBwMinEIR.setStatus('current')
osEthBwMaxEIR = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 10, 1, 15), Unsigned32()).setUnits('Kbits/sec').setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthBwMaxEIR.setStatus('current')
osEthBwMinEBS = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 10, 1, 16), Unsigned32()).setUnits('Kbyte').setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthBwMinEBS.setStatus('current')
osEthBwMaxEBS = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 10, 1, 17), Unsigned32()).setUnits('Kbyte').setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthBwMaxEBS.setStatus('current')
osEthSrvFsSupported = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 10, 1, 18), Bits().clone(namedValues=NamedValues(("upstreamIngressService", 0), ("downstreamIngressService", 1), ("upstreamEgressService", 2), ("downstreamEgressService", 3), ("upstreamIngressFlow", 4), ("downstreamIngressFlow", 5), ("upstreamEgressFlow", 6), ("downstreamEgressFlow", 7)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthSrvFsSupported.setStatus('current')
osEthSrvMaxNumEnabledServices = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 10, 1, 19), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(4, 2048), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthSrvMaxNumEnabledServices.setStatus('current')
osEthServTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2), )
if mibBuilder.loadTexts: osEthServTable.setStatus('current')
osEthServEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"))
if mibBuilder.loadTexts: osEthServEntry.setStatus('current')
osEthServId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 1), EntityName())
if mibBuilder.loadTexts: osEthServId.setStatus('current')
osEthServNodeType = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 2), ServiceType().clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServNodeType.setStatus('current')
osEthServSVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 4), VlanIdOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServSVlanId.setStatus('current')
osEthServCVlans = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 5), TagList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServCVlans.setStatus('current')
osEthServIncludesUntagged = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 6), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServIncludesUntagged.setStatus('current')
osEthServChangeIngCVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 7), VlanIdOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServChangeIngCVlan.setStatus('current')
osEthServSPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 9), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServSPorts.setStatus('current')
osEthServCPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 10), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServCPorts.setStatus('current')
osEthServClassifyFlowBy = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 11), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("none", 2), ("pcp", 3), ("dscp", 4), ("pcpdscp", 5), ("dscppcp", 6), ("portPrio", 7))).clone('pcp')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServClassifyFlowBy.setStatus('deprecated')
osEthServLoopback = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("none", 2), ("reflect", 3), ("macSwap", 4))).clone('none')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServLoopback.setStatus('current')
osEthServLearning = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 13), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServLearning.setStatus('current')
osEthServMDLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 15), CfmMDLevel().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServMDLevel.setStatus('current')
osEthServMAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServMAIndex.setStatus('current')
osEthServMepPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 18), PortIndexOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServMepPortIndex.setStatus('current')
osEthServMepDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 19), Dot1agCfmMpDirection().clone('up')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServMepDirection.setStatus('current')
osEthServSpokeVcName = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 20), EntityNameOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServSpokeVcName.setStatus('current')
osEthServSpokeVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("unknown", 1), ("typeEthernet", 2), ("typeVlan", 3))).clone('unknown')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServSpokeVcType.setStatus('current')
osEthServSpokeVcOuterVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("keepVlan", 1), ("dropVlan", 2))).clone('keepVlan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServSpokeVcOuterVlan.setStatus('current')
osEthServCfmPrfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 40), EntityNameOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServCfmPrfl.setStatus('current')
osEthServCcmEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 41), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServCcmEnabled.setStatus('current')
osEthServCcmHighestPrDefect = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 42), Dot1agCfmHighestDefectPri()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServCcmHighestPrDefect.setStatus('current')
osEthServCcmCoS = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 43), CoS().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServCcmCoS.setStatus('current')
osEthServCcmClean = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 44), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServCcmClean.setStatus('current')
osEthServEgrMarkSl = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 45), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 8), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServEgrMarkSl.setStatus('current')
osEthServDnEgPcpRemap = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 46), Unsigned32().clone(2290649224)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServDnEgPcpRemap.setStatus('current')
osEthServActionPrfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 52), EntityNameOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServActionPrfl.setStatus('current')
osEthServProtectionRole = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 56), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("primary", 1), ("protection", 2))).clone('primary')).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServProtectionRole.setStatus('current')
osEthServPVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 57), VlanIdOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServPVlanId.setStatus('current')
osEthServPPortList = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 58), PortList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServPPortList.setStatus('current')
osEthServLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 64), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServLastError.setStatus('current')
osEthServDescription = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 65), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServDescription.setStatus('current')
osEthServNatPfExternalMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 70), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServNatPfExternalMode.setStatus('current')
osEthServAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 98), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))).clone(namedValues=NamedValues(("unknown", 1), ("nothing", 2), ("delete", 3), ("create", 4), ("enable", 5), ("disable", 6), ("lock", 7), ("unLock", 8), ("cancelLocking", 9), ("erase", 10)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServAdminStatus.setStatus('current')
osEthServOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 2, 1, 99), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 5, 6, 7, 8, 9))).clone(namedValues=NamedValues(("unknown", 1), ("invalid", 2), ("absent", 3), ("enabled", 5), ("disabled", 6), ("lockedEnabled", 7), ("lockedDisabled", 8), ("underEnabling", 9)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServOperStatus.setStatus('current')
osEthServClassTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 3), )
if mibBuilder.loadTexts: osEthServClassTable.setStatus('current')
osEthServClassEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 3, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"), (0, "OS-ETH-SERV-MIB", "osEthServClassMethod"), (0, "OS-ETH-SERV-MIB", "osEthServClassValue"))
if mibBuilder.loadTexts: osEthServClassEntry.setStatus('current')
osEthServClassMethod = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 3, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 3, 4, 8))).clone(namedValues=NamedValues(("unknown", 1), ("pcp", 3), ("dscp", 4), ("tag", 8))))
if mibBuilder.loadTexts: osEthServClassMethod.setStatus('current')
osEthServClassValue = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 3, 1, 4), Unsigned32())
if mibBuilder.loadTexts: osEthServClassValue.setStatus('current')
osEthServClassCoS = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 3, 1, 5), CoS().clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServClassCoS.setStatus('current')
osEthServClassAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 3, 1, 98), EntryValidator()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServClassAdminStatus.setStatus('current')
osEthServFlowTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10), )
if mibBuilder.loadTexts: osEthServFlowTable.setStatus('current')
osEthServFlowEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"), (0, "OS-ETH-SERV-MIB", "osEthServFlowId"))
if mibBuilder.loadTexts: osEthServFlowEntry.setStatus('current')
osEthServFlowId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 5), ServFlowId())
if mibBuilder.loadTexts: osEthServFlowId.setStatus('current')
osEthServFlowIngBwPrfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 6), EntityNameOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowIngBwPrfl.setStatus('current')
osEthServFlowIngBwAccStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 7), BwAccountStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowIngBwAccStatus.setStatus('current')
osEthServFlowEgBwPrfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 10), EntityNameOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowEgBwPrfl.setStatus('current')
osEthServFlowEgBwAccStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 11), BwAccountStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowEgBwAccStatus.setStatus('current')
osEthServFlowFloodLimPrfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 12), EntityNameOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowFloodLimPrfl.setStatus('current')
osEthServFlowPerfPrfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 15), EntityNameOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowPerfPrfl.setStatus('current')
osEthServFlowMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 16), OsCfmMepIdOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowMepId.setStatus('current')
osEthServFlowMepReserve1 = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 17), PortIndexOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowMepReserve1.setStatus('current')
osEthServFlowPerfDestMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 19), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowPerfDestMacAddress.setStatus('current')
osEthServFlowPerfDestMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 20), OsCfmMepIdOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowPerfDestMepId.setStatus('current')
osEthServFlowPerfDestMepList = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 21), MepList()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowPerfDestMepList.setStatus('current')
osEthServFlowPerfDestType = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 22), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("singleRMepId", 1), ("macAddress", 2), ("listOfRMeps", 3))).clone('macAddress')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowPerfDestType.setStatus('current')
osEthServFlowPerfEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 23), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowPerfEnabled.setStatus('current')
osEthServFlowRemarkBits = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 24), Bits().clone(namedValues=NamedValues(("reserved", 0), ("markDscp", 1), ("markPcp", 2)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowRemarkBits.setStatus('current')
osEthServFlowMarkDscp = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 26), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowMarkDscp.setStatus('current')
osEthServFlowMarkPcp = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 27), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowMarkPcp.setStatus('current')
osEthServFlowRestOfTraffic = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 30), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowRestOfTraffic.setStatus('current')
osEthServFlowLbmPrfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 40), EntityNameOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowLbmPrfl.setStatus('current')
osEthServFlowLbmDestMacAddress = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 41), MacAddress()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowLbmDestMacAddress.setStatus('current')
osEthServFlowLbmDestMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 42), OsCfmMepIdOrZero()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowLbmDestMepId.setStatus('current')
osEthServFlowLbmDestType = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 43), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("singleRMepId", 1), ("macAddress", 2), ("listOfRMeps", 3), ("multicastClass1", 4), ("multicastClass2", 5))).clone('macAddress')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowLbmDestType.setStatus('current')
osEthServFlowLbmEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 44), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowLbmEnabled.setStatus('current')
osEthServFlowLbmClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 45), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowLbmClear.setStatus('current')
osEthServFlowUpEgBwPrfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 55), EntityNameOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowUpEgBwPrfl.setStatus('current')
osEthServFlowUpEgBwAccStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 56), BwAccountStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowUpEgBwAccStatus.setStatus('current')
osEthServFlowDnEgBwPrfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 58), EntityNameOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowDnEgBwPrfl.setStatus('current')
osEthServFlowDnEgBwAccStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 59), BwAccountStatus().clone('disabled')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowDnEgBwAccStatus.setStatus('current')
osEthServFlowUpIngFsPrfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 60), EntityNameOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowUpIngFsPrfl.setStatus('current')
osEthServFlowDnIngFsPrfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 61), EntityNameOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowDnIngFsPrfl.setStatus('current')
osEthServFlowUpIngFsSubAgentId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 62), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 9999), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowUpIngFsSubAgentId.setStatus('current')
osEthServFlowDnIngFsSubAgentId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 63), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(-1, -1), ValueRangeConstraint(0, 9999), )).clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowDnIngFsSubAgentId.setStatus('current')
osEthServFlowUpstrDEI = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 64), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("insensitive", 1), ("dpYellow", 2), ("dpRed", 3))).clone('insensitive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowUpstrDEI.setStatus('current')
osEthServFlowDownstrDEI = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 65), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3))).clone(namedValues=NamedValues(("insensitive", 1), ("dpYellow", 2), ("dpRed", 3))).clone('insensitive')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowDownstrDEI.setStatus('current')
osEthServFlowHistoryClear = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 97), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowHistoryClear.setStatus('current')
osEthServFlowAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 10, 1, 98), EntryValidator()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFlowAdminStatus.setStatus('current')
osEthServVcTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 11), )
if mibBuilder.loadTexts: osEthServVcTable.setStatus('current')
osEthServVcEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 11, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"))
if mibBuilder.loadTexts: osEthServVcEntry.setStatus('current')
osEthServVcType = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 11, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("unknown", 1), ("eLine", 2), ("eLan", 3), ("eTree", 4), ("eAccessLine", 5), ("eAccessLan", 6), ("eAccessTree", 7))).clone('eLan')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServVcType.setStatus('current')
osEthServVcSVlanId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 11, 1, 11), VlanIdOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServVcSVlanId.setStatus('current')
osEthServVcMDLevel = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 11, 1, 15), CfmMDLevel().clone(-1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServVcMDLevel.setStatus('current')
osEthServVcMAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 11, 1, 16), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 65535)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServVcMAIndex.setStatus('current')
osEthServVcMaTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 11, 1, 17), Dot1agCfmMaintAssocNameType().clone('charString')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServVcMaTypeName.setStatus('current')
osEthServVcMaName = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 11, 1, 18), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(1, 45))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServVcMaName.setStatus('current')
osEthServVcMtuSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 11, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(64, 16000)).clone(1632)).setUnits('bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServVcMtuSize.setStatus('current')
osEthServFlowTestParamTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 12), )
if mibBuilder.loadTexts: osEthServFlowTestParamTable.setStatus('current')
osEthServFlowTestParamEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 12, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"), (0, "OS-ETH-SERV-MIB", "osEthServFlowId"), (0, "OS-ETH-SERV-MIB", "osEthServFlowTestType"))
if mibBuilder.loadTexts: osEthServFlowTestParamEntry.setStatus('current')
osEthServFlowTestType = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 12, 1, 1), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("pm", 1), ("rfc2544", 2))))
if mibBuilder.loadTexts: osEthServFlowTestType.setStatus('current')
osEthServFlowTestStartTimeType = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 12, 1, 2), StartTimeType().clone('immediate')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthServFlowTestStartTimeType.setStatus('current')
osEthServFlowTestFixedStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 12, 1, 3), DateAndTime().clone(hexValue="0000010100000000")).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthServFlowTestFixedStartTime.setStatus('current')
osEthServFlowTestRelStartTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 12, 1, 4), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 21474836))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthServFlowTestRelStartTime.setStatus('current')
osEthServFlowTestPeriodicity = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 12, 1, 5), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 21474836))).setUnits('seconds').setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthServFlowTestPeriodicity.setStatus('current')
osEthBwTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 13), )
if mibBuilder.loadTexts: osEthBwTable.setStatus('current')
osEthBwEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 13, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthBwId"))
if mibBuilder.loadTexts: osEthBwEntry.setStatus('current')
osEthBwId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 13, 1, 1), EntityName())
if mibBuilder.loadTexts: osEthBwId.setStatus('current')
osEthBwCIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 13, 1, 2), Unsigned32()).setUnits('Kbits/sec').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthBwCIR.setStatus('current')
osEthBwCBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 13, 1, 3), Unsigned32()).setUnits('Kbyte').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthBwCBS.setStatus('current')
osEthBwEIR = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 13, 1, 4), Unsigned32()).setUnits('Kbits/sec').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthBwEIR.setStatus('current')
osEthBwEBS = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 13, 1, 5), Unsigned32()).setUnits('Kbyte').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthBwEBS.setStatus('current')
osEthBwColorMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 13, 1, 10), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("colorBlind", 2), ("colorAware", 3), ("colorAwareDropRed", 4), ("colorBlindDropRed", 5))).clone('colorBlind')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthBwColorMode.setStatus('current')
osEthBwLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 13, 1, 11), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthBwLastError.setStatus('current')
osEthBwRateLimitType = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 13, 1, 12), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("shaper", 1), ("tc", 2))).clone('tc')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthBwRateLimitType.setStatus('current')
osEthBwAggregated = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 13, 1, 13), TruthValue()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthBwAggregated.setStatus('current')
osEthBwBuffSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 13, 1, 14), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(64, 2147483647), ))).setUnits('Bytes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthBwBuffSize.setStatus('current')
osEthBwAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 13, 1, 98), EntryValidator()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthBwAdminStatus.setStatus('current')
osEthBwOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 13, 1, 99), ProfileStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthBwOperStatus.setStatus('current')
osEthPerfTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14), )
if mibBuilder.loadTexts: osEthPerfTable.setStatus('current')
osEthPerfEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthPerfId"))
if mibBuilder.loadTexts: osEthPerfEntry.setStatus('current')
osEthPerfId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 3), EntityName())
if mibBuilder.loadTexts: osEthPerfId.setStatus('current')
osEthPerfType = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6))).clone(namedValues=NamedValues(("unknown", 1), ("dmm", 2), ("dmmSlow", 3), ("lbm", 4), ("lbmSlow", 5), ("lmm", 6))).clone('dmmSlow')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfType.setStatus('current')
osEthPerfVlanDropEnable = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 12), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfVlanDropEnable.setStatus('current')
osEthPerfHistorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfHistorySize.setStatus('current')
osEthPerfInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000)).clone(100000)).setUnits('microseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfInterval.setStatus('current')
osEthPerfTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(200)).setUnits('milliseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfTimeout.setStatus('current')
osEthPerfDataLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 9000)).clone(60)).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfDataLength.setStatus('current')
osEthPerfDataFill = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 21), OctetString().subtype(subtypeSpec=ValueSizeConstraint(0, 64))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfDataFill.setStatus('current')
osEthPerfMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000)).clone(3)).setUnits('packets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfMessages.setStatus('current')
osEthPerfBurstInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 86400)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfBurstInterval.setStatus('current')
osEthPerfNumberOfBursts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 25), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), )).clone(1)).setUnits('bursts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfNumberOfBursts.setStatus('current')
osEthPerfMeasBinsInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1440)).clone(15)).setUnits('minutes').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfMeasBinsInterval.setStatus('current')
osEthPerfMeasBinsIsAlign = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 27), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfMeasBinsIsAlign.setStatus('current')
osEthPerfMeasBinsClockSyncFlag = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 28), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfMeasBinsClockSyncFlag.setStatus('current')
osEthPerfMeasBinsHistorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 29), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 192)).clone(32)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfMeasBinsHistorySize.setStatus('current')
osEthPerfFdRiseThold = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 35), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('microseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfFdRiseThold.setStatus('current')
osEthPerfFdFallThold = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 36), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('microseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfFdFallThold.setStatus('current')
osEthPerfDSJittRiseThold = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 49), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('microseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfDSJittRiseThold.setStatus('current')
osEthPerfDSJittFallThold = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 50), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('microseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfDSJittFallThold.setStatus('current')
osEthPerfSDJittRiseThold = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 63), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('microseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfSDJittRiseThold.setStatus('current')
osEthPerfSDJittFallThold = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 64), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 10000000))).setUnits('microseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfSDJittFallThold.setStatus('current')
osEthPerfLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 65), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthPerfLastError.setStatus('current')
osEthPerfAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 98), EntryValidator()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthPerfAdminStatus.setStatus('current')
osEthPerfOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 14, 1, 99), ProfileStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthPerfOperStatus.setStatus('current')
osEthCfmTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 15), )
if mibBuilder.loadTexts: osEthCfmTable.setStatus('current')
osEthCfmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 15, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthCfmId"))
if mibBuilder.loadTexts: osEthCfmEntry.setStatus('current')
osEthCfmId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 15, 1, 3), EntityName())
if mibBuilder.loadTexts: osEthCfmId.setStatus('current')
osEthCcmLowPrDef = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 15, 1, 5), Dot1agCfmLowestAlarmPri().clone('macRemErrXcon')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthCcmLowPrDef.setStatus('current')
osEthCcmFngAlarmTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 15, 1, 6), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(250, 1000)).clone(250)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthCcmFngAlarmTime.setStatus('current')
osEthCcmFngResetTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 15, 1, 7), TimeInterval().subtype(subtypeSpec=ValueRangeConstraint(250, 1000)).clone(1000)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthCcmFngResetTime.setStatus('current')
osEthCcmMaCcmInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 15, 1, 9), Dot1agCfmCcmInterval()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthCcmMaCcmInterval.setStatus('current')
osEthCcmMaCcmRMepAgingTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 15, 1, 10), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 86400))).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthCcmMaCcmRMepAgingTime.setStatus('current')
osEthCcmSendPortTlv = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 15, 1, 11), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthCcmSendPortTlv.setStatus('current')
osEthCcmSendIfTlv = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 15, 1, 12), TruthValue().clone('true')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthCcmSendIfTlv.setStatus('current')
osEthCfmLtrPortIdSubtype = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 15, 1, 13), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5, 6, 7))).clone(namedValues=NamedValues(("typeInterfaceAlias", 1), ("typePortComponent", 2), ("typeMacAddress", 3), ("typeNetworkAddress", 4), ("typeInterfaceName", 5), ("typeAgentCircuitId", 6), ("typeLocal", 7))).clone('typeMacAddress')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthCfmLtrPortIdSubtype.setStatus('current')
osEthCfmLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 15, 1, 70), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthCfmLastError.setStatus('current')
osEthCfmAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 15, 1, 98), EntryValidator()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthCfmAdminStatus.setStatus('current')
osEthCfmOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 15, 1, 99), ProfileStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthCfmOperStatus.setStatus('current')
osEthActTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 16), )
if mibBuilder.loadTexts: osEthActTable.setStatus('current')
osEthActEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 16, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthActId"))
if mibBuilder.loadTexts: osEthActEntry.setStatus('current')
osEthActId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 16, 1, 1), EntityName())
if mibBuilder.loadTexts: osEthActId.setStatus('current')
osEthActToCPU = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 16, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("unknown", 1), ("nothing", 2), ("mirror", 3), ("redirect", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthActToCPU.setStatus('current')
osEthActMirrorPortMode = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 16, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("nothing", 2), ("ingress", 3), ("egress", 4), ("both", 5)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthActMirrorPortMode.setStatus('current')
osEthActMirrorPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 16, 1, 6), PortIndexOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthActMirrorPortIndex.setStatus('current')
osEthActSwapCTag = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 16, 1, 18), VlanIdOrNone()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthActSwapCTag.setStatus('current')
osEthActAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 16, 1, 98), EntryValidator()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthActAdminStatus.setStatus('current')
osEthActOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 16, 1, 99), ProfileStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthActOperStatus.setStatus('current')
osEthFloodPrflTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 17), )
if mibBuilder.loadTexts: osEthFloodPrflTable.setStatus('current')
osEthFloodPrflEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 17, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthFloodPrflId"))
if mibBuilder.loadTexts: osEthFloodPrflEntry.setStatus('current')
osEthFloodPrflId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 17, 1, 1), EntityName())
if mibBuilder.loadTexts: osEthFloodPrflId.setStatus('current')
osEthFloodPrflTypes = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 17, 1, 2), Bits().clone(namedValues=NamedValues(("unknownUnicast", 0), ("multicast", 1), ("broadcast", 2), ("tcpSyn", 3)))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthFloodPrflTypes.setStatus('current')
osEthFloodPrflRate = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 17, 1, 3), Unsigned32()).setUnits('Kbits/sec').setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthFloodPrflRate.setStatus('current')
osEthFloodPrflLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 17, 1, 70), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthFloodPrflLastError.setStatus('current')
osEthFloodPrflAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 17, 1, 98), EntryValidator()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthFloodPrflAdminStatus.setStatus('current')
osEthFloodPrflBwOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 17, 1, 99), ProfileStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthFloodPrflBwOperStatus.setStatus('current')
osEthLbmTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 18), )
if mibBuilder.loadTexts: osEthLbmTable.setStatus('current')
osEthLbmEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 18, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthLbmId"))
if mibBuilder.loadTexts: osEthLbmEntry.setStatus('current')
osEthLbmId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 18, 1, 3), EntityName())
if mibBuilder.loadTexts: osEthLbmId.setStatus('current')
osEthLbmHistorySize = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 18, 1, 17), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthLbmHistorySize.setStatus('current')
osEthLbmInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 18, 1, 18), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000)).clone(100000)).setUnits('microseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthLbmInterval.setStatus('current')
osEthLbmTimeout = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 18, 1, 19), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 60000)).clone(200)).setUnits('microseconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthLbmTimeout.setStatus('current')
osEthLbmDataLength = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 18, 1, 20), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(60, 9000)).clone(60)).setUnits('octets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthLbmDataLength.setStatus('current')
osEthLbmDataFill = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 18, 1, 21), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2))).clone(namedValues=NamedValues(("zeroPattern", 1), ("onesPattern", 2))).clone('zeroPattern')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthLbmDataFill.setStatus('current')
osEthLbmMessages = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 18, 1, 23), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 1000000)).clone(3)).setUnits('packets').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthLbmMessages.setStatus('current')
osEthLbmBurstInterval = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 18, 1, 24), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 86400)).clone(60)).setUnits('seconds').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthLbmBurstInterval.setStatus('current')
osEthLbmNumberOfBursts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 18, 1, 25), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4294967295), )).clone(1)).setUnits('bursts').setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthLbmNumberOfBursts.setStatus('current')
osEthLbmLbmHistSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 18, 1, 26), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthLbmLbmHistSize.setStatus('current')
osEthLbmLbrPerLbmHistSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 18, 1, 27), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(2, 65535)).clone(5)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthLbmLbrPerLbmHistSize.setStatus('current')
osEthLbmLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 18, 1, 65), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthLbmLastError.setStatus('current')
osEthLbmAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 18, 1, 98), EntryValidator()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthLbmAdminStatus.setStatus('current')
osEthLbmOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 18, 1, 99), ProfileStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthLbmOperStatus.setStatus('current')
osEthServLbrTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 19), )
if mibBuilder.loadTexts: osEthServLbrTable.setStatus('current')
osEthServLbrEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 19, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"), (0, "OS-ETH-SERV-MIB", "osEthServFlowId"), (0, "OS-ETH-SERV-MIB", "osEthServLbrLbmId"), (0, "OS-ETH-SERV-MIB", "osEthServLbrPerLbmId"))
if mibBuilder.loadTexts: osEthServLbrEntry.setStatus('current')
osEthServLbrLbmId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 19, 1, 1), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: osEthServLbrLbmId.setStatus('current')
osEthServLbrPerLbmId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 19, 1, 2), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(0, 4294967295)))
if mibBuilder.loadTexts: osEthServLbrPerLbmId.setStatus('current')
osEthServLbrReplyMac = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 19, 1, 3), MacAddress()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServLbrReplyMac.setStatus('current')
osEthServLbrPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 19, 1, 4), PortIndexOrNone()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServLbrPort.setStatus('current')
osEthServLbrTime = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 19, 1, 5), DateAndTime()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServLbrTime.setStatus('current')
osEthServLbrRtt = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 19, 1, 6), Unsigned32()).setUnits('microseconds').setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServLbrRtt.setStatus('current')
osEthFsTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 21), )
if mibBuilder.loadTexts: osEthFsTable.setStatus('current')
osEthFsEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 21, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthFsId"))
if mibBuilder.loadTexts: osEthFsEntry.setStatus('current')
osEthFsId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 21, 1, 1), EntityName())
if mibBuilder.loadTexts: osEthFsId.setStatus('current')
osEthFsReceiver = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 21, 1, 2), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthFsReceiver.setStatus('current')
osEthFsChannel = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 21, 1, 3), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("ipfix1", 1), ("ipfix2", 2), ("ipfix3", 3), ("ipfix4", 4)))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthFsChannel.setStatus('current')
osEthFsRateUnit = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 21, 1, 4), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(0, 1, 2, 3))).clone(namedValues=NamedValues(("unknown", 0), ("packets", 1), ("bytes", 2), ("time", 3))).clone('packets')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthFsRateUnit.setStatus('current')
osEthFsRateWndSize = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 21, 1, 5), Unsigned32()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthFsRateWndSize.setStatus('current')
osEthFsLastError = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 21, 1, 6), DisplayString().subtype(subtypeSpec=ValueSizeConstraint(0, 160))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthFsLastError.setStatus('current')
osEthFsAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 21, 1, 98), EntryValidator()).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthFsAdminStatus.setStatus('current')
osEthFsOperStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 21, 1, 99), ProfileStatus()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthFsOperStatus.setStatus('current')
osEthTagExcpConfig = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24))
osEthTagExcpSupport = MibScalar((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24, 1), Bits().clone(namedValues=NamedValues(("osEthTagExcpBasic", 0), ("osEthTagExcpMa", 1), ("osEthTagExcpMep", 2), ("osEthTagExcpCcmBasic", 3), ("osEthTagExcpCcmParams", 4), ("osEthTagExcpMaNme", 5)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthTagExcpSupport.setStatus('current')
osEthTagExcpTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24, 24), )
if mibBuilder.loadTexts: osEthTagExcpTable.setStatus('current')
osEthTagExcpEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24, 24, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"), (0, "OS-ETH-SERV-MIB", "osEthTagExcpCVlan"))
if mibBuilder.loadTexts: osEthTagExcpEntry.setStatus('current')
osEthTagExcpCVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24, 24, 1, 2), VlanId())
if mibBuilder.loadTexts: osEthTagExcpCVlan.setStatus('current')
osEthTagExcpCPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24, 24, 1, 3), PortList()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthTagExcpCPorts.setStatus('current')
osEthTagExcpMAIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24, 24, 1, 4), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 65535), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthTagExcpMAIndex.setStatus('current')
osEthTagExcpMepId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24, 24, 1, 5), OsCfmMepIdOrZero()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthTagExcpMepId.setStatus('current')
osEthTagExcpMepPortIndex = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24, 24, 1, 6), PortIndexOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthTagExcpMepPortIndex.setStatus('current')
osEthTagExcpMepDirection = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24, 24, 1, 7), Dot1agCfmMpDirection().clone('up')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthTagExcpMepDirection.setStatus('current')
osEthTagExcpCcmEnabled = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24, 24, 1, 8), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthTagExcpCcmEnabled.setStatus('current')
osEthTagExcpCcmCoS = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24, 24, 1, 9), CoS().clone(1)).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthTagExcpCcmCoS.setStatus('current')
osEthTagExcpCcmClean = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24, 24, 1, 10), TruthValue().clone('false')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthTagExcpCcmClean.setStatus('current')
osEthTagExcpCfmPrfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24, 24, 1, 11), EntityNameOrNone()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthTagExcpCfmPrfl.setStatus('current')
osEthTagExcpMaTypeName = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24, 24, 1, 13), Dot1agCfmMaintAssocNameType().clone('charString')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthTagExcpMaTypeName.setStatus('current')
osEthTagExcpMaName = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24, 24, 1, 14), DisplayString()).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthTagExcpMaName.setStatus('current')
osEthTagExcpAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 24, 24, 1, 99), EntryValidator().clone('nothing')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthTagExcpAdminStatus.setStatus('current')
osEthServCountTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 30), )
if mibBuilder.loadTexts: osEthServCountTable.setStatus('current')
osEthServCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 30, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"), (0, "OS-ETH-SERV-MIB", "osEthServFlowCountId"), (0, "OS-ETH-SERV-MIB", "osEthServFlowCountDir"))
if mibBuilder.loadTexts: osEthServCountEntry.setStatus('current')
osEthServFlowCountId = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 30, 1, 1), ServFlowId())
if mibBuilder.loadTexts: osEthServFlowCountId.setStatus('current')
osEthServFlowCountDir = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 30, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4, 5))).clone(namedValues=NamedValues(("unknown", 1), ("ingress", 2), ("egress", 3), ("downStreamEgress", 4), ("upStreamEgress", 5))))
if mibBuilder.loadTexts: osEthServFlowCountDir.setStatus('current')
osEthServFlowCountStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 30, 1, 3), Bits().clone(namedValues=NamedValues(("inactive", 0), ("hasAggregateOcts", 1), ("hasAggregatePkts", 2), ("hasColoredOcts", 3), ("hasColoredPkts", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServFlowCountStatus.setStatus('current')
osEthServFlowCountAggrOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 30, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServFlowCountAggrOcts.setStatus('current')
osEthServFlowCountAggrPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 30, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServFlowCountAggrPkts.setStatus('current')
osEthServFlowCountGreenOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 30, 1, 12), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServFlowCountGreenOcts.setStatus('current')
osEthServFlowCountGreenPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 30, 1, 13), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServFlowCountGreenPkts.setStatus('current')
osEthServFlowCountYellowOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 30, 1, 14), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServFlowCountYellowOcts.setStatus('current')
osEthServFlowCountYellowPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 30, 1, 15), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServFlowCountYellowPkts.setStatus('current')
osEthServFlowCountRedOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 30, 1, 16), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServFlowCountRedOcts.setStatus('current')
osEthServFlowCountRedPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 30, 1, 17), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServFlowCountRedPkts.setStatus('current')
osEthServTm = MibIdentifier((1, 3, 6, 1, 4, 1, 6926, 2, 10, 31))
osEthServTmCountTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 31, 2), )
if mibBuilder.loadTexts: osEthServTmCountTable.setStatus('current')
osEthServTmCountEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 31, 2, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"), (0, "OS-ETH-SERV-MIB", "osEthServFlowId"), (0, "OS-ETH-SERV-MIB", "osEthServTmCountDir"), (0, "OS-ETH-SERV-MIB", "osEthServTmPort"))
if mibBuilder.loadTexts: osEthServTmCountEntry.setStatus('current')
osEthServTmCountDir = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 31, 2, 1, 2), Integer32().subtype(subtypeSpec=ConstraintsUnion(SingleValueConstraint(1, 2, 3, 4))).clone(namedValues=NamedValues(("tmDirUpStreamIngress", 1), ("tmDirDownStreamIngress", 2), ("tmDirUpStreamEgress", 3), ("tmDirDownStreamEgress", 4))))
if mibBuilder.loadTexts: osEthServTmCountDir.setStatus('current')
osEthServTmPort = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 31, 2, 1, 3), Unsigned32().subtype(subtypeSpec=ValueRangeConstraint(1, 2147483647)))
if mibBuilder.loadTexts: osEthServTmPort.setStatus('current')
osEthServTmCountStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 31, 2, 1, 5), Bits().clone(namedValues=NamedValues(("inactive", 0), ("hasPassOcts", 1), ("hasPassPkts", 2), ("hasDropOcts", 3), ("hasDropPkts", 4)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServTmCountStatus.setStatus('current')
osEthServTmCountPassOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 31, 2, 1, 7), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServTmCountPassOcts.setStatus('current')
osEthServTmCountPassPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 31, 2, 1, 8), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServTmCountPassPkts.setStatus('current')
osEthServTmCountDropOcts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 31, 2, 1, 9), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServTmCountDropOcts.setStatus('current')
osEthServTmCountDropPkts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 31, 2, 1, 10), Counter64()).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServTmCountDropPkts.setStatus('current')
osEthServExtTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 32), )
if mibBuilder.loadTexts: osEthServExtTable.setStatus('current')
osEthServExtEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 32, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"))
if mibBuilder.loadTexts: osEthServExtEntry.setStatus('current')
osEthServLimitBWTF = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 32, 1, 2), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServLimitBWTF.setStatus('current')
osEthServFullDownstreamLpbk = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 32, 1, 3), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServFullDownstreamLpbk.setStatus('current')
osEthServUpstrDeiRemark = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 32, 1, 4), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServUpstrDeiRemark.setStatus('current')
osEthServEPortsBufPrfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 32, 1, 5), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 7), )).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServEPortsBufPrfl.setStatus('current')
osEthServEPortsPrioQuePrfl = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 32, 1, 6), Integer32().subtype(subtypeSpec=ValueRangeConstraint(1, 7)).clone(1)).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServEPortsPrioQuePrfl.setStatus('current')
osEthServCMgmtVlan = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 32, 1, 14), Integer32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(1, 4095), ))).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServCMgmtVlan.setStatus('current')
osEthServOamMepSlmResponder = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 32, 1, 15), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServOamMepSlmResponder.setStatus('current')
osEthServTmDirs = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 32, 1, 16), Bits().clone(namedValues=NamedValues(("tmUpStreamIngress", 0), ("tmDownStreamIngress", 1), ("tmUpStreamEgress", 2), ("tmDownStreamEgress", 3)))).setMaxAccess("readonly")
if mibBuilder.loadTexts: osEthServTmDirs.setStatus('current')
osEthServMflgThreshold = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 32, 1, 17), Unsigned32().subtype(subtypeSpec=ConstraintsUnion(ValueRangeConstraint(0, 0), ValueRangeConstraint(10, 200), ))).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthServMflgThreshold.setStatus('current')
osEthServRecoverPorts = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 32, 1, 18), TruthValue().clone('false')).setMaxAccess("readwrite")
if mibBuilder.loadTexts: osEthServRecoverPorts.setStatus('current')
osEthServTunnelTable = MibTable((1, 3, 6, 1, 4, 1, 6926, 2, 10, 34), )
if mibBuilder.loadTexts: osEthServTunnelTable.setStatus('current')
osEthServTunnelEntry = MibTableRow((1, 3, 6, 1, 4, 1, 6926, 2, 10, 34, 1), ).setIndexNames((0, "OS-ETH-SERV-MIB", "osEthServId"), (0, "OS-ETH-SERV-MIB", "osEthServTunnelName"))
if mibBuilder.loadTexts: osEthServTunnelEntry.setStatus('current')
osEthServTunnelName = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 34, 1, 2), EntityName().subtype(subtypeSpec=ValueSizeConstraint(1, 20)))
if mibBuilder.loadTexts: osEthServTunnelName.setStatus('current')
osEthServTunnelAdminStatus = MibTableColumn((1, 3, 6, 1, 4, 1, 6926, 2, 10, 34, 1, 99), EntryValidator().clone('nothing')).setMaxAccess("readcreate")
if mibBuilder.loadTexts: osEthServTunnelAdminStatus.setStatus('current')
osEthSrvMaxNumEnabledServicesExceeded = NotificationType((1, 3, 6, 1, 4, 1, 6926, 2, 10, 0, 1)).setObjects(("OS-ETH-SERV-MIB", "osEthServAdminStatus"), ("OS-ETH-SERV-MIB", "osEthSrvMaxNumEnabledServices"))
if mibBuilder.loadTexts: osEthSrvMaxNumEnabledServicesExceeded.setStatus('current')
osEthMIBCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6926, 2, 10, 100, 1, 1)).setObjects(("OS-ETH-SERV-MIB", "osEthMandatoryGroup"), ("OS-ETH-SERV-MIB", "osEthNotificationsGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    osEthMIBCompliance = osEthMIBCompliance.setStatus('current')
osEthMIBDeprCompliance = ModuleCompliance((1, 3, 6, 1, 4, 1, 6926, 2, 10, 100, 1, 2)).setObjects(("OS-ETH-SERV-MIB", "osEthDeprecatedGroup"))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    osEthMIBDeprCompliance = osEthMIBDeprCompliance.setStatus('deprecated')
osEthMandatoryGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6926, 2, 10, 100, 2, 1)).setObjects(("OS-ETH-SERV-MIB", "osEthSrvFeaturesSupport"), ("OS-ETH-SERV-MIB", "osEthMaxSlValue"), ("OS-ETH-SERV-MIB", "osEthBwMinCIR"), ("OS-ETH-SERV-MIB", "osEthBwMinCBS"), ("OS-ETH-SERV-MIB", "osEthBwMinEIR"), ("OS-ETH-SERV-MIB", "osEthBwMinEBS"), ("OS-ETH-SERV-MIB", "osEthBwMaxCIR"), ("OS-ETH-SERV-MIB", "osEthBwMaxCBS"), ("OS-ETH-SERV-MIB", "osEthBwMaxEIR"), ("OS-ETH-SERV-MIB", "osEthBwMaxEBS"), ("OS-ETH-SERV-MIB", "osEthSrvFsSupported"), ("OS-ETH-SERV-MIB", "osEthSrvMaxNumEnabledServices"), ("OS-ETH-SERV-MIB", "osEthServSVlanId"), ("OS-ETH-SERV-MIB", "osEthServNodeType"), ("OS-ETH-SERV-MIB", "osEthServCVlans"), ("OS-ETH-SERV-MIB", "osEthServIncludesUntagged"), ("OS-ETH-SERV-MIB", "osEthServChangeIngCVlan"), ("OS-ETH-SERV-MIB", "osEthServSPorts"), ("OS-ETH-SERV-MIB", "osEthServCPorts"), ("OS-ETH-SERV-MIB", "osEthServSpokeVcName"), ("OS-ETH-SERV-MIB", "osEthServSpokeVcType"), ("OS-ETH-SERV-MIB", "osEthServSpokeVcOuterVlan"), ("OS-ETH-SERV-MIB", "osEthServCfmPrfl"), ("OS-ETH-SERV-MIB", "osEthServCcmEnabled"), ("OS-ETH-SERV-MIB", "osEthServCcmHighestPrDefect"), ("OS-ETH-SERV-MIB", "osEthServCcmCoS"), ("OS-ETH-SERV-MIB", "osEthServCcmClean"), ("OS-ETH-SERV-MIB", "osEthServEgrMarkSl"), ("OS-ETH-SERV-MIB", "osEthServDnEgPcpRemap"), ("OS-ETH-SERV-MIB", "osEthServActionPrfl"), ("OS-ETH-SERV-MIB", "osEthServProtectionRole"), ("OS-ETH-SERV-MIB", "osEthServPVlanId"), ("OS-ETH-SERV-MIB", "osEthServPPortList"), ("OS-ETH-SERV-MIB", "osEthServLoopback"), ("OS-ETH-SERV-MIB", "osEthServLearning"), ("OS-ETH-SERV-MIB", "osEthServMDLevel"), ("OS-ETH-SERV-MIB", "osEthServMAIndex"), ("OS-ETH-SERV-MIB", "osEthServMepPortIndex"), ("OS-ETH-SERV-MIB", "osEthServMepDirection"), ("OS-ETH-SERV-MIB", "osEthServDescription"), ("OS-ETH-SERV-MIB", "osEthServLastError"), ("OS-ETH-SERV-MIB", "osEthServAdminStatus"), ("OS-ETH-SERV-MIB", "osEthServOperStatus"), ("OS-ETH-SERV-MIB", "osEthServNatPfExternalMode"), ("OS-ETH-SERV-MIB", "osEthServClassCoS"), ("OS-ETH-SERV-MIB", "osEthServClassAdminStatus"), ("OS-ETH-SERV-MIB", "osEthServFlowIngBwPrfl"), ("OS-ETH-SERV-MIB", "osEthServFlowIngBwAccStatus"), ("OS-ETH-SERV-MIB", "osEthServFlowEgBwPrfl"), ("OS-ETH-SERV-MIB", "osEthServFlowEgBwAccStatus"), ("OS-ETH-SERV-MIB", "osEthServFlowFloodLimPrfl"), ("OS-ETH-SERV-MIB", "osEthServFlowPerfPrfl"), ("OS-ETH-SERV-MIB", "osEthServFlowMepId"), ("OS-ETH-SERV-MIB", "osEthServFlowPerfDestMacAddress"), ("OS-ETH-SERV-MIB", "osEthServFlowPerfDestMepId"), ("OS-ETH-SERV-MIB", "osEthServFlowPerfDestMepList"), ("OS-ETH-SERV-MIB", "osEthServFlowPerfDestType"), ("OS-ETH-SERV-MIB", "osEthServFlowMepReserve1"), ("OS-ETH-SERV-MIB", "osEthServFlowPerfEnabled"), ("OS-ETH-SERV-MIB", "osEthServFlowRemarkBits"), ("OS-ETH-SERV-MIB", "osEthServFlowMarkDscp"), ("OS-ETH-SERV-MIB", "osEthServFlowMarkPcp"), ("OS-ETH-SERV-MIB", "osEthServFlowRestOfTraffic"), ("OS-ETH-SERV-MIB", "osEthServFlowLbmPrfl"), ("OS-ETH-SERV-MIB", "osEthServFlowLbmDestMacAddress"), ("OS-ETH-SERV-MIB", "osEthServFlowLbmDestMepId"), ("OS-ETH-SERV-MIB", "osEthServFlowLbmDestType"), ("OS-ETH-SERV-MIB", "osEthServFlowLbmEnabled"), ("OS-ETH-SERV-MIB", "osEthServFlowLbmClear"), ("OS-ETH-SERV-MIB", "osEthServFlowUpEgBwPrfl"), ("OS-ETH-SERV-MIB", "osEthServFlowUpEgBwAccStatus"), ("OS-ETH-SERV-MIB", "osEthServFlowDnEgBwPrfl"), ("OS-ETH-SERV-MIB", "osEthServFlowDnEgBwAccStatus"), ("OS-ETH-SERV-MIB", "osEthServFlowUpIngFsPrfl"), ("OS-ETH-SERV-MIB", "osEthServFlowDnIngFsPrfl"), ("OS-ETH-SERV-MIB", "osEthServFlowUpIngFsSubAgentId"), ("OS-ETH-SERV-MIB", "osEthServFlowDnIngFsSubAgentId"), ("OS-ETH-SERV-MIB", "osEthServFlowUpstrDEI"), ("OS-ETH-SERV-MIB", "osEthServFlowDownstrDEI"), ("OS-ETH-SERV-MIB", "osEthServFlowHistoryClear"), ("OS-ETH-SERV-MIB", "osEthServFlowAdminStatus"), ("OS-ETH-SERV-MIB", "osEthServVcType"), ("OS-ETH-SERV-MIB", "osEthServVcSVlanId"), ("OS-ETH-SERV-MIB", "osEthServVcMDLevel"), ("OS-ETH-SERV-MIB", "osEthServVcMAIndex"), ("OS-ETH-SERV-MIB", "osEthServVcMaTypeName"), ("OS-ETH-SERV-MIB", "osEthServVcMaName"), ("OS-ETH-SERV-MIB", "osEthServVcMtuSize"), ("OS-ETH-SERV-MIB", "osEthServFlowTestStartTimeType"), ("OS-ETH-SERV-MIB", "osEthServFlowTestFixedStartTime"), ("OS-ETH-SERV-MIB", "osEthServFlowTestRelStartTime"), ("OS-ETH-SERV-MIB", "osEthServFlowTestPeriodicity"), ("OS-ETH-SERV-MIB", "osEthBwCIR"), ("OS-ETH-SERV-MIB", "osEthBwCBS"), ("OS-ETH-SERV-MIB", "osEthBwEIR"), ("OS-ETH-SERV-MIB", "osEthBwEBS"), ("OS-ETH-SERV-MIB", "osEthBwColorMode"), ("OS-ETH-SERV-MIB", "osEthBwLastError"), ("OS-ETH-SERV-MIB", "osEthBwRateLimitType"), ("OS-ETH-SERV-MIB", "osEthBwAggregated"), ("OS-ETH-SERV-MIB", "osEthBwBuffSize"), ("OS-ETH-SERV-MIB", "osEthBwAdminStatus"), ("OS-ETH-SERV-MIB", "osEthBwOperStatus"), ("OS-ETH-SERV-MIB", "osEthFsReceiver"), ("OS-ETH-SERV-MIB", "osEthFsChannel"), ("OS-ETH-SERV-MIB", "osEthFsRateUnit"), ("OS-ETH-SERV-MIB", "osEthFsRateWndSize"), ("OS-ETH-SERV-MIB", "osEthFsLastError"), ("OS-ETH-SERV-MIB", "osEthFsAdminStatus"), ("OS-ETH-SERV-MIB", "osEthFsOperStatus"), ("OS-ETH-SERV-MIB", "osEthPerfType"), ("OS-ETH-SERV-MIB", "osEthPerfVlanDropEnable"), ("OS-ETH-SERV-MIB", "osEthPerfHistorySize"), ("OS-ETH-SERV-MIB", "osEthPerfInterval"), ("OS-ETH-SERV-MIB", "osEthPerfTimeout"), ("OS-ETH-SERV-MIB", "osEthPerfDataLength"), ("OS-ETH-SERV-MIB", "osEthPerfDataFill"), ("OS-ETH-SERV-MIB", "osEthPerfMessages"), ("OS-ETH-SERV-MIB", "osEthPerfBurstInterval"), ("OS-ETH-SERV-MIB", "osEthPerfNumberOfBursts"), ("OS-ETH-SERV-MIB", "osEthPerfMeasBinsInterval"), ("OS-ETH-SERV-MIB", "osEthPerfMeasBinsIsAlign"), ("OS-ETH-SERV-MIB", "osEthPerfMeasBinsClockSyncFlag"), ("OS-ETH-SERV-MIB", "osEthPerfMeasBinsHistorySize"), ("OS-ETH-SERV-MIB", "osEthPerfFdRiseThold"), ("OS-ETH-SERV-MIB", "osEthPerfFdFallThold"), ("OS-ETH-SERV-MIB", "osEthPerfDSJittRiseThold"), ("OS-ETH-SERV-MIB", "osEthPerfDSJittFallThold"), ("OS-ETH-SERV-MIB", "osEthPerfSDJittRiseThold"), ("OS-ETH-SERV-MIB", "osEthPerfSDJittFallThold"), ("OS-ETH-SERV-MIB", "osEthPerfLastError"), ("OS-ETH-SERV-MIB", "osEthPerfAdminStatus"), ("OS-ETH-SERV-MIB", "osEthPerfOperStatus"), ("OS-ETH-SERV-MIB", "osEthCcmLowPrDef"), ("OS-ETH-SERV-MIB", "osEthCcmFngAlarmTime"), ("OS-ETH-SERV-MIB", "osEthCcmFngResetTime"), ("OS-ETH-SERV-MIB", "osEthCcmMaCcmInterval"), ("OS-ETH-SERV-MIB", "osEthCcmMaCcmRMepAgingTime"), ("OS-ETH-SERV-MIB", "osEthCcmSendPortTlv"), ("OS-ETH-SERV-MIB", "osEthCcmSendIfTlv"), ("OS-ETH-SERV-MIB", "osEthCfmLtrPortIdSubtype"), ("OS-ETH-SERV-MIB", "osEthCfmLastError"), ("OS-ETH-SERV-MIB", "osEthCfmAdminStatus"), ("OS-ETH-SERV-MIB", "osEthCfmOperStatus"), ("OS-ETH-SERV-MIB", "osEthActToCPU"), ("OS-ETH-SERV-MIB", "osEthActMirrorPortMode"), ("OS-ETH-SERV-MIB", "osEthActMirrorPortIndex"), ("OS-ETH-SERV-MIB", "osEthActSwapCTag"), ("OS-ETH-SERV-MIB", "osEthActAdminStatus"), ("OS-ETH-SERV-MIB", "osEthActOperStatus"), ("OS-ETH-SERV-MIB", "osEthFloodPrflTypes"), ("OS-ETH-SERV-MIB", "osEthFloodPrflRate"), ("OS-ETH-SERV-MIB", "osEthFloodPrflLastError"), ("OS-ETH-SERV-MIB", "osEthFloodPrflAdminStatus"), ("OS-ETH-SERV-MIB", "osEthFloodPrflBwOperStatus"), ("OS-ETH-SERV-MIB", "osEthLbmHistorySize"), ("OS-ETH-SERV-MIB", "osEthLbmInterval"), ("OS-ETH-SERV-MIB", "osEthLbmTimeout"), ("OS-ETH-SERV-MIB", "osEthLbmDataLength"), ("OS-ETH-SERV-MIB", "osEthLbmDataFill"), ("OS-ETH-SERV-MIB", "osEthLbmMessages"), ("OS-ETH-SERV-MIB", "osEthLbmBurstInterval"), ("OS-ETH-SERV-MIB", "osEthLbmNumberOfBursts"), ("OS-ETH-SERV-MIB", "osEthLbmLbmHistSize"), ("OS-ETH-SERV-MIB", "osEthLbmLbrPerLbmHistSize"), ("OS-ETH-SERV-MIB", "osEthLbmLastError"), ("OS-ETH-SERV-MIB", "osEthLbmAdminStatus"), ("OS-ETH-SERV-MIB", "osEthLbmOperStatus"), ("OS-ETH-SERV-MIB", "osEthServLbrReplyMac"), ("OS-ETH-SERV-MIB", "osEthServLbrPort"), ("OS-ETH-SERV-MIB", "osEthServLbrTime"), ("OS-ETH-SERV-MIB", "osEthServLbrRtt"), ("OS-ETH-SERV-MIB", "osEthTagExcpSupport"), ("OS-ETH-SERV-MIB", "osEthTagExcpCPorts"), ("OS-ETH-SERV-MIB", "osEthTagExcpMAIndex"), ("OS-ETH-SERV-MIB", "osEthTagExcpMepId"), ("OS-ETH-SERV-MIB", "osEthTagExcpMepPortIndex"), ("OS-ETH-SERV-MIB", "osEthTagExcpMepDirection"), ("OS-ETH-SERV-MIB", "osEthTagExcpCcmEnabled"), ("OS-ETH-SERV-MIB", "osEthTagExcpCcmCoS"), ("OS-ETH-SERV-MIB", "osEthTagExcpCcmClean"), ("OS-ETH-SERV-MIB", "osEthTagExcpCfmPrfl"), ("OS-ETH-SERV-MIB", "osEthTagExcpMaTypeName"), ("OS-ETH-SERV-MIB", "osEthTagExcpMaName"), ("OS-ETH-SERV-MIB", "osEthTagExcpAdminStatus"), ("OS-ETH-SERV-MIB", "osEthServFlowCountStatus"), ("OS-ETH-SERV-MIB", "osEthServFlowCountAggrOcts"), ("OS-ETH-SERV-MIB", "osEthServFlowCountAggrPkts"), ("OS-ETH-SERV-MIB", "osEthServFlowCountGreenOcts"), ("OS-ETH-SERV-MIB", "osEthServFlowCountGreenPkts"), ("OS-ETH-SERV-MIB", "osEthServFlowCountYellowOcts"), ("OS-ETH-SERV-MIB", "osEthServFlowCountYellowPkts"), ("OS-ETH-SERV-MIB", "osEthServFlowCountRedOcts"), ("OS-ETH-SERV-MIB", "osEthServFlowCountRedPkts"), ("OS-ETH-SERV-MIB", "osEthServTmCountStatus"), ("OS-ETH-SERV-MIB", "osEthServTmCountPassOcts"), ("OS-ETH-SERV-MIB", "osEthServTmCountPassPkts"), ("OS-ETH-SERV-MIB", "osEthServTmCountDropOcts"), ("OS-ETH-SERV-MIB", "osEthServTmCountDropPkts"), ("OS-ETH-SERV-MIB", "osEthServLimitBWTF"), ("OS-ETH-SERV-MIB", "osEthServFullDownstreamLpbk"), ("OS-ETH-SERV-MIB", "osEthServUpstrDeiRemark"), ("OS-ETH-SERV-MIB", "osEthServEPortsBufPrfl"), ("OS-ETH-SERV-MIB", "osEthServEPortsPrioQuePrfl"), ("OS-ETH-SERV-MIB", "osEthServCMgmtVlan"), ("OS-ETH-SERV-MIB", "osEthServOamMepSlmResponder"), ("OS-ETH-SERV-MIB", "osEthServTmDirs"), ("OS-ETH-SERV-MIB", "osEthServMflgThreshold"), ("OS-ETH-SERV-MIB", "osEthServRecoverPorts"), ("OS-ETH-SERV-MIB", "osEthServTunnelAdminStatus"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    osEthMandatoryGroup = osEthMandatoryGroup.setStatus('current')
osEthDeprecatedGroup = ObjectGroup((1, 3, 6, 1, 4, 1, 6926, 2, 10, 100, 2, 2)).setObjects(("OS-ETH-SERV-MIB", "osEthSrvTypesSupported"), ("OS-ETH-SERV-MIB", "osEthServClassifyFlowBy"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    osEthDeprecatedGroup = osEthDeprecatedGroup.setStatus('deprecated')
osEthNotificationsGroup = NotificationGroup((1, 3, 6, 1, 4, 1, 6926, 2, 10, 100, 2, 3)).setObjects(("OS-ETH-SERV-MIB", "osEthSrvMaxNumEnabledServicesExceeded"))
if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    osEthNotificationsGroup = osEthNotificationsGroup.setStatus('current')
mibBuilder.exportSymbols("OS-ETH-SERV-MIB", osEthServFlowCountAggrPkts=osEthServFlowCountAggrPkts, osEthServPVlanId=osEthServPVlanId, osEthPerfMeasBinsInterval=osEthPerfMeasBinsInterval, osEthServFlowPerfDestType=osEthServFlowPerfDestType, osEthActMirrorPortMode=osEthActMirrorPortMode, osEthServFlowPerfDestMacAddress=osEthServFlowPerfDestMacAddress, osEthServFlowLbmDestMacAddress=osEthServFlowLbmDestMacAddress, osEthBwLastError=osEthBwLastError, osEthServFlowDnIngFsSubAgentId=osEthServFlowDnIngFsSubAgentId, osEthPerfId=osEthPerfId, osEthServTm=osEthServTm, osEthServFlowMarkDscp=osEthServFlowMarkDscp, osEthServSPorts=osEthServSPorts, osEthLbmId=osEthLbmId, osEthServTunnelAdminStatus=osEthServTunnelAdminStatus, osEthFloodPrflBwOperStatus=osEthFloodPrflBwOperStatus, osEthPerfMessages=osEthPerfMessages, osEthServFlowEgBwPrfl=osEthServFlowEgBwPrfl, osEthServClassifyFlowBy=osEthServClassifyFlowBy, osEthServClassCoS=osEthServClassCoS, osEthServExtEntry=osEthServExtEntry, osEthServLimitBWTF=osEthServLimitBWTF, osEthServSpokeVcOuterVlan=osEthServSpokeVcOuterVlan, osEthServFlowLbmEnabled=osEthServFlowLbmEnabled, osEthTagExcpSupport=osEthTagExcpSupport, osEthServTmCountEntry=osEthServTmCountEntry, osEthLbmLastError=osEthLbmLastError, osEthServTunnelName=osEthServTunnelName, osEthServDnEgPcpRemap=osEthServDnEgPcpRemap, osEthBwCIR=osEthBwCIR, osEthServVcEntry=osEthServVcEntry, osEthTagExcpTable=osEthTagExcpTable, osEthServCcmClean=osEthServCcmClean, osEthServFlowEntry=osEthServFlowEntry, osEthPerfHistorySize=osEthPerfHistorySize, osEthTagExcpCcmClean=osEthTagExcpCcmClean, osEthCapabilities=osEthCapabilities, osEthServUpstrDeiRemark=osEthServUpstrDeiRemark, osEthBwAggregated=osEthBwAggregated, osEthPerfOperStatus=osEthPerfOperStatus, osEthFsOperStatus=osEthFsOperStatus, osEthServEgrMarkSl=osEthServEgrMarkSl, osEthSrvTypesSupported=osEthSrvTypesSupported, osEthTagExcpEntry=osEthTagExcpEntry, osEthTagExcpCcmEnabled=osEthTagExcpCcmEnabled, osEthServTmCountTable=osEthServTmCountTable, osEthServVcMaTypeName=osEthServVcMaTypeName, osEthTagExcpMepDirection=osEthTagExcpMepDirection, osEthServFlowCountRedPkts=osEthServFlowCountRedPkts, osEthServCcmEnabled=osEthServCcmEnabled, osEthPerfSDJittRiseThold=osEthPerfSDJittRiseThold, osEthServClassEntry=osEthServClassEntry, osEthPerfNumberOfBursts=osEthPerfNumberOfBursts, osEthCfmTable=osEthCfmTable, osEthServTmCountStatus=osEthServTmCountStatus, osEthServExtTable=osEthServExtTable, osEthBwMaxEBS=osEthBwMaxEBS, osEthCcmSendIfTlv=osEthCcmSendIfTlv, osEthServFlowCountGreenOcts=osEthServFlowCountGreenOcts, osEthMIBCompliance=osEthMIBCompliance, osEthMaxSlValue=osEthMaxSlValue, osEthServClassAdminStatus=osEthServClassAdminStatus, osEthPerfDataLength=osEthPerfDataLength, osEthServMAIndex=osEthServMAIndex, osEthServFlowFloodLimPrfl=osEthServFlowFloodLimPrfl, osEthServProtectionRole=osEthServProtectionRole, osEthServVcMtuSize=osEthServVcMtuSize, osEthServFlowTestRelStartTime=osEthServFlowTestRelStartTime, osEthServFlowRestOfTraffic=osEthServFlowRestOfTraffic, osEthServLoopback=osEthServLoopback, osEthServFlowPerfPrfl=osEthServFlowPerfPrfl, osEthMIBDeprCompliance=osEthMIBDeprCompliance, osEthServNodeType=osEthServNodeType, osEthServFlowUpEgBwAccStatus=osEthServFlowUpEgBwAccStatus, osEthBwEBS=osEthBwEBS, osEthPerfAdminStatus=osEthPerfAdminStatus, osEthBwMaxEIR=osEthBwMaxEIR, osEthServEntry=osEthServEntry, osEthServLearning=osEthServLearning, osEthMIBCompliances=osEthMIBCompliances, osEthServFlowUpIngFsSubAgentId=osEthServFlowUpIngFsSubAgentId, osEthFloodPrflRate=osEthFloodPrflRate, osEthLbmTimeout=osEthLbmTimeout, osEthTagExcpMepId=osEthTagExcpMepId, osEthServFlowCountStatus=osEthServFlowCountStatus, osEthServTunnelEntry=osEthServTunnelEntry, osEthPerfType=osEthPerfType, osEthFsReceiver=osEthFsReceiver, osEthServPPortList=osEthServPPortList, osEthServOperStatus=osEthServOperStatus, osEthServVcMDLevel=osEthServVcMDLevel, osEthTagExcpCVlan=osEthTagExcpCVlan, PYSNMP_MODULE_ID=osEthServ, osEthCfmId=osEthCfmId, osEthServLbrTime=osEthServLbrTime, osEthServ=osEthServ, osEthActTable=osEthActTable, osEthLbmOperStatus=osEthLbmOperStatus, osEthCfmEntry=osEthCfmEntry, osEthLbmTable=osEthLbmTable, osEthServFlowCountGreenPkts=osEthServFlowCountGreenPkts, osEthCfmOperStatus=osEthCfmOperStatus, osEthTagExcpAdminStatus=osEthTagExcpAdminStatus, osEthSrvNotifications=osEthSrvNotifications, osEthServFlowDownstrDEI=osEthServFlowDownstrDEI, osEthBwEntry=osEthBwEntry, osEthPerfVlanDropEnable=osEthPerfVlanDropEnable, osEthFloodPrflTypes=osEthFloodPrflTypes, osEthBwColorMode=osEthBwColorMode, osEthServLbrLbmId=osEthServLbrLbmId, osEthServFlowPerfEnabled=osEthServFlowPerfEnabled, osEthServEPortsPrioQuePrfl=osEthServEPortsPrioQuePrfl, osEthConformance=osEthConformance, osEthServLbrRtt=osEthServLbrRtt, osEthServSpokeVcName=osEthServSpokeVcName, osEthBwMinCBS=osEthBwMinCBS, osEthServLbrReplyMac=osEthServLbrReplyMac, osEthActToCPU=osEthActToCPU, osEthTagExcpMaTypeName=osEthTagExcpMaTypeName, osEthActEntry=osEthActEntry, osEthFsChannel=osEthFsChannel, osEthCcmSendPortTlv=osEthCcmSendPortTlv, osEthServTmPort=osEthServTmPort, osEthTagExcpCPorts=osEthTagExcpCPorts, osEthServIncludesUntagged=osEthServIncludesUntagged, osEthServFlowDnEgBwPrfl=osEthServFlowDnEgBwPrfl, osEthServSpokeVcType=osEthServSpokeVcType, osEthServClassTable=osEthServClassTable, osEthServFlowUpstrDEI=osEthServFlowUpstrDEI, osEthFsRateUnit=osEthFsRateUnit, osEthMIBGroups=osEthMIBGroups, osEthServFlowMarkPcp=osEthServFlowMarkPcp, osEthActSwapCTag=osEthActSwapCTag, osEthFsLastError=osEthFsLastError, osEthServCcmCoS=osEthServCcmCoS, osEthServActionPrfl=osEthServActionPrfl, osEthServFlowTable=osEthServFlowTable, osEthServTmDirs=osEthServTmDirs, osEthServClassMethod=osEthServClassMethod, osEthServFlowTestParamTable=osEthServFlowTestParamTable, osEthBwMinEIR=osEthBwMinEIR, osEthServVcTable=osEthServVcTable, osEthPerfLastError=osEthPerfLastError, osEthTagExcpMaName=osEthTagExcpMaName, osEthServCcmHighestPrDefect=osEthServCcmHighestPrDefect, osEthServNatPfExternalMode=osEthServNatPfExternalMode, osEthServVcSVlanId=osEthServVcSVlanId, osEthServFlowMepId=osEthServFlowMepId, osEthTagExcpCfmPrfl=osEthTagExcpCfmPrfl, osEthServFlowEgBwAccStatus=osEthServFlowEgBwAccStatus, osEthServFlowLbmDestType=osEthServFlowLbmDestType, osEthServDescription=osEthServDescription, osEthFloodPrflEntry=osEthFloodPrflEntry, osEthCcmFngResetTime=osEthCcmFngResetTime, osEthActMirrorPortIndex=osEthActMirrorPortIndex, osEthBwId=osEthBwId, osEthCcmMaCcmInterval=osEthCcmMaCcmInterval, osEthLbmDataLength=osEthLbmDataLength, osEthServFlowCountYellowOcts=osEthServFlowCountYellowOcts, osEthServFlowLbmDestMepId=osEthServFlowLbmDestMepId, osEthServTmCountDropPkts=osEthServTmCountDropPkts, osEthServFlowDnIngFsPrfl=osEthServFlowDnIngFsPrfl, osEthServMepPortIndex=osEthServMepPortIndex, osEthServFlowPerfDestMepId=osEthServFlowPerfDestMepId, osEthServRecoverPorts=osEthServRecoverPorts, osEthBwCBS=osEthBwCBS, osEthSrvFeaturesSupport=osEthSrvFeaturesSupport, osEthPerfDSJittRiseThold=osEthPerfDSJittRiseThold, osEthServCountTable=osEthServCountTable, osEthServTmCountDropOcts=osEthServTmCountDropOcts, osEthTagExcpMAIndex=osEthTagExcpMAIndex, osEthServFlowIngBwPrfl=osEthServFlowIngBwPrfl, osEthPerfTimeout=osEthPerfTimeout, osEthCcmLowPrDef=osEthCcmLowPrDef, osEthBwRateLimitType=osEthBwRateLimitType, osEthBwMaxCBS=osEthBwMaxCBS, osEthServFlowCountRedOcts=osEthServFlowCountRedOcts, osEthServCfmPrfl=osEthServCfmPrfl, osEthLbmLbmHistSize=osEthLbmLbmHistSize, osEthPerfMeasBinsClockSyncFlag=osEthPerfMeasBinsClockSyncFlag, osEthNotificationsGroup=osEthNotificationsGroup, osEthLbmNumberOfBursts=osEthLbmNumberOfBursts, osEthSrvMaxNumEnabledServicesExceeded=osEthSrvMaxNumEnabledServicesExceeded, osEthSrvMaxNumEnabledServices=osEthSrvMaxNumEnabledServices, osEthServFlowTestParamEntry=osEthServFlowTestParamEntry, osEthFloodPrflId=osEthFloodPrflId, osEthBwEIR=osEthBwEIR, osEthLbmEntry=osEthLbmEntry, osEthServFlowCountAggrOcts=osEthServFlowCountAggrOcts, osEthPerfDSJittFallThold=osEthPerfDSJittFallThold, osEthPerfSDJittFallThold=osEthPerfSDJittFallThold, osEthServFlowId=osEthServFlowId, osEthFsEntry=osEthFsEntry, osEthBwOperStatus=osEthBwOperStatus, osEthServFlowTestStartTimeType=osEthServFlowTestStartTimeType, osEthFsRateWndSize=osEthFsRateWndSize, osEthLbmHistorySize=osEthLbmHistorySize, osEthDeprecatedGroup=osEthDeprecatedGroup, osEthFsTable=osEthFsTable, osEthTagExcpMepPortIndex=osEthTagExcpMepPortIndex, osEthCcmFngAlarmTime=osEthCcmFngAlarmTime, osEthServMDLevel=osEthServMDLevel, osEthPerfFdFallThold=osEthPerfFdFallThold, osEthPerfDataFill=osEthPerfDataFill, osEthServSVlanId=osEthServSVlanId, osEthServFlowUpEgBwPrfl=osEthServFlowUpEgBwPrfl, osEthServFlowMepReserve1=osEthServFlowMepReserve1, osEthBwAdminStatus=osEthBwAdminStatus, osEthLbmDataFill=osEthLbmDataFill, osEthServFlowTestType=osEthServFlowTestType, osEthFloodPrflLastError=osEthFloodPrflLastError, osEthCfmLtrPortIdSubtype=osEthCfmLtrPortIdSubtype, osEthLbmBurstInterval=osEthLbmBurstInterval, osEthServCountEntry=osEthServCountEntry, osEthLbmLbrPerLbmHistSize=osEthLbmLbrPerLbmHistSize, osEthFsId=osEthFsId, osEthActId=osEthActId, osEthServFlowAdminStatus=osEthServFlowAdminStatus, osEthServFlowUpIngFsPrfl=osEthServFlowUpIngFsPrfl, osEthServCVlans=osEthServCVlans, osEthBwMinCIR=osEthBwMinCIR, osEthServAdminStatus=osEthServAdminStatus, osEthServFlowDnEgBwAccStatus=osEthServFlowDnEgBwAccStatus, osEthPerfBurstInterval=osEthPerfBurstInterval, osEthLbmAdminStatus=osEthLbmAdminStatus, osEthPerfMeasBinsHistorySize=osEthPerfMeasBinsHistorySize, osEthCfmLastError=osEthCfmLastError, osEthServTmCountPassOcts=osEthServTmCountPassOcts, osEthServMflgThreshold=osEthServMflgThreshold, osEthServLbrTable=osEthServLbrTable, osEthServLbrEntry=osEthServLbrEntry, osEthServVcMAIndex=osEthServVcMAIndex, osEthPerfFdRiseThold=osEthPerfFdRiseThold, osEthBwMaxCIR=osEthBwMaxCIR, osEthFloodPrflTable=osEthFloodPrflTable, osEthTagExcpConfig=osEthTagExcpConfig, osEthServTunnelTable=osEthServTunnelTable, osEthServFlowTestPeriodicity=osEthServFlowTestPeriodicity, osEthServLbrPerLbmId=osEthServLbrPerLbmId, osEthMandatoryGroup=osEthMandatoryGroup, osEthServFlowCountDir=osEthServFlowCountDir, osEthBwBuffSize=osEthBwBuffSize, osEthPerfTable=osEthPerfTable, osEthServVcType=osEthServVcType, osEthSrvFsSupported=osEthSrvFsSupported, osEthServTable=osEthServTable, osEthServFlowCountYellowPkts=osEthServFlowCountYellowPkts, osEthServFlowCountId=osEthServFlowCountId, osEthFsAdminStatus=osEthFsAdminStatus, osEthServFlowRemarkBits=osEthServFlowRemarkBits, osEthServEPortsBufPrfl=osEthServEPortsBufPrfl, osEthServVcMaName=osEthServVcMaName, osEthServFlowIngBwAccStatus=osEthServFlowIngBwAccStatus, osEthServCPorts=osEthServCPorts)
mibBuilder.exportSymbols("OS-ETH-SERV-MIB", osEthServLastError=osEthServLastError, osEthPerfInterval=osEthPerfInterval, osEthActOperStatus=osEthActOperStatus, osEthBwMinEBS=osEthBwMinEBS, osEthActAdminStatus=osEthActAdminStatus, osEthFloodPrflAdminStatus=osEthFloodPrflAdminStatus, osEthLbmMessages=osEthLbmMessages, osEthServTmCountDir=osEthServTmCountDir, osEthTagExcpCcmCoS=osEthTagExcpCcmCoS, osEthServChangeIngCVlan=osEthServChangeIngCVlan, osEthServMepDirection=osEthServMepDirection, osEthLbmInterval=osEthLbmInterval, osEthServId=osEthServId, osEthServOamMepSlmResponder=osEthServOamMepSlmResponder, osEthServCMgmtVlan=osEthServCMgmtVlan, osEthServLbrPort=osEthServLbrPort, osEthCcmMaCcmRMepAgingTime=osEthCcmMaCcmRMepAgingTime, osEthServFlowHistoryClear=osEthServFlowHistoryClear, osEthBwTable=osEthBwTable, osEthServTmCountPassPkts=osEthServTmCountPassPkts, osEthServFlowLbmPrfl=osEthServFlowLbmPrfl, osEthServFlowLbmClear=osEthServFlowLbmClear, osEthPerfMeasBinsIsAlign=osEthPerfMeasBinsIsAlign, osEthServFlowPerfDestMepList=osEthServFlowPerfDestMepList, osEthPerfEntry=osEthPerfEntry, osEthCfmAdminStatus=osEthCfmAdminStatus, osEthServFullDownstreamLpbk=osEthServFullDownstreamLpbk, osEthServClassValue=osEthServClassValue, osEthServFlowTestFixedStartTime=osEthServFlowTestFixedStartTime)
