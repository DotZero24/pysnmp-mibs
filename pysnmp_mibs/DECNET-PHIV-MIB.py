# PySNMP SMI module. Autogenerated from smidump -f python DECNET-PHIV-MIB
# by libsmi2pysnmp-0.0.4-alpha at Tue Jun 28 11:30:40 2005,
# Python version (2, 4, 0, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pyasn1.type import constraint, namedval

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( Bits, Gauge32, Integer32, Integer32, MibIdentifier, MibVariable, MibTable, MibTableRow, MibTableColumn, TimeTicks, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Gauge32", "Integer32", "Integer32", "MibIdentifier", "MibVariable", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "mib-2")
( DisplayString, ) = mibBuilder.importSymbols("SNMPv2-TC", "DisplayString")

# Types

class InterfaceIndex(Integer32):
    pass

class PhivAddr(OctetString):
    subtypeSpec = OctetString.subtypeSpec+constraint.ValueSizeConstraint(2,2)
    pass

class PhivCounter(Integer32):
    pass


# Objects

phiv = MibIdentifier((1, 3, 6, 1, 2, 1, 18))
phivSystem = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 1))
phivSystemState = MibVariable((1, 3, 6, 1, 2, 1, 18, 1, 1), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,3,2,4,)).subtype(namedValues=namedval.NamedValues(("on", 1), ("off", 2), ("shut", 3), ("restricted", 4), ))).setMaxAccess("readwrite")
phivExecIdent = MibVariable((1, 3, 6, 1, 2, 1, 18, 1, 2), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 32))).setMaxAccess("readwrite")
phivManagement = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 2))
phivMgmtMgmtVers = MibVariable((1, 3, 6, 1, 2, 1, 18, 2, 1), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
session = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 3))
phivSessionSystemName = MibVariable((1, 3, 6, 1, 2, 1, 18, 3, 1), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 6))).setMaxAccess("readonly")
phivSessionInTimer = MibVariable((1, 3, 6, 1, 2, 1, 18, 3, 2), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
phivSessionOutTimer = MibVariable((1, 3, 6, 1, 2, 1, 18, 3, 3), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
end = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 4))
phivEndRemoteTable = MibTable((1, 3, 6, 1, 2, 1, 18, 4, 1))
phivEndRemoteEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 4, 1, 1)).setIndexNames((0, "DECNET-PHIV-MIB", "phivEndRemoteHostNodeID"))
phivEndRemoteHostNodeID = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 1, 1, 1)).setColumnInitializer(MibVariable((), PhivAddr()).setMaxAccess("readonly"))
phivEndRemoteState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 1, 1, 2)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,3,2,4,)).subtype(namedValues=namedval.NamedValues(("on", 1), ("off", 2), ("shut", 3), ("restricted", 4), ))).setMaxAccess("readwrite"))
phivEndCircuitIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 1, 1, 3)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly"))
phivEndActiveLinks = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 1, 1, 4)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivEndDelay = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 1, 1, 5)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivEndCountTable = MibTable((1, 3, 6, 1, 2, 1, 18, 4, 2))
phivEndCountEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 4, 2, 1)).setIndexNames((0, "DECNET-PHIV-MIB", "phivEndCountHostNodeID"))
phivEndCountHostNodeID = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 1)).setColumnInitializer(MibVariable((), PhivAddr()).setMaxAccess("readonly"))
phivEndCountSecsLastZeroed = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 2)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivEndCountUsrBytesRec = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 3)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivEndCountUsrBytesSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 4)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivEndUCountUsrMessRec = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 5)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivEndCountUsrMessSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 6)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivEndCountTotalBytesRec = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 7)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivEndCountTotalBytesSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 8)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivEndCountTotalMessRec = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 9)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivEndCountTotalMessSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 10)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivEndCountConnectsRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 11)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivEndCountConnectsSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 12)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivEndCountReponseTimeouts = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 13)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivEndCountRecdConnectResErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 4, 2, 1, 14)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivEndMaxLinks = MibVariable((1, 3, 6, 1, 2, 1, 18, 4, 3), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
phivEndNSPVers = MibVariable((1, 3, 6, 1, 2, 1, 18, 4, 4), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
phivEndRetransmitFactor = MibVariable((1, 3, 6, 1, 2, 1, 18, 4, 5), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
phivEndDelayFact = MibVariable((1, 3, 6, 1, 2, 1, 18, 4, 6), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
phivEndDelayWeight = MibVariable((1, 3, 6, 1, 2, 1, 18, 4, 7), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 255))).setMaxAccess("readwrite")
phivEndInactivityTimer = MibVariable((1, 3, 6, 1, 2, 1, 18, 4, 8), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
phivEndCountZeroCount = MibVariable((1, 3, 6, 1, 2, 1, 18, 4, 9), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("other", 1), ("reset", 2), ))).setMaxAccess("readwrite")
phivEndMaxLinksActive = MibVariable((1, 3, 6, 1, 2, 1, 18, 4, 10), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
routing = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 5))
phivRouteBroadcastRouteTimer = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 1), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
phivRouteBuffSize = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 2), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
phivRouteRoutingVers = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 3), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 255))).setMaxAccess("readonly")
phivRouteMaxAddr = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 4), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 1023))).setMaxAccess("readwrite")
phivRouteMaxBdcastNonRouters = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 5), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
phivRouteMaxBdcastRouters = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 6), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite")
phivRouteMaxBuffs = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 7), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
phivRouteMaxCircuits = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 8), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
phivRouteMaxCost = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 9), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 1022))).setMaxAccess("readwrite")
phivRouteMaxHops = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 10), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
phivRouteMaxVisits = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 11), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 63))).setMaxAccess("readwrite")
phivRouteRoutingTimer = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 12), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
phivRouteSegBuffSize = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 13), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readwrite")
phivRouteType = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 14), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,3,5,2,4,)).subtype(namedValues=namedval.NamedValues(("routing-III", 1), ("nonrouting-III", 2), ("area", 3), ("routing-IV", 4), ("nonrouting-IV", 5), ))).setMaxAccess("readonly")
phivRouteCountAgedPktLoss = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 15), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
phivRouteCountNodeUnrPktLoss = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 16), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly")
phivRouteCountOutRngePktLoss = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 17), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
phivRouteCountOverSzePktLoss = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 18), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
phivRouteCountPacketFmtErr = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 19), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
phivRouteCountPtlRteUpdtLoss = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 20), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
phivRouteCountVerifReject = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 21), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127))).setMaxAccess("readonly")
phivLevel1RouteTable = MibTable((1, 3, 6, 1, 2, 1, 18, 5, 22))
phivLevel1RouteEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 5, 22, 1)).setIndexNames((0, "DECNET-PHIV-MIB", "phivLevel1RouteNodeAddr"))
phivLevel1RouteNodeAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 5, 22, 1, 1)).setColumnInitializer(MibVariable((), PhivAddr()).setMaxAccess("readonly"))
phivLevel1RouteCircuitIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 5, 22, 1, 2)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly"))
phivLevel1RouteCost = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 5, 22, 1, 3)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivLevel1RouteHops = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 5, 22, 1, 4)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127))).setMaxAccess("readonly"))
phivLevel1RouteNextNode = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 5, 22, 1, 5)).setColumnInitializer(MibVariable((), PhivAddr()).setMaxAccess("readonly"))
phivRouteCountZeroCount = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 23), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("other", 1), ("reset", 2), ))).setMaxAccess("readwrite")
phivRouteSystemAddr = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 24), PhivAddr()).setMaxAccess("readonly")
phivRouteRoutingType = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 25), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,3,5,2,4,)).subtype(namedValues=namedval.NamedValues(("routing-III", 1), ("nonrouting-III", 2), ("area", 3), ("routing-IV", 4), ("nonrouting-IV", 5), ))).setMaxAccess("readwrite")
phivRouteSystemAddress = MibVariable((1, 3, 6, 1, 2, 1, 18, 5, 26), PhivAddr()).setMaxAccess("readwrite")
circuit = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 6))
phivCircuitParametersTable = MibTable((1, 3, 6, 1, 2, 1, 18, 6, 1))
phivCircuitParametersEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 6, 1, 1)).setIndexNames((0, "DECNET-PHIV-MIB", "phivCircuitIndex"))
phivCircuitIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 1)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly"))
phivCircuitLineIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 2)).setColumnInitializer(MibVariable((), InterfaceIndex()).setMaxAccess("readonly"))
phivCircuitCommonState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 3)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,4,2,3,)).subtype(namedValues=namedval.NamedValues(("on", 1), ("off", 2), ("service", 3), ("cleared", 4), ))).setMaxAccess("readwrite"))
phivCircuitCommonSubState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 4)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(4,7,5,11,3,13,2,9,10,8,1,6,12,)).subtype(namedValues=namedval.NamedValues(("starting", 1), ("autotriggering", 10), ("synchronizing", 11), ("failed", 12), ("running", 13), ("reflecting", 2), ("looping", 3), ("loading", 4), ("dumping", 5), ("triggering", 6), ("autoservice", 7), ("autoloading", 8), ("autodumping", 9), ))).setMaxAccess("readonly"))
phivCircuitCommonName = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 5)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 16))).setMaxAccess("readonly"))
phivCircuitExecRecallTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 6)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readwrite"))
phivCircuitCommonType = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 7)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,5,3,7,9,1,14,4,6,8,15,)).subtype(namedValues=namedval.NamedValues(("ddcmp-point", 1), ("other", 14), ("fddi", 15), ("ddcmp-control", 2), ("ddcmp-tributary", 3), ("x25", 4), ("ddcmp-dmc", 5), ("ethernet", 6), ("ci", 7), ("qp2-dte20", 8), ("bisync", 9), ))).setMaxAccess("readonly"))
phivCircuitService = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 8)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("enabled", 1), ("disabled", 2), ))).setMaxAccess("readwrite"))
phivCircuitExecCost = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 9)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 25))).setMaxAccess("readwrite"))
phivCircuitExecHelloTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 1, 1, 10)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 8191))).setMaxAccess("readwrite"))
phivCircuitCountTable = MibTable((1, 3, 6, 1, 2, 1, 18, 6, 2))
phivCircuitCountEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 6, 2, 1)).setIndexNames((0, "DECNET-PHIV-MIB", "phivCircuitIndex"))
phivCircuitCountSecLastZeroed = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 1)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivCircuitCountTermPacketsRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 2)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCircuitCountOriginPackSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 3)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCircuitCountTermCongLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 4)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivCircuitCountCorruptLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 5)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
phivCircuitCountTransitPksRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 6)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCircuitCountTransitPkSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 7)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCircuitCountTransitCongestLoss = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 8)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivCircuitCountCircuitDown = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 9)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
phivCircuitCountInitFailure = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 10)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
phivCircuitCountAdjDown = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 11)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCircuitCountPeakAdj = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 12)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivCircuitCountBytesRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 13)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCircuitCountBytesSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 14)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCircuitCountDataBlocksRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 15)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCircuitCountDataBlocksSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 16)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCircuitCountUsrBuffUnav = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 6, 2, 1, 17)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivCircuitOrigQueueLimit = MibVariable((1, 3, 6, 1, 2, 1, 18, 6, 3), Integer32()).setMaxAccess("readwrite")
phivCircuitCountZeroCount = MibVariable((1, 3, 6, 1, 2, 1, 18, 6, 4), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("other", 1), ("reset", 2), ))).setMaxAccess("readwrite")
ddcmp = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 7))
phivDDCMPCircuitParametersTable = MibTable((1, 3, 6, 1, 2, 1, 18, 7, 1))
phivDDCMPCircuitParametersEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 7, 1, 1)).setIndexNames((0, "DECNET-PHIV-MIB", "phivDDCMPCircuitIndex"))
phivDDCMPCircuitIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 1, 1, 1)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly"))
phivDDCMPCircuitAdjNodeAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 1, 1, 2)).setColumnInitializer(MibVariable((), PhivAddr()).setMaxAccess("readonly"))
phivDDCMPCircuitTributary = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 1, 1, 3)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
phivDDCMPCircuitCountTable = MibTable((1, 3, 6, 1, 2, 1, 18, 7, 2))
phivDDCMPCircuitCountEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 7, 2, 1)).setIndexNames((0, "DECNET-PHIV-MIB", "phivCircuitIndex"))
phivDDCMPCircuitErrorsInbd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 1)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
phivDDCMPCircuitErrorsOutbd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 2)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
phivDDCMPCircuitRmteReplyTimeouts = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 3)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
phivDDCMPCircuitLocalReplyTimeouts = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 4)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
phivDDCMPCircuitRmteBuffErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 5)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
phivDDCMPCircuitLocalBuffErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 6)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
phivDDCMPCircuitSelectIntervalsElap = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 7)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivDDCMPCircuitSelectTimeouts = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 2, 1, 8)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
phivDDCMPLineCountTable = MibTable((1, 3, 6, 1, 2, 1, 18, 7, 3))
phivDDCMPLineCountEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 7, 3, 1)).setIndexNames((0, "DECNET-PHIV-MIB", "phivDDCMPLineCountIndex"))
phivDDCMPLineCountIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 3, 1, 1)).setColumnInitializer(MibVariable((), InterfaceIndex()).setMaxAccess("readonly"))
phivDDCMPLineCountDataErrsIn = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 3, 1, 2)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
phivDDCMPLineCountRmteStationErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 3, 1, 3)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
phivDDCMPLineCountLocalStationErrs = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 7, 3, 1, 4)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
control = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 8))
phivControlSchedTimer = MibVariable((1, 3, 6, 1, 2, 1, 18, 8, 1), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(50, 65535)).clone(200)).setMaxAccess("readonly")
phivControlDeadTimer = MibVariable((1, 3, 6, 1, 2, 1, 18, 8, 2), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535)).clone(10000)).setMaxAccess("readonly")
phivControlDelayTimer = MibVariable((1, 3, 6, 1, 2, 1, 18, 8, 3), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly")
phivControlStreamTimer = MibVariable((1, 3, 6, 1, 2, 1, 18, 8, 4), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535)).clone(6000)).setMaxAccess("readonly")
phivControlParametersTable = MibTable((1, 3, 6, 1, 2, 1, 18, 8, 5))
phivControlParametersEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 8, 5, 1)).setIndexNames((0, "DECNET-PHIV-MIB", "phivControlCircuitIndex"))
phivControlCircuitIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 1)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly"))
phivControlBabbleTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 2)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535)).clone(6000)).setMaxAccess("readwrite"))
phivControlMaxBuffs = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 3)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 254))).setMaxAccess("readwrite"))
phivControlMaxTransmits = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 4)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 255)).clone(4)).setMaxAccess("readwrite"))
phivControlDyingBase = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 5)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readwrite"))
phivControlDyingIncrement = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 6)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readwrite"))
phivControlDeadThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 7)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255)).clone(8)).setMaxAccess("readwrite"))
phivControlDyingThreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 8)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255)).clone(2)).setMaxAccess("readwrite"))
phivControlInactTreshold = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 9)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255)).clone(8)).setMaxAccess("readwrite"))
phivControlPollingState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 10)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(4,5,3,2,1,)).subtype(namedValues=namedval.NamedValues(("automatic", 1), ("active", 2), ("inactive", 3), ("dying", 4), ("dead", 5), ))).setMaxAccess("readwrite"))
phivControlPollingSubState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 11)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,4,3,)).subtype(namedValues=namedval.NamedValues(("active", 1), ("inactive", 2), ("dying", 3), ("dead", 4), ))).setMaxAccess("readonly"))
phivControlTransTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 8, 5, 1, 12)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535)).clone(0)).setMaxAccess("readwrite"))
ethernet = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 9))
phivEthLinkParametersTable = MibTable((1, 3, 6, 1, 2, 1, 18, 9, 1))
phivEthLinkParametersEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 9, 1, 1)).setIndexNames((0, "DECNET-PHIV-MIB", "phivEthLinkIndex"))
phivEthLinkIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 9, 1, 1, 1)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly"))
phivEthDesigRouterNodeAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 9, 1, 1, 2)).setColumnInitializer(MibVariable((), PhivAddr()).setMaxAccess("readonly"))
phivEthMaxRouters = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 9, 1, 1, 3)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readwrite"))
phivEthRouterPri = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 9, 1, 1, 4)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 127)).clone(64)).setMaxAccess("readwrite"))
phivEthHardwareAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 9, 1, 1, 5)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(6, 6))).setMaxAccess("readonly"))
counters = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 10))
phivCountersCountTable = MibTable((1, 3, 6, 1, 2, 1, 18, 10, 1))
phivCountersCountEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 10, 1, 1)).setIndexNames((0, "DECNET-PHIV-MIB", "phivCountersIndex"))
phivCountersIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 1)).setColumnInitializer(MibVariable((), InterfaceIndex()).setMaxAccess("readonly"))
phivCountersCountBytesRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 2)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCountersCountBytesSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 3)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCountersCountDataBlocksRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 4)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCountersCountDataBlocksSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 5)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCountersCountEthUsrBuffUnav = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 6)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivCountersCountMcastBytesRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 7)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCountersCountDataBlksRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 8)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCountersCountDataBlksSent = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 9)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCountersCountMcastBlksRecd = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 10)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCountersCountBlksSentDef = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 11)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCountersCountBlksSentSingleCol = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 12)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCountersCountBlksSentMultCol = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 13)).setColumnInitializer(MibVariable((), PhivCounter().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
phivCountersCountSendFailure = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 14)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivCountersCountCollDetectFailure = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 15)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivCountersCountReceiveFailure = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 16)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivCountersCountUnrecFrameDest = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 17)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivCountersCountDataOver = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 18)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivCountersCountSysBuffUnav = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 19)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivCountersCountUsrBuffUnav = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 10, 1, 1, 20)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
adjacency = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 11))
phivAdjTable = MibTable((1, 3, 6, 1, 2, 1, 18, 11, 1))
phivAdjEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 11, 1, 1)).setIndexNames((0, "DECNET-PHIV-MIB", "phivAdjCircuitIndex"))
phivAdjCircuitIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 1)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
phivAdjNodeAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 2)).setColumnInitializer(MibVariable((), PhivAddr()).setMaxAccess("readonly"))
phivAdjBlockSize = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 3)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
phivAdjListenTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 4)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly"))
phivAdjCircuitEtherServPhysAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 5)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(6, 6))).setMaxAccess("readonly"))
phivAdjType = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 6)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,3,5,2,4,)).subtype(namedValues=namedval.NamedValues(("routing-III", 1), ("nonrouting-III", 2), ("area", 3), ("routing-IV", 4), ("nonrouting-IV", 5), ))).setMaxAccess("readonly"))
phivAdjState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 7)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(8,6,3,10,5,2,7,1,4,9,)).subtype(namedValues=namedval.NamedValues(("initializing", 1), ("halt", 10), ("up", 2), ("run", 3), ("circuit-rejected", 4), ("data-link-start", 5), ("routing-layer-initialize", 6), ("routing-layer-verify", 7), ("routing-layer-complete", 8), ("off", 9), ))).setMaxAccess("readonly"))
phivAdjPriority = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 8)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
phivAdjExecListenTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 1, 1, 9)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly"))
phivAdjNodeTable = MibTable((1, 3, 6, 1, 2, 1, 18, 11, 2))
phivAdjNodeEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 11, 2, 1)).setIndexNames((0, "DECNET-PHIV-MIB", "phivAdjNodeCircuitIndex"), (0, "DECNET-PHIV-MIB", "phivAdjAddr"))
phivAdjNodeCircuitIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 1)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly"))
phivAdjAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 2)).setColumnInitializer(MibVariable((), PhivAddr()).setMaxAccess("readonly"))
phivAdjNodeBlockSize = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 3)).setColumnInitializer(MibVariable((), Integer32()).setMaxAccess("readonly"))
phivAdjNodeListenTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 4)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly"))
phivAdjNodeCircuitEtherServPhysAddr = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 5)).setColumnInitializer(MibVariable((), OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(6, 6))).setMaxAccess("readonly"))
phivAdjNodeType = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 6)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,3,5,2,4,)).subtype(namedValues=namedval.NamedValues(("routing-III", 1), ("nonrouting-III", 2), ("area", 3), ("routing-IV", 4), ("nonrouting-IV", 5), ))).setMaxAccess("readonly"))
phivAdjNodeState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 7)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(8,6,3,10,5,2,7,1,4,9,)).subtype(namedValues=namedval.NamedValues(("initializing", 1), ("halt", 10), ("up", 2), ("run", 3), ("circuit-rejected", 4), ("data-link-start", 5), ("routing-layer-initialize", 6), ("routing-layer-verify", 7), ("routing-layer-complete", 8), ("off", 9), ))).setMaxAccess("readonly"))
phivAdjNodePriority = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 11, 2, 1, 8)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
line = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 12))
phivLineTable = MibTable((1, 3, 6, 1, 2, 1, 18, 12, 1))
phivLineEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 12, 1, 1)).setIndexNames((0, "DECNET-PHIV-MIB", "phivLineIndex"))
phivLineIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 1)).setColumnInitializer(MibVariable((), InterfaceIndex()).setMaxAccess("readonly"))
phivLineName = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 2)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 16))).setMaxAccess("readonly"))
phivLineState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 3)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,4,2,3,)).subtype(namedValues=namedval.NamedValues(("on", 1), ("off", 2), ("service", 3), ("cleared", 4), ))).setMaxAccess("readonly"))
phivLineSubstate = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 4)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(10,4,12,9,5,11,3,13,2,8,7,1,6,)).subtype(namedValues=namedval.NamedValues(("starting", 1), ("auto-triggering", 10), ("synchronizing", 11), ("failed", 12), ("running", 13), ("reflecting", 2), ("looping", 3), ("loading", 4), ("dumping", 5), ("triggering", 6), ("auto-service", 7), ("auto-loading", 8), ("auto-dumping", 9), ))).setMaxAccess("readonly"))
phivLineService = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 5)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,2,1,4,)).subtype(namedValues=namedval.NamedValues(("starting", 1), ("reflecting", 2), ("looping", 3), ("other", 4), ))).setMaxAccess("readonly"))
phivLineDevice = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 6)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 16))).setMaxAccess("readonly"))
phivLineReceiveBuffs = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 7)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 65535))).setMaxAccess("readonly"))
phivLineProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 8)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,5,4,6,3,8,1,14,9,7,15,)).subtype(namedValues=namedval.NamedValues(("ddcmp-point", 1), ("other", 14), ("fddi", 15), ("ddcmp-control", 2), ("ddcmp-tributary", 3), ("reserved", 4), ("ddcmp-dmc", 5), ("olapb", 6), ("ethernet", 7), ("ci", 8), ("qp2", 9), ))).setMaxAccess("readonly"))
phivLineServiceTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 9)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly"))
phivLineMaxBlock = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 12, 1, 1, 10)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly"))
nonBroadcastLine = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 14))
phivNonBroadcastTable = MibTable((1, 3, 6, 1, 2, 1, 18, 14, 1))
phivNonBroadcastEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 14, 1, 1)).setIndexNames((0, "DECNET-PHIV-MIB", "phivNonBroadcastIndex"))
phivNonBroadcastIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 14, 1, 1, 1)).setColumnInitializer(MibVariable((), InterfaceIndex()).setMaxAccess("readonly"))
phivNonBroadcastController = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 14, 1, 1, 2)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,2,)).subtype(namedValues=namedval.NamedValues(("normal", 1), ("loopback", 2), ("other", 3), ))).setMaxAccess("readonly"))
phivNonBroadcastDuplex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 14, 1, 1, 3)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(2,1,)).subtype(namedValues=namedval.NamedValues(("full", 1), ("half", 2), ))).setMaxAccess("readonly"))
phivNonBroadcastClock = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 14, 1, 1, 4)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,2,1,)).subtype(namedValues=namedval.NamedValues(("external", 1), ("internal", 2), ("other", 3), ))).setMaxAccess("readonly"))
phivNonBroadcastRetransmitTimer = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 14, 1, 1, 5)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535)).clone(3000)).setMaxAccess("readonly"))
area = MibIdentifier((1, 3, 6, 1, 2, 1, 18, 15))
phivAreaTable = MibTable((1, 3, 6, 1, 2, 1, 18, 15, 1))
phivAreaEntry = MibTableRow((1, 3, 6, 1, 2, 1, 18, 15, 1, 1)).setIndexNames((0, "DECNET-PHIV-MIB", "phivAreaNum"))
phivAreaNum = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 1)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 64))).setMaxAccess("readonly"))
phivAreaState = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 2)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(5,4,)).subtype(namedValues=namedval.NamedValues(("reachable", 4), ("unreachable", 5), ))).setMaxAccess("readonly"))
phivAreaCost = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 3)).setColumnInitializer(MibVariable((), Gauge32()).setMaxAccess("readonly"))
phivAreaHops = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 4)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 255))).setMaxAccess("readonly"))
phivAreaNextNode = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 5)).setColumnInitializer(MibVariable((), PhivAddr()).setMaxAccess("readonly"))
phivAreaCircuitIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 18, 15, 1, 1, 6)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 65535))).setMaxAccess("readonly"))
phivAreaMaxCost = MibVariable((1, 3, 6, 1, 2, 1, 18, 15, 2), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 1022))).setMaxAccess("readwrite")
phivAreaMaxHops = MibVariable((1, 3, 6, 1, 2, 1, 18, 15, 3), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 30))).setMaxAccess("readwrite")
phivRouteMaxArea = MibVariable((1, 3, 6, 1, 2, 1, 18, 15, 4), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 63))).setMaxAccess("readwrite")

# Augmentions

# Exports

# Types
mibBuilder.exportSymbols("DECNET-PHIV-MIB", InterfaceIndex=InterfaceIndex, PhivAddr=PhivAddr, PhivCounter=PhivCounter)

# Objects
mibBuilder.exportSymbols("DECNET-PHIV-MIB", phiv=phiv, phivSystem=phivSystem, phivSystemState=phivSystemState, phivExecIdent=phivExecIdent, phivManagement=phivManagement, phivMgmtMgmtVers=phivMgmtMgmtVers, session=session, phivSessionSystemName=phivSessionSystemName, phivSessionInTimer=phivSessionInTimer, phivSessionOutTimer=phivSessionOutTimer, end=end, phivEndRemoteTable=phivEndRemoteTable, phivEndRemoteEntry=phivEndRemoteEntry, phivEndRemoteHostNodeID=phivEndRemoteHostNodeID, phivEndRemoteState=phivEndRemoteState, phivEndCircuitIndex=phivEndCircuitIndex, phivEndActiveLinks=phivEndActiveLinks, phivEndDelay=phivEndDelay, phivEndCountTable=phivEndCountTable, phivEndCountEntry=phivEndCountEntry, phivEndCountHostNodeID=phivEndCountHostNodeID, phivEndCountSecsLastZeroed=phivEndCountSecsLastZeroed, phivEndCountUsrBytesRec=phivEndCountUsrBytesRec, phivEndCountUsrBytesSent=phivEndCountUsrBytesSent, phivEndUCountUsrMessRec=phivEndUCountUsrMessRec, phivEndCountUsrMessSent=phivEndCountUsrMessSent, phivEndCountTotalBytesRec=phivEndCountTotalBytesRec, phivEndCountTotalBytesSent=phivEndCountTotalBytesSent, phivEndCountTotalMessRec=phivEndCountTotalMessRec, phivEndCountTotalMessSent=phivEndCountTotalMessSent, phivEndCountConnectsRecd=phivEndCountConnectsRecd, phivEndCountConnectsSent=phivEndCountConnectsSent, phivEndCountReponseTimeouts=phivEndCountReponseTimeouts, phivEndCountRecdConnectResErrs=phivEndCountRecdConnectResErrs, phivEndMaxLinks=phivEndMaxLinks, phivEndNSPVers=phivEndNSPVers, phivEndRetransmitFactor=phivEndRetransmitFactor, phivEndDelayFact=phivEndDelayFact, phivEndDelayWeight=phivEndDelayWeight, phivEndInactivityTimer=phivEndInactivityTimer, phivEndCountZeroCount=phivEndCountZeroCount, phivEndMaxLinksActive=phivEndMaxLinksActive, routing=routing, phivRouteBroadcastRouteTimer=phivRouteBroadcastRouteTimer, phivRouteBuffSize=phivRouteBuffSize, phivRouteRoutingVers=phivRouteRoutingVers, phivRouteMaxAddr=phivRouteMaxAddr, phivRouteMaxBdcastNonRouters=phivRouteMaxBdcastNonRouters, phivRouteMaxBdcastRouters=phivRouteMaxBdcastRouters, phivRouteMaxBuffs=phivRouteMaxBuffs, phivRouteMaxCircuits=phivRouteMaxCircuits, phivRouteMaxCost=phivRouteMaxCost, phivRouteMaxHops=phivRouteMaxHops, phivRouteMaxVisits=phivRouteMaxVisits, phivRouteRoutingTimer=phivRouteRoutingTimer, phivRouteSegBuffSize=phivRouteSegBuffSize, phivRouteType=phivRouteType, phivRouteCountAgedPktLoss=phivRouteCountAgedPktLoss, phivRouteCountNodeUnrPktLoss=phivRouteCountNodeUnrPktLoss, phivRouteCountOutRngePktLoss=phivRouteCountOutRngePktLoss, phivRouteCountOverSzePktLoss=phivRouteCountOverSzePktLoss, phivRouteCountPacketFmtErr=phivRouteCountPacketFmtErr, phivRouteCountPtlRteUpdtLoss=phivRouteCountPtlRteUpdtLoss, phivRouteCountVerifReject=phivRouteCountVerifReject, phivLevel1RouteTable=phivLevel1RouteTable, phivLevel1RouteEntry=phivLevel1RouteEntry, phivLevel1RouteNodeAddr=phivLevel1RouteNodeAddr, phivLevel1RouteCircuitIndex=phivLevel1RouteCircuitIndex, phivLevel1RouteCost=phivLevel1RouteCost, phivLevel1RouteHops=phivLevel1RouteHops, phivLevel1RouteNextNode=phivLevel1RouteNextNode, phivRouteCountZeroCount=phivRouteCountZeroCount, phivRouteSystemAddr=phivRouteSystemAddr, phivRouteRoutingType=phivRouteRoutingType, phivRouteSystemAddress=phivRouteSystemAddress, circuit=circuit, phivCircuitParametersTable=phivCircuitParametersTable, phivCircuitParametersEntry=phivCircuitParametersEntry, phivCircuitIndex=phivCircuitIndex, phivCircuitLineIndex=phivCircuitLineIndex, phivCircuitCommonState=phivCircuitCommonState, phivCircuitCommonSubState=phivCircuitCommonSubState, phivCircuitCommonName=phivCircuitCommonName, phivCircuitExecRecallTimer=phivCircuitExecRecallTimer, phivCircuitCommonType=phivCircuitCommonType, phivCircuitService=phivCircuitService, phivCircuitExecCost=phivCircuitExecCost, phivCircuitExecHelloTimer=phivCircuitExecHelloTimer, phivCircuitCountTable=phivCircuitCountTable, phivCircuitCountEntry=phivCircuitCountEntry, phivCircuitCountSecLastZeroed=phivCircuitCountSecLastZeroed, phivCircuitCountTermPacketsRecd=phivCircuitCountTermPacketsRecd, phivCircuitCountOriginPackSent=phivCircuitCountOriginPackSent, phivCircuitCountTermCongLoss=phivCircuitCountTermCongLoss, phivCircuitCountCorruptLoss=phivCircuitCountCorruptLoss, phivCircuitCountTransitPksRecd=phivCircuitCountTransitPksRecd, phivCircuitCountTransitPkSent=phivCircuitCountTransitPkSent, phivCircuitCountTransitCongestLoss=phivCircuitCountTransitCongestLoss, phivCircuitCountCircuitDown=phivCircuitCountCircuitDown, phivCircuitCountInitFailure=phivCircuitCountInitFailure, phivCircuitCountAdjDown=phivCircuitCountAdjDown, phivCircuitCountPeakAdj=phivCircuitCountPeakAdj, phivCircuitCountBytesRecd=phivCircuitCountBytesRecd, phivCircuitCountBytesSent=phivCircuitCountBytesSent, phivCircuitCountDataBlocksRecd=phivCircuitCountDataBlocksRecd, phivCircuitCountDataBlocksSent=phivCircuitCountDataBlocksSent, phivCircuitCountUsrBuffUnav=phivCircuitCountUsrBuffUnav, phivCircuitOrigQueueLimit=phivCircuitOrigQueueLimit, phivCircuitCountZeroCount=phivCircuitCountZeroCount, ddcmp=ddcmp, phivDDCMPCircuitParametersTable=phivDDCMPCircuitParametersTable, phivDDCMPCircuitParametersEntry=phivDDCMPCircuitParametersEntry, phivDDCMPCircuitIndex=phivDDCMPCircuitIndex, phivDDCMPCircuitAdjNodeAddr=phivDDCMPCircuitAdjNodeAddr, phivDDCMPCircuitTributary=phivDDCMPCircuitTributary, phivDDCMPCircuitCountTable=phivDDCMPCircuitCountTable, phivDDCMPCircuitCountEntry=phivDDCMPCircuitCountEntry, phivDDCMPCircuitErrorsInbd=phivDDCMPCircuitErrorsInbd, phivDDCMPCircuitErrorsOutbd=phivDDCMPCircuitErrorsOutbd, phivDDCMPCircuitRmteReplyTimeouts=phivDDCMPCircuitRmteReplyTimeouts, phivDDCMPCircuitLocalReplyTimeouts=phivDDCMPCircuitLocalReplyTimeouts, phivDDCMPCircuitRmteBuffErrors=phivDDCMPCircuitRmteBuffErrors, phivDDCMPCircuitLocalBuffErrors=phivDDCMPCircuitLocalBuffErrors, phivDDCMPCircuitSelectIntervalsElap=phivDDCMPCircuitSelectIntervalsElap, phivDDCMPCircuitSelectTimeouts=phivDDCMPCircuitSelectTimeouts, phivDDCMPLineCountTable=phivDDCMPLineCountTable, phivDDCMPLineCountEntry=phivDDCMPLineCountEntry, phivDDCMPLineCountIndex=phivDDCMPLineCountIndex)
mibBuilder.exportSymbols("DECNET-PHIV-MIB", phivDDCMPLineCountDataErrsIn=phivDDCMPLineCountDataErrsIn, phivDDCMPLineCountRmteStationErrs=phivDDCMPLineCountRmteStationErrs, phivDDCMPLineCountLocalStationErrs=phivDDCMPLineCountLocalStationErrs, control=control, phivControlSchedTimer=phivControlSchedTimer, phivControlDeadTimer=phivControlDeadTimer, phivControlDelayTimer=phivControlDelayTimer, phivControlStreamTimer=phivControlStreamTimer, phivControlParametersTable=phivControlParametersTable, phivControlParametersEntry=phivControlParametersEntry, phivControlCircuitIndex=phivControlCircuitIndex, phivControlBabbleTimer=phivControlBabbleTimer, phivControlMaxBuffs=phivControlMaxBuffs, phivControlMaxTransmits=phivControlMaxTransmits, phivControlDyingBase=phivControlDyingBase, phivControlDyingIncrement=phivControlDyingIncrement, phivControlDeadThreshold=phivControlDeadThreshold, phivControlDyingThreshold=phivControlDyingThreshold, phivControlInactTreshold=phivControlInactTreshold, phivControlPollingState=phivControlPollingState, phivControlPollingSubState=phivControlPollingSubState, phivControlTransTimer=phivControlTransTimer, ethernet=ethernet, phivEthLinkParametersTable=phivEthLinkParametersTable, phivEthLinkParametersEntry=phivEthLinkParametersEntry, phivEthLinkIndex=phivEthLinkIndex, phivEthDesigRouterNodeAddr=phivEthDesigRouterNodeAddr, phivEthMaxRouters=phivEthMaxRouters, phivEthRouterPri=phivEthRouterPri, phivEthHardwareAddr=phivEthHardwareAddr, counters=counters, phivCountersCountTable=phivCountersCountTable, phivCountersCountEntry=phivCountersCountEntry, phivCountersIndex=phivCountersIndex, phivCountersCountBytesRecd=phivCountersCountBytesRecd, phivCountersCountBytesSent=phivCountersCountBytesSent, phivCountersCountDataBlocksRecd=phivCountersCountDataBlocksRecd, phivCountersCountDataBlocksSent=phivCountersCountDataBlocksSent, phivCountersCountEthUsrBuffUnav=phivCountersCountEthUsrBuffUnav, phivCountersCountMcastBytesRecd=phivCountersCountMcastBytesRecd, phivCountersCountDataBlksRecd=phivCountersCountDataBlksRecd, phivCountersCountDataBlksSent=phivCountersCountDataBlksSent, phivCountersCountMcastBlksRecd=phivCountersCountMcastBlksRecd, phivCountersCountBlksSentDef=phivCountersCountBlksSentDef, phivCountersCountBlksSentSingleCol=phivCountersCountBlksSentSingleCol, phivCountersCountBlksSentMultCol=phivCountersCountBlksSentMultCol, phivCountersCountSendFailure=phivCountersCountSendFailure, phivCountersCountCollDetectFailure=phivCountersCountCollDetectFailure, phivCountersCountReceiveFailure=phivCountersCountReceiveFailure, phivCountersCountUnrecFrameDest=phivCountersCountUnrecFrameDest, phivCountersCountDataOver=phivCountersCountDataOver, phivCountersCountSysBuffUnav=phivCountersCountSysBuffUnav, phivCountersCountUsrBuffUnav=phivCountersCountUsrBuffUnav, adjacency=adjacency, phivAdjTable=phivAdjTable, phivAdjEntry=phivAdjEntry, phivAdjCircuitIndex=phivAdjCircuitIndex, phivAdjNodeAddr=phivAdjNodeAddr, phivAdjBlockSize=phivAdjBlockSize, phivAdjListenTimer=phivAdjListenTimer, phivAdjCircuitEtherServPhysAddr=phivAdjCircuitEtherServPhysAddr, phivAdjType=phivAdjType, phivAdjState=phivAdjState, phivAdjPriority=phivAdjPriority, phivAdjExecListenTimer=phivAdjExecListenTimer, phivAdjNodeTable=phivAdjNodeTable, phivAdjNodeEntry=phivAdjNodeEntry, phivAdjNodeCircuitIndex=phivAdjNodeCircuitIndex, phivAdjAddr=phivAdjAddr, phivAdjNodeBlockSize=phivAdjNodeBlockSize, phivAdjNodeListenTimer=phivAdjNodeListenTimer, phivAdjNodeCircuitEtherServPhysAddr=phivAdjNodeCircuitEtherServPhysAddr, phivAdjNodeType=phivAdjNodeType, phivAdjNodeState=phivAdjNodeState, phivAdjNodePriority=phivAdjNodePriority, line=line, phivLineTable=phivLineTable, phivLineEntry=phivLineEntry, phivLineIndex=phivLineIndex, phivLineName=phivLineName, phivLineState=phivLineState, phivLineSubstate=phivLineSubstate, phivLineService=phivLineService, phivLineDevice=phivLineDevice, phivLineReceiveBuffs=phivLineReceiveBuffs, phivLineProtocol=phivLineProtocol, phivLineServiceTimer=phivLineServiceTimer, phivLineMaxBlock=phivLineMaxBlock, nonBroadcastLine=nonBroadcastLine, phivNonBroadcastTable=phivNonBroadcastTable, phivNonBroadcastEntry=phivNonBroadcastEntry, phivNonBroadcastIndex=phivNonBroadcastIndex, phivNonBroadcastController=phivNonBroadcastController, phivNonBroadcastDuplex=phivNonBroadcastDuplex, phivNonBroadcastClock=phivNonBroadcastClock, phivNonBroadcastRetransmitTimer=phivNonBroadcastRetransmitTimer, area=area, phivAreaTable=phivAreaTable, phivAreaEntry=phivAreaEntry, phivAreaNum=phivAreaNum, phivAreaState=phivAreaState, phivAreaCost=phivAreaCost, phivAreaHops=phivAreaHops, phivAreaNextNode=phivAreaNextNode, phivAreaCircuitIndex=phivAreaCircuitIndex, phivAreaMaxCost=phivAreaMaxCost, phivAreaMaxHops=phivAreaMaxHops, phivRouteMaxArea=phivRouteMaxArea)

