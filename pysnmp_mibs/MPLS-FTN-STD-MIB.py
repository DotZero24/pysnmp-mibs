# PySNMP SMI module. Autogenerated from smidump -f python MPLS-FTN-STD-MIB
# by libsmi2pysnmp-0.0.3-alpha at Wed Nov 10 12:10:25 2004,
# Python version (2, 2, 1, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pysnmp.asn1 import subtypes

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( Dscp, ) = mibBuilder.importSymbols("DIFFSERV-DSCP-TC", "Dscp")
( InterfaceIndexOrZero, ifCounterDiscontinuityGroup, ifGeneralInformationGroup, ) = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero", "ifCounterDiscontinuityGroup", "ifGeneralInformationGroup")
( InetAddress, InetAddressType, InetPortNumber, ) = mibBuilder.importSymbols("INET-ADDRESS-MIB", "InetAddress", "InetAddressType", "InetPortNumber")
( mplsStdMIB, ) = mibBuilder.importSymbols("MPLS-TC-STD-MIB", "mplsStdMIB")
( SnmpAdminString, ) = mibBuilder.importSymbols("SNMP-FRAMEWORK-MIB", "SnmpAdminString")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Counter64, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibVariable, MibTable, MibTableRow, MibTableColumn, TimeTicks, Unsigned32, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter64", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibVariable", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "Unsigned32")
( RowPointer, RowStatus, StorageType, TextualConvention, TimeStamp, ) = mibBuilder.importSymbols("SNMPv2-TC", "RowPointer", "RowStatus", "StorageType", "TextualConvention", "TimeStamp")

# Types

class MplsFTNEntryIndex(Unsigned32):
    subtypeConstraints = Unsigned32.subtypeConstraints + ( subtypes.ValueRangeConstraint(1, 4294967295L), )
    pass

class MplsFTNEntryIndexOrZero(Unsigned32):
    subtypeConstraints = Unsigned32.subtypeConstraints + ( subtypes.ValueRangeConstraint(0, 4294967295L), )
    pass


# Objects

mplsFTNStdMIB = ModuleIdentity((1, 3, 6, 1, 2, 1, 10, 166, 8))
mplsFTNNotifications = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 8, 0))
mplsFTNObjects = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 8, 1))
mplsFTNIndexNext = MibVariable((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 1), MplsFTNEntryIndexOrZero()).setMaxAccess("readonly")
mplsFTNTableLastChanged = MibVariable((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 2), TimeStamp()).setMaxAccess("readonly")
mplsFTNTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3))
mplsFTNEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1)).setIndexNames((0, "MPLS-FTN-STD-MIB", "mplsFTNIndex"))
mplsFTNIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 1)).setColumnInitializer(MibVariable((), MplsFTNEntryIndex()).setMaxAccess("noaccess"))
mplsFTNRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 2)).setColumnInitializer(MibVariable((), RowStatus()).setMaxAccess("readwrite"))
mplsFTNDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 3)).setColumnInitializer(MibVariable((), SnmpAdminString()).setMaxAccess("readwrite"))
mplsFTNMask = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 4)).setColumnInitializer(MibVariable((), Bits().addNamedValues(("sourceAddr", 0), ("destAddr", 1), ("sourcePort", 2), ("destPort", 3), ("protocol", 4), ("dscp", 5), )).setMaxAccess("readwrite"))
mplsFTNAddrType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 5)).setColumnInitializer(MibVariable((), InetAddressType()).setMaxAccess("readwrite"))
mplsFTNSourceAddrMin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 6)).setColumnInitializer(MibVariable((), InetAddress()).setMaxAccess("readwrite"))
mplsFTNSourceAddrMax = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 7)).setColumnInitializer(MibVariable((), InetAddress()).setMaxAccess("readwrite"))
mplsFTNDestAddrMin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 8)).setColumnInitializer(MibVariable((), InetAddress()).setMaxAccess("readwrite"))
mplsFTNDestAddrMax = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 9)).setColumnInitializer(MibVariable((), InetAddress()).setMaxAccess("readwrite"))
mplsFTNSourcePortMin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 10)).setColumnInitializer(MibVariable((), InetPortNumber()).setMaxAccess("readwrite"))
mplsFTNSourcePortMax = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 11)).setColumnInitializer(MibVariable((), InetPortNumber()).setMaxAccess("readwrite"))
mplsFTNDestPortMin = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 12)).setColumnInitializer(MibVariable((), InetPortNumber()).setMaxAccess("readwrite"))
mplsFTNDestPortMax = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 13)).setColumnInitializer(MibVariable((), InetPortNumber()).setMaxAccess("readwrite"))
mplsFTNProtocol = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 14)).setColumnInitializer(MibVariable((), Integer32().addConstraints(subtypes.ValueRangeConstraint(0, 255)).set(255)).setMaxAccess("readwrite"))
mplsFTNDscp = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 15)).setColumnInitializer(MibVariable((), Dscp()).setMaxAccess("readwrite"))
mplsFTNActionType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 16)).setColumnInitializer(MibVariable((), Integer().addConstraints(subtypes.SingleValueConstraint(2,1,)).addNamedValues(("redirectLsp", 1), ("redirectTunnel", 2), )).setMaxAccess("readwrite"))
mplsFTNActionPointer = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 17)).setColumnInitializer(MibVariable((), RowPointer()).setMaxAccess("readwrite"))
mplsFTNStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 3, 1, 18)).setColumnInitializer(MibVariable((), StorageType()).setMaxAccess("readwrite"))
mplsFTNMapTableLastChanged = MibVariable((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 4), TimeStamp()).setMaxAccess("readonly")
mplsFTNMapTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 5))
mplsFTNMapEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 5, 1)).setIndexNames((0, "MPLS-FTN-STD-MIB", "mplsFTNMapIndex"), (0, "MPLS-FTN-STD-MIB", "mplsFTNMapPrevIndex"), (0, "MPLS-FTN-STD-MIB", "mplsFTNMapCurrIndex"))
mplsFTNMapIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 5, 1, 1)).setColumnInitializer(MibVariable((), InterfaceIndexOrZero()).setMaxAccess("noaccess"))
mplsFTNMapPrevIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 5, 1, 2)).setColumnInitializer(MibVariable((), MplsFTNEntryIndexOrZero()).setMaxAccess("noaccess"))
mplsFTNMapCurrIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 5, 1, 3)).setColumnInitializer(MibVariable((), MplsFTNEntryIndex()).setMaxAccess("noaccess"))
mplsFTNMapRowStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 5, 1, 4)).setColumnInitializer(MibVariable((), Integer().addConstraints(subtypes.SingleValueConstraint(1,6,4,)).addNamedValues(("active", 1), ("createAndGo", 4), ("destroy", 6), )).setMaxAccess("readwrite"))
mplsFTNMapStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 5, 1, 5)).setColumnInitializer(MibVariable((), StorageType()).setMaxAccess("readwrite"))
mplsFTNPerfTable = MibTable((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 6))
mplsFTNPerfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 6, 1)).setIndexNames((0, "MPLS-FTN-STD-MIB", "mplsFTNPerfIndex"), (0, "MPLS-FTN-STD-MIB", "mplsFTNPerfCurrIndex"))
mplsFTNPerfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 6, 1, 1)).setColumnInitializer(MibVariable((), InterfaceIndexOrZero()).setMaxAccess("noaccess"))
mplsFTNPerfCurrIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 6, 1, 2)).setColumnInitializer(MibVariable((), MplsFTNEntryIndex()).setMaxAccess("noaccess"))
mplsFTNPerfMatchedPackets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 6, 1, 3)).setColumnInitializer(MibVariable((), Counter64()).setMaxAccess("readonly"))
mplsFTNPerfMatchedOctets = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 6, 1, 4)).setColumnInitializer(MibVariable((), Counter64()).setMaxAccess("readonly"))
mplsFTNPerfDiscontinuityTime = MibTableColumn((1, 3, 6, 1, 2, 1, 10, 166, 8, 1, 6, 1, 5)).setColumnInitializer(MibVariable((), TimeStamp()).setMaxAccess("readonly"))
mplsFTNConformance = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 8, 2))
mplsFTNGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 8, 2, 1))
mplsFTNCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 10, 166, 8, 2, 2))

# Augmentions

# Groups

mplsFTNMapGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 8, 2, 1, 2)).setObjects(("MPLS-FTN-STD-MIB", "mplsFTNMapTableLastChanged"), ("MPLS-FTN-STD-MIB", "mplsFTNMapStorageType"), ("MPLS-FTN-STD-MIB", "mplsFTNMapRowStatus"), )
mplsFTNPerfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 8, 2, 1, 3)).setObjects(("MPLS-FTN-STD-MIB", "mplsFTNPerfDiscontinuityTime"), ("MPLS-FTN-STD-MIB", "mplsFTNPerfMatchedOctets"), ("MPLS-FTN-STD-MIB", "mplsFTNPerfMatchedPackets"), )
mplsFTNRuleGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 10, 166, 8, 2, 1, 1)).setObjects(("MPLS-FTN-STD-MIB", "mplsFTNSourcePortMax"), ("MPLS-FTN-STD-MIB", "mplsFTNAddrType"), ("MPLS-FTN-STD-MIB", "mplsFTNIndexNext"), ("MPLS-FTN-STD-MIB", "mplsFTNDestPortMin"), ("MPLS-FTN-STD-MIB", "mplsFTNTableLastChanged"), ("MPLS-FTN-STD-MIB", "mplsFTNDestPortMax"), ("MPLS-FTN-STD-MIB", "mplsFTNDestAddrMin"), ("MPLS-FTN-STD-MIB", "mplsFTNStorageType"), ("MPLS-FTN-STD-MIB", "mplsFTNSourceAddrMin"), ("MPLS-FTN-STD-MIB", "mplsFTNDescr"), ("MPLS-FTN-STD-MIB", "mplsFTNProtocol"), ("MPLS-FTN-STD-MIB", "mplsFTNRowStatus"), ("MPLS-FTN-STD-MIB", "mplsFTNDestAddrMax"), ("MPLS-FTN-STD-MIB", "mplsFTNActionPointer"), ("MPLS-FTN-STD-MIB", "mplsFTNActionType"), ("MPLS-FTN-STD-MIB", "mplsFTNSourceAddrMax"), ("MPLS-FTN-STD-MIB", "mplsFTNDscp"), ("MPLS-FTN-STD-MIB", "mplsFTNSourcePortMin"), ("MPLS-FTN-STD-MIB", "mplsFTNMask"), )

# Exports

# Types
mibBuilder.exportSymbols("MPLS-FTN-STD-MIB", MplsFTNEntryIndex=MplsFTNEntryIndex, MplsFTNEntryIndexOrZero=MplsFTNEntryIndexOrZero)

# Objects
mibBuilder.exportSymbols("MPLS-FTN-STD-MIB", mplsFTNStdMIB=mplsFTNStdMIB, mplsFTNNotifications=mplsFTNNotifications, mplsFTNObjects=mplsFTNObjects, mplsFTNIndexNext=mplsFTNIndexNext, mplsFTNTableLastChanged=mplsFTNTableLastChanged, mplsFTNTable=mplsFTNTable, mplsFTNEntry=mplsFTNEntry, mplsFTNIndex=mplsFTNIndex, mplsFTNRowStatus=mplsFTNRowStatus, mplsFTNDescr=mplsFTNDescr, mplsFTNMask=mplsFTNMask, mplsFTNAddrType=mplsFTNAddrType, mplsFTNSourceAddrMin=mplsFTNSourceAddrMin, mplsFTNSourceAddrMax=mplsFTNSourceAddrMax, mplsFTNDestAddrMin=mplsFTNDestAddrMin, mplsFTNDestAddrMax=mplsFTNDestAddrMax, mplsFTNSourcePortMin=mplsFTNSourcePortMin, mplsFTNSourcePortMax=mplsFTNSourcePortMax, mplsFTNDestPortMin=mplsFTNDestPortMin, mplsFTNDestPortMax=mplsFTNDestPortMax, mplsFTNProtocol=mplsFTNProtocol, mplsFTNDscp=mplsFTNDscp, mplsFTNActionType=mplsFTNActionType, mplsFTNActionPointer=mplsFTNActionPointer, mplsFTNStorageType=mplsFTNStorageType, mplsFTNMapTableLastChanged=mplsFTNMapTableLastChanged, mplsFTNMapTable=mplsFTNMapTable, mplsFTNMapEntry=mplsFTNMapEntry, mplsFTNMapIndex=mplsFTNMapIndex, mplsFTNMapPrevIndex=mplsFTNMapPrevIndex, mplsFTNMapCurrIndex=mplsFTNMapCurrIndex, mplsFTNMapRowStatus=mplsFTNMapRowStatus, mplsFTNMapStorageType=mplsFTNMapStorageType, mplsFTNPerfTable=mplsFTNPerfTable, mplsFTNPerfEntry=mplsFTNPerfEntry, mplsFTNPerfIndex=mplsFTNPerfIndex, mplsFTNPerfCurrIndex=mplsFTNPerfCurrIndex, mplsFTNPerfMatchedPackets=mplsFTNPerfMatchedPackets, mplsFTNPerfMatchedOctets=mplsFTNPerfMatchedOctets, mplsFTNPerfDiscontinuityTime=mplsFTNPerfDiscontinuityTime, mplsFTNConformance=mplsFTNConformance, mplsFTNGroups=mplsFTNGroups, mplsFTNCompliances=mplsFTNCompliances)

# Groups
mibBuilder.exportSymbols("MPLS-FTN-STD-MIB", mplsFTNMapGroup=mplsFTNMapGroup, mplsFTNPerfGroup=mplsFTNPerfGroup, mplsFTNRuleGroup=mplsFTNRuleGroup)
