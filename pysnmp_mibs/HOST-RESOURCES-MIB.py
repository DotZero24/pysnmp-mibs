# PySNMP SMI module. Autogenerated from smidump -f python HOST-RESOURCES-MIB
# by libsmi2pysnmp-0.0.4-alpha at Tue Jun 28 11:30:49 2005,
# Python version (2, 4, 0, 'final', 0)

# Imported just in case new ASN.1 types would be created
from pyasn1.type import constraint, namedval

# Imports

( Integer, ObjectIdentifier, OctetString, ) = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
( InterfaceIndexOrZero, ) = mibBuilder.importSymbols("IF-MIB", "InterfaceIndexOrZero")
( ModuleCompliance, ObjectGroup, ) = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "ObjectGroup")
( Bits, Counter32, Gauge32, Integer32, Integer32, ModuleIdentity, MibIdentifier, MibVariable, MibTable, MibTableRow, MibTableColumn, TimeTicks, TimeTicks, mib_2, ) = mibBuilder.importSymbols("SNMPv2-SMI", "Bits", "Counter32", "Gauge32", "Integer32", "Integer32", "ModuleIdentity", "MibIdentifier", "MibVariable", "MibTable", "MibTableRow", "MibTableColumn", "TimeTicks", "TimeTicks", "mib-2")
( AutonomousType, DateAndTime, DisplayString, TextualConvention, TruthValue, ) = mibBuilder.importSymbols("SNMPv2-TC", "AutonomousType", "DateAndTime", "DisplayString", "TextualConvention", "TruthValue")

# Types

class InternationalDisplayString(OctetString):
    pass

class KBytes(Integer32):
    subtypeSpec = Integer32.subtypeSpec+constraint.ValueRangeConstraint(0,2147483647L)
    pass

class ProductID(ObjectIdentifier):
    pass


# Objects

host = MibIdentifier((1, 3, 6, 1, 2, 1, 25))
hrSystem = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 1))
hrSystemUptime = MibVariable((1, 3, 6, 1, 2, 1, 25, 1, 1), TimeTicks()).setMaxAccess("readonly")
hrSystemDate = MibVariable((1, 3, 6, 1, 2, 1, 25, 1, 2), DateAndTime()).setMaxAccess("readwrite")
hrSystemInitialLoadDevice = MibVariable((1, 3, 6, 1, 2, 1, 25, 1, 3), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 2147483647L))).setMaxAccess("readwrite")
hrSystemInitialLoadParameters = MibVariable((1, 3, 6, 1, 2, 1, 25, 1, 4), InternationalDisplayString().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 128))).setMaxAccess("readwrite")
hrSystemNumUsers = MibVariable((1, 3, 6, 1, 2, 1, 25, 1, 5), Gauge32()).setMaxAccess("readonly")
hrSystemProcesses = MibVariable((1, 3, 6, 1, 2, 1, 25, 1, 6), Gauge32()).setMaxAccess("readonly")
hrSystemMaxProcesses = MibVariable((1, 3, 6, 1, 2, 1, 25, 1, 7), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly")
hrStorage = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 2))
hrStorageTypes = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 2, 1))
hrMemorySize = MibVariable((1, 3, 6, 1, 2, 1, 25, 2, 2), KBytes()).setMaxAccess("readonly").setUnits("KBytes")
hrStorageTable = MibTable((1, 3, 6, 1, 2, 1, 25, 2, 3))
hrStorageEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 2, 3, 1)).setIndexNames((0, "HOST-RESOURCES-MIB", "hrStorageIndex"))
hrStorageIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 1)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 2147483647L))).setMaxAccess("readonly"))
hrStorageType = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 2)).setColumnInitializer(MibVariable((), AutonomousType()).setMaxAccess("readonly"))
hrStorageDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 3)).setColumnInitializer(MibVariable((), DisplayString()).setMaxAccess("readonly"))
hrStorageAllocationUnits = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 4)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 2147483647L))).setMaxAccess("readonly"))
hrStorageSize = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 5)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readwrite"))
hrStorageUsed = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 6)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
hrStorageAllocationFailures = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 2, 3, 1, 7)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
hrDevice = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3))
hrDeviceTypes = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 1))
hrDeviceTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 2))
hrDeviceEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 2, 1)).setIndexNames((0, "HOST-RESOURCES-MIB", "hrDeviceIndex"))
hrDeviceIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 1)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 2147483647L))).setMaxAccess("readonly"))
hrDeviceType = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 2)).setColumnInitializer(MibVariable((), AutonomousType()).setMaxAccess("readonly"))
hrDeviceDescr = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 3)).setColumnInitializer(MibVariable((), DisplayString().subtype(subtypeSpec=constraint.ValueSizeConstraint(0, 64))).setMaxAccess("readonly"))
hrDeviceID = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 4)).setColumnInitializer(MibVariable((), ProductID()).setMaxAccess("readonly"))
hrDeviceStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 5)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,4,5,2,3,)).subtype(namedValues=namedval.NamedValues(("unknown", 1), ("running", 2), ("warning", 3), ("testing", 4), ("down", 5), ))).setMaxAccess("readonly"))
hrDeviceErrors = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 2, 1, 6)).setColumnInitializer(MibVariable((), Counter32()).setMaxAccess("readonly"))
hrProcessorTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 3))
hrProcessorEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 3, 1)).setIndexNames((0, "HOST-RESOURCES-MIB", "hrDeviceIndex"))
hrProcessorFrwID = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 3, 1, 1)).setColumnInitializer(MibVariable((), ProductID()).setMaxAccess("readonly"))
hrProcessorLoad = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 3, 1, 2)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 100))).setMaxAccess("readonly"))
hrNetworkTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 4))
hrNetworkEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 4, 1)).setIndexNames((0, "HOST-RESOURCES-MIB", "hrDeviceIndex"))
hrNetworkIfIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 4, 1, 1)).setColumnInitializer(MibVariable((), InterfaceIndexOrZero()).setMaxAccess("readonly"))
hrPrinterTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 5))
hrPrinterEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 5, 1)).setIndexNames((0, "HOST-RESOURCES-MIB", "hrDeviceIndex"))
hrPrinterStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 5, 1, 1)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(5,2,4,3,1,)).subtype(namedValues=namedval.NamedValues(("other", 1), ("unknown", 2), ("idle", 3), ("printing", 4), ("warmup", 5), ))).setMaxAccess("readonly"))
hrPrinterDetectedErrorState = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 5, 1, 2)).setColumnInitializer(MibVariable((), OctetString()).setMaxAccess("readonly"))
hrDiskStorageTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 6))
hrDiskStorageEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 6, 1)).setIndexNames((0, "HOST-RESOURCES-MIB", "hrDeviceIndex"))
hrDiskStorageAccess = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 6, 1, 1)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("readWrite", 1), ("readOnly", 2), ))).setMaxAccess("readonly"))
hrDiskStorageMedia = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 6, 1, 2)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(8,2,3,6,4,5,1,7,)).subtype(namedValues=namedval.NamedValues(("other", 1), ("unknown", 2), ("hardDisk", 3), ("floppyDisk", 4), ("opticalDiskROM", 5), ("opticalDiskWORM", 6), ("opticalDiskRW", 7), ("ramDisk", 8), ))).setMaxAccess("readonly"))
hrDiskStorageRemoveble = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 6, 1, 3)).setColumnInitializer(MibVariable((), TruthValue()).setMaxAccess("readonly"))
hrDiskStorageCapacity = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 6, 1, 4)).setColumnInitializer(MibVariable((), KBytes()).setMaxAccess("readonly"))
hrPartitionTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 7))
hrPartitionEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 7, 1)).setIndexNames((0, "HOST-RESOURCES-MIB", "hrDeviceIndex"), (0, "HOST-RESOURCES-MIB", "hrPartitionIndex"))
hrPartitionIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 1)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 2147483647L))).setMaxAccess("readonly"))
hrPartitionLabel = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 2)).setColumnInitializer(MibVariable((), InternationalDisplayString().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 128))).setMaxAccess("readonly"))
hrPartitionID = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 3)).setColumnInitializer(MibVariable((), OctetString()).setMaxAccess("readonly"))
hrPartitionSize = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 4)).setColumnInitializer(MibVariable((), KBytes()).setMaxAccess("readonly"))
hrPartitionFSIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 7, 1, 5)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
hrFSTable = MibTable((1, 3, 6, 1, 2, 1, 25, 3, 8))
hrFSEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 3, 8, 1)).setIndexNames((0, "HOST-RESOURCES-MIB", "hrFSIndex"))
hrFSIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 1)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 2147483647L))).setMaxAccess("readonly"))
hrFSMountPoint = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 2)).setColumnInitializer(MibVariable((), InternationalDisplayString().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 128))).setMaxAccess("readonly"))
hrFSRemoteMountPoint = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 3)).setColumnInitializer(MibVariable((), InternationalDisplayString().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 128))).setMaxAccess("readonly"))
hrFSType = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 4)).setColumnInitializer(MibVariable((), AutonomousType()).setMaxAccess("readonly"))
hrFSAccess = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 5)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,)).subtype(namedValues=namedval.NamedValues(("readWrite", 1), ("readOnly", 2), ))).setMaxAccess("readonly"))
hrFSBootable = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 6)).setColumnInitializer(MibVariable((), TruthValue()).setMaxAccess("readonly"))
hrFSStorageIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 7)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
hrFSLastFullBackupDate = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 8)).setColumnInitializer(MibVariable((), DateAndTime()).setMaxAccess("readwrite"))
hrFSLastPartialBackupDate = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 3, 8, 1, 9)).setColumnInitializer(MibVariable((), DateAndTime()).setMaxAccess("readwrite"))
hrFSTypes = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 3, 9))
hrSWRun = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 4))
hrSWOSIndex = MibVariable((1, 3, 6, 1, 2, 1, 25, 4, 1), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 2147483647L))).setMaxAccess("readonly")
hrSWRunTable = MibTable((1, 3, 6, 1, 2, 1, 25, 4, 2))
hrSWRunEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 4, 2, 1)).setIndexNames((0, "HOST-RESOURCES-MIB", "hrSWRunIndex"))
hrSWRunIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 1)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 2147483647L))).setMaxAccess("readonly"))
hrSWRunName = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 2)).setColumnInitializer(MibVariable((), InternationalDisplayString().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 64))).setMaxAccess("readonly"))
hrSWRunID = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 3)).setColumnInitializer(MibVariable((), ProductID()).setMaxAccess("readonly"))
hrSWRunPath = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 4)).setColumnInitializer(MibVariable((), InternationalDisplayString().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 128))).setMaxAccess("readonly"))
hrSWRunParameters = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 5)).setColumnInitializer(MibVariable((), InternationalDisplayString().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 128))).setMaxAccess("readonly"))
hrSWRunType = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 6)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,4,2,)).subtype(namedValues=namedval.NamedValues(("unknown", 1), ("operatingSystem", 2), ("deviceDriver", 3), ("application", 4), ))).setMaxAccess("readonly"))
hrSWRunStatus = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 4, 2, 1, 7)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(1,2,3,4,)).subtype(namedValues=namedval.NamedValues(("running", 1), ("runnable", 2), ("notRunnable", 3), ("invalid", 4), ))).setMaxAccess("readwrite"))
hrSWRunPerf = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 5))
hrSWRunPerfTable = MibTable((1, 3, 6, 1, 2, 1, 25, 5, 1))
hrSWRunPerfEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 5, 1, 1))
hrSWRunPerfCPU = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 5, 1, 1, 1)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 2147483647L))).setMaxAccess("readonly"))
hrSWRunPerfMem = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 5, 1, 1, 2)).setColumnInitializer(MibVariable((), KBytes()).setMaxAccess("readonly"))
hrSWInstalled = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 6))
hrSWInstalledLastChange = MibVariable((1, 3, 6, 1, 2, 1, 25, 6, 1), TimeTicks()).setMaxAccess("readonly")
hrSWInstalledLastUpdateTime = MibVariable((1, 3, 6, 1, 2, 1, 25, 6, 2), TimeTicks()).setMaxAccess("readonly")
hrSWInstalledTable = MibTable((1, 3, 6, 1, 2, 1, 25, 6, 3))
hrSWInstalledEntry = MibTableRow((1, 3, 6, 1, 2, 1, 25, 6, 3, 1)).setIndexNames((0, "HOST-RESOURCES-MIB", "hrSWInstalledIndex"))
hrSWInstalledIndex = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 1)).setColumnInitializer(MibVariable((), Integer32().subtype(subtypeSpec=constraint.ValueRangeConstraint(1, 2147483647L))).setMaxAccess("readonly"))
hrSWInstalledName = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 2)).setColumnInitializer(MibVariable((), InternationalDisplayString().subtype(subtypeSpec=constraint.ValueRangeConstraint(0, 64))).setMaxAccess("readonly"))
hrSWInstalledID = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 3)).setColumnInitializer(MibVariable((), ProductID()).setMaxAccess("readonly"))
hrSWInstalledType = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 4)).setColumnInitializer(MibVariable((), Integer().subtype(subtypeSpec=constraint.SingleValueConstraint(3,1,4,2,)).subtype(namedValues=namedval.NamedValues(("unknown", 1), ("operatingSystem", 2), ("deviceDriver", 3), ("application", 4), ))).setMaxAccess("readonly"))
hrSWInstalledDate = MibTableColumn((1, 3, 6, 1, 2, 1, 25, 6, 3, 1, 5)).setColumnInitializer(MibVariable((), DateAndTime()).setMaxAccess("readonly"))
hrMIBAdminInfo = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 7))
hostResourcesMibModule = ModuleIdentity((1, 3, 6, 1, 2, 1, 25, 7, 1))
hrMIBCompliances = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 7, 2))
hrMIBGroups = MibIdentifier((1, 3, 6, 1, 2, 1, 25, 7, 3))

# Augmentions
hrSWRunEntry.registerAugmentions(("HOST-RESOURCES-MIB", "hrSWRunPerfEntry"))
apply(hrSWRunPerfEntry.setIndexNames, hrSWRunEntry.getIndexNames())

# Groups

hrStorageGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 3, 2)).setObjects(("HOST-RESOURCES-MIB", "hrStorageAllocationFailures"), ("HOST-RESOURCES-MIB", "hrStorageSize"), ("HOST-RESOURCES-MIB", "hrMemorySize"), ("HOST-RESOURCES-MIB", "hrStorageIndex"), ("HOST-RESOURCES-MIB", "hrStorageUsed"), ("HOST-RESOURCES-MIB", "hrStorageAllocationUnits"), ("HOST-RESOURCES-MIB", "hrStorageDescr"), ("HOST-RESOURCES-MIB", "hrStorageType"), )
hrSWRunPerfGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 3, 5)).setObjects(("HOST-RESOURCES-MIB", "hrSWRunPerfCPU"), ("HOST-RESOURCES-MIB", "hrSWRunPerfMem"), )
hrSWInstalledGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 3, 6)).setObjects(("HOST-RESOURCES-MIB", "hrSWInstalledLastChange"), ("HOST-RESOURCES-MIB", "hrSWInstalledID"), ("HOST-RESOURCES-MIB", "hrSWInstalledIndex"), ("HOST-RESOURCES-MIB", "hrSWInstalledLastUpdateTime"), ("HOST-RESOURCES-MIB", "hrSWInstalledName"), ("HOST-RESOURCES-MIB", "hrSWInstalledDate"), ("HOST-RESOURCES-MIB", "hrSWInstalledType"), )
hrSWRunGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 3, 4)).setObjects(("HOST-RESOURCES-MIB", "hrSWRunType"), ("HOST-RESOURCES-MIB", "hrSWRunPath"), ("HOST-RESOURCES-MIB", "hrSWRunName"), ("HOST-RESOURCES-MIB", "hrSWOSIndex"), ("HOST-RESOURCES-MIB", "hrSWRunParameters"), ("HOST-RESOURCES-MIB", "hrSWRunIndex"), ("HOST-RESOURCES-MIB", "hrSWRunID"), ("HOST-RESOURCES-MIB", "hrSWRunStatus"), )
hrDeviceGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 3, 3)).setObjects(("HOST-RESOURCES-MIB", "hrFSIndex"), ("HOST-RESOURCES-MIB", "hrFSMountPoint"), ("HOST-RESOURCES-MIB", "hrPrinterStatus"), ("HOST-RESOURCES-MIB", "hrPartitionID"), ("HOST-RESOURCES-MIB", "hrDiskStorageCapacity"), ("HOST-RESOURCES-MIB", "hrProcessorLoad"), ("HOST-RESOURCES-MIB", "hrFSRemoteMountPoint"), ("HOST-RESOURCES-MIB", "hrDiskStorageMedia"), ("HOST-RESOURCES-MIB", "hrDeviceDescr"), ("HOST-RESOURCES-MIB", "hrDeviceStatus"), ("HOST-RESOURCES-MIB", "hrNetworkIfIndex"), ("HOST-RESOURCES-MIB", "hrFSBootable"), ("HOST-RESOURCES-MIB", "hrPartitionIndex"), ("HOST-RESOURCES-MIB", "hrDeviceID"), ("HOST-RESOURCES-MIB", "hrDiskStorageRemoveble"), ("HOST-RESOURCES-MIB", "hrFSLastPartialBackupDate"), ("HOST-RESOURCES-MIB", "hrPrinterDetectedErrorState"), ("HOST-RESOURCES-MIB", "hrFSType"), ("HOST-RESOURCES-MIB", "hrProcessorFrwID"), ("HOST-RESOURCES-MIB", "hrPartitionFSIndex"), ("HOST-RESOURCES-MIB", "hrDeviceErrors"), ("HOST-RESOURCES-MIB", "hrDeviceType"), ("HOST-RESOURCES-MIB", "hrPartitionLabel"), ("HOST-RESOURCES-MIB", "hrFSStorageIndex"), ("HOST-RESOURCES-MIB", "hrFSAccess"), ("HOST-RESOURCES-MIB", "hrPartitionSize"), ("HOST-RESOURCES-MIB", "hrFSLastFullBackupDate"), ("HOST-RESOURCES-MIB", "hrDeviceIndex"), ("HOST-RESOURCES-MIB", "hrDiskStorageAccess"), )
hrSystemGroup = ObjectGroup((1, 3, 6, 1, 2, 1, 25, 7, 3, 1)).setObjects(("HOST-RESOURCES-MIB", "hrSystemMaxProcesses"), ("HOST-RESOURCES-MIB", "hrSystemDate"), ("HOST-RESOURCES-MIB", "hrSystemUptime"), ("HOST-RESOURCES-MIB", "hrSystemNumUsers"), ("HOST-RESOURCES-MIB", "hrSystemProcesses"), ("HOST-RESOURCES-MIB", "hrSystemInitialLoadParameters"), ("HOST-RESOURCES-MIB", "hrSystemInitialLoadDevice"), )

# Exports

# Types
mibBuilder.exportSymbols("HOST-RESOURCES-MIB", InternationalDisplayString=InternationalDisplayString, KBytes=KBytes, ProductID=ProductID)

# Objects
mibBuilder.exportSymbols("HOST-RESOURCES-MIB", host=host, hrSystem=hrSystem, hrSystemUptime=hrSystemUptime, hrSystemDate=hrSystemDate, hrSystemInitialLoadDevice=hrSystemInitialLoadDevice, hrSystemInitialLoadParameters=hrSystemInitialLoadParameters, hrSystemNumUsers=hrSystemNumUsers, hrSystemProcesses=hrSystemProcesses, hrSystemMaxProcesses=hrSystemMaxProcesses, hrStorage=hrStorage, hrStorageTypes=hrStorageTypes, hrMemorySize=hrMemorySize, hrStorageTable=hrStorageTable, hrStorageEntry=hrStorageEntry, hrStorageIndex=hrStorageIndex, hrStorageType=hrStorageType, hrStorageDescr=hrStorageDescr, hrStorageAllocationUnits=hrStorageAllocationUnits, hrStorageSize=hrStorageSize, hrStorageUsed=hrStorageUsed, hrStorageAllocationFailures=hrStorageAllocationFailures, hrDevice=hrDevice, hrDeviceTypes=hrDeviceTypes, hrDeviceTable=hrDeviceTable, hrDeviceEntry=hrDeviceEntry, hrDeviceIndex=hrDeviceIndex, hrDeviceType=hrDeviceType, hrDeviceDescr=hrDeviceDescr, hrDeviceID=hrDeviceID, hrDeviceStatus=hrDeviceStatus, hrDeviceErrors=hrDeviceErrors, hrProcessorTable=hrProcessorTable, hrProcessorEntry=hrProcessorEntry, hrProcessorFrwID=hrProcessorFrwID, hrProcessorLoad=hrProcessorLoad, hrNetworkTable=hrNetworkTable, hrNetworkEntry=hrNetworkEntry, hrNetworkIfIndex=hrNetworkIfIndex, hrPrinterTable=hrPrinterTable, hrPrinterEntry=hrPrinterEntry, hrPrinterStatus=hrPrinterStatus, hrPrinterDetectedErrorState=hrPrinterDetectedErrorState, hrDiskStorageTable=hrDiskStorageTable, hrDiskStorageEntry=hrDiskStorageEntry, hrDiskStorageAccess=hrDiskStorageAccess, hrDiskStorageMedia=hrDiskStorageMedia, hrDiskStorageRemoveble=hrDiskStorageRemoveble, hrDiskStorageCapacity=hrDiskStorageCapacity, hrPartitionTable=hrPartitionTable, hrPartitionEntry=hrPartitionEntry, hrPartitionIndex=hrPartitionIndex, hrPartitionLabel=hrPartitionLabel, hrPartitionID=hrPartitionID, hrPartitionSize=hrPartitionSize, hrPartitionFSIndex=hrPartitionFSIndex, hrFSTable=hrFSTable, hrFSEntry=hrFSEntry, hrFSIndex=hrFSIndex, hrFSMountPoint=hrFSMountPoint, hrFSRemoteMountPoint=hrFSRemoteMountPoint, hrFSType=hrFSType, hrFSAccess=hrFSAccess, hrFSBootable=hrFSBootable, hrFSStorageIndex=hrFSStorageIndex, hrFSLastFullBackupDate=hrFSLastFullBackupDate, hrFSLastPartialBackupDate=hrFSLastPartialBackupDate, hrFSTypes=hrFSTypes, hrSWRun=hrSWRun, hrSWOSIndex=hrSWOSIndex, hrSWRunTable=hrSWRunTable, hrSWRunEntry=hrSWRunEntry, hrSWRunIndex=hrSWRunIndex, hrSWRunName=hrSWRunName, hrSWRunID=hrSWRunID, hrSWRunPath=hrSWRunPath, hrSWRunParameters=hrSWRunParameters, hrSWRunType=hrSWRunType, hrSWRunStatus=hrSWRunStatus, hrSWRunPerf=hrSWRunPerf, hrSWRunPerfTable=hrSWRunPerfTable, hrSWRunPerfEntry=hrSWRunPerfEntry, hrSWRunPerfCPU=hrSWRunPerfCPU, hrSWRunPerfMem=hrSWRunPerfMem, hrSWInstalled=hrSWInstalled, hrSWInstalledLastChange=hrSWInstalledLastChange, hrSWInstalledLastUpdateTime=hrSWInstalledLastUpdateTime, hrSWInstalledTable=hrSWInstalledTable, hrSWInstalledEntry=hrSWInstalledEntry, hrSWInstalledIndex=hrSWInstalledIndex, hrSWInstalledName=hrSWInstalledName, hrSWInstalledID=hrSWInstalledID, hrSWInstalledType=hrSWInstalledType, hrSWInstalledDate=hrSWInstalledDate, hrMIBAdminInfo=hrMIBAdminInfo, hostResourcesMibModule=hostResourcesMibModule, hrMIBCompliances=hrMIBCompliances, hrMIBGroups=hrMIBGroups)

# Groups
mibBuilder.exportSymbols("HOST-RESOURCES-MIB", hrStorageGroup=hrStorageGroup, hrSWRunPerfGroup=hrSWRunPerfGroup, hrSWInstalledGroup=hrSWInstalledGroup, hrSWRunGroup=hrSWRunGroup, hrDeviceGroup=hrDeviceGroup, hrSystemGroup=hrSystemGroup)
